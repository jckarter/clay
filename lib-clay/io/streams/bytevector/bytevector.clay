public import io.streams.*;


/// @section  write, flush - write to ByteVector 

[V when ByteVector?(V)]
overload writeBytes(stream:V, buf:Pointer[Byte], n:SizeT) {
    var currentSize = size(stream);
    resize(stream, currentSize + n);
    var dest = Pointer[Byte](begin(stream)) + currentSize;
    copyNonoverlappingMemory(dest, buf, buf+n);
    return n;
}

[V when ByteVector?(V)]
overload flush(stream:V) {
}

