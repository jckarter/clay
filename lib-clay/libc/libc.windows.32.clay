public import libc.generated.*;

alias stdin = @__iob_func()[0];
alias stdout = @__iob_func()[1];
alias stderr = @__iob_func()[2];

alias setjmp = _setjmp;
alias random = rand;

alias strtoll = _strtoi64;
alias strtoull = _strtoui64;
alias llabs = _abs64;

alias copysign = _copysign;
alias hypot = _hypot;
alias hypotf = _hypotf;

// The float variants of math functions are implemented as macros

forceinline acosf(x:Float) : Float = Float(acos(Double(x)));
forceinline asinf(x:Float) : Float = Float(asin(Double(x)));
forceinline atanf(x:Float) : Float = Float(atan(Double(x)));
forceinline atan2f(x:Float, y:Float) : Float = Float(atan2(Double(x), Double(y)));
forceinline copysignf(x:Float) : Float = Float(_copysign(Double(x)));
forceinline cosf(x:Float) : Float = Float(cos(Double(x)));
forceinline coshf(x:Float) : Float = Float(cosh(Double(x)));
forceinline expf(x:Float) : Float = Float(exp(Double(x)));
forceinline fabsf(x:Float) : Float = Float(fabs(Double(x)));
forceinline floorf(x:Float) : Float = Float(floor(Double(x)));
forceinline fmodf(x:Float, y:Float) : Float = Float(fmod(Double(x), Double(y)));
forceinline logf(x:Float) : Float = Float(log(Double(x)));
forceinline log10f(x:Float) : Float = Float(log10(Double(x)));
forceinline powf(x:Float, y:Float) : Float = Float(pow(Double(x), Double(y)));
forceinline sinf(x:Float) : Float = Float(sin(Double(x)));
forceinline sinhf(x:Float) : Float = Float(sinh(Double(x)));
forceinline sqrtf(x:Float) : Float = Float(sqrt(Double(x)));
forceinline tanf(x:Float) : Float = Float(tan(Double(x)));
forceinline tanhf(x:Float) : Float = Float(tanh(Double(x)));

// these are macros

forceinline isnan(x:Double) : Int = Int(x != x);
forceinline isnanf(x:Float) : Int = Int(x != x);

// asprintf isn't standard and windows doesn't have it, but it's pretty useful so
// let's fake it

asprintf(out:Pointer[Pointer[CChar]], fmt, ..args) : Int {
    var bufsz = _scprintf(fmt, ..args);
    out^ = Pointer[CChar](malloc(bufsz+1));
    var bufsz2 = _snprintf(out^, bufsz, fmt, ..args);
    out^[bufsz] = CChar(0);
    return bufsz2;
}
