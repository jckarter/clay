public import libc.generated.*;

alias stdin = @__iob_func()[0];
alias stdout = @__iob_func()[1];
alias stderr = @__iob_func()[2];

alias setjmp = _setjmp;
alias random = rand;

alias strtoll = _strtoi64;
alias strtoull = _strtoui64;
alias llabs = _abs64;

alias copysign = _copysign;
alias hypot = _hypot;
alias hypotf = _hypotf;

// these are macros

forceinline isnan(x:Double) : Int = Int(x != x);
forceinline isnanf(x:Float) : Int = Int(x != x);
forceinline fabsf(x:Float) : Float = Float(fabs(Double(x)));

// asprintf isn't standard and windows doesn't have it, but it's pretty useful so
// let's fake it

asprintf(out:Pointer[Pointer[CChar]], fmt, ..args) : Int {
    var bufsz = _scprintf(fmt, ..args);
    out^ = Pointer[CChar](malloc(bufsz+1));
    var bufsz2 = _snprintf(out^, bufsz, fmt, ..args);
    out^[bufsz] = CChar(0);
    return bufsz2;
}
