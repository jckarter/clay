// automatically generated by clay-bindgen

alias __int128_t = Int128;

alias __uint128_t = UInt128;

record Struct___va_list_tag (
    gp_offset : CUInt,
    fp_offset : CUInt,
    overflow_arg_area : OpaquePointer,
    reg_save_area : OpaquePointer,
);

alias __va_list_tag = Struct___va_list_tag;

alias __builtin_va_list = Array[__va_list_tag, 1];

alias __int8_t = CChar;

alias __uint8_t = CUChar;

alias __int16_t = CShort;

alias __uint16_t = CUShort;

alias __int32_t = CInt;

alias __uint32_t = CUInt;

alias __int64_t = CLongLong;

alias __uint64_t = CULongLong;

alias __darwin_intptr_t = CLong;

alias __darwin_natural_t = CUInt;

alias __darwin_ct_rune_t = CInt;

alias __mbstate_t = Union[
    /* __mbstate8 */ Array[CChar, 128],
    /* _mbstateL */ CLongLong,
];

alias __darwin_mbstate_t = __mbstate_t;

alias __darwin_ptrdiff_t = CLong;

alias __darwin_size_t = CULong;

alias __darwin_va_list = __builtin_va_list;

alias __darwin_wchar_t = CInt;

alias __darwin_rune_t = __darwin_wchar_t;

alias __darwin_wint_t = CInt;

alias __darwin_clock_t = CULong;

alias __darwin_socklen_t = __uint32_t;

alias __darwin_ssize_t = CLong;

alias __darwin_time_t = CLong;

record Struct___darwin_pthread_handler_rec (
    __routine : CCodePointer[[OpaquePointer],[]],
    __arg : OpaquePointer,
    __next : Pointer[Struct___darwin_pthread_handler_rec],
);

record Struct__opaque_pthread_attr_t (
    __sig : CLong,
    __opaque : Array[CChar, 56],
);

record Struct__opaque_pthread_cond_t (
    __sig : CLong,
    __opaque : Array[CChar, 40],
);

record Struct__opaque_pthread_condattr_t (
    __sig : CLong,
    __opaque : Array[CChar, 8],
);

record Struct__opaque_pthread_mutex_t (
    __sig : CLong,
    __opaque : Array[CChar, 56],
);

record Struct__opaque_pthread_mutexattr_t (
    __sig : CLong,
    __opaque : Array[CChar, 8],
);

record Struct__opaque_pthread_once_t (
    __sig : CLong,
    __opaque : Array[CChar, 8],
);

record Struct__opaque_pthread_rwlock_t (
    __sig : CLong,
    __opaque : Array[CChar, 192],
);

record Struct__opaque_pthread_rwlockattr_t (
    __sig : CLong,
    __opaque : Array[CChar, 16],
);

record Struct__opaque_pthread_t (
    __sig : CLong,
    __cleanup_stack : Pointer[Struct___darwin_pthread_handler_rec],
    __opaque : Array[CChar, 1168],
);

alias __darwin_blkcnt_t = __int64_t;

alias __darwin_blksize_t = __int32_t;

alias __darwin_dev_t = __int32_t;

alias __darwin_fsblkcnt_t = CUInt;

alias __darwin_fsfilcnt_t = CUInt;

alias __darwin_gid_t = __uint32_t;

alias __darwin_id_t = __uint32_t;

alias __darwin_ino64_t = __uint64_t;

alias __darwin_ino_t = __darwin_ino64_t;

alias __darwin_mach_port_name_t = __darwin_natural_t;

alias __darwin_mach_port_t = __darwin_mach_port_name_t;

alias __darwin_mode_t = __uint16_t;

alias __darwin_off_t = __int64_t;

alias __darwin_pid_t = __int32_t;

alias __darwin_pthread_attr_t = Struct__opaque_pthread_attr_t;

alias __darwin_pthread_cond_t = Struct__opaque_pthread_cond_t;

alias __darwin_pthread_condattr_t = Struct__opaque_pthread_condattr_t;

alias __darwin_pthread_key_t = CULong;

alias __darwin_pthread_mutex_t = Struct__opaque_pthread_mutex_t;

alias __darwin_pthread_mutexattr_t = Struct__opaque_pthread_mutexattr_t;

alias __darwin_pthread_once_t = Struct__opaque_pthread_once_t;

alias __darwin_pthread_rwlock_t = Struct__opaque_pthread_rwlock_t;

alias __darwin_pthread_rwlockattr_t = Struct__opaque_pthread_rwlockattr_t;

alias __darwin_pthread_t = Pointer[Struct__opaque_pthread_t];

alias __darwin_sigset_t = __uint32_t;

alias __darwin_suseconds_t = __int32_t;

alias __darwin_uid_t = __uint32_t;

alias __darwin_useconds_t = __uint32_t;

alias __darwin_uuid_t = Array[CUChar, 16];

alias __darwin_uuid_string_t = Array[CChar, 37];

alias __darwin_nl_item = CInt;

alias __darwin_wctrans_t = CInt;

alias __darwin_wctype_t = __uint32_t;

alias va_list = __darwin_va_list;

alias size_t = __darwin_size_t;

alias fpos_t = __darwin_off_t;

record Struct___sbuf (
    _base : Pointer[CUChar],
    _size : CInt,
);

alias Struct___sFILEX = Opaque;

record Struct___sFILE (
    _p : Pointer[CUChar],
    _r : CInt,
    _w : CInt,
    _flags : CShort,
    _file : CShort,
    _bf : Struct___sbuf,
    _lbfsize : CInt,
    _cookie : OpaquePointer,
    _close : CCodePointer[[OpaquePointer],[CInt]],
    _read : CCodePointer[[OpaquePointer, Pointer[CChar], CInt],[CInt]],
    _seek : CCodePointer[[OpaquePointer, fpos_t, CInt],[fpos_t]],
    _write : CCodePointer[[OpaquePointer, Pointer[CChar], CInt],[CInt]],
    _ub : Struct___sbuf,
    _extra : Pointer[Struct___sFILEX],
    _ur : CInt,
    _ubuf : Array[CUChar, 3],
    _nbuf : Array[CUChar, 1],
    _lb : Struct___sbuf,
    _blksize : CInt,
    _offset : fpos_t,
);

alias FILE = Struct___sFILE;

external __stdinp : Pointer[FILE];

external __stdoutp : Pointer[FILE];

external __stderrp : Pointer[FILE];

external (cdecl) clearerr(arg0:Pointer[FILE]) : ;

external (cdecl) fclose(arg0:Pointer[FILE]) : CInt;

external (cdecl) feof(arg0:Pointer[FILE]) : CInt;

external (cdecl) ferror(arg0:Pointer[FILE]) : CInt;

external (cdecl) fflush(arg0:Pointer[FILE]) : CInt;

external (cdecl) fgetc(arg0:Pointer[FILE]) : CInt;

external (cdecl) fgetpos(arg0:Pointer[FILE], arg1:Pointer[fpos_t]) : CInt;

external (cdecl) fgets(arg0:Pointer[CChar], arg1:CInt, arg2:Pointer[FILE]) : Pointer[CChar];

external (cdecl, "_fopen") fopen(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[FILE];

external (cdecl) fprintf(arg0:Pointer[FILE], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) fputc(arg0:CInt, arg1:Pointer[FILE]) : CInt;

external (cdecl, "_fputs") fputs(arg0:Pointer[CChar], arg1:Pointer[FILE]) : CInt;

external (cdecl) fread(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:Pointer[FILE]) : size_t;

external (cdecl, "_freopen") freopen(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[FILE]) : Pointer[FILE];

external (cdecl) fscanf(arg0:Pointer[FILE], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) fseek(arg0:Pointer[FILE], arg1:CLong, arg2:CInt) : CInt;

external (cdecl) fsetpos(arg0:Pointer[FILE], arg1:Pointer[fpos_t]) : CInt;

external (cdecl) ftell(arg0:Pointer[FILE]) : CLong;

external (cdecl, "_fwrite") fwrite(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:Pointer[FILE]) : size_t;

external (cdecl) getc(arg0:Pointer[FILE]) : CInt;

external (cdecl) getchar() : CInt;

external (cdecl) gets(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) perror(arg0:Pointer[CChar]) : ;

external (cdecl) printf(arg0:Pointer[CChar], ..) : CInt;

external (cdecl) putc(arg0:CInt, arg1:Pointer[FILE]) : CInt;

external (cdecl) putchar(arg0:CInt) : CInt;

external (cdecl) puts(arg0:Pointer[CChar]) : CInt;

external (cdecl) remove(arg0:Pointer[CChar]) : CInt;

external (cdecl) rename(arg0:Pointer[CChar], arg1:Pointer[CChar]) : CInt;

external (cdecl) rewind(arg0:Pointer[FILE]) : ;

external (cdecl) scanf(arg0:Pointer[CChar], ..) : CInt;

external (cdecl) setbuf(arg0:Pointer[FILE], arg1:Pointer[CChar]) : ;

external (cdecl) setvbuf(arg0:Pointer[FILE], arg1:Pointer[CChar], arg2:CInt, arg3:size_t) : CInt;

external (cdecl) sprintf(arg0:Pointer[CChar], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) sscanf(arg0:Pointer[CChar], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) tmpfile() : Pointer[FILE];

external (cdecl) tmpnam(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) ungetc(arg0:CInt, arg1:Pointer[FILE]) : CInt;

external (cdecl) vfprintf(arg0:Pointer[FILE], arg1:Pointer[CChar], arg2:Pointer[__va_list_tag]) : CInt;

external (cdecl) vprintf(arg0:Pointer[CChar], arg1:Pointer[__va_list_tag]) : CInt;

external (cdecl) vsprintf(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[__va_list_tag]) : CInt;

external (cdecl) ctermid(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl, "_fdopen") fdopen(arg0:CInt, arg1:Pointer[CChar]) : Pointer[FILE];

external (cdecl) fileno(arg0:Pointer[FILE]) : CInt;

external (cdecl) pclose(arg0:Pointer[FILE]) : CInt;

external (cdecl, "_popen") popen(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[FILE];

external (cdecl) __srget(arg0:Pointer[FILE]) : CInt;

external (cdecl) __svfscanf(arg0:Pointer[FILE], arg1:Pointer[CChar], arg2:Pointer[__va_list_tag]) : CInt;

external (cdecl) __swbuf(arg0:CInt, arg1:Pointer[FILE]) : CInt;

external (cdecl) __sputc(arg0:CInt, arg1:Pointer[FILE]) : CInt;

external (cdecl) flockfile(arg0:Pointer[FILE]) : ;

external (cdecl) ftrylockfile(arg0:Pointer[FILE]) : CInt;

external (cdecl) funlockfile(arg0:Pointer[FILE]) : ;

external (cdecl) getc_unlocked(arg0:Pointer[FILE]) : CInt;

external (cdecl) getchar_unlocked() : CInt;

external (cdecl) putc_unlocked(arg0:CInt, arg1:Pointer[FILE]) : CInt;

external (cdecl) putchar_unlocked(arg0:CInt) : CInt;

external (cdecl) getw(arg0:Pointer[FILE]) : CInt;

external (cdecl) putw(arg0:CInt, arg1:Pointer[FILE]) : CInt;

external (cdecl, "_tempnam") tempnam(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

alias off_t = __darwin_off_t;

external (cdecl) fseeko(arg0:Pointer[FILE], arg1:off_t, arg2:CInt) : CInt;

external (cdecl) ftello(arg0:Pointer[FILE]) : off_t;

external (cdecl) snprintf(arg0:Pointer[CChar], arg1:size_t, arg2:Pointer[CChar], ..) : CInt;

external (cdecl) vfscanf(arg0:Pointer[FILE], arg1:Pointer[CChar], arg2:Pointer[__va_list_tag]) : CInt;

external (cdecl) vscanf(arg0:Pointer[CChar], arg1:Pointer[__va_list_tag]) : CInt;

external (cdecl) vsnprintf(arg0:Pointer[CChar], arg1:size_t, arg2:Pointer[CChar], arg3:Pointer[__va_list_tag]) : CInt;

external (cdecl) vsscanf(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[__va_list_tag]) : CInt;

alias ssize_t = __darwin_ssize_t;

external (cdecl) dprintf(arg0:CInt, arg1:Pointer[CChar], ..) : CInt;

external (cdecl) vdprintf(arg0:CInt, arg1:Pointer[CChar], arg2:Pointer[__va_list_tag]) : CInt;

external (cdecl) getdelim(arg0:Pointer[Pointer[CChar]], arg1:Pointer[size_t], arg2:CInt, arg3:Pointer[FILE]) : ssize_t;

external (cdecl) getline(arg0:Pointer[Pointer[CChar]], arg1:Pointer[size_t], arg2:Pointer[FILE]) : ssize_t;

external sys_nerr : CInt;

external sys_errlist : Opaque /* unknown NoDeclFound  */;

external (cdecl) asprintf(arg0:Pointer[Pointer[CChar]], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) ctermid_r(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) fgetln(arg0:Pointer[FILE], arg1:Pointer[size_t]) : Pointer[CChar];

external (cdecl) fmtcheck(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) fpurge(arg0:Pointer[FILE]) : CInt;

external (cdecl) setbuffer(arg0:Pointer[FILE], arg1:Pointer[CChar], arg2:CInt) : ;

external (cdecl) setlinebuf(arg0:Pointer[FILE]) : CInt;

external (cdecl) vasprintf(arg0:Pointer[Pointer[CChar]], arg1:Pointer[CChar], arg2:Pointer[__va_list_tag]) : CInt;

external (cdecl) zopen(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:CInt) : Pointer[FILE];

external (cdecl) funopen(arg0:OpaquePointer, arg1:CCodePointer[[OpaquePointer, Pointer[CChar], CInt],[CInt]], arg2:CCodePointer[[OpaquePointer, Pointer[CChar], CInt],[CInt]], arg3:CCodePointer[[OpaquePointer, fpos_t, CInt],[fpos_t]], arg4:CCodePointer[[OpaquePointer],[CInt]]) : Pointer[FILE];

external (cdecl) __sprintf_chk(arg0:Pointer[CChar], arg1:CInt, arg2:size_t, arg3:Pointer[CChar], ..) : CInt;

external (cdecl) __snprintf_chk(arg0:Pointer[CChar], arg1:size_t, arg2:CInt, arg3:size_t, arg4:Pointer[CChar], ..) : CInt;

external (cdecl) __vsprintf_chk(arg0:Pointer[CChar], arg1:CInt, arg2:size_t, arg3:Pointer[CChar], arg4:Pointer[__va_list_tag]) : CInt;

external (cdecl) __vsnprintf_chk(arg0:Pointer[CChar], arg1:size_t, arg2:CInt, arg3:size_t, arg4:Pointer[CChar], arg5:Pointer[__va_list_tag]) : CInt;


alias idtype_t = CUInt;
alias P_ALL = CUInt(0);
alias P_PID = CUInt(1);
alias P_PGID = CUInt(2);

alias pid_t = __darwin_pid_t;

alias id_t = __darwin_id_t;

alias sig_atomic_t = CInt;

record Struct___darwin_i386_thread_state (
    __eax : CUInt,
    __ebx : CUInt,
    __ecx : CUInt,
    __edx : CUInt,
    __edi : CUInt,
    __esi : CUInt,
    __ebp : CUInt,
    __esp : CUInt,
    __ss : CUInt,
    __eflags : CUInt,
    __eip : CUInt,
    __cs : CUInt,
    __ds : CUInt,
    __es : CUInt,
    __fs : CUInt,
    __gs : CUInt,
);

record Struct___darwin_fp_control (
    __invalid : CUShort,
    __denorm : CUShort,
    __zdiv : CUShort,
    __ovrfl : CUShort,
    __undfl : CUShort,
    __precis : CUShort,
    ?padding0 : CUShort,
    __pc : CUShort,
    __rc : CUShort,
    ?padding1 : CUShort,
    ?padding2 : CUShort,
);

alias __darwin_fp_control_t = Struct___darwin_fp_control;

record Struct___darwin_fp_status (
    __invalid : CUShort,
    __denorm : CUShort,
    __zdiv : CUShort,
    __ovrfl : CUShort,
    __undfl : CUShort,
    __precis : CUShort,
    __stkflt : CUShort,
    __errsumm : CUShort,
    __c0 : CUShort,
    __c1 : CUShort,
    __c2 : CUShort,
    __tos : CUShort,
    __c3 : CUShort,
    __busy : CUShort,
);

alias __darwin_fp_status_t = Struct___darwin_fp_status;

record Struct___darwin_mmst_reg (
    __mmst_reg : Array[CChar, 10],
    __mmst_rsrv : Array[CChar, 6],
);

record Struct___darwin_xmm_reg (
    __xmm_reg : Array[CChar, 16],
);

record Struct___darwin_i386_float_state (
    __fpu_reserved : Array[CInt, 2],
    __fpu_fcw : Struct___darwin_fp_control,
    __fpu_fsw : Struct___darwin_fp_status,
    __fpu_ftw : __uint8_t,
    __fpu_rsrv1 : __uint8_t,
    __fpu_fop : __uint16_t,
    __fpu_ip : __uint32_t,
    __fpu_cs : __uint16_t,
    __fpu_rsrv2 : __uint16_t,
    __fpu_dp : __uint32_t,
    __fpu_ds : __uint16_t,
    __fpu_rsrv3 : __uint16_t,
    __fpu_mxcsr : __uint32_t,
    __fpu_mxcsrmask : __uint32_t,
    __fpu_stmm0 : Struct___darwin_mmst_reg,
    __fpu_stmm1 : Struct___darwin_mmst_reg,
    __fpu_stmm2 : Struct___darwin_mmst_reg,
    __fpu_stmm3 : Struct___darwin_mmst_reg,
    __fpu_stmm4 : Struct___darwin_mmst_reg,
    __fpu_stmm5 : Struct___darwin_mmst_reg,
    __fpu_stmm6 : Struct___darwin_mmst_reg,
    __fpu_stmm7 : Struct___darwin_mmst_reg,
    __fpu_xmm0 : Struct___darwin_xmm_reg,
    __fpu_xmm1 : Struct___darwin_xmm_reg,
    __fpu_xmm2 : Struct___darwin_xmm_reg,
    __fpu_xmm3 : Struct___darwin_xmm_reg,
    __fpu_xmm4 : Struct___darwin_xmm_reg,
    __fpu_xmm5 : Struct___darwin_xmm_reg,
    __fpu_xmm6 : Struct___darwin_xmm_reg,
    __fpu_xmm7 : Struct___darwin_xmm_reg,
    __fpu_rsrv4 : Array[CChar, 224],
    __fpu_reserved1 : CInt,
);

record Struct___darwin_i386_avx_state (
    __fpu_reserved : Array[CInt, 2],
    __fpu_fcw : Struct___darwin_fp_control,
    __fpu_fsw : Struct___darwin_fp_status,
    __fpu_ftw : __uint8_t,
    __fpu_rsrv1 : __uint8_t,
    __fpu_fop : __uint16_t,
    __fpu_ip : __uint32_t,
    __fpu_cs : __uint16_t,
    __fpu_rsrv2 : __uint16_t,
    __fpu_dp : __uint32_t,
    __fpu_ds : __uint16_t,
    __fpu_rsrv3 : __uint16_t,
    __fpu_mxcsr : __uint32_t,
    __fpu_mxcsrmask : __uint32_t,
    __fpu_stmm0 : Struct___darwin_mmst_reg,
    __fpu_stmm1 : Struct___darwin_mmst_reg,
    __fpu_stmm2 : Struct___darwin_mmst_reg,
    __fpu_stmm3 : Struct___darwin_mmst_reg,
    __fpu_stmm4 : Struct___darwin_mmst_reg,
    __fpu_stmm5 : Struct___darwin_mmst_reg,
    __fpu_stmm6 : Struct___darwin_mmst_reg,
    __fpu_stmm7 : Struct___darwin_mmst_reg,
    __fpu_xmm0 : Struct___darwin_xmm_reg,
    __fpu_xmm1 : Struct___darwin_xmm_reg,
    __fpu_xmm2 : Struct___darwin_xmm_reg,
    __fpu_xmm3 : Struct___darwin_xmm_reg,
    __fpu_xmm4 : Struct___darwin_xmm_reg,
    __fpu_xmm5 : Struct___darwin_xmm_reg,
    __fpu_xmm6 : Struct___darwin_xmm_reg,
    __fpu_xmm7 : Struct___darwin_xmm_reg,
    __fpu_rsrv4 : Array[CChar, 224],
    __fpu_reserved1 : CInt,
    __avx_reserved1 : Array[CChar, 64],
    __fpu_ymmh0 : Struct___darwin_xmm_reg,
    __fpu_ymmh1 : Struct___darwin_xmm_reg,
    __fpu_ymmh2 : Struct___darwin_xmm_reg,
    __fpu_ymmh3 : Struct___darwin_xmm_reg,
    __fpu_ymmh4 : Struct___darwin_xmm_reg,
    __fpu_ymmh5 : Struct___darwin_xmm_reg,
    __fpu_ymmh6 : Struct___darwin_xmm_reg,
    __fpu_ymmh7 : Struct___darwin_xmm_reg,
);

record Struct___darwin_i386_exception_state (
    __trapno : __uint16_t,
    __cpu : __uint16_t,
    __err : __uint32_t,
    __faultvaddr : __uint32_t,
);

record Struct___darwin_x86_debug_state32 (
    __dr0 : CUInt,
    __dr1 : CUInt,
    __dr2 : CUInt,
    __dr3 : CUInt,
    __dr4 : CUInt,
    __dr5 : CUInt,
    __dr6 : CUInt,
    __dr7 : CUInt,
);

record Struct___darwin_x86_thread_state64 (
    __rax : __uint64_t,
    __rbx : __uint64_t,
    __rcx : __uint64_t,
    __rdx : __uint64_t,
    __rdi : __uint64_t,
    __rsi : __uint64_t,
    __rbp : __uint64_t,
    __rsp : __uint64_t,
    __r8 : __uint64_t,
    __r9 : __uint64_t,
    __r10 : __uint64_t,
    __r11 : __uint64_t,
    __r12 : __uint64_t,
    __r13 : __uint64_t,
    __r14 : __uint64_t,
    __r15 : __uint64_t,
    __rip : __uint64_t,
    __rflags : __uint64_t,
    __cs : __uint64_t,
    __fs : __uint64_t,
    __gs : __uint64_t,
);

record Struct___darwin_x86_float_state64 (
    __fpu_reserved : Array[CInt, 2],
    __fpu_fcw : Struct___darwin_fp_control,
    __fpu_fsw : Struct___darwin_fp_status,
    __fpu_ftw : __uint8_t,
    __fpu_rsrv1 : __uint8_t,
    __fpu_fop : __uint16_t,
    __fpu_ip : __uint32_t,
    __fpu_cs : __uint16_t,
    __fpu_rsrv2 : __uint16_t,
    __fpu_dp : __uint32_t,
    __fpu_ds : __uint16_t,
    __fpu_rsrv3 : __uint16_t,
    __fpu_mxcsr : __uint32_t,
    __fpu_mxcsrmask : __uint32_t,
    __fpu_stmm0 : Struct___darwin_mmst_reg,
    __fpu_stmm1 : Struct___darwin_mmst_reg,
    __fpu_stmm2 : Struct___darwin_mmst_reg,
    __fpu_stmm3 : Struct___darwin_mmst_reg,
    __fpu_stmm4 : Struct___darwin_mmst_reg,
    __fpu_stmm5 : Struct___darwin_mmst_reg,
    __fpu_stmm6 : Struct___darwin_mmst_reg,
    __fpu_stmm7 : Struct___darwin_mmst_reg,
    __fpu_xmm0 : Struct___darwin_xmm_reg,
    __fpu_xmm1 : Struct___darwin_xmm_reg,
    __fpu_xmm2 : Struct___darwin_xmm_reg,
    __fpu_xmm3 : Struct___darwin_xmm_reg,
    __fpu_xmm4 : Struct___darwin_xmm_reg,
    __fpu_xmm5 : Struct___darwin_xmm_reg,
    __fpu_xmm6 : Struct___darwin_xmm_reg,
    __fpu_xmm7 : Struct___darwin_xmm_reg,
    __fpu_xmm8 : Struct___darwin_xmm_reg,
    __fpu_xmm9 : Struct___darwin_xmm_reg,
    __fpu_xmm10 : Struct___darwin_xmm_reg,
    __fpu_xmm11 : Struct___darwin_xmm_reg,
    __fpu_xmm12 : Struct___darwin_xmm_reg,
    __fpu_xmm13 : Struct___darwin_xmm_reg,
    __fpu_xmm14 : Struct___darwin_xmm_reg,
    __fpu_xmm15 : Struct___darwin_xmm_reg,
    __fpu_rsrv4 : Array[CChar, 96],
    __fpu_reserved1 : CInt,
);

record Struct___darwin_x86_avx_state64 (
    __fpu_reserved : Array[CInt, 2],
    __fpu_fcw : Struct___darwin_fp_control,
    __fpu_fsw : Struct___darwin_fp_status,
    __fpu_ftw : __uint8_t,
    __fpu_rsrv1 : __uint8_t,
    __fpu_fop : __uint16_t,
    __fpu_ip : __uint32_t,
    __fpu_cs : __uint16_t,
    __fpu_rsrv2 : __uint16_t,
    __fpu_dp : __uint32_t,
    __fpu_ds : __uint16_t,
    __fpu_rsrv3 : __uint16_t,
    __fpu_mxcsr : __uint32_t,
    __fpu_mxcsrmask : __uint32_t,
    __fpu_stmm0 : Struct___darwin_mmst_reg,
    __fpu_stmm1 : Struct___darwin_mmst_reg,
    __fpu_stmm2 : Struct___darwin_mmst_reg,
    __fpu_stmm3 : Struct___darwin_mmst_reg,
    __fpu_stmm4 : Struct___darwin_mmst_reg,
    __fpu_stmm5 : Struct___darwin_mmst_reg,
    __fpu_stmm6 : Struct___darwin_mmst_reg,
    __fpu_stmm7 : Struct___darwin_mmst_reg,
    __fpu_xmm0 : Struct___darwin_xmm_reg,
    __fpu_xmm1 : Struct___darwin_xmm_reg,
    __fpu_xmm2 : Struct___darwin_xmm_reg,
    __fpu_xmm3 : Struct___darwin_xmm_reg,
    __fpu_xmm4 : Struct___darwin_xmm_reg,
    __fpu_xmm5 : Struct___darwin_xmm_reg,
    __fpu_xmm6 : Struct___darwin_xmm_reg,
    __fpu_xmm7 : Struct___darwin_xmm_reg,
    __fpu_xmm8 : Struct___darwin_xmm_reg,
    __fpu_xmm9 : Struct___darwin_xmm_reg,
    __fpu_xmm10 : Struct___darwin_xmm_reg,
    __fpu_xmm11 : Struct___darwin_xmm_reg,
    __fpu_xmm12 : Struct___darwin_xmm_reg,
    __fpu_xmm13 : Struct___darwin_xmm_reg,
    __fpu_xmm14 : Struct___darwin_xmm_reg,
    __fpu_xmm15 : Struct___darwin_xmm_reg,
    __fpu_rsrv4 : Array[CChar, 96],
    __fpu_reserved1 : CInt,
    __avx_reserved1 : Array[CChar, 64],
    __fpu_ymmh0 : Struct___darwin_xmm_reg,
    __fpu_ymmh1 : Struct___darwin_xmm_reg,
    __fpu_ymmh2 : Struct___darwin_xmm_reg,
    __fpu_ymmh3 : Struct___darwin_xmm_reg,
    __fpu_ymmh4 : Struct___darwin_xmm_reg,
    __fpu_ymmh5 : Struct___darwin_xmm_reg,
    __fpu_ymmh6 : Struct___darwin_xmm_reg,
    __fpu_ymmh7 : Struct___darwin_xmm_reg,
    __fpu_ymmh8 : Struct___darwin_xmm_reg,
    __fpu_ymmh9 : Struct___darwin_xmm_reg,
    __fpu_ymmh10 : Struct___darwin_xmm_reg,
    __fpu_ymmh11 : Struct___darwin_xmm_reg,
    __fpu_ymmh12 : Struct___darwin_xmm_reg,
    __fpu_ymmh13 : Struct___darwin_xmm_reg,
    __fpu_ymmh14 : Struct___darwin_xmm_reg,
    __fpu_ymmh15 : Struct___darwin_xmm_reg,
);

record Struct___darwin_x86_exception_state64 (
    __trapno : __uint16_t,
    __cpu : __uint16_t,
    __err : __uint32_t,
    __faultvaddr : __uint64_t,
);

record Struct___darwin_x86_debug_state64 (
    __dr0 : __uint64_t,
    __dr1 : __uint64_t,
    __dr2 : __uint64_t,
    __dr3 : __uint64_t,
    __dr4 : __uint64_t,
    __dr5 : __uint64_t,
    __dr6 : __uint64_t,
    __dr7 : __uint64_t,
);

record Struct___darwin_mcontext32 (
    __es : Struct___darwin_i386_exception_state,
    __ss : Struct___darwin_i386_thread_state,
    __fs : Struct___darwin_i386_float_state,
);

record Struct___darwin_mcontext_avx32 (
    __es : Struct___darwin_i386_exception_state,
    __ss : Struct___darwin_i386_thread_state,
    __fs : Struct___darwin_i386_avx_state,
);

record Struct___darwin_mcontext64 (
    __es : Struct___darwin_x86_exception_state64,
    __ss : Struct___darwin_x86_thread_state64,
    __fs : Struct___darwin_x86_float_state64,
);

record Struct___darwin_mcontext_avx64 (
    __es : Struct___darwin_x86_exception_state64,
    __ss : Struct___darwin_x86_thread_state64,
    __fs : Struct___darwin_x86_avx_state64,
);

alias mcontext_t = Pointer[Struct___darwin_mcontext64];

record Struct___darwin_sigaltstack (
    ss_sp : OpaquePointer,
    ss_size : __darwin_size_t,
    ss_flags : CInt,
);

record Struct___darwin_ucontext (
    uc_onstack : CInt,
    uc_sigmask : __darwin_sigset_t,
    uc_stack : Struct___darwin_sigaltstack,
    uc_link : Pointer[Struct___darwin_ucontext],
    uc_mcsize : __darwin_size_t,
    uc_mcontext : Pointer[Struct___darwin_mcontext64],
);

alias stack_t = Struct___darwin_sigaltstack;

alias ucontext_t = Struct___darwin_ucontext;

alias pthread_attr_t = __darwin_pthread_attr_t;

alias sigset_t = __darwin_sigset_t;

alias uid_t = __darwin_uid_t;

alias Union_sigval = Union[
    /* sival_int */ CInt,
    /* sival_ptr */ OpaquePointer,
];

record Struct_sigevent (
    sigev_notify : CInt,
    sigev_signo : CInt,
    sigev_value : Union_sigval,
    sigev_notify_function : CCodePointer[[Union_sigval],[]],
    sigev_notify_attributes : Pointer[pthread_attr_t],
);

record Struct___siginfo (
    si_signo : CInt,
    si_errno : CInt,
    si_code : CInt,
    si_pid : pid_t,
    si_uid : uid_t,
    si_status : CInt,
    si_addr : OpaquePointer,
    si_value : Union_sigval,
    si_band : CLong,
    __pad : Array[CULong, 7],
);

alias siginfo_t = Struct___siginfo;

alias Union___sigaction_u = Union[
    /* __sa_handler */ CCodePointer[[CInt],[]],
    /* __sa_sigaction */ CCodePointer[[CInt, Pointer[Struct___siginfo], OpaquePointer],[]],
];

record Struct___sigaction (
    __sigaction_u : Union___sigaction_u,
    sa_tramp : CCodePointer[[OpaquePointer, CInt, CInt, Pointer[siginfo_t], OpaquePointer],[]],
    sa_mask : sigset_t,
    sa_flags : CInt,
);

record Struct_sigaction (
    __sigaction_u : Union___sigaction_u,
    sa_mask : sigset_t,
    sa_flags : CInt,
);

alias sig_t = CCodePointer[[CInt],[]];

record Struct_sigvec (
    sv_handler : CCodePointer[[CInt],[]],
    sv_mask : CInt,
    sv_flags : CInt,
);

record Struct_sigstack (
    ss_sp : Pointer[CChar],
    ss_onstack : CInt,
);

external (cdecl) signal(arg0:CInt, arg1:CCodePointer[[CInt],[]]) : CCodePointer[[CInt],[]];

record Struct_timeval (
    tv_sec : __darwin_time_t,
    tv_usec : __darwin_suseconds_t,
);

alias rlim_t = __uint64_t;

record Struct_rusage (
    ru_utime : Struct_timeval,
    ru_stime : Struct_timeval,
    ru_maxrss : CLong,
    ru_ixrss : CLong,
    ru_idrss : CLong,
    ru_isrss : CLong,
    ru_minflt : CLong,
    ru_majflt : CLong,
    ru_nswap : CLong,
    ru_inblock : CLong,
    ru_oublock : CLong,
    ru_msgsnd : CLong,
    ru_msgrcv : CLong,
    ru_nsignals : CLong,
    ru_nvcsw : CLong,
    ru_nivcsw : CLong,
);

record Struct_rlimit (
    rlim_cur : rlim_t,
    rlim_max : rlim_t,
);

external (cdecl) getpriority(arg0:CInt, arg1:id_t) : CInt;

external (cdecl) getiopolicy_np(arg0:CInt, arg1:CInt) : CInt;

external (cdecl, "_getrlimit") getrlimit(arg0:CInt, arg1:Pointer[Struct_rlimit]) : CInt;

external (cdecl) getrusage(arg0:CInt, arg1:Pointer[Struct_rusage]) : CInt;

external (cdecl) setpriority(arg0:CInt, arg1:id_t, arg2:CInt) : CInt;

external (cdecl) setiopolicy_np(arg0:CInt, arg1:CInt, arg2:CInt) : CInt;

external (cdecl, "_setrlimit") setrlimit(arg0:CInt, arg1:Pointer[Struct_rlimit]) : CInt;

external (cdecl) _OSSwapInt16(arg0:__uint16_t) : __uint16_t;

external (cdecl) _OSSwapInt32(arg0:__uint32_t) : __uint32_t;

external (cdecl) _OSSwapInt64(arg0:__uint64_t) : __uint64_t;

alias Union_wait = Union[
    /* w_status */ CInt,
    /* w_T */ Struct_Unnamed1,
    /* w_S */ Struct_Unnamed2,
];

external (cdecl, "_wait") wait(arg0:Pointer[CInt]) : pid_t;

external (cdecl, "_waitpid") waitpid(arg0:pid_t, arg1:Pointer[CInt], arg2:CInt) : pid_t;

external (cdecl, "_waitid") waitid(arg0:idtype_t, arg1:id_t, arg2:Pointer[siginfo_t], arg3:CInt) : CInt;

external (cdecl) wait3(arg0:Pointer[CInt], arg1:CInt, arg2:Pointer[Struct_rusage]) : pid_t;

external (cdecl) wait4(arg0:pid_t, arg1:Pointer[CInt], arg2:CInt, arg3:Pointer[Struct_rusage]) : pid_t;

external (cdecl) alloca(arg0:size_t) : OpaquePointer;

alias ct_rune_t = __darwin_ct_rune_t;

alias rune_t = __darwin_rune_t;

alias wchar_t = __darwin_wchar_t;

record div_t (
    quot : CInt,
    rem : CInt,
);

record ldiv_t (
    quot : CLong,
    rem : CLong,
);

record lldiv_t (
    quot : CLongLong,
    rem : CLongLong,
);

external __mb_cur_max : CInt;

external (cdecl) abort() : ;

external (cdecl) abs(arg0:CInt) : CInt;

external (cdecl) atexit(arg0:CCodePointer[[],[]]) : CInt;

external (cdecl) atof(arg0:Pointer[CChar]) : CDouble;

external (cdecl) atoi(arg0:Pointer[CChar]) : CInt;

external (cdecl) atol(arg0:Pointer[CChar]) : CLong;

external (cdecl) atoll(arg0:Pointer[CChar]) : CLongLong;

external (cdecl) bsearch(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t, arg3:size_t, arg4:CCodePointer[[OpaquePointer, OpaquePointer],[CInt]]) : OpaquePointer;

external (cdecl) calloc(arg0:size_t, arg1:size_t) : OpaquePointer;

external (cdecl) div(arg0:CInt, arg1:CInt) : div_t;

external (cdecl) exit(arg0:CInt) : ;

external (cdecl) free(arg0:OpaquePointer) : ;

external (cdecl) getenv(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) labs(arg0:CLong) : CLong;

external (cdecl) ldiv(arg0:CLong, arg1:CLong) : ldiv_t;

external (cdecl) llabs(arg0:CLongLong) : CLongLong;

external (cdecl) lldiv(arg0:CLongLong, arg1:CLongLong) : lldiv_t;

external (cdecl) malloc(arg0:size_t) : OpaquePointer;

external (cdecl) mblen(arg0:Pointer[CChar], arg1:size_t) : CInt;

external (cdecl) mbstowcs(arg0:Pointer[wchar_t], arg1:Pointer[CChar], arg2:size_t) : size_t;

external (cdecl) mbtowc(arg0:Pointer[wchar_t], arg1:Pointer[CChar], arg2:size_t) : CInt;

external (cdecl) posix_memalign(arg0:Pointer[OpaquePointer], arg1:size_t, arg2:size_t) : CInt;

external (cdecl) qsort(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:CCodePointer[[OpaquePointer, OpaquePointer],[CInt]]) : ;

external (cdecl) rand() : CInt;

external (cdecl) realloc(arg0:OpaquePointer, arg1:size_t) : OpaquePointer;

external (cdecl) srand(arg0:CUInt) : ;

external (cdecl, "_strtod") strtod(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CDouble;

external (cdecl, "_strtof") strtof(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CFloat;

external (cdecl) strtol(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CLong;

external (cdecl) strtold(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CLongDouble;

external (cdecl) strtoll(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CLongLong;

external (cdecl) strtoul(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CULong;

external (cdecl) strtoull(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CULongLong;

external (cdecl, "_system") system(arg0:Pointer[CChar]) : CInt;

external (cdecl) wcstombs(arg0:Pointer[CChar], arg1:Pointer[wchar_t], arg2:size_t) : size_t;

external (cdecl) wctomb(arg0:Pointer[CChar], arg1:wchar_t) : CInt;

external (cdecl) _Exit(arg0:CInt) : ;

external (cdecl) a64l(arg0:Pointer[CChar]) : CLong;

external (cdecl) drand48() : CDouble;

external (cdecl) ecvt(arg0:CDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt]) : Pointer[CChar];

external (cdecl) erand48(arg0:Pointer[CUShort]) : CDouble;

external (cdecl) fcvt(arg0:CDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt]) : Pointer[CChar];

external (cdecl) gcvt(arg0:CDouble, arg1:CInt, arg2:Pointer[CChar]) : Pointer[CChar];

external (cdecl) getsubopt(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Pointer[CChar]], arg2:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) grantpt(arg0:CInt) : CInt;

external (cdecl) initstate(arg0:CUInt, arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) jrand48(arg0:Pointer[CUShort]) : CLong;

external (cdecl) l64a(arg0:CLong) : Pointer[CChar];

external (cdecl) lcong48(arg0:Pointer[CUShort]) : ;

external (cdecl) lrand48() : CLong;

external (cdecl) mktemp(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) mkstemp(arg0:Pointer[CChar]) : CInt;

external (cdecl) mrand48() : CLong;

external (cdecl) nrand48(arg0:Pointer[CUShort]) : CLong;

external (cdecl) posix_openpt(arg0:CInt) : CInt;

external (cdecl) ptsname(arg0:CInt) : Pointer[CChar];

external (cdecl, "_putenv") putenv(arg0:Pointer[CChar]) : CInt;

external (cdecl) random() : CLong;

external (cdecl) rand_r(arg0:Pointer[CUInt]) : CInt;

external (cdecl, "_realpath\$DARWIN_EXTSN") realpath(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) seed48(arg0:Pointer[CUShort]) : Pointer[CUShort];

external (cdecl, "_setenv") setenv(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:CInt) : CInt;

external (cdecl, "_setkey") setkey(arg0:Pointer[CChar]) : ;

external (cdecl) setstate(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) srand48(arg0:CLong) : ;

external (cdecl) srandom(arg0:CUInt) : ;

external (cdecl) unlockpt(arg0:CInt) : CInt;

external (cdecl, "_unsetenv") unsetenv(arg0:Pointer[CChar]) : CInt;

alias int8_t = CChar;

alias u_int8_t = CUChar;

alias int16_t = CShort;

alias u_int16_t = CUShort;

alias int32_t = CInt;

alias u_int32_t = CUInt;

alias int64_t = CLongLong;

alias u_int64_t = CULongLong;

alias register_t = int64_t;

alias intptr_t = __darwin_intptr_t;

alias uintptr_t = CULong;

alias user_addr_t = u_int64_t;

alias user_size_t = u_int64_t;

alias user_ssize_t = int64_t;

alias user_long_t = int64_t;

alias user_ulong_t = u_int64_t;

alias user_time_t = int64_t;

alias user_off_t = int64_t;

alias syscall_arg_t = u_int64_t;

alias dev_t = __darwin_dev_t;

alias mode_t = __darwin_mode_t;

external (cdecl) arc4random() : u_int32_t;

external (cdecl) arc4random_addrandom(arg0:Pointer[CUChar], arg1:CInt) : ;

external (cdecl) arc4random_buf(arg0:OpaquePointer, arg1:size_t) : ;

external (cdecl) arc4random_stir() : ;

external (cdecl) arc4random_uniform(arg0:u_int32_t) : u_int32_t;

external (cdecl) atexit_b(arg0:/* unknown kind BlockPointer */ Opaque) : CInt;

external (cdecl) bsearch_b(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t, arg3:size_t, arg4:/* unknown kind BlockPointer */ Opaque) : OpaquePointer;

external (cdecl) cgetcap(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:CInt) : Pointer[CChar];

external (cdecl) cgetclose() : CInt;

external (cdecl) cgetent(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Pointer[CChar]], arg2:Pointer[CChar]) : CInt;

external (cdecl) cgetfirst(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) cgetmatch(arg0:Pointer[CChar], arg1:Pointer[CChar]) : CInt;

external (cdecl) cgetnext(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) cgetnum(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[CLong]) : CInt;

external (cdecl) cgetset(arg0:Pointer[CChar]) : CInt;

external (cdecl) cgetstr(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) cgetustr(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[Pointer[CChar]]) : CInt;

external (cdecl, "_daemon\$1050") daemon(arg0:CInt, arg1:CInt) : CInt;

external (cdecl) devname(arg0:dev_t, arg1:mode_t) : Pointer[CChar];

external (cdecl) devname_r(arg0:dev_t, arg1:mode_t, arg2:Pointer[CChar], arg3:CInt) : Pointer[CChar];

external (cdecl) getbsize(arg0:Pointer[CInt], arg1:Pointer[CLong]) : Pointer[CChar];

external (cdecl) getloadavg(arg0:Pointer[CDouble], arg1:CInt) : CInt;

external (cdecl) getprogname() : Pointer[CChar];

external (cdecl) heapsort(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:CCodePointer[[OpaquePointer, OpaquePointer],[CInt]]) : CInt;

external (cdecl) heapsort_b(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:/* unknown kind BlockPointer */ Opaque) : CInt;

external (cdecl) mergesort(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:CCodePointer[[OpaquePointer, OpaquePointer],[CInt]]) : CInt;

external (cdecl) mergesort_b(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:/* unknown kind BlockPointer */ Opaque) : CInt;

external (cdecl) psort(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:CCodePointer[[OpaquePointer, OpaquePointer],[CInt]]) : ;

external (cdecl) psort_b(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:/* unknown kind BlockPointer */ Opaque) : ;

external (cdecl) psort_r(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:OpaquePointer, arg4:CCodePointer[[OpaquePointer, OpaquePointer, OpaquePointer],[CInt]]) : ;

external (cdecl) qsort_b(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:/* unknown kind BlockPointer */ Opaque) : ;

external (cdecl) qsort_r(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:OpaquePointer, arg4:CCodePointer[[OpaquePointer, OpaquePointer, OpaquePointer],[CInt]]) : ;

external (cdecl) radixsort(arg0:Pointer[Pointer[CUChar]], arg1:CInt, arg2:Pointer[CUChar], arg3:CUInt) : CInt;

external (cdecl) setprogname(arg0:Pointer[CChar]) : ;

external (cdecl) sradixsort(arg0:Pointer[Pointer[CUChar]], arg1:CInt, arg2:Pointer[CUChar], arg3:CUInt) : CInt;

external (cdecl) sranddev() : ;

external (cdecl) srandomdev() : ;

external (cdecl) reallocf(arg0:OpaquePointer, arg1:size_t) : OpaquePointer;

external (cdecl) strtoq(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CLongLong;

external (cdecl) strtouq(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CULongLong;

external suboptarg : Pointer[CChar];

external (cdecl) valloc(arg0:size_t) : OpaquePointer;

external (cdecl) memchr(arg0:OpaquePointer, arg1:CInt, arg2:size_t) : OpaquePointer;

external (cdecl) memcmp(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : CInt;

external (cdecl) memcpy(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : OpaquePointer;

external (cdecl) memmove(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : OpaquePointer;

external (cdecl) memset(arg0:OpaquePointer, arg1:CInt, arg2:size_t) : OpaquePointer;

external (cdecl) strcat(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) strchr(arg0:Pointer[CChar], arg1:CInt) : Pointer[CChar];

external (cdecl) strcmp(arg0:Pointer[CChar], arg1:Pointer[CChar]) : CInt;

external (cdecl) strcoll(arg0:Pointer[CChar], arg1:Pointer[CChar]) : CInt;

external (cdecl) strcpy(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) strcspn(arg0:Pointer[CChar], arg1:Pointer[CChar]) : size_t;

external (cdecl, "_strerror") strerror(arg0:CInt) : Pointer[CChar];

external (cdecl) strlen(arg0:Pointer[CChar]) : size_t;

external (cdecl) strncat(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) strncmp(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : CInt;

external (cdecl) strncpy(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) strpbrk(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) strrchr(arg0:Pointer[CChar], arg1:CInt) : Pointer[CChar];

external (cdecl) strspn(arg0:Pointer[CChar], arg1:Pointer[CChar]) : size_t;

external (cdecl) strstr(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) strtok(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) strxfrm(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : size_t;

external (cdecl) strtok_r(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[Pointer[CChar]]) : Pointer[CChar];

external (cdecl) strerror_r(arg0:CInt, arg1:Pointer[CChar], arg2:size_t) : CInt;

external (cdecl) strdup(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) memccpy(arg0:OpaquePointer, arg1:OpaquePointer, arg2:CInt, arg3:size_t) : OpaquePointer;

external (cdecl) stpcpy(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) stpncpy(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) strndup(arg0:Pointer[CChar], arg1:size_t) : Pointer[CChar];

external (cdecl) strnlen(arg0:Pointer[CChar], arg1:size_t) : size_t;

external (cdecl) strsignal(arg0:CInt) : Pointer[CChar];

external (cdecl) memmem(arg0:OpaquePointer, arg1:size_t, arg2:OpaquePointer, arg3:size_t) : OpaquePointer;

external (cdecl) memset_pattern4(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : ;

external (cdecl) memset_pattern8(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : ;

external (cdecl) memset_pattern16(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : ;

external (cdecl) strcasestr(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) strnstr(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) strlcat(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : size_t;

external (cdecl) strlcpy(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : size_t;

external (cdecl) strmode(arg0:CInt, arg1:Pointer[CChar]) : ;

external (cdecl) strsep(arg0:Pointer[Pointer[CChar]], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) swab(arg0:OpaquePointer, arg1:OpaquePointer, arg2:ssize_t) : ;

external (cdecl) bcmp(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : CInt;

external (cdecl) bcopy(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : ;

external (cdecl) bzero(arg0:OpaquePointer, arg1:size_t) : ;

external (cdecl) index(arg0:Pointer[CChar], arg1:CInt) : Pointer[CChar];

external (cdecl) rindex(arg0:Pointer[CChar], arg1:CInt) : Pointer[CChar];

external (cdecl) ffs(arg0:CInt) : CInt;

external (cdecl) strcasecmp(arg0:Pointer[CChar], arg1:Pointer[CChar]) : CInt;

external (cdecl) strncasecmp(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : CInt;

external (cdecl) ffsl(arg0:CLong) : CInt;

external (cdecl) fls(arg0:CInt) : CInt;

external (cdecl) flsl(arg0:CLong) : CInt;

external (cdecl) __inline_memcpy_chk(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : OpaquePointer;

external (cdecl) __inline_memmove_chk(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t) : OpaquePointer;

external (cdecl) __inline_memset_chk(arg0:OpaquePointer, arg1:CInt, arg2:size_t) : OpaquePointer;

external (cdecl) __inline_strcpy_chk(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) __inline_stpcpy_chk(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) __inline_stpncpy_chk(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) __inline_strncpy_chk(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) __inline_strcat_chk(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) __inline_strncat_chk(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) cacosf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) cacos(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) cacosl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) casinf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) casin(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) casinl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) catanf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) catan(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) catanl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) ccosf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) ccos(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) ccosl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) csinf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) csin(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) csinl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) ctanf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) ctan(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) ctanl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) cacoshf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) cacosh(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) cacoshl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) casinhf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) casinh(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) casinhl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) catanhf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) catanh(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) catanhl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) ccoshf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) ccosh(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) ccoshl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) csinhf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) csinh(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) csinhl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) ctanhf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) ctanh(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) ctanhl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) cexpf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) cexp(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) cexpl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) clogf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) clog(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) clogl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) cabsf(arg0:CComplexFloat) : CFloat;

external (cdecl) cabs(arg0:CComplexDouble) : CDouble;

external (cdecl) cabsl(arg0:CComplexLongDouble) : CLongDouble;

external (cdecl) cpowf(arg0:CComplexFloat, arg1:CComplexFloat) : CComplexFloat;

external (cdecl) cpow(arg0:CComplexDouble, arg1:CComplexDouble) : CComplexDouble;

external (cdecl) cpowl(arg0:CComplexLongDouble, arg1:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) csqrtf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) csqrt(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) csqrtl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) cargf(arg0:CComplexFloat) : CFloat;

external (cdecl) carg(arg0:CComplexDouble) : CDouble;

external (cdecl) cargl(arg0:CComplexLongDouble) : CLongDouble;

external (cdecl) cimagf(arg0:CComplexFloat) : CFloat;

external (cdecl) cimag(arg0:CComplexDouble) : CDouble;

external (cdecl) cimagl(arg0:CComplexLongDouble) : CLongDouble;

external (cdecl) conjf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) conj(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) conjl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) cprojf(arg0:CComplexFloat) : CComplexFloat;

external (cdecl) cproj(arg0:CComplexDouble) : CComplexDouble;

external (cdecl) cprojl(arg0:CComplexLongDouble) : CComplexLongDouble;

external (cdecl) crealf(arg0:CComplexFloat) : CFloat;

external (cdecl) creal(arg0:CComplexDouble) : CDouble;

external (cdecl) creall(arg0:CComplexLongDouble) : CLongDouble;

alias float_t = CFloat;

alias double_t = CDouble;

external (cdecl) __math_errhandling() : CInt;

external (cdecl) __fpclassifyf(arg0:CFloat) : CInt;

external (cdecl) __fpclassifyd(arg0:CDouble) : CInt;

external (cdecl) __fpclassifyl(arg0:CLongDouble) : CInt;

external (cdecl) __inline_isfinitef(arg0:CFloat) : CInt;

external (cdecl) __inline_isfinited(arg0:CDouble) : CInt;

external (cdecl) __inline_isfinitel(arg0:CLongDouble) : CInt;

external (cdecl) __inline_isinff(arg0:CFloat) : CInt;

external (cdecl) __inline_isinfd(arg0:CDouble) : CInt;

external (cdecl) __inline_isinfl(arg0:CLongDouble) : CInt;

external (cdecl) __inline_isnanf(arg0:CFloat) : CInt;

external (cdecl) __inline_isnand(arg0:CDouble) : CInt;

external (cdecl) __inline_isnanl(arg0:CLongDouble) : CInt;

external (cdecl) __inline_isnormalf(arg0:CFloat) : CInt;

external (cdecl) __inline_isnormald(arg0:CDouble) : CInt;

external (cdecl) __inline_isnormall(arg0:CLongDouble) : CInt;

external (cdecl) __inline_signbitf(arg0:CFloat) : CInt;

external (cdecl) __inline_signbitd(arg0:CDouble) : CInt;

external (cdecl) __inline_signbitl(arg0:CLongDouble) : CInt;

external (cdecl) acosf(arg0:CFloat) : CFloat;

external (cdecl) acos(arg0:CDouble) : CDouble;

external (cdecl) acosl(arg0:CLongDouble) : CLongDouble;

external (cdecl) asinf(arg0:CFloat) : CFloat;

external (cdecl) asin(arg0:CDouble) : CDouble;

external (cdecl) asinl(arg0:CLongDouble) : CLongDouble;

external (cdecl) atanf(arg0:CFloat) : CFloat;

external (cdecl) atan(arg0:CDouble) : CDouble;

external (cdecl) atanl(arg0:CLongDouble) : CLongDouble;

external (cdecl) atan2f(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) atan2(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) atan2l(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) cosf(arg0:CFloat) : CFloat;

external (cdecl) cos(arg0:CDouble) : CDouble;

external (cdecl) cosl(arg0:CLongDouble) : CLongDouble;

external (cdecl) sinf(arg0:CFloat) : CFloat;

external (cdecl) sin(arg0:CDouble) : CDouble;

external (cdecl) sinl(arg0:CLongDouble) : CLongDouble;

external (cdecl) tanf(arg0:CFloat) : CFloat;

external (cdecl) tan(arg0:CDouble) : CDouble;

external (cdecl) tanl(arg0:CLongDouble) : CLongDouble;

external (cdecl) acoshf(arg0:CFloat) : CFloat;

external (cdecl) acosh(arg0:CDouble) : CDouble;

external (cdecl) acoshl(arg0:CLongDouble) : CLongDouble;

external (cdecl) asinhf(arg0:CFloat) : CFloat;

external (cdecl) asinh(arg0:CDouble) : CDouble;

external (cdecl) asinhl(arg0:CLongDouble) : CLongDouble;

external (cdecl) atanhf(arg0:CFloat) : CFloat;

external (cdecl) atanh(arg0:CDouble) : CDouble;

external (cdecl) atanhl(arg0:CLongDouble) : CLongDouble;

external (cdecl) coshf(arg0:CFloat) : CFloat;

external (cdecl) cosh(arg0:CDouble) : CDouble;

external (cdecl) coshl(arg0:CLongDouble) : CLongDouble;

external (cdecl) sinhf(arg0:CFloat) : CFloat;

external (cdecl) sinh(arg0:CDouble) : CDouble;

external (cdecl) sinhl(arg0:CLongDouble) : CLongDouble;

external (cdecl) tanhf(arg0:CFloat) : CFloat;

external (cdecl) tanh(arg0:CDouble) : CDouble;

external (cdecl) tanhl(arg0:CLongDouble) : CLongDouble;

external (cdecl) expf(arg0:CFloat) : CFloat;

external (cdecl) exp(arg0:CDouble) : CDouble;

external (cdecl) expl(arg0:CLongDouble) : CLongDouble;

external (cdecl) exp2f(arg0:CFloat) : CFloat;

external (cdecl) exp2(arg0:CDouble) : CDouble;

external (cdecl) exp2l(arg0:CLongDouble) : CLongDouble;

external (cdecl) expm1f(arg0:CFloat) : CFloat;

external (cdecl) expm1(arg0:CDouble) : CDouble;

external (cdecl) expm1l(arg0:CLongDouble) : CLongDouble;

external (cdecl) logf(arg0:CFloat) : CFloat;

external (cdecl) log(arg0:CDouble) : CDouble;

external (cdecl) logl(arg0:CLongDouble) : CLongDouble;

external (cdecl) log10f(arg0:CFloat) : CFloat;

external (cdecl) log10(arg0:CDouble) : CDouble;

external (cdecl) log10l(arg0:CLongDouble) : CLongDouble;

external (cdecl) log2f(arg0:CFloat) : CFloat;

external (cdecl) log2(arg0:CDouble) : CDouble;

external (cdecl) log2l(arg0:CLongDouble) : CLongDouble;

external (cdecl) log1pf(arg0:CFloat) : CFloat;

external (cdecl) log1p(arg0:CDouble) : CDouble;

external (cdecl) log1pl(arg0:CLongDouble) : CLongDouble;

external (cdecl) logbf(arg0:CFloat) : CFloat;

external (cdecl) logb(arg0:CDouble) : CDouble;

external (cdecl) logbl(arg0:CLongDouble) : CLongDouble;

external (cdecl) modff(arg0:CFloat, arg1:Pointer[CFloat]) : CFloat;

external (cdecl) modf(arg0:CDouble, arg1:Pointer[CDouble]) : CDouble;

external (cdecl) modfl(arg0:CLongDouble, arg1:Pointer[CLongDouble]) : CLongDouble;

external (cdecl) ldexpf(arg0:CFloat, arg1:CInt) : CFloat;

external (cdecl) ldexp(arg0:CDouble, arg1:CInt) : CDouble;

external (cdecl) ldexpl(arg0:CLongDouble, arg1:CInt) : CLongDouble;

external (cdecl) frexpf(arg0:CFloat, arg1:Pointer[CInt]) : CFloat;

external (cdecl) frexp(arg0:CDouble, arg1:Pointer[CInt]) : CDouble;

external (cdecl) frexpl(arg0:CLongDouble, arg1:Pointer[CInt]) : CLongDouble;

external (cdecl) ilogbf(arg0:CFloat) : CInt;

external (cdecl) ilogb(arg0:CDouble) : CInt;

external (cdecl) ilogbl(arg0:CLongDouble) : CInt;

external (cdecl) scalbnf(arg0:CFloat, arg1:CInt) : CFloat;

external (cdecl) scalbn(arg0:CDouble, arg1:CInt) : CDouble;

external (cdecl) scalbnl(arg0:CLongDouble, arg1:CInt) : CLongDouble;

external (cdecl) scalblnf(arg0:CFloat, arg1:CLong) : CFloat;

external (cdecl) scalbln(arg0:CDouble, arg1:CLong) : CDouble;

external (cdecl) scalblnl(arg0:CLongDouble, arg1:CLong) : CLongDouble;

external (cdecl) fabsf(arg0:CFloat) : CFloat;

external (cdecl) fabs(arg0:CDouble) : CDouble;

external (cdecl) fabsl(arg0:CLongDouble) : CLongDouble;

external (cdecl) cbrtf(arg0:CFloat) : CFloat;

external (cdecl) cbrt(arg0:CDouble) : CDouble;

external (cdecl) cbrtl(arg0:CLongDouble) : CLongDouble;

external (cdecl) hypotf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) hypot(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) hypotl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) powf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) pow(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) powl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) sqrtf(arg0:CFloat) : CFloat;

external (cdecl) sqrt(arg0:CDouble) : CDouble;

external (cdecl) sqrtl(arg0:CLongDouble) : CLongDouble;

external (cdecl) erff(arg0:CFloat) : CFloat;

external (cdecl) erf(arg0:CDouble) : CDouble;

external (cdecl) erfl(arg0:CLongDouble) : CLongDouble;

external (cdecl) erfcf(arg0:CFloat) : CFloat;

external (cdecl) erfc(arg0:CDouble) : CDouble;

external (cdecl) erfcl(arg0:CLongDouble) : CLongDouble;

external (cdecl) lgammaf(arg0:CFloat) : CFloat;

external (cdecl) lgamma(arg0:CDouble) : CDouble;

external (cdecl) lgammal(arg0:CLongDouble) : CLongDouble;

external (cdecl) tgammaf(arg0:CFloat) : CFloat;

external (cdecl) tgamma(arg0:CDouble) : CDouble;

external (cdecl) tgammal(arg0:CLongDouble) : CLongDouble;

external (cdecl) ceilf(arg0:CFloat) : CFloat;

external (cdecl) ceil(arg0:CDouble) : CDouble;

external (cdecl) ceill(arg0:CLongDouble) : CLongDouble;

external (cdecl) floorf(arg0:CFloat) : CFloat;

external (cdecl) floor(arg0:CDouble) : CDouble;

external (cdecl) floorl(arg0:CLongDouble) : CLongDouble;

external (cdecl) nearbyintf(arg0:CFloat) : CFloat;

external (cdecl) nearbyint(arg0:CDouble) : CDouble;

external (cdecl) nearbyintl(arg0:CLongDouble) : CLongDouble;

external (cdecl) rintf(arg0:CFloat) : CFloat;

external (cdecl) rint(arg0:CDouble) : CDouble;

external (cdecl) rintl(arg0:CLongDouble) : CLongDouble;

external (cdecl) lrintf(arg0:CFloat) : CLong;

external (cdecl) lrint(arg0:CDouble) : CLong;

external (cdecl) lrintl(arg0:CLongDouble) : CLong;

external (cdecl) roundf(arg0:CFloat) : CFloat;

external (cdecl) round(arg0:CDouble) : CDouble;

external (cdecl) roundl(arg0:CLongDouble) : CLongDouble;

external (cdecl) lroundf(arg0:CFloat) : CLong;

external (cdecl) lround(arg0:CDouble) : CLong;

external (cdecl) lroundl(arg0:CLongDouble) : CLong;

external (cdecl) llrintf(arg0:CFloat) : CLongLong;

external (cdecl) llrint(arg0:CDouble) : CLongLong;

external (cdecl) llrintl(arg0:CLongDouble) : CLongLong;

external (cdecl) llroundf(arg0:CFloat) : CLongLong;

external (cdecl) llround(arg0:CDouble) : CLongLong;

external (cdecl) llroundl(arg0:CLongDouble) : CLongLong;

external (cdecl) truncf(arg0:CFloat) : CFloat;

external (cdecl) trunc(arg0:CDouble) : CDouble;

external (cdecl) truncl(arg0:CLongDouble) : CLongDouble;

external (cdecl) fmodf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) fmod(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) fmodl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) remainderf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) remainder(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) remainderl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) remquof(arg0:CFloat, arg1:CFloat, arg2:Pointer[CInt]) : CFloat;

external (cdecl) remquo(arg0:CDouble, arg1:CDouble, arg2:Pointer[CInt]) : CDouble;

external (cdecl) remquol(arg0:CLongDouble, arg1:CLongDouble, arg2:Pointer[CInt]) : CLongDouble;

external (cdecl) copysignf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) copysign(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) copysignl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) nanf(arg0:Pointer[CChar]) : CFloat;

external (cdecl) nan(arg0:Pointer[CChar]) : CDouble;

external (cdecl) nanl(arg0:Pointer[CChar]) : CLongDouble;

external (cdecl) nextafterf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) nextafter(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) nextafterl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) nexttoward(arg0:CDouble, arg1:CLongDouble) : CDouble;

external (cdecl) nexttowardf(arg0:CFloat, arg1:CLongDouble) : CFloat;

external (cdecl) nexttowardl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) fdimf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) fdim(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) fdiml(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) fmaxf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) fmax(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) fmaxl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) fminf(arg0:CFloat, arg1:CFloat) : CFloat;

external (cdecl) fmin(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) fminl(arg0:CLongDouble, arg1:CLongDouble) : CLongDouble;

external (cdecl) fmaf(arg0:CFloat, arg1:CFloat, arg2:CFloat) : CFloat;

external (cdecl) fma(arg0:CDouble, arg1:CDouble, arg2:CDouble) : CDouble;

external (cdecl) fmal(arg0:CLongDouble, arg1:CLongDouble, arg2:CLongDouble) : CLongDouble;

external (cdecl) __inff() : CFloat;

external (cdecl) __inf() : CDouble;

external (cdecl) __infl() : CLongDouble;

external (cdecl) __nan() : CFloat;

external (cdecl) j0(arg0:CDouble) : CDouble;

external (cdecl) j1(arg0:CDouble) : CDouble;

external (cdecl) jn(arg0:CInt, arg1:CDouble) : CDouble;

external (cdecl) y0(arg0:CDouble) : CDouble;

external (cdecl) y1(arg0:CDouble) : CDouble;

external (cdecl) yn(arg0:CInt, arg1:CDouble) : CDouble;

external (cdecl) scalb(arg0:CDouble, arg1:CDouble) : CDouble;

external signgam : CInt;

external (cdecl) rinttol(arg0:CDouble) : CLong;

external (cdecl) roundtol(arg0:CDouble) : CLong;

external (cdecl) drem(arg0:CDouble, arg1:CDouble) : CDouble;

external (cdecl) finite(arg0:CDouble) : CInt;

external (cdecl) gamma(arg0:CDouble) : CDouble;

external (cdecl) significand(arg0:CDouble) : CDouble;

record Struct_exception (
    type : CInt,
    name : Pointer[CChar],
    arg1 : CDouble,
    arg2 : CDouble,
    retval : CDouble,
);

external (cdecl) matherr(arg0:Pointer[Struct_exception]) : CInt;

alias jmp_buf = Array[CInt, 37];

alias sigjmp_buf = Array[CInt, 38];

external (cdecl) setjmp(arg0:Pointer[CInt]) : CInt;

external (cdecl) longjmp(arg0:Pointer[CInt], arg1:CInt) : ;

external (cdecl) _setjmp(arg0:Pointer[CInt]) : CInt;

external (cdecl) _longjmp(arg0:Pointer[CInt], arg1:CInt) : ;

external (cdecl) sigsetjmp(arg0:Pointer[CInt], arg1:CInt) : CInt;

external (cdecl) siglongjmp(arg0:Pointer[CInt], arg1:CInt) : ;

external (cdecl) longjmperror() : ;

record Struct_timespec (
    tv_sec : __darwin_time_t,
    tv_nsec : CLong,
);

alias clock_t = __darwin_clock_t;

alias time_t = __darwin_time_t;

record Struct_tm (
    tm_sec : CInt,
    tm_min : CInt,
    tm_hour : CInt,
    tm_mday : CInt,
    tm_mon : CInt,
    tm_year : CInt,
    tm_wday : CInt,
    tm_yday : CInt,
    tm_isdst : CInt,
    tm_gmtoff : CLong,
    tm_zone : Pointer[CChar],
);

external tzname : Opaque /* unknown NoDeclFound  */;

external getdate_err : CInt;

external timezone : CLong;

external daylight : CInt;

external (cdecl) asctime(arg0:Pointer[Struct_tm]) : Pointer[CChar];

external (cdecl, "_clock") clock() : clock_t;

external (cdecl) ctime(arg0:Pointer[time_t]) : Pointer[CChar];

external (cdecl) difftime(arg0:time_t, arg1:time_t) : CDouble;

external (cdecl) getdate(arg0:Pointer[CChar]) : Pointer[Struct_tm];

external (cdecl) gmtime(arg0:Pointer[time_t]) : Pointer[Struct_tm];

external (cdecl) localtime(arg0:Pointer[time_t]) : Pointer[Struct_tm];

external (cdecl, "_mktime") mktime(arg0:Pointer[Struct_tm]) : time_t;

external (cdecl, "_strftime") strftime(arg0:Pointer[CChar], arg1:size_t, arg2:Pointer[CChar], arg3:Pointer[Struct_tm]) : size_t;

external (cdecl, "_strptime") strptime(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[Struct_tm]) : Pointer[CChar];

external (cdecl) time(arg0:Pointer[time_t]) : time_t;

external (cdecl) tzset() : ;

external (cdecl) asctime_r(arg0:Pointer[Struct_tm], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) ctime_r(arg0:Pointer[time_t], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) gmtime_r(arg0:Pointer[time_t], arg1:Pointer[Struct_tm]) : Pointer[Struct_tm];

external (cdecl) localtime_r(arg0:Pointer[time_t], arg1:Pointer[Struct_tm]) : Pointer[Struct_tm];

external (cdecl) posix2time(arg0:time_t) : time_t;

external (cdecl) tzsetwall() : ;

external (cdecl) time2posix(arg0:time_t) : time_t;

external (cdecl) timelocal(arg0:Pointer[Struct_tm]) : time_t;

external (cdecl) timegm(arg0:Pointer[Struct_tm]) : time_t;

external (cdecl, "_nanosleep") nanosleep(arg0:Pointer[Struct_timespec], arg1:Pointer[Struct_timespec]) : CInt;

record Struct_Unnamed1 (
    w_Termsig : CUInt,
    w_Coredump : CUInt,
    w_Retcode : CUInt,
    w_Filler : CUInt,
);

record Struct_Unnamed2 (
    w_Stopval : CUInt,
    w_Stopsig : CUInt,
    w_Filler : CUInt,
);

