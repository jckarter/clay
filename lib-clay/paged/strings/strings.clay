import paged.*;
import strings;
import strings.cstringrefs.*;



//
// String
//

alias String = Vector[Char];


//
// construct from sequences of bytes
//

[A when Sequence?(A) and ByteSizedInteger?(SequenceElementType(A))]
overload String(a:A) = String(mapped(Char, a));



//
// construct from c-string
//

[T when ByteSizedInteger?(T)]
overload String(cstr : Pointer[T]) = String(CStringRef(cstr));



//
// cstring
//

overload cstring(s:String) {
    reserve(s, size(s) + 1);
    s[size(s)] = Char(0);
    return Pointer[Int8](@(begin(s)^));
}
