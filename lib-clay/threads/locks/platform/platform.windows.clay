import win32.(
    CRITICAL_SECTION,
    InitializeCriticalSection,
    DeleteCriticalSection,
    EnterCriticalSection,
    LeaveCriticalSection,
    TryEnterCriticalSection
);
import threads.locks.protocol.(lock, unlock, tryLock);

record Mutex (_cs:CRITICAL_SECTION);
override RegularRecord?(#Mutex) = false;

override Mutex() --> returned:Mutex
{
    InitializeCriticalSection(@returned._cs);
}

override destroy(m:Mutex) :
{
    DeleteCriticalSection(@m._cs);
}

override lock(m:Mutex) :
{
    EnterCriticalSection(@m._cs);
}

override unlock(m:Mutex) :
{
    LeaveCriticalSection(@m._cs);
}

override tryLock(m:Mutex) : Bool
{
    return TryEnterCriticalSection(@m._cs) != 0;
}
