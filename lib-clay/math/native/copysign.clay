
import numbers.floats.*;
import math.native.protocol.*;

[T,U when Float?(T,U) ]
override copysign(a:T,b:U) = floatFromBits(bitor(floatBitsUnsigned(a),
    bitand(floatBits(b),signMask(T))));

[T when Float?(T) ]
override copysign(a:LongDouble,b:T) {
    var tmp = floatBitsUnsigned(a);
    return floatFromBits(tmp.mantissa,bitor(tmp.exponent,
        wrapBitshl(signbit(b),exponentSize(LongDouble))));
}
