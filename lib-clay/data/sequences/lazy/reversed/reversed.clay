
import data.sequences.util.*;
import data.sequences.force.*;


/// @section  reversed 

forceinline reversed(forward seq) = Reversed(wrapSequence(seq));

private record Reversed[A] (
    seq : A
);

[A when LightweightSequence?(A)]
LightweightSequence?(#Reversed[A]) = true;

[A when CallDefined?(UnderlyingContainerConstructor, Static[A])]
UnderlyingContainerConstructor(#Reversed[A]) =
    UnderlyingContainerConstructor(A);

[A]
forceinline iterator(a:Reversed[A]) = reverseIterator(a.seq);

[A]
forceinline reverseIterator(a:Reversed[A]) = iterator(a.seq);



/// @section  size, index 

[A when CallDefined?(size, A)]
forceinline size(a:Reversed[A]) = size(a.seq);

[A when CallDefined?(StaticSize, Static[A])]
StaticSize(#Reversed[A]) = StaticSize(A);

[A, I when CallDefined?(index, A, I) and CallDefined?(size, A)]
forceinline index(a:Reversed[A], i:I) =
    forward ..index(a.seq, size(a.seq) - i - 1);
