import data.strings.*;
import data.vectors.*;


/// @section  trim, trimBegin, trimEnd 

define trim;
define trimBegin;
define trimEnd;


override trim(seq, pred) = Vector(trimmed(seq, pred));

override trimBegin(seq, pred) = Vector(beginTrimmed(seq, pred));
override trimEnd(seq, pred) = Vector(endTrimmed(seq, pred));


[S when String?(S)]
override trim(seq:S) = trim(seq, asciiSpace?);

[S when String?(S)]
override trimBegin(seq:S) = trimBegin(seq, asciiSpace?);

[S when String?(S)]
override trimEnd(seq:S) = trimEnd(seq, asciiSpace?);



/// @section  trimmed, beginTrimmed, endTrimmed 

define trimmed;
define beginTrimmed;
define endTrimmed;

override trimmed(seq, pred) = beginTrimmed(endTrimmed(seq, pred), pred);

override beginTrimmed(seq, pred) {
    var b, e = begin(seq), end(seq);
    while ((b != e) and pred(b^))
        inc(b);
    return coordinateRange(b, e);
}

override endTrimmed(seq, pred) {
    var b, e = begin(seq), end(seq);
    while ((b != e) and pred((e-1)^))
        dec(e);
    return coordinateRange(b, e);
}


[S when String?(S)]
override trimmed(seq:S) = trimmed(seq, asciiSpace?);

[S when String?(S)]
override beginTrimmed(seq:S) = beginTrimmed(seq, asciiSpace?);

[S when String?(S)]
override endTrimmed(seq:S) = endTrimmed(seq, asciiSpace?);
