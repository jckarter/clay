[n] private define AtomicTypeForSize(#n);
[n when n > 4 and n <= 8]
override AtomicTypeForSize(#n) = UInt64;
[n when n > 2 and n <= 4]
override AtomicTypeForSize(#n) = UInt32;
[n when n == 2]
override AtomicTypeForSize(#n) = UInt16;
[n when n == 1]
override AtomicTypeForSize(#n) = UInt8;

[T when TypeSize(T) <= TypeSize(RawPointer)] define AtomicTypeForType(#T);

[T] /*default*/ override AtomicTypeForType(#T) = AtomicTypeForSize(#TypeSize(T));
[T when Integer?(T)]
override AtomicTypeForType(#T) = T;
