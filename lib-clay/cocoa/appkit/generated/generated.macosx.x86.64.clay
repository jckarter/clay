// Automatically generated by clay-bindgen
// language: objective-c

import cocoa.objc.*;

import libc.*;
import cocoa.corefoundation.*;
import cocoa.applicationservices.*;
import cocoa.foundation.*;
import cocoa.quartzcore.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


override selector("AMSymbol") = NSString;
override selector("CATransform3DValue") = CATransform3D;
override selector("CGColorSpace") = CGColorSpaceRef;
override selector("CGEvent") = CGEventRef;
override selector("CGImage") = CGImageRef;
override selector("CGImageForProposedRect:context:hints:") = CGImageRef, Pointer[NSRect], NSGraphicsContext, NSDictionary;
override selector("CGLContextObj") = RawPointer;
override selector("CGLPBufferObj") = RawPointer;
override selector("CGLPixelFormatObj") = RawPointer;
override selector("CIContext") = CIContext;
override selector("CIImage") = CIImage;
override selector("DTD") = NSXMLDTD;
override selector("DTDKind") = CULong;
override selector("DTDNodeWithXMLString:") = Id, NSString;
override selector("EPSOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
override selector("EPSOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
override selector("EPSOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
override selector("EPSRepresentation") = NSData;
override selector("HTTPBody") = NSData;
override selector("HTTPBodyStream") = NSInputStream;
override selector("HTTPMethod") = NSString;
override selector("HTTPShouldHandleCookies") = Bool;
override selector("IBeamCursor") = NSCursor;
override selector("ICCProfileData") = NSData;
override selector("ISOCountryCodes") = NSArray;
override selector("ISOCurrencyCodes") = NSArray;
override selector("ISOLanguageCodes") = NSArray;
override selector("MIMEType") = NSString;
override selector("PDFOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
override selector("PDFOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
override selector("PDFOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
override selector("PDFRepresentation") = NSData;
override selector("PICTRepresentation") = NSData;
override selector("PMPageFormat") = RawPointer;
override selector("PMPrintSession") = RawPointer;
override selector("PMPrintSettings") = RawPointer;
override selector("PMSymbol") = NSString;
override selector("QTMovie") = QTMovie;
override selector("RTFDFileWrapperFromRange:documentAttributes:") = NSFileWrapper, NSRange, NSDictionary;
override selector("RTFDFromRange:") = NSData, NSRange;
override selector("RTFDFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override selector("RTFFromRange:") = NSData, NSRange;
override selector("RTFFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override selector("TIFFRepresentation") = NSData;
override selector("TIFFRepresentationOfImageRepsInArray:") = NSData, NSArray;
override selector("TIFFRepresentationOfImageRepsInArray:usingCompression:factor:") = NSData, NSArray, CULong, Float;
override selector("TIFFRepresentationUsingCompression:factor:") = NSData, CULong, Float;
override selector("TXTRecordData") = NSData;
override selector("URI") = NSString;
override selector("URL") = NSURL;
override selector("URL:resourceDataDidBecomeAvailable:") = Void, NSURL, NSData;
override selector("URL:resourceDidFailLoadingWithReason:") = Void, NSURL, NSString;
override selector("URLAtIndex:effectiveRange:") = NSURL, CULong, NSRangePointer;
override selector("URLByAppendingPathComponent:") = NSURL, NSString;
override selector("URLByAppendingPathExtension:") = NSURL, NSString;
override selector("URLByDeletingLastPathComponent") = NSURL;
override selector("URLByDeletingPathExtension") = NSURL;
override selector("URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, CULong, NSURL, Pointer[Bool], Pointer[NSError];
override selector("URLByResolvingSymlinksInPath") = NSURL;
override selector("URLByStandardizingPath") = NSURL;
override selector("URLForApplicationToOpenURL:") = NSURL, NSURL;
override selector("URLForApplicationWithBundleIdentifier:") = NSURL, NSString;
override selector("URLForAuxiliaryExecutable:") = NSURL, NSString;
override selector("URLForDirectory:inDomain:appropriateForURL:create:error:") = NSURL, CULong, CULong, NSURL, Bool, Pointer[NSError];
override selector("URLForImageResource:") = NSURL, NSString;
override selector("URLForKey:") = NSURL, NSString;
override selector("URLForResource:withExtension:") = NSURL, NSString, NSString;
override selector("URLForResource:withExtension:subdirectory:") = NSURL, NSString, NSString, NSString;
override selector("URLForResource:withExtension:subdirectory:inBundleWithURL:") = NSURL, NSString, NSString, NSString, NSURL;
override selector("URLForResource:withExtension:subdirectory:localization:") = NSURL, NSString, NSString, NSString, NSString;
override selector("URLFromPasteboard:") = NSURL, NSPasteboard;
override selector("URLHandle:resourceDataDidBecomeAvailable:") = Void, NSURLHandle, NSData;
override selector("URLHandle:resourceDidFailLoadingWithReason:") = Void, NSURLHandle, NSString;
override selector("URLHandleClassForURL:") = Id, NSURL;
override selector("URLHandleResourceDidBeginLoading:") = Void, NSURLHandle;
override selector("URLHandleResourceDidCancelLoading:") = Void, NSURLHandle;
override selector("URLHandleResourceDidFinishLoading:") = Void, NSURLHandle;
override selector("URLHandleUsingCache:") = NSURLHandle, Bool;
override selector("URLProtocol:cachedResponseIsValid:") = Void, NSURLProtocol, NSCachedURLResponse;
override selector("URLProtocol:didCancelAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
override selector("URLProtocol:didFailWithError:") = Void, NSURLProtocol, NSError;
override selector("URLProtocol:didLoadData:") = Void, NSURLProtocol, NSData;
override selector("URLProtocol:didReceiveAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
override selector("URLProtocol:didReceiveResponse:cacheStoragePolicy:") = Void, NSURLProtocol, NSURLResponse, CULong;
override selector("URLProtocol:wasRedirectedToRequest:redirectResponse:") = Void, NSURLProtocol, NSURLRequest, NSURLResponse;
override selector("URLProtocolDidFinishLoading:") = Void, NSURLProtocol;
override selector("URLResourceDidCancelLoading:") = Void, NSURL;
override selector("URLResourceDidFinishLoading:") = Void, NSURL;
override selector("URLWithString:") = Id, NSString;
override selector("URLWithString:relativeToURL:") = Id, NSString, NSURL;
override selector("URLs") = NSArray;
override selector("URLsForDirectory:inDomains:") = NSArray, CULong, CULong;
override selector("URLsForResourcesWithExtension:subdirectory:") = NSArray, NSString, NSString;
override selector("URLsForResourcesWithExtension:subdirectory:inBundleWithURL:") = NSArray, NSString, NSString, NSURL;
override selector("URLsForResourcesWithExtension:subdirectory:localization:") = NSArray, NSString, NSString, NSString;
override selector("URLsFromRunningOpenPanel") = NSArray;
override selector("UTF8String") = Pointer[CChar];
override selector("W") = Double;
override selector("X") = Double;
override selector("XMLData") = NSData;
override selector("XMLDataWithOptions:") = NSData, CULong;
override selector("XMLString") = NSString;
override selector("XMLStringWithOptions:") = NSString, CULong;
override selector("XPath") = NSString;
override selector("Y") = Double;
override selector("Z") = Double;
override selector("abbreviation") = NSString;
override selector("abbreviationDictionary") = NSDictionary;
override selector("abbreviationForDate:") = NSString, NSDate;
override selector("abortEditing") = Bool;
override selector("abortModal") = Void;
override selector("abortParsing") = Void;
override selector("absolutePathForAppBundleWithIdentifier:") = NSString, NSString;
override selector("absoluteString") = NSString;
override selector("absoluteURL") = NSURL;
override selector("absoluteX") = CLong;
override selector("absoluteY") = CLong;
override selector("absoluteZ") = CLong;
override selector("acceptConnectionInBackgroundAndNotify") = Void;
override selector("acceptConnectionInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("acceptInputForMode:beforeDate:") = Void, NSString, NSDate;
override selector("acceptableDragTypes") = NSArray;
override selector("acceptsArrowKeys") = Bool;
override selector("acceptsBinary") = Bool;
override selector("acceptsFirstMouse:") = Bool, NSEvent;
override selector("acceptsFirstResponder") = Bool;
override selector("acceptsGlyphInfo") = Bool;
override selector("acceptsMouseMovedEvents") = Bool;
override selector("acceptsTouchEvents") = Bool;
override selector("accessInstanceVariablesDirectly") = Bool;
override selector("accessibilityActionDescription:") = NSString, NSString;
override selector("accessibilityActionNames") = NSArray;
override selector("accessibilityArrayAttributeCount:") = CULong, NSString;
override selector("accessibilityArrayAttributeValues:index:maxCount:") = NSArray, NSString, CULong, CULong;
override selector("accessibilityAttributeNames") = NSArray;
override selector("accessibilityAttributeValue:") = Id, NSString;
override selector("accessibilityAttributeValue:forParameter:") = Id, NSString, Id;
override selector("accessibilityDescription") = NSString;
override selector("accessibilityFocusedUIElement") = Id;
override selector("accessibilityHitTest:") = Id, NSPoint;
override selector("accessibilityIndexOfChild:") = CULong, Id;
override selector("accessibilityIsAttributeSettable:") = Bool, NSString;
override selector("accessibilityIsIgnored") = Bool;
override selector("accessibilityParameterizedAttributeNames") = NSArray;
override selector("accessibilityPerformAction:") = Void, NSString;
override selector("accessibilitySetOverrideValue:forAttribute:") = Bool, Id, NSString;
override selector("accessibilitySetValue:forAttribute:") = Void, Id, NSString;
override selector("accessoryControllers") = NSArray;
override selector("accessoryView") = NSView;
override selector("acquireFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]],CChar],[RawPointer]];
override selector("action") = SelectorHandle;
override selector("actionForControlCharacterAtIndex:") = CULong, CULong;
override selector("actionForKey:") = Id, NSString;
override selector("actionForLayer:forKey:") = Id, CALayer, NSString;
override selector("actions") = NSDictionary;
override selector("activate") = Void;
override selector("activate:") = Void, Bool;
override selector("activateContextHelpMode:") = Void, Id;
override selector("activateFileViewerSelectingURLs:") = Void, NSArray;
override selector("activateIgnoringOtherApps:") = Void, Bool;
override selector("activateWithOptions:") = Bool, CULong;
override selector("activationPolicy") = CLong;
override selector("activeApplication") = NSDictionary;
override selector("activeConversationChanged:toNewConversation:") = Void, Id, CLong;
override selector("activeConversationWillChange:fromOldConversation:") = Void, Id, CLong;
override selector("activeProcessorCount") = CULong;
override selector("add:") = Void, Id;
override selector("addAccessoryController:") = Void, NSViewController;
override selector("addAnimation:forKey:") = Void, CAAnimation, NSString;
override selector("addAttribute:") = Void, NSXMLNode;
override selector("addAttribute:value:range:") = Void, NSString, Id, NSRange;
override selector("addAttributes:range:") = Void, NSDictionary, NSRange;
override selector("addButtonWithTitle:") = NSButton, NSString;
override selector("addCharactersInRange:") = Void, NSRange;
override selector("addCharactersInString:") = Void, NSString;
override selector("addChild:") = Void, NSXMLNode;
override selector("addChildWindow:ordered:") = Void, NSWindow, CLong;
override selector("addClient:") = Void, Id;
override selector("addClip") = Void;
override selector("addCollection:options:") = Bool, NSString, CLong;
override selector("addColumn") = Void;
override selector("addColumnWithCells:") = Void, NSArray;
override selector("addConnection:toRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
override selector("addCursorRect:cursor:") = Void, NSRect, NSCursor;
override selector("addDependency:") = Void, NSOperation;
override selector("addDocument:") = Void, NSDocument;
override selector("addEntriesFromDictionary:") = Void, NSDictionary;
override selector("addEntry:") = NSFormCell, NSString;
override selector("addExecutionBlock:") = Void, UnknownType;
override selector("addFileWithPath:") = NSString, NSString;
override selector("addFileWrapper:") = NSString, NSFileWrapper;
override selector("addFontDescriptors:toCollection:") = Void, NSArray, NSString;
override selector("addFontTrait:") = Void, Id;
override selector("addGlobalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
override selector("addIndex:") = Void, CULong;
override selector("addIndexes:") = Void, NSIndexSet;
override selector("addIndexesInRange:") = Void, NSRange;
override selector("addItem:") = Void, NSMenuItem;
override selector("addItemWithObjectValue:") = Void, Id;
override selector("addItemWithTitle:") = Void, NSString;
override selector("addItemWithTitle:action:keyEquivalent:") = NSMenuItem, NSString, SelectorHandle, NSString;
override selector("addItemsWithObjectValues:") = Void, NSArray;
override selector("addItemsWithTitles:") = Void, NSArray;
override selector("addLayoutManager:") = Void, NSLayoutManager;
override selector("addLocalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
override selector("addMarker:") = Void, NSRulerMarker;
override selector("addNamespace:") = Void, NSXMLNode;
override selector("addObject:") = Void, Id;
override selector("addObjects:") = Void, NSArray;
override selector("addObjectsFromArray:") = Void, NSArray;
override selector("addObserver:forKeyPath:options:context:") = Void, NSObject, NSString, CULong, RawPointer;
override selector("addObserver:selector:name:object:") = Void, Id, SelectorHandle, NSString, Id;
override selector("addObserver:selector:name:object:suspensionBehavior:") = Void, Id, SelectorHandle, NSString, NSString, CULong;
override selector("addObserver:toObjectsAtIndexes:forKeyPath:options:context:") = Void, NSObject, NSIndexSet, NSString, CULong, RawPointer;
override selector("addObserverForName:object:queue:usingBlock:") = Id, NSString, Id, NSOperationQueue, UnknownType;
override selector("addOperation:") = Void, NSOperation;
override selector("addOperationWithBlock:") = Void, UnknownType;
override selector("addOperations:waitUntilFinished:") = Void, NSArray, Bool;
override selector("addPointer:") = Void, RawPointer;
override selector("addPort:forMode:") = Void, NSPort, NSString;
override selector("addProgressMark:") = Void, Float;
override selector("addRegularFileWithContents:preferredFilename:") = NSString, NSData, NSString;
override selector("addRepresentation:") = Void, NSImageRep;
override selector("addRepresentations:") = Void, NSArray;
override selector("addRequestMode:") = Void, NSString;
override selector("addRow") = Void;
override selector("addRow:") = Void, Id;
override selector("addRowWithCells:") = Void, NSArray;
override selector("addRunLoop:") = Void, NSRunLoop;
override selector("addSelectedObjects:") = Bool, NSArray;
override selector("addSelectionIndexPaths:") = Bool, NSArray;
override selector("addSelectionIndexes:") = Bool, NSIndexSet;
override selector("addSpeechDictionary:") = Void, NSDictionary;
override selector("addSublayer:") = Void, CALayer;
override selector("addSubview:") = Void, NSView;
override selector("addSubview:positioned:relativeTo:") = Void, NSView, CLong, NSView;
override selector("addSuiteNamed:") = Void, NSString;
override selector("addSymbolicLinkWithDestination:preferredFilename:") = NSString, NSString, NSString;
override selector("addTabStop:") = Void, NSTextTab;
override selector("addTabViewItem:") = Void, NSTabViewItem;
override selector("addTableColumn:") = Void, NSTableColumn;
override selector("addTemporaryAttribute:value:forCharacterRange:") = Void, NSString, Id, NSRange;
override selector("addTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
override selector("addTextContainer:") = Void, NSTextContainer;
override selector("addTimeInterval:") = Id, Double;
override selector("addTimer:forMode:") = Void, NSTimer, NSString;
override selector("addToolTipRect:owner:userData:") = CLong, NSRect, Id, RawPointer;
override selector("addTrackingArea:") = Void, NSTrackingArea;
override selector("addTrackingRect:owner:userData:assumeInside:") = CLong, NSRect, Id, RawPointer, Bool;
override selector("addTypes:owner:") = CLong, NSArray, Id;
override selector("addValue:forHTTPHeaderField:") = Void, NSString, NSString;
override selector("addWindowController:") = Void, NSWindowController;
override selector("addWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
override selector("address") = Id;
override selector("addressCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
override selector("addressComponents") = NSDictionary;
override selector("addresses") = NSArray;
override selector("adjustPageHeightNew:top:bottom:limit:") = Void, Pointer[Double], Double, Double, Double;
override selector("adjustPageWidthNew:left:right:limit:") = Void, Pointer[Double], Double, Double, Double;
override selector("adjustScroll:") = NSRect, NSRect;
override selector("adjustSubviews") = Void;
override selector("adobeRGB1998ColorSpace") = NSColorSpace;
override selector("advancementForGlyph:") = NSSize, UInt;
override selector("aeDesc") = Pointer[AEDesc];
override selector("aeteResource:") = NSData, NSString;
override selector("affineTransform") = CGAffineTransform;
override selector("alertShowHelp:") = Bool, NSAlert;
override selector("alertStyle") = CULong;
override selector("alertWithError:") = NSAlert, NSError;
override varargSelector("alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:") = NSAlert, NSString, NSString, NSString, NSString, NSString;
override selector("alignCenter:") = Void, Id;
override selector("alignJustified:") = Void, Id;
override selector("alignLeft:") = Void, Id;
override selector("alignRight:") = Void, Id;
override selector("alignment") = CULong;
override selector("alignmentRect") = NSRect;
override selector("allBundles") = NSArray;
override selector("allConnections") = NSArray;
override selector("allCredentials") = NSDictionary;
override selector("allFrameworks") = NSArray;
override selector("allHTTPHeaderFields") = NSDictionary;
override selector("allHeaderFields") = NSDictionary;
override selector("allKeys") = NSArray;
override selector("allKeysForObject:") = NSArray, Id;
override selector("allLanguages") = NSArray;
override selector("allObjects") = NSArray;
override selector("allScripts") = NSArray;
override selector("allValues") = NSArray;
override selector("alloc") = Id;
override selector("allocWithZone:") = Id, Pointer[NSZone];
override selector("allocateGState") = Void;
override selector("allowedFileTypes") = NSArray;
override selector("allowedInputSourceLocales") = NSArray;
override selector("allowedTypes") = NSArray;
override selector("allowsBranchSelection") = Bool;
override selector("allowsColumnReordering") = Bool;
override selector("allowsColumnResizing") = Bool;
override selector("allowsColumnSelection") = Bool;
override selector("allowsConcurrentViewDrawing") = Bool;
override selector("allowsContextMenuPlugIns") = Bool;
override selector("allowsCutCopyPaste") = Bool;
override selector("allowsDocumentBackgroundColorChange") = Bool;
override selector("allowsDuplicatesInToolbar") = Bool;
override selector("allowsEditingTextAttributes") = Bool;
override selector("allowsEmptySelection") = Bool;
override selector("allowsFloats") = Bool;
override selector("allowsImageEditing") = Bool;
override selector("allowsKeyedCoding") = Bool;
override selector("allowsMixedState") = Bool;
override selector("allowsMultipleSelection") = Bool;
override selector("allowsNaturalLanguage") = Bool;
override selector("allowsNonContiguousLayout") = Bool;
override selector("allowsOtherFileTypes") = Bool;
override selector("allowsReverseTransformation") = Bool;
override selector("allowsTickMarkValuesOnly") = Bool;
override selector("allowsToolTipsWhenApplicationIsInactive") = Bool;
override selector("allowsTruncatedLabels") = Bool;
override selector("allowsTypeSelect") = Bool;
override selector("allowsUndo") = Bool;
override selector("allowsUserCustomization") = Bool;
override selector("alpha") = Double;
override selector("alphaComponent") = Double;
override selector("alphaControlAddedOrRemoved:") = Void, Id;
override selector("alphaValue") = Double;
override selector("alphanumericCharacterSet") = Id;
override selector("altIncrementValue") = Double;
override selector("alternateImage") = NSImage;
override selector("alternateMnemonic") = NSString;
override selector("alternateMnemonicLocation") = CULong;
override selector("alternateSelectedControlColor") = NSColor;
override selector("alternateSelectedControlTextColor") = NSColor;
override selector("alternateTitle") = NSString;
override selector("altersStateOfSelectedItem") = Bool;
override selector("alwaysShowsDecimalSeparator") = Bool;
override selector("alwaysUsesMultipleValuesMarker") = Bool;
override selector("ancestorSharedWithView:") = NSView, NSView;
override selector("anchorPoint") = CGPoint;
override selector("anchorPointZ") = Double;
override selector("andPredicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("animate:") = Void, Id;
override selector("animates") = Bool;
override selector("animation:didReachProgressMark:") = Void, NSAnimation, Float;
override selector("animation:valueForProgress:") = Float, NSAnimation, Float;
override selector("animationBlockingMode") = CULong;
override selector("animationCurve") = CULong;
override selector("animationDelay") = Double;
override selector("animationDidEnd:") = Void, NSAnimation;
override selector("animationDidStop:") = Void, NSAnimation;
override selector("animationForKey:") = Id, NSString;
override selector("animationKeys") = NSArray;
override selector("animationResizeTime:") = Double, NSRect;
override selector("animationShouldStart:") = Bool, NSAnimation;
override selector("animations") = NSDictionary;
override selector("animator") = Id;
override selector("anyObject") = Id;
override selector("appendAttributedString:") = Void, NSAttributedString;
override selector("appendBezierPath:") = Void, NSBezierPath;
override selector("appendBezierPathWithArcFromPoint:toPoint:radius:") = Void, NSPoint, NSPoint, Double;
override selector("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:") = Void, NSPoint, Double, Double, Double;
override selector("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:") = Void, NSPoint, Double, Double, Double, Bool;
override selector("appendBezierPathWithGlyph:inFont:") = Void, UInt, NSFont;
override selector("appendBezierPathWithGlyphs:count:inFont:") = Void, Pointer[UInt], CLong, NSFont;
override selector("appendBezierPathWithOvalInRect:") = Void, NSRect;
override selector("appendBezierPathWithPackedGlyphs:") = Void, Pointer[CChar];
override selector("appendBezierPathWithPoints:count:") = Void, NSPointArray, CLong;
override selector("appendBezierPathWithRect:") = Void, NSRect;
override selector("appendBezierPathWithRoundedRect:xRadius:yRadius:") = Void, NSRect, Double, Double;
override selector("appendBytes:length:") = Void, RawPointer, CULong;
override selector("appendData:") = Void, NSData;
override varargSelector("appendFormat:") = Void, NSString;
override selector("appendString:") = Void, NSString;
override selector("appendTransform:") = Void, NSAffineTransform;
override selector("appleEvent") = NSAppleEventDescriptor;
override selector("appleEventClassCode") = UInt;
override selector("appleEventCode") = UInt;
override selector("appleEventCodeForArgumentWithName:") = UInt, NSString;
override selector("appleEventCodeForKey:") = UInt, NSString;
override selector("appleEventCodeForReturnType") = UInt;
override selector("appleEventCodeForSuite:") = UInt, NSString;
override selector("appleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
override selector("appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = NSAppleEventDescriptor, UInt, UInt, NSAppleEventDescriptor, Short, Int;
override selector("application:delegateHandlesKey:") = Bool, NSApplication, NSString;
override selector("application:openFile:") = Bool, NSApplication, NSString;
override selector("application:openFileWithoutUI:") = Bool, Id, NSString;
override selector("application:openFiles:") = Void, NSApplication, NSArray;
override selector("application:openTempFile:") = Bool, NSApplication, NSString;
override selector("application:printFile:") = Bool, NSApplication, NSString;
override selector("application:printFiles:") = Void, NSApplication, NSArray;
override selector("application:printFiles:withSettings:showPrintPanels:") = CULong, NSApplication, NSArray, NSDictionary, Bool;
override selector("application:willPresentError:") = NSError, NSApplication, NSError;
override selector("applicationDidBecomeActive:") = Void, NSNotification;
override selector("applicationDidChangeScreenParameters:") = Void, NSNotification;
override selector("applicationDidFinishLaunching:") = Void, NSNotification;
override selector("applicationDidHide:") = Void, NSNotification;
override selector("applicationDidResignActive:") = Void, NSNotification;
override selector("applicationDidUnhide:") = Void, NSNotification;
override selector("applicationDidUpdate:") = Void, NSNotification;
override selector("applicationDockMenu:") = NSMenu, NSApplication;
override selector("applicationIconImage") = NSImage;
override selector("applicationOpenUntitledFile:") = Bool, NSApplication;
override selector("applicationShouldHandleReopen:hasVisibleWindows:") = Bool, NSApplication, Bool;
override selector("applicationShouldOpenUntitledFile:") = Bool, NSApplication;
override selector("applicationShouldTerminate:") = CULong, NSApplication;
override selector("applicationShouldTerminateAfterLastWindowClosed:") = Bool, NSApplication;
override selector("applicationWillBecomeActive:") = Void, NSNotification;
override selector("applicationWillFinishLaunching:") = Void, NSNotification;
override selector("applicationWillHide:") = Void, NSNotification;
override selector("applicationWillResignActive:") = Void, NSNotification;
override selector("applicationWillTerminate:") = Void, NSNotification;
override selector("applicationWillUnhide:") = Void, NSNotification;
override selector("applicationWillUpdate:") = Void, NSNotification;
override selector("appliesImmediately") = Bool;
override selector("applyFontTraits:range:") = Void, CULong, NSRange;
override selector("archiveRootObject:toFile:") = Bool, Id, NSString;
override selector("archivedDataWithRootObject:") = NSData, Id;
override selector("archiver:didEncodeObject:") = Void, NSKeyedArchiver, Id;
override selector("archiver:willEncodeObject:") = Id, NSKeyedArchiver, Id;
override selector("archiver:willReplaceObject:withObject:") = Void, NSKeyedArchiver, Id, Id;
override selector("archiverData") = NSMutableData;
override selector("archiverDidFinish:") = Void, NSKeyedArchiver;
override selector("archiverWillFinish:") = Void, NSKeyedArchiver;
override selector("areCursorRectsEnabled") = Bool;
override selector("argumentNames") = NSArray;
override selector("arguments") = Id;
override selector("argumentsRetained") = Bool;
override selector("arrangeInFront:") = Void, Id;
override selector("arrangeObjects:") = NSArray, NSArray;
override selector("arrangedObjects") = Id;
override selector("array") = Id;
override selector("arrayByAddingObject:") = NSArray, Id;
override selector("arrayByAddingObjectsFromArray:") = NSArray, NSArray;
override selector("arrayForKey:") = NSArray, NSString;
override selector("arrayWithArray:") = Id, NSArray;
override selector("arrayWithCapacity:") = Id, CULong;
override selector("arrayWithContentsOfFile:") = Id, NSString;
override selector("arrayWithContentsOfURL:") = Id, NSURL;
override selector("arrayWithObject:") = Id, Id;
override varargSelector("arrayWithObjects:") = Id, Id;
override selector("arrayWithObjects:count:") = Id, Pointer[Id], CULong;
override selector("arrowCursor") = NSCursor;
override selector("arrowPosition") = CULong;
override selector("arrowsPosition") = CULong;
override selector("ascender") = Double;
override selector("ascending") = Bool;
override selector("aspectRatio") = NSSize;
override selector("attachColorList:") = Void, NSColorList;
override selector("attachPopUpWithFrame:inView:") = Void, NSRect, NSView;
override selector("attachedMenu") = NSMenu;
override selector("attachedSheet") = NSWindow;
override selector("attachment") = NSTextAttachment;
override selector("attachmentCell") = Id;
override selector("attachmentSizeForGlyphAtIndex:") = NSSize, CULong;
override selector("attemptRecoveryFromError:optionIndex:") = Bool, NSError, CULong;
override selector("attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:") = Void, NSError, CULong, Id, SelectorHandle, RawPointer;
override selector("attribute") = NSString;
override selector("attribute:atIndex:effectiveRange:") = Id, NSString, CULong, NSRangePointer;
override selector("attribute:atIndex:longestEffectiveRange:inRange:") = Id, NSString, CULong, NSRangePointer, NSRange;
override selector("attributeDeclarationForName:elementName:") = NSXMLDTDNode, NSString, NSString;
override selector("attributeDescriptorForKeyword:") = NSAppleEventDescriptor, UInt;
override selector("attributeForLocalName:URI:") = NSXMLNode, NSString, NSString;
override selector("attributeForName:") = NSXMLNode, NSString;
override selector("attributeKeys") = NSArray;
override selector("attributeRuns") = NSArray;
override selector("attributeType") = CULong;
override selector("attributeValueClassName") = NSString;
override selector("attributeWithName:URI:stringValue:") = Id, NSString, NSString, NSString;
override selector("attributeWithName:stringValue:") = Id, NSString, NSString;
override selector("attributedAlternateTitle") = NSAttributedString;
override selector("attributedString") = NSAttributedString;
override selector("attributedStringForNil") = NSAttributedString;
override selector("attributedStringForNotANumber") = NSAttributedString;
override selector("attributedStringForObjectValue:withDefaultAttributes:") = NSAttributedString, Id, NSDictionary;
override selector("attributedStringForZero") = NSAttributedString;
override selector("attributedStringValue") = NSAttributedString;
override selector("attributedStringWithAttachment:") = NSAttributedString, NSTextAttachment;
override selector("attributedSubstringForProposedRange:actualRange:") = NSAttributedString, NSRange, NSRangePointer;
override selector("attributedSubstringFromRange:") = NSAttributedString, NSRange;
override selector("attributedTitle") = NSAttributedString;
override selector("attributes") = Id;
override selector("attributesAtIndex:effectiveRange:") = NSDictionary, CULong, NSRangePointer;
override selector("attributesAtIndex:longestEffectiveRange:inRange:") = NSDictionary, CULong, NSRangePointer, NSRange;
override selector("attributesForExtraLineFragment") = NSDictionary;
override selector("attributesForVoice:") = NSDictionary, NSString;
override selector("attributesOfFileSystemForPath:error:") = NSDictionary, NSString, Pointer[NSError];
override selector("attributesOfItemAtPath:error:") = NSDictionary, NSString, Pointer[NSError];
override selector("authenticateComponents:withData:") = Bool, NSArray, NSData;
override selector("authenticationDataForComponents:") = NSData, NSArray;
override selector("authenticationMethod") = NSString;
override selector("autoContentAccessingProxy") = Id;
override selector("autoenablesItems") = Bool;
override selector("autohidesScroller") = Bool;
override selector("autohidesScrollers") = Bool;
override selector("automaticRearrangementKeyPaths") = NSArray;
override selector("automaticallyIdentifiesLanguages") = Bool;
override selector("automaticallyNotifiesObserversForKey:") = Bool, NSString;
override selector("automaticallyPreparesContent") = Bool;
override selector("automaticallyRearrangesObjects") = Bool;
override selector("autorecalculatesContentBorderThicknessForEdge:") = Bool, CULong;
override selector("autorecalculatesKeyViewLoop") = Bool;
override selector("autorelease") = Id;
override selector("autorepeat") = Bool;
override selector("autoresizesAllColumnsToFit") = Bool;
override selector("autoresizesOutlineColumn") = Bool;
override selector("autoresizesSubviews") = Bool;
override selector("autoresizingMask") = CULong;
override selector("autoreverses") = Bool;
override selector("autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("autosaveExpandedItems") = Bool;
override selector("autosaveName") = NSString;
override selector("autosaveTableColumns") = Bool;
override selector("autosavedContentsFileURL") = NSURL;
override selector("autosavesConfiguration") = Bool;
override selector("autosavingDelay") = Double;
override selector("autosavingFileType") = NSString;
override selector("autoscroll:") = Bool, NSEvent;
override selector("autosizesCells") = Bool;
override selector("autoupdatingCurrentCalendar") = Id;
override selector("autoupdatingCurrentLocale") = Id;
override selector("autovalidates") = Bool;
override selector("availableColorLists") = NSArray;
override selector("availableColorSpacesWithModel:") = NSArray, CLong;
override selector("availableData") = NSData;
override selector("availableFontFamilies") = NSArray;
override selector("availableFontNamesMatchingFontDescriptor:") = NSArray, NSFontDescriptor;
override selector("availableFontNamesWithTraits:") = NSArray, CULong;
override selector("availableFonts") = NSArray;
override selector("availableLanguages") = NSArray;
override selector("availableLocaleIdentifiers") = NSArray;
override selector("availableMembersOfFontFamily:") = NSArray, NSString;
override selector("availableResourceData") = NSData;
override selector("availableStringEncodings") = Pointer[CULong];
override selector("availableTypeFromArray:") = NSString, NSArray;
override selector("availableVoices") = NSArray;
override selector("avoidsEmptySelection") = Bool;
override selector("awakeAfterUsingCoder:") = Id, NSCoder;
override selector("awakeFromNib") = Void;
override selector("backgroundColor") = NSColor;
override selector("backgroundColors") = NSArray;
override selector("backgroundFilters") = NSArray;
override selector("backgroundLayoutEnabled") = Bool;
override selector("backgroundLoadDidFailWithReason:") = Void, NSString;
override selector("backgroundStyle") = CLong;
override selector("backingLocation") = CULong;
override selector("backingType") = CULong;
override selector("badgeLabel") = NSString;
override selector("baseSpecifier") = NSScriptObjectSpecifier;
override selector("baseURL") = NSURL;
override selector("baseWritingDirection") = CLong;
override selector("baselineDeltaForCharacterAtIndex:") = Double, CULong;
override selector("baselineLocation") = Double;
override selector("baselineOffsetInLayoutManager:glyphIndex:") = Double, NSLayoutManager, CULong;
override selector("becomeFirstResponder") = Bool;
override selector("becomeKeyWindow") = Void;
override selector("becomeMainWindow") = Void;
override selector("becomesKeyOnlyIfNeeded") = Bool;
override selector("beginContentAccess") = Bool;
override selector("beginDocument") = Void;
override selector("beginEditing") = Void;
override selector("beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, Id, SelectorHandle, RawPointer;
override selector("beginGestureWithEvent:") = Void, NSEvent;
override selector("beginGrouping") = Void;
override selector("beginLineWithGlyphAtIndex:") = Void, CULong;
override selector("beginLoadInBackground") = Void;
override selector("beginModalSessionForWindow:") = NSModalSession, NSWindow;
override selector("beginModalSessionForWindow:relativeToWindow:") = NSModalSession, NSWindow, NSWindow;
override selector("beginPageInRect:atPlacement:") = Void, NSRect, NSPoint;
override selector("beginParagraph") = Void;
override selector("beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetModalForWindow:completionHandler:") = Void, NSWindow, UnknownType;
override selector("beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:") = Void, NSPrintInfo, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginTime") = Double;
override selector("beginUndoGrouping") = Void;
override selector("beginWithCompletionHandler:") = Void, UnknownType;
override selector("bestRepresentationForDevice:") = NSImageRep, NSDictionary;
override selector("bestRepresentationForRect:context:hints:") = NSImageRep, NSRect, NSGraphicsContext, NSDictionary;
override selector("bezelStyle") = CULong;
override selector("bezierPath") = NSBezierPath;
override selector("bezierPathByFlatteningPath") = NSBezierPath;
override selector("bezierPathByReversingPath") = NSBezierPath;
override selector("bezierPathWithOvalInRect:") = NSBezierPath, NSRect;
override selector("bezierPathWithRect:") = NSBezierPath, NSRect;
override selector("bezierPathWithRoundedRect:xRadius:yRadius:") = NSBezierPath, NSRect, Double, Double;
override selector("bidiProcessingEnabled") = Bool;
override selector("bind:toObject:withKeyPath:options:") = Void, NSString, Id, NSString, NSDictionary;
override selector("bitmapData") = Pointer[CUChar];
override selector("bitmapFormat") = CULong;
override selector("bitmapImageRepByConvertingToColorSpace:renderingIntent:") = NSBitmapImageRep, NSColorSpace, CLong;
override selector("bitmapImageRepByRetaggingWithColorSpace:") = NSBitmapImageRep, NSColorSpace;
override selector("bitmapImageRepForCachingDisplayInRect:") = NSBitmapImageRep, NSRect;
override selector("bitmapRepresentation") = NSData;
override selector("bitsPerPixel") = CLong;
override selector("bitsPerSample") = CLong;
override selector("blackColor") = NSColor;
override selector("blackComponent") = Double;
override selector("blendedColorWithFraction:ofColor:") = NSColor, Double, NSColor;
override selector("blockOperationWithBlock:") = Id, UnknownType;
override selector("blocksOtherRecognizers") = Bool;
override selector("blue") = Double;
override selector("blueColor") = NSColor;
override selector("blueComponent") = Double;
override selector("boldSystemFontOfSize:") = NSFont, Double;
override selector("bookmarkDataWithContentsOfURL:error:") = NSData, NSURL, Pointer[NSError];
override selector("bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:") = NSData, CULong, NSArray, NSURL, Pointer[NSError];
override selector("boolForKey:") = Bool, NSString;
override selector("boolValue") = Bool;
override selector("booleanForKey:inTable:") = Bool, NSString, NSString;
override selector("booleanValue") = CUChar;
override selector("borderColor") = NSColor;
override selector("borderColorForEdge:") = NSColor, CULong;
override selector("borderRect") = NSRect;
override selector("borderType") = CULong;
override selector("borderWidth") = Double;
override selector("bottomMargin") = Double;
override selector("boundingBox") = NSRect;
override selector("boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, CULong, NSTextContainer, NSRect, NSPoint, CULong;
override selector("boundingRectForFont") = NSRect;
override selector("boundingRectForGlyph:") = NSRect, UInt;
override selector("boundingRectForGlyphRange:inTextContainer:") = NSRect, NSRange, NSTextContainer;
override selector("boundingRectWithSize:options:") = NSRect, NSSize, CLong;
override selector("boundingRectWithSize:options:attributes:") = NSRect, NSSize, CLong, NSDictionary;
override selector("bounds") = NSRect;
override selector("boundsRectForBlock:contentRect:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSRect, NSRect, NSTextContainer, NSRange;
override selector("boundsRectForContentRect:inRect:textContainer:characterRange:") = NSRect, NSRect, NSRect, NSTextContainer, NSRange;
override selector("boundsRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
override selector("boundsRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
override selector("boundsRotation") = Double;
override selector("boxType") = CULong;
override selector("branchImage") = NSImage;
override selector("breakLock") = Void;
override selector("breakUndoCoalescing") = Void;
override selector("brightnessComponent") = Double;
override selector("broadcast") = Void;
override selector("brownColor") = NSColor;
override selector("browser:acceptDrop:atRow:column:dropOperation:") = Bool, NSBrowser, Id, CLong, CLong, CULong;
override selector("browser:canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSBrowser, NSIndexSet, CLong, NSEvent;
override selector("browser:child:ofItem:") = Id, NSBrowser, CLong, Id;
override selector("browser:createRowsForColumn:inMatrix:") = Void, NSBrowser, CLong, NSMatrix;
override selector("browser:didChangeLastColumn:toColumn:") = Void, NSBrowser, CLong, CLong;
override selector("browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSBrowser, NSIndexSet, CLong, NSEvent, NSPointPointer;
override selector("browser:headerViewControllerForItem:") = NSViewController, NSBrowser, Id;
override selector("browser:heightOfRow:inColumn:") = Double, NSBrowser, CLong, CLong;
override selector("browser:isColumnValid:") = Bool, NSBrowser, CLong;
override selector("browser:isLeafItem:") = Bool, NSBrowser, Id;
override selector("browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:") = NSArray, NSBrowser, NSURL, NSIndexSet, CLong;
override selector("browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:") = CLong, NSBrowser, CLong, CLong, CLong, NSString;
override selector("browser:numberOfChildrenOfItem:") = CLong, NSBrowser, Id;
override selector("browser:numberOfRowsInColumn:") = CLong, NSBrowser, CLong;
override selector("browser:objectValueForItem:") = Id, NSBrowser, Id;
override selector("browser:previewViewControllerForLeafItem:") = NSViewController, NSBrowser, Id;
override selector("browser:selectCellWithString:inColumn:") = Bool, NSBrowser, NSString, CLong;
override selector("browser:selectRow:inColumn:") = Bool, NSBrowser, CLong, CLong;
override selector("browser:selectionIndexesForProposedSelection:inColumn:") = NSIndexSet, NSBrowser, NSIndexSet, CLong;
override selector("browser:setObjectValue:forItem:") = Void, NSBrowser, Id, Id;
override selector("browser:shouldEditItem:") = Bool, NSBrowser, Id;
override selector("browser:shouldShowCellExpansionForRow:column:") = Bool, NSBrowser, CLong, CLong;
override selector("browser:shouldSizeColumn:forUserResize:toWidth:") = Double, NSBrowser, CLong, Bool, Double;
override selector("browser:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSBrowser, NSEvent, NSString;
override selector("browser:sizeToFitWidthOfColumn:") = Double, NSBrowser, CLong;
override selector("browser:titleOfColumn:") = NSString, NSBrowser, CLong;
override selector("browser:typeSelectStringForRow:inColumn:") = NSString, NSBrowser, CLong, CLong;
override selector("browser:validateDrop:proposedRow:column:dropOperation:") = CULong, NSBrowser, Id, Pointer[CLong], Pointer[CLong], Pointer[CULong];
override selector("browser:willDisplayCell:atRow:column:") = Void, NSBrowser, Id, CLong, CLong;
override selector("browser:writeRowsWithIndexes:inColumn:toPasteboard:") = Bool, NSBrowser, NSIndexSet, CLong, NSPasteboard;
override selector("browserColumnConfigurationDidChange:") = Void, NSNotification;
override selector("browserDidScroll:") = Void, NSBrowser;
override selector("browserWillScroll:") = Void, NSBrowser;
override selector("builtInPlugInsPath") = NSString;
override selector("builtInPlugInsURL") = NSURL;
override selector("bundleForClass:") = NSBundle, Id;
override selector("bundleForSuite:") = NSBundle, NSString;
override selector("bundleIdentifier") = NSString;
override selector("bundlePath") = NSString;
override selector("bundleURL") = NSURL;
override selector("bundleWithIdentifier:") = NSBundle, NSString;
override selector("bundleWithPath:") = NSBundle, NSString;
override selector("bundleWithURL:") = NSBundle, NSURL;
override selector("buttonMask") = CULong;
override selector("buttonNumber") = CLong;
override selector("buttonToolTip") = NSString;
override selector("buttons") = NSArray;
override selector("bytes") = RawPointer;
override selector("bytesPerPlane") = CLong;
override selector("bytesPerRow") = CLong;
override selector("cString") = Pointer[CChar];
override selector("cStringLength") = CULong;
override selector("cStringUsingEncoding:") = Pointer[CChar], CULong;
override selector("cache:willEvictObject:") = Void, NSCache, Id;
override selector("cacheDepthMatchesImageDepth") = Bool;
override selector("cacheDisplayInRect:toBitmapImageRep:") = Void, NSRect, NSBitmapImageRep;
override selector("cacheImageInRect:") = Void, NSRect;
override selector("cacheMode") = CULong;
override selector("cachePolicy") = CULong;
override selector("cachedHandleForURL:") = NSURLHandle, NSURL;
override selector("cachedResponse") = NSCachedURLResponse;
override selector("cachedResponseForRequest:") = NSCachedURLResponse, NSURLRequest;
override selector("cachesBezierPath") = Bool;
override selector("calcDrawInfo:") = Void, NSRect;
override selector("calcSize") = Void;
override selector("calendar") = NSCalendar;
override selector("calendarDate") = Id;
override selector("calendarFormat") = NSString;
override selector("calendarIdentifier") = NSString;
override selector("callStackReturnAddresses") = NSArray;
override selector("callStackSymbols") = NSArray;
override selector("canAdd") = Bool;
override selector("canAddChild") = Bool;
override selector("canBeCompressedUsing:") = Bool, CULong;
override selector("canBeConvertedToEncoding:") = Bool, CULong;
override selector("canBeDisabled") = Bool;
override selector("canBeVisibleOnAllSpaces") = Bool;
override selector("canBecomeKeyView") = Bool;
override selector("canBecomeKeyWindow") = Bool;
override selector("canBecomeMainWindow") = Bool;
override selector("canBecomeVisibleWithoutLogin") = Bool;
override selector("canChooseDirectories") = Bool;
override selector("canChooseFiles") = Bool;
override selector("canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("canConcurrentlyReadDocumentsOfType:") = Bool, NSString;
override selector("canCreateDirectories") = Bool;
override selector("canDragRowsWithIndexes:atPoint:") = Bool, NSIndexSet, NSPoint;
override selector("canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSIndexSet, CLong, NSEvent;
override selector("canDraw") = Bool;
override selector("canDrawConcurrently") = Bool;
override selector("canDrawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
override selector("canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
override selector("canHandleRequest:") = Bool, NSURLRequest;
override selector("canHide") = Bool;
override selector("canInitWithData:") = Bool, NSData;
override selector("canInitWithPasteboard:") = Bool, NSPasteboard;
override selector("canInitWithRequest:") = Bool, NSURLRequest;
override selector("canInitWithURL:") = Bool, NSURL;
override selector("canInsert") = Bool;
override selector("canInsertChild") = Bool;
override selector("canReadItemWithDataConformingToTypes:") = Bool, NSArray;
override selector("canReadObjectForClasses:options:") = Bool, NSArray, NSDictionary;
override selector("canRedo") = Bool;
override selector("canRemove") = Bool;
override selector("canRemoveAllRows") = Bool;
override selector("canResumeDownloadDecodedWithEncodingMIMEType:") = Bool, NSString;
override selector("canSelectHiddenExtension") = Bool;
override selector("canSelectNext") = Bool;
override selector("canSelectPrevious") = Bool;
override selector("canSpawnSeparateThread") = Bool;
override selector("canStoreColor") = Bool;
override selector("canUndo") = Bool;
override selector("cancel") = Void;
override selector("cancel:") = Void, Id;
override selector("cancelAllOperations") = Void;
override selector("cancelAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
override selector("cancelButtonCell") = NSButtonCell;
override selector("cancelButtonRectForBounds:") = NSRect, NSRect;
override selector("cancelIncrementalLoad") = Void;
override selector("cancelLoadInBackground") = Void;
override selector("cancelOperation:") = Void, Id;
override selector("cancelPerformSelector:target:argument:") = Void, SelectorHandle, Id, Id;
override selector("cancelPerformSelectorsWithTarget:") = Void, Id;
override selector("cancelPreviousPerformRequestsWithTarget:") = Void, Id;
override selector("cancelPreviousPerformRequestsWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
override selector("cancelTracking") = Void;
override selector("cancelTrackingWithoutAnimation") = Void;
override selector("cancelUserAttentionRequest:") = Void, CLong;
override selector("canonicalLanguageIdentifierFromString:") = NSString, NSString;
override selector("canonicalLocaleIdentifierFromString:") = NSString, NSString;
override selector("canonicalRequestForRequest:") = NSURLRequest, NSURLRequest;
override selector("canonicalXMLStringPreservingComments:") = NSString, Bool;
override selector("capHeight") = Double;
override selector("capabilityMask") = CULong;
override selector("capitalizeWord:") = Void, Id;
override selector("capitalizedLetterCharacterSet") = Id;
override selector("capitalizedString") = NSString;
override selector("cascadeTopLeftFromPoint:") = NSPoint, NSPoint;
override selector("caseInsensitiveCompare:") = CLong, NSString;
override selector("caseSensitive") = Bool;
override selector("catalogNameComponent") = NSString;
override selector("cell") = Id;
override selector("cellAtIndex:") = Id, CLong;
override selector("cellAtRow:column:") = Id, CLong, CLong;
override selector("cellAttribute:") = CLong, CULong;
override selector("cellBackgroundColor") = NSColor;
override selector("cellBaselineOffset") = NSPoint;
override selector("cellClass") = Id;
override selector("cellFrameAtRow:column:") = NSRect, CLong, CLong;
override selector("cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, NSTextContainer, NSRect, NSPoint, CULong;
override selector("cellPrototype") = Id;
override selector("cellSize") = NSSize;
override selector("cellSizeForBounds:") = NSSize, NSRect;
override selector("cellWithTag:") = Id, CLong;
override selector("cells") = NSArray;
override selector("center") = Void;
override selector("centerScanRect:") = NSRect, NSRect;
override selector("centerSelectionInVisibleArea:") = Void, Id;
override selector("certificates") = NSArray;
override selector("changeAttributes:") = Void, Id;
override selector("changeCaseOfLetter:") = Void, Id;
override selector("changeColor:") = Void, Id;
override selector("changeCount") = CLong;
override selector("changeCurrentDirectoryPath:") = Bool, NSString;
override selector("changeDocumentBackgroundColor:") = Void, Id;
override selector("changeFileAttributes:atPath:") = Bool, NSDictionary, NSString;
override selector("changeFont:") = Void, Id;
override selector("changeInLength") = CLong;
override selector("changeSpelling:") = Void, Id;
override selector("changeWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
override selector("channelMapping") = NSArray;
override selector("charValue") = CChar;
override selector("characterAtIndex:") = UShort, CULong;
override selector("characterCollection") = CULong;
override selector("characterDirectionForLanguage:") = CULong, NSString;
override selector("characterEncoding") = NSString;
override selector("characterIdentifier") = CULong;
override selector("characterIndexForGlyphAtIndex:") = CULong, CULong;
override selector("characterIndexForInsertionAtPoint:") = CULong, NSPoint;
override selector("characterIndexForPoint:") = CULong, NSPoint;
override selector("characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
override selector("characterIsMember:") = Bool, UShort;
override selector("characterRangeForGlyphRange:actualGlyphRange:") = NSRange, NSRange, NSRangePointer;
override selector("characterSetWithBitmapRepresentation:") = Id, NSData;
override selector("characterSetWithCharactersInString:") = Id, NSString;
override selector("characterSetWithContentsOfFile:") = Id, NSString;
override selector("characterSetWithRange:") = Id, NSRange;
override selector("characters") = Id;
override selector("charactersIgnoringModifiers") = NSString;
override selector("charactersToBeSkipped") = NSCharacterSet;
override selector("checkForRemovableMedia") = Void;
override selector("checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[NSArray];
override selector("checkResourceIsReachableAndReturnError:") = Bool, Pointer[NSError];
override selector("checkSpaceForParts") = Void;
override selector("checkSpelling:") = Void, Id;
override selector("checkSpellingOfString:startingAt:") = NSRange, NSString, CLong;
override selector("checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[CLong];
override selector("checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:") = NSArray, NSString, NSRange, UInt64, NSDictionary, CLong, Pointer[NSOrthography], Pointer[CLong];
override selector("checkTextInDocument:") = Void, Id;
override selector("checkTextInRange:types:options:") = Void, NSRange, UInt64, NSDictionary;
override selector("checkTextInSelection:") = Void, Id;
override selector("childAtIndex:") = NSXMLNode, CULong;
override selector("childCount") = CULong;
override selector("childNodes") = NSArray;
override selector("childSpecifier") = NSScriptObjectSpecifier;
override selector("childWindows") = NSArray;
override selector("children") = NSArray;
override selector("childrenKeyPath") = NSString;
override selector("childrenKeyPathForNode:") = NSString, NSTreeNode;
override selector("class") = Id;
override selector("classCode") = UInt;
override selector("classDescription") = NSClassDescription;
override selector("classDescriptionForClass:") = Id, Id;
override selector("classDescriptionForKey:") = NSScriptClassDescription, NSString;
override selector("classDescriptionWithAppleEventCode:") = NSScriptClassDescription, UInt;
override selector("classDescriptionsInSuite:") = NSDictionary, NSString;
override selector("classFallbacksForKeyedArchiver") = NSArray;
override selector("classForArchiver") = Id;
override selector("classForClassName:") = Id, NSString;
override selector("classForCoder") = Id;
override selector("classForKeyedArchiver") = Id;
override selector("classForKeyedUnarchiver") = Id;
override selector("classForPortCoder") = Id;
override selector("className") = NSString;
override selector("classNameDecodedForArchiveClassName:") = NSString, NSString;
override selector("classNameEncodedForTrueClassName:") = NSString, NSString;
override selector("classNameForClass:") = NSString, Id;
override selector("classNamed:") = Id, NSString;
override selector("cleanUpAfterDragOperation") = Void;
override selector("cleanUpOperation") = Void;
override selector("clearColor") = NSColor;
override selector("clearContents") = CLong;
override selector("clearCurrentContext") = Void;
override selector("clearDrawable") = Void;
override selector("clearGLContext") = Void;
override selector("clearRecentDocuments:") = Void, Id;
override selector("clearStartAnimation") = Void;
override selector("clearStopAnimation") = Void;
override selector("clearsFilterPredicateOnInsertion") = Bool;
override selector("clickCount") = CLong;
override selector("clickedColumn") = CLong;
override selector("clickedOnLink:atIndex:") = Void, Id, CULong;
override selector("clickedPathComponentCell") = NSPathComponentCell;
override selector("clickedRow") = CLong;
override selector("client") = Id;
override selector("clientView") = NSView;
override selector("clipRect:") = Void, NSRect;
override selector("close") = Void;
override selector("close:") = Void, Id;
override selector("closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("closeFile") = Void;
override selector("closePath") = Void;
override selector("closeSpellDocumentWithTag:") = Void, CLong;
override selector("closedHandCursor") = NSCursor;
override selector("closestTickMarkValueToValue:") = Double, Double;
override selector("code") = CLong;
override selector("coerceToDescriptorType:") = NSAppleEventDescriptor, UInt;
override selector("coerceValue:forKey:") = Id, Id, NSString;
override selector("coerceValue:toClass:") = Id, Id, Id;
override selector("collapseItem:") = Void, Id;
override selector("collapseItem:collapseChildren:") = Void, Id, Bool;
override selector("collapsesBorders") = Bool;
override selector("collectExhaustively") = Void;
override selector("collectIfNeeded") = Void;
override selector("collection") = Id;
override selector("collectionBehavior") = CULong;
override selector("collectionNames") = NSArray;
override selector("collectionView") = NSCollectionView;
override selector("collectionView:acceptDrop:index:dropOperation:") = Bool, NSCollectionView, Id, CLong, CLong;
override selector("collectionView:canDragItemsAtIndexes:withEvent:") = Bool, NSCollectionView, NSIndexSet, NSEvent;
override selector("collectionView:draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSCollectionView, NSIndexSet, NSEvent, NSPointPointer;
override selector("collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:") = NSArray, NSCollectionView, NSURL, NSIndexSet;
override selector("collectionView:validateDrop:proposedIndex:dropOperation:") = CULong, NSCollectionView, Id, Pointer[CLong], Pointer[CLong];
override selector("collectionView:writeItemsAtIndexes:toPasteboard:") = Bool, NSCollectionView, NSIndexSet, NSPasteboard;
override selector("color") = NSColor;
override selector("colorAtX:y:") = NSColor, CLong, CLong;
override selector("colorForControlTint:") = NSColor, CULong;
override selector("colorFromPasteboard:") = NSColor, NSPasteboard;
override selector("colorListNamed:") = NSColorList, NSString;
override selector("colorNameComponent") = NSString;
override selector("colorPanel") = NSColorPanel;
override selector("colorRenderingIntent") = CLong;
override selector("colorSpace") = NSColorSpace;
override selector("colorSpaceModel") = CLong;
override selector("colorSpaceName") = NSString;
override selector("colorSyncProfile") = RawPointer;
override selector("colorUsingColorSpace:") = NSColor, NSColorSpace;
override selector("colorUsingColorSpaceName:") = NSColor, NSString;
override selector("colorUsingColorSpaceName:device:") = NSColor, NSString, NSDictionary;
override selector("colorWithAlphaComponent:") = NSColor, Double;
override selector("colorWithCGColor:") = CIColor, CGColorRef;
override selector("colorWithCIColor:") = NSColor, CIColor;
override selector("colorWithCalibratedHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithCalibratedRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithCalibratedWhite:alpha:") = NSColor, Double, Double;
override selector("colorWithCatalogName:colorName:") = NSColor, NSString, NSString;
override selector("colorWithColorSpace:components:count:") = NSColor, NSColorSpace, Pointer[Double], CLong;
override selector("colorWithDeviceCyan:magenta:yellow:black:alpha:") = NSColor, Double, Double, Double, Double, Double;
override selector("colorWithDeviceHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithDeviceRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithDeviceWhite:alpha:") = NSColor, Double, Double;
override selector("colorWithKey:") = NSColor, NSString;
override selector("colorWithPatternImage:") = NSColor, NSImage;
override selector("colorWithRed:green:blue:") = CIColor, Double, Double, Double;
override selector("colorWithRed:green:blue:alpha:") = CIColor, Double, Double, Double, Double;
override selector("colorWithString:") = CIColor, NSString;
override selector("colorizeByMappingGray:toColor:blackMapping:whiteMapping:") = Void, Double, NSColor, NSColor, NSColor;
override selector("columnAtPoint:") = CLong, NSPoint;
override selector("columnAutoresizingStyle") = CULong;
override selector("columnContentWidthForColumnWidth:") = Double, Double;
override selector("columnIndexesInRect:") = NSIndexSet, NSRect;
override selector("columnNumber") = CLong;
override selector("columnOfMatrix:") = CLong, NSMatrix;
override selector("columnResizingType") = CULong;
override selector("columnSpan") = CLong;
override selector("columnWidthForColumnContentWidth:") = Double, Double;
override selector("columnWithIdentifier:") = CLong, Id;
override selector("columnsAutosaveName") = NSString;
override selector("columnsInRect:") = NSRange, NSRect;
override selector("comboBox:completedString:") = NSString, NSComboBox, NSString;
override selector("comboBox:indexOfItemWithStringValue:") = CULong, NSComboBox, NSString;
override selector("comboBox:objectValueForItemAtIndex:") = Id, NSComboBox, CLong;
override selector("comboBoxCell:completedString:") = NSString, NSComboBoxCell, NSString;
override selector("comboBoxCell:indexOfItemWithStringValue:") = CULong, NSComboBoxCell, NSString;
override selector("comboBoxCell:objectValueForItemAtIndex:") = Id, NSComboBoxCell, CLong;
override selector("comboBoxSelectionDidChange:") = Void, NSNotification;
override selector("comboBoxSelectionIsChanging:") = Void, NSNotification;
override selector("comboBoxWillDismiss:") = Void, NSNotification;
override selector("comboBoxWillPopUp:") = Void, NSNotification;
override selector("commandClassName") = NSString;
override selector("commandDescription") = NSScriptCommandDescription;
override selector("commandDescriptionWithAppleEventClass:andAppleEventCode:") = NSScriptCommandDescription, UInt, UInt;
override selector("commandDescriptionsInSuite:") = NSDictionary, NSString;
override selector("commandName") = NSString;
override selector("commands") = NSArray;
override selector("comment") = NSString;
override selector("commentURL") = NSURL;
override selector("commentWithStringValue:") = Id, NSString;
override selector("commitEditing") = Bool;
override selector("commitEditingWithDelegate:didCommitSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("commonISOCurrencyCodes") = NSArray;
override selector("commonPrefixWithString:options:") = NSString, NSString, CULong;
override selector("compact") = Void;
override selector("comparator") = NSComparator;
override selector("compare:") = CLong, NSNumber;
override selector("compare:options:") = CLong, NSString, CULong;
override selector("compare:options:range:") = CLong, NSString, CULong, NSRange;
override selector("compare:options:range:locale:") = CLong, NSString, CULong, NSRange, Id;
override selector("compareObject:toObject:") = CLong, Id, Id;
override selector("comparisonPredicateModifier") = CULong;
override selector("compileAndReturnError:") = Bool, Pointer[NSDictionary];
override selector("complete:") = Void, Id;
override selector("completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:") = CULong, Pointer[NSString], Bool, Pointer[NSArray], NSArray;
override selector("completedString:") = NSString, NSString;
override selector("completes") = Bool;
override selector("completionBlock") = UnknownType;
override selector("completionDelay") = Double;
override selector("completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
override selector("completionsForPartialWordRange:indexOfSelectedItem:") = NSArray, NSRange, Pointer[CLong];
override selector("components") = NSArray;
override selector("components:fromDate:") = NSDateComponents, CULong, NSDate;
override selector("components:fromDate:toDate:options:") = NSDateComponents, CULong, NSDate, NSDate, CULong;
override selector("componentsFromLocaleIdentifier:") = NSDictionary, NSString;
override selector("componentsJoinedByString:") = NSString, NSString;
override selector("componentsSeparatedByCharactersInSet:") = NSArray, NSCharacterSet;
override selector("componentsSeparatedByString:") = NSArray, NSString;
override selector("componentsToDisplayForPath:") = NSArray, NSString;
override selector("compositeToPoint:fromRect:operation:") = Void, NSPoint, NSRect, CULong;
override selector("compositeToPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
override selector("compositeToPoint:operation:") = Void, NSPoint, CULong;
override selector("compositeToPoint:operation:fraction:") = Void, NSPoint, CULong, Double;
override selector("compositingFilter") = Id;
override selector("compositingOperation") = CULong;
override selector("compoundPredicateType") = CULong;
override selector("compoundTypes") = NSArray;
override selector("concat") = Void;
override selector("concludeDragOperation:") = Void, Id;
override selector("condition") = CLong;
override selector("configurationDictionary") = NSDictionary;
override selector("configureAsServer") = Void;
override selector("configurePersistentStoreCoordinatorForURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:") = Bool, NSURL, NSString, NSString, NSDictionary, Pointer[NSError];
override selector("confinementRectForMenu:onScreen:") = NSRect, NSMenu, NSScreen;
override selector("conformsToProtocol:") = Bool, Id;
override selector("connection") = NSConnection;
override selector("connection:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLConnection, NSURLProtectionSpace;
override selector("connection:didCancelAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
override selector("connection:didFailWithError:") = Void, NSURLConnection, NSError;
override selector("connection:didReceiveAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
override selector("connection:didReceiveData:") = Void, NSURLConnection, NSData;
override selector("connection:didReceiveResponse:") = Void, NSURLConnection, NSURLResponse;
override selector("connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:") = Void, NSURLConnection, CLong, CLong, CLong;
override selector("connection:handleRequest:") = Bool, NSConnection, NSDistantObjectRequest;
override selector("connection:needNewBodyStream:") = NSInputStream, NSURLConnection, NSURLRequest;
override selector("connection:shouldMakeNewConnection:") = Bool, NSConnection, NSConnection;
override selector("connection:willCacheResponse:") = NSCachedURLResponse, NSURLConnection, NSCachedURLResponse;
override selector("connection:willSendRequest:redirectResponse:") = NSURLRequest, NSURLConnection, NSURLRequest, NSURLResponse;
override selector("connectionDidFinishLoading:") = Void, NSURLConnection;
override selector("connectionForProxy") = NSConnection;
override selector("connectionShouldUseCredentialStorage:") = Bool, NSURLConnection;
override selector("connectionWithReceivePort:sendPort:") = Id, NSPort, NSPort;
override selector("connectionWithRegisteredName:host:") = Id, NSString, NSString;
override selector("connectionWithRegisteredName:host:usingNameServer:") = Id, NSString, NSString, NSPortNameServer;
override selector("connectionWithRequest:delegate:") = NSURLConnection, NSURLRequest, Id;
override selector("constantValue") = Id;
override selector("constrainFrameRect:toScreen:") = NSRect, NSRect, NSScreen;
override selector("constrainScrollPoint:") = NSPoint, NSPoint;
override selector("containerClassDescription") = NSScriptClassDescription;
override selector("containerIsObjectBeingTested") = Bool;
override selector("containerIsRangeContainerObject") = Bool;
override selector("containerSize") = NSSize;
override selector("containerSpecifier") = NSScriptObjectSpecifier;
override selector("containsAttachments") = Bool;
override selector("containsIndex:") = Bool, CULong;
override selector("containsIndexes:") = Bool, NSIndexSet;
override selector("containsIndexesInRange:") = Bool, NSRange;
override selector("containsObject:") = Bool, Id;
override selector("containsPoint:") = Bool, NSPoint;
override selector("containsValueForKey:") = Bool, NSString;
override selector("content") = Id;
override selector("contentAspectRatio") = NSSize;
override selector("contentBorderThicknessForEdge:") = Double, CULong;
override selector("contentFilters") = NSArray;
override selector("contentMaxSize") = NSSize;
override selector("contentMinSize") = NSSize;
override selector("contentRect") = NSRect;
override selector("contentRectForFrameRect:") = NSRect, NSRect;
override selector("contentRectForFrameRect:styleMask:") = NSRect, NSRect, CULong;
override selector("contentResizeIncrements") = NSSize;
override selector("contentSize") = NSSize;
override selector("contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
override selector("contentView") = Id;
override selector("contentViewMargins") = NSSize;
override selector("contentWidth") = Double;
override selector("contentWidthValueType") = CULong;
override selector("contents") = Id;
override selector("contentsAreFlipped") = Bool;
override selector("contentsAtPath:") = NSData, NSString;
override selector("contentsCenter") = CGRect;
override selector("contentsEqualAtPath:andPath:") = Bool, NSString, NSString;
override selector("contentsGravity") = NSString;
override selector("contentsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:") = NSArray, NSURL, NSArray, CULong, Pointer[NSError];
override selector("contentsRect") = CGRect;
override selector("context") = NSGraphicsContext;
override selector("contextHelpForKey:") = NSAttributedString, NSString;
override selector("contextHelpForObject:") = NSAttributedString, Id;
override selector("contextMenuRepresentation") = Id;
override selector("contextualMenuCursor") = NSCursor;
override selector("continueSpeaking") = Void;
override selector("continueTracking:at:inView:") = Bool, NSPoint, NSPoint, NSView;
override selector("continueWithoutCredentialForAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
override selector("control:didFailToFormatString:errorDescription:") = Bool, NSControl, NSString, NSString;
override selector("control:didFailToValidatePartialString:errorDescription:") = Void, NSControl, NSString, NSString;
override selector("control:isValidObject:") = Bool, NSControl, Id;
override selector("control:textShouldBeginEditing:") = Bool, NSControl, NSText;
override selector("control:textShouldEndEditing:") = Bool, NSControl, NSText;
override selector("control:textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSControl, NSTextView, NSArray, NSRange, Pointer[CLong];
override selector("control:textView:doCommandBySelector:") = Bool, NSControl, NSTextView, SelectorHandle;
override selector("controlAlternatingRowBackgroundColors") = NSArray;
override selector("controlBackgroundColor") = NSColor;
override selector("controlCharacterSet") = Id;
override selector("controlColor") = NSColor;
override selector("controlContentFontOfSize:") = NSFont, Double;
override selector("controlDarkShadowColor") = NSColor;
override selector("controlHighlightColor") = NSColor;
override selector("controlLightHighlightColor") = NSColor;
override selector("controlPointBounds") = NSRect;
override selector("controlShadowColor") = NSColor;
override selector("controlSize") = CULong;
override selector("controlTextColor") = NSColor;
override selector("controlTextDidBeginEditing:") = Void, NSNotification;
override selector("controlTextDidChange:") = Void, NSNotification;
override selector("controlTextDidEndEditing:") = Void, NSNotification;
override selector("controlTint") = CULong;
override selector("controlView") = NSView;
override selector("conversation") = Id;
override selector("conversationIdentifier") = CLong;
override selector("convertAttributes:") = NSDictionary, NSDictionary;
override selector("convertBaseToScreen:") = NSPoint, NSPoint;
override selector("convertFont:") = NSFont, NSFont;
override selector("convertFont:toFace:") = NSFont, NSFont, NSString;
override selector("convertFont:toFamily:") = NSFont, NSFont, NSString;
override selector("convertFont:toHaveTrait:") = NSFont, NSFont, CULong;
override selector("convertFont:toNotHaveTrait:") = NSFont, NSFont, CULong;
override selector("convertFont:toSize:") = NSFont, NSFont, Double;
override selector("convertFontTraits:") = CULong, CULong;
override selector("convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
override selector("convertPoint:fromView:") = NSPoint, NSPoint, NSView;
override selector("convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
override selector("convertPoint:toView:") = NSPoint, NSPoint, NSView;
override selector("convertPointFromBase:") = NSPoint, NSPoint;
override selector("convertPointToBase:") = NSPoint, NSPoint;
override selector("convertRect:fromLayer:") = CGRect, CGRect, CALayer;
override selector("convertRect:fromView:") = NSRect, NSRect, NSView;
override selector("convertRect:toLayer:") = CGRect, CGRect, CALayer;
override selector("convertRect:toView:") = NSRect, NSRect, NSView;
override selector("convertRectFromBase:") = NSRect, NSRect;
override selector("convertRectToBase:") = NSRect, NSRect;
override selector("convertScreenToBase:") = NSPoint, NSPoint;
override selector("convertSize:fromView:") = NSSize, NSSize, NSView;
override selector("convertSize:toView:") = NSSize, NSSize, NSView;
override selector("convertSizeFromBase:") = NSSize, NSSize;
override selector("convertSizeToBase:") = NSSize, NSSize;
override selector("convertTime:fromLayer:") = Double, Double, CALayer;
override selector("convertTime:toLayer:") = Double, Double, CALayer;
override selector("convertWeight:ofFont:") = NSFont, Bool, NSFont;
override selector("cookieAcceptPolicy") = CULong;
override selector("cookieWithProperties:") = Id, NSDictionary;
override selector("cookies") = NSArray;
override selector("cookiesForURL:") = NSArray, NSURL;
override selector("cookiesWithResponseHeaderFields:forURL:") = NSArray, NSDictionary, NSURL;
override selector("copiesOnScroll") = Bool;
override selector("copy") = Id;
override selector("copy:") = Void, Id;
override selector("copyAttributesFromContext:withMask:") = Void, NSOpenGLContext, UInt;
override selector("copyCGLContextForPixelFormat:") = CGLContextObj, CGLPixelFormatObj;
override selector("copyCGLPixelFormatForDisplayMask:") = CGLPixelFormatObj, UInt;
override selector("copyFont:") = Void, Id;
override selector("copyItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("copyItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("copyPath:toPath:handler:") = Bool, NSString, NSString, Id;
override selector("copyRuler:") = Void, Id;
override selector("copyScriptingValue:forKey:withProperties:") = Id, Id, NSString, NSDictionary;
override selector("copyWithZone:") = Id, Pointer[NSZone];
override selector("cornerRadius") = Double;
override selector("cornerView") = NSView;
override selector("correctionCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("count") = CULong;
override selector("countByEnumeratingWithState:objects:count:") = CULong, Pointer[NSFastEnumerationState], Pointer[Id], CULong;
override selector("countForObject:") = CULong, Id;
override selector("countKeyPath") = NSString;
override selector("countKeyPathForNode:") = NSString, NSTreeNode;
override selector("countLimit") = CULong;
override selector("countOfIndexesInRange:") = CULong, NSRange;
override selector("countWordsInString:language:") = CLong, NSString, NSString;
override selector("coveredCharacterSet") = NSCharacterSet;
override selector("createClassDescription") = NSScriptClassDescription;
override selector("createCommandInstance") = NSScriptCommand;
override selector("createCommandInstanceWithZone:") = NSScriptCommand, Pointer[NSZone];
override selector("createContext") = NSGraphicsContext;
override selector("createConversationForConnection:") = Id, NSConnection;
override selector("createDirectoryAtPath:attributes:") = Bool, NSString, NSDictionary;
override selector("createDirectoryAtPath:withIntermediateDirectories:attributes:error:") = Bool, NSString, Bool, NSDictionary, Pointer[NSError];
override selector("createFileAtPath:contents:attributes:") = Bool, NSString, NSData, NSDictionary;
override selector("createSymbolicLinkAtPath:pathContent:") = Bool, NSString, NSString;
override selector("createSymbolicLinkAtPath:withDestinationPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("createTexture:fromView:internalFormat:") = Void, UInt, NSView, UInt;
override selector("credentialForTrust:") = NSURLCredential, SecTrustRef;
override selector("credentialWithIdentity:certificates:persistence:") = NSURLCredential, SecIdentityRef, NSArray, CULong;
override selector("credentialWithUser:password:persistence:") = NSURLCredential, NSString, NSString, CULong;
override selector("credentialsForProtectionSpace:") = NSDictionary, NSURLProtectionSpace;
override selector("criteriaForRow:") = NSArray, CLong;
override selector("criteriaKeyPath") = NSString;
override selector("criticalValue") = Double;
override selector("crosshairCursor") = NSCursor;
override selector("currencyCode") = NSString;
override selector("currencyDecimalSeparator") = NSString;
override selector("currencyGroupingSeparator") = NSString;
override selector("currencySymbol") = NSString;
override selector("currentAppleEvent") = NSAppleEventDescriptor;
override selector("currentApplication") = NSRunningApplication;
override selector("currentCalendar") = Id;
override selector("currentCommand") = NSScriptCommand;
override selector("currentContext") = Id;
override selector("currentContextDrawingToScreen") = Bool;
override selector("currentControlTint") = CULong;
override selector("currentConversation") = Id;
override selector("currentCursor") = NSCursor;
override selector("currentDirectory") = NSString;
override selector("currentDirectoryPath") = NSString;
override selector("currentDiskUsage") = CULong;
override selector("currentDocument") = Id;
override selector("currentEditor") = NSText;
override selector("currentEvent") = NSEvent;
override selector("currentFontAction") = CULong;
override selector("currentHandler") = NSAssertionHandler;
override selector("currentHost") = NSHost;
override selector("currentInputContext") = NSTextInputContext;
override selector("currentInputManager") = NSInputManager;
override selector("currentLocale") = Id;
override selector("currentMemoryUsage") = CULong;
override selector("currentMode") = NSString;
override selector("currentOperation") = NSPrintOperation;
override selector("currentPage") = CLong;
override selector("currentParagraphStyle") = NSParagraphStyle;
override selector("currentPoint") = NSPoint;
override selector("currentProgress") = Float;
override selector("currentQueue") = Id;
override selector("currentReplyAppleEvent") = NSAppleEventDescriptor;
override selector("currentRunLoop") = NSRunLoop;
override selector("currentSystemCursor") = NSCursor;
override selector("currentSystemPresentationOptions") = CULong;
override selector("currentTextContainer") = NSTextContainer;
override selector("currentThread") = NSThread;
override selector("currentTime") = Double;
override selector("currentValue") = Float;
override selector("currentVirtualScreen") = Int;
override selector("cursorUpdate:") = Void, NSEvent;
override selector("curveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
override selector("customSelector") = SelectorHandle;
override selector("customizationPaletteIsRunning") = Bool;
override selector("cut:") = Void, Id;
override selector("cyanColor") = NSColor;
override selector("cyanComponent") = Double;
override selector("cycleToNextInputLanguage:") = Void, Id;
override selector("cycleToNextInputServerInLanguage:") = Void, Id;
override selector("darkGrayColor") = NSColor;
override selector("dashCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("data") = Id;
override selector("data1") = CLong;
override selector("data2") = CLong;
override selector("dataCell") = Id;
override selector("dataCellForRow:") = Id, CLong;
override selector("dataForKey:") = NSData, NSString;
override selector("dataForType:") = NSData, NSString;
override selector("dataFromPropertyList:format:errorDescription:") = NSData, Id, CULong, Pointer[NSString];
override selector("dataFromRange:documentAttributes:error:") = NSData, NSRange, NSDictionary, Pointer[NSError];
override selector("dataFromTXTRecordDictionary:") = NSData, NSDictionary;
override selector("dataOfType:error:") = NSData, NSString, Pointer[NSError];
override selector("dataRepresentationOfType:") = NSData, NSString;
override selector("dataSource") = Id;
override selector("dataUsingEncoding:") = NSData, CULong;
override selector("dataUsingEncoding:allowLossyConversion:") = NSData, CULong, Bool;
override selector("dataWithBytes:length:") = Id, RawPointer, CULong;
override selector("dataWithBytesNoCopy:length:") = Id, RawPointer, CULong;
override selector("dataWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, CULong, Bool;
override selector("dataWithCapacity:") = Id, CULong;
override selector("dataWithContentsOfFile:") = Id, NSString;
override selector("dataWithContentsOfFile:options:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("dataWithContentsOfMappedFile:") = Id, NSString;
override selector("dataWithContentsOfURL:") = Id, NSURL;
override selector("dataWithContentsOfURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("dataWithData:") = Id, NSData;
override selector("dataWithEPSInsideRect:") = NSData, NSRect;
override selector("dataWithLength:") = Id, CULong;
override selector("dataWithPDFInsideRect:") = NSData, NSRect;
override selector("dataWithPropertyList:format:options:error:") = NSData, Id, CULong, CULong, Pointer[NSError];
override selector("date") = Id;
override selector("dateByAddingComponents:toDate:options:") = NSDate, NSDateComponents, NSDate, CULong;
override selector("dateByAddingTimeInterval:") = Id, Double;
override selector("dateByAddingYears:months:days:hours:minutes:seconds:") = NSCalendarDate, CLong, CLong, CLong, CLong, CLong, CLong;
override selector("dateCheckingResultWithRange:date:") = NSTextCheckingResult, NSRange, NSDate;
override selector("dateCheckingResultWithRange:date:timeZone:duration:") = NSTextCheckingResult, NSRange, NSDate, NSTimeZone, Double;
override selector("dateFormat") = NSString;
override selector("dateFormatFromTemplate:options:locale:") = NSString, NSString, CULong, NSLocale;
override selector("dateFromComponents:") = NSDate, NSDateComponents;
override selector("dateFromString:") = NSDate, NSString;
override selector("datePickerCell:validateProposedDateValue:timeInterval:") = Void, NSDatePickerCell, Pointer[NSDate], Pointer[Double];
override selector("datePickerElements") = CULong;
override selector("datePickerMode") = CULong;
override selector("datePickerStyle") = CULong;
override selector("dateStyle") = CULong;
override selector("dateValue") = NSDate;
override selector("dateWithCalendarFormat:timeZone:") = NSCalendarDate, NSString, NSTimeZone;
override selector("dateWithNaturalLanguageString:") = Id, NSString;
override selector("dateWithNaturalLanguageString:locale:") = Id, NSString, Id;
override selector("dateWithString:") = Id, NSString;
override selector("dateWithString:calendarFormat:") = Id, NSString, NSString;
override selector("dateWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
override selector("dateWithTimeInterval:sinceDate:") = Id, Double, NSDate;
override selector("dateWithTimeIntervalSince1970:") = Id, Double;
override selector("dateWithTimeIntervalSinceNow:") = Id, Double;
override selector("dateWithTimeIntervalSinceReferenceDate:") = Id, Double;
override selector("dateWithYear:month:day:hour:minute:second:timeZone:") = Id, CLong, CULong, CULong, CULong, CULong, CULong, NSTimeZone;
override selector("day") = CLong;
override selector("dayOfCommonEra") = CLong;
override selector("dayOfMonth") = CLong;
override selector("dayOfWeek") = CLong;
override selector("dayOfYear") = CLong;
override selector("daylightSavingTimeOffset") = Double;
override selector("daylightSavingTimeOffsetForDate:") = Double, NSDate;
override selector("deactivate") = Void;
override selector("dealloc") = Void;
override selector("decimalDigitCharacterSet") = Id;
override selector("decimalNumberByAdding:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByAdding:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByDividingBy:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByDividingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByMultiplyingBy:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByMultiplyingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByMultiplyingByPowerOf10:") = NSDecimalNumber, Short;
override selector("decimalNumberByMultiplyingByPowerOf10:withBehavior:") = NSDecimalNumber, Short, Id;
override selector("decimalNumberByRaisingToPower:") = NSDecimalNumber, CULong;
override selector("decimalNumberByRaisingToPower:withBehavior:") = NSDecimalNumber, CULong, Id;
override selector("decimalNumberByRoundingAccordingToBehavior:") = NSDecimalNumber, Id;
override selector("decimalNumberBySubtracting:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberBySubtracting:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, CULong, Short, Bool, Bool, Bool, Bool;
override selector("decimalNumberWithDecimal:") = NSDecimalNumber, NSDecimal;
override selector("decimalNumberWithMantissa:exponent:isNegative:") = NSDecimalNumber, UInt64, Short, Bool;
override selector("decimalNumberWithString:") = NSDecimalNumber, NSString;
override selector("decimalNumberWithString:locale:") = NSDecimalNumber, NSString, Id;
override selector("decimalSeparator") = NSString;
override selector("decimalValue") = NSDecimal;
override selector("declareTypes:owner:") = CLong, NSArray, Id;
override selector("decodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], CULong, RawPointer;
override selector("decodeBoolForKey:") = Bool, NSString;
override selector("decodeBytesForKey:returnedLength:") = Pointer[CUChar], NSString, Pointer[CULong];
override selector("decodeBytesWithReturnedLength:") = RawPointer, Pointer[CULong];
override selector("decodeClassName:asClassName:") = Void, NSString, NSString;
override selector("decodeDataObject") = NSData;
override selector("decodeDoubleForKey:") = Double, NSString;
override selector("decodeFloatForKey:") = Float, NSString;
override selector("decodeInt32ForKey:") = Int, NSString;
override selector("decodeInt64ForKey:") = Int64, NSString;
override selector("decodeIntForKey:") = Int, NSString;
override selector("decodeIntegerForKey:") = CLong, NSString;
override selector("decodeNXColor") = NSColor;
override selector("decodeNXObject") = Id;
override selector("decodeObject") = Id;
override selector("decodeObjectForKey:") = Id, NSString;
override selector("decodePoint") = NSPoint;
override selector("decodePointForKey:") = NSPoint, NSString;
override selector("decodePortObject") = NSPort;
override selector("decodePropertyList") = Id;
override selector("decodeRect") = NSRect;
override selector("decodeRectForKey:") = NSRect, NSString;
override selector("decodeSize") = NSSize;
override selector("decodeSizeForKey:") = NSSize, NSString;
override selector("decodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
override varargSelector("decodeValuesOfObjCTypes:") = Void, Pointer[CChar];
override selector("decomposableCharacterSet") = Id;
override selector("decomposedStringWithCanonicalMapping") = NSString;
override selector("decomposedStringWithCompatibilityMapping") = NSString;
override selector("deepestScreen") = NSScreen;
override selector("defaultActionForKey:") = Id, NSString;
override selector("defaultAnimationForKey:") = Id, NSString;
override selector("defaultAttachmentScaling") = CULong;
override selector("defaultBaselineOffsetForFont:") = Double, NSFont;
override selector("defaultBehavior") = Id;
override selector("defaultButtonCell") = NSButtonCell;
override selector("defaultButtonTitle") = NSString;
override selector("defaultCStringEncoding") = CULong;
override selector("defaultCenter") = Id;
override selector("defaultCollector") = Id;
override selector("defaultColumnWidth") = Double;
override selector("defaultCompletionDelay") = Double;
override selector("defaultConnection") = NSConnection;
override selector("defaultCredentialForProtectionSpace:") = NSURLCredential, NSURLProtectionSpace;
override selector("defaultDate") = NSDate;
override selector("defaultDecimalNumberHandler") = Id;
override selector("defaultDepthLimit") = Int;
override selector("defaultFetchRequest") = NSFetchRequest;
override selector("defaultFlatness") = Double;
override selector("defaultFocusRingType") = CULong;
override selector("defaultFormatterBehavior") = CULong;
override selector("defaultLineCapStyle") = CULong;
override selector("defaultLineHeightForFont:") = Double, NSFont;
override selector("defaultLineJoinStyle") = CULong;
override selector("defaultLineWidth") = Double;
override selector("defaultManager") = NSFileManager;
override selector("defaultMenu") = NSMenu;
override selector("defaultMiterLimit") = Double;
override selector("defaultNameServerPortNumber") = UShort;
override selector("defaultParagraphStyle") = NSParagraphStyle;
override selector("defaultPixelFormat") = NSOpenGLPixelFormat;
override selector("defaultPlaceholderForMarker:withBinding:") = Id, Id, NSString;
override selector("defaultPrinter") = NSPrinter;
override selector("defaultQueue") = Id;
override selector("defaultSubcontainerAttributeKey") = NSString;
override selector("defaultTabInterval") = Double;
override selector("defaultTimeZone") = NSTimeZone;
override selector("defaultTokenizingCharacterSet") = NSCharacterSet;
override selector("defaultType") = NSString;
override selector("defaultTypesetterBehavior") = CLong;
override selector("defaultValue") = Id;
override selector("defaultValueForKey:") = Id, NSString;
override selector("defaultVoice") = NSString;
override selector("defaultWindingRule") = CULong;
override selector("defaultWritingDirectionForLanguage:") = CLong, NSString;
override selector("defaults") = NSUserDefaults;
override selector("definition") = CIFilterShape;
override selector("delegate") = Id;
override selector("delete:") = Void, Id;
override selector("deleteBackward:") = Void, Id;
override selector("deleteBackwardByDecomposingPreviousCharacter:") = Void, Id;
override selector("deleteCharactersInRange:") = Void, NSRange;
override selector("deleteCookie:") = Void, NSHTTPCookie;
override selector("deleteForward:") = Void, Id;
override selector("deleteGlyphsInRange:") = Void, NSRange;
override selector("deleteToBeginningOfLine:") = Void, Id;
override selector("deleteToBeginningOfParagraph:") = Void, Id;
override selector("deleteToEndOfLine:") = Void, Id;
override selector("deleteToEndOfParagraph:") = Void, Id;
override selector("deleteToMark:") = Void, Id;
override selector("deleteWordBackward:") = Void, Id;
override selector("deleteWordForward:") = Void, Id;
override selector("deletesFileUponFailure") = Bool;
override selector("deliverResult") = Bool;
override selector("deltaX") = Double;
override selector("deltaY") = Double;
override selector("deltaZ") = Double;
override selector("deminiaturize:") = Void, Id;
override selector("dependencies") = NSArray;
override selector("depth") = Int;
override selector("depthLimit") = Int;
override selector("dequeueNotificationsMatching:coalesceMask:") = Void, NSNotification, CULong;
override selector("descendantNodeAtIndexPath:") = NSTreeNode, NSIndexPath;
override selector("descender") = Double;
override selector("description") = NSString;
override selector("descriptionFunction") = CCodePointer[[RawPointer],[NSString]];
override selector("descriptionInStringsFileFormat") = NSString;
override selector("descriptionWithCalendarFormat:") = NSString, NSString;
override selector("descriptionWithCalendarFormat:locale:") = NSString, NSString, Id;
override selector("descriptionWithCalendarFormat:timeZone:locale:") = NSString, NSString, NSTimeZone, Id;
override selector("descriptionWithLocale:") = NSString, Id;
override selector("descriptionWithLocale:indent:") = NSString, Id, CULong;
override selector("descriptor") = NSAppleEventDescriptor;
override selector("descriptorAtIndex:") = NSAppleEventDescriptor, CLong;
override selector("descriptorForKeyword:") = NSAppleEventDescriptor, UInt;
override selector("descriptorType") = UInt;
override selector("descriptorWithBoolean:") = NSAppleEventDescriptor, CUChar;
override selector("descriptorWithDescriptorType:bytes:length:") = NSAppleEventDescriptor, UInt, RawPointer, CULong;
override selector("descriptorWithDescriptorType:data:") = NSAppleEventDescriptor, UInt, NSData;
override selector("descriptorWithEnumCode:") = NSAppleEventDescriptor, UInt;
override selector("descriptorWithInt32:") = NSAppleEventDescriptor, Int;
override selector("descriptorWithString:") = NSAppleEventDescriptor, NSString;
override selector("descriptorWithTypeCode:") = NSAppleEventDescriptor, UInt;
override selector("deselectAll:") = Void, Id;
override selector("deselectAllCells") = Void;
override selector("deselectColumn:") = Void, CLong;
override selector("deselectItemAtIndex:") = Void, CLong;
override selector("deselectRow:") = Void, CLong;
override selector("deselectSelectedCell") = Void;
override selector("desktopImageOptionsForScreen:") = NSDictionary, NSScreen;
override selector("desktopImageURLForScreen:") = NSURL, NSScreen;
override selector("destinationOfSymbolicLinkAtPath:error:") = NSString, NSString, Pointer[NSError];
override selector("destroyContext") = Void;
override selector("detach") = Void;
override selector("detachColorList:") = Void, NSColorList;
override selector("detachDrawingThread:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
override selector("detachNewThreadSelector:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
override selector("developmentLocalization") = NSString;
override selector("device") = Id;
override selector("deviceCMYKColorSpace") = NSColorSpace;
override selector("deviceDescription") = NSDictionary;
override selector("deviceGrayColorSpace") = NSColorSpace;
override selector("deviceID") = CULong;
override selector("deviceRGBColorSpace") = NSColorSpace;
override selector("deviceSize") = NSSize;
override selector("dictionary") = Id;
override selector("dictionaryForKey:") = NSDictionary, NSString;
override selector("dictionaryFromTXTRecordData:") = NSDictionary, NSData;
override selector("dictionaryRepresentation") = NSDictionary;
override selector("dictionaryWithCapacity:") = Id, CULong;
override selector("dictionaryWithContentsOfFile:") = Id, NSString;
override selector("dictionaryWithContentsOfURL:") = Id, NSURL;
override selector("dictionaryWithDictionary:") = Id, NSDictionary;
override selector("dictionaryWithObject:forKey:") = Id, Id, Id;
override selector("dictionaryWithObjects:forKeys:") = Id, NSArray, NSArray;
override selector("dictionaryWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], CULong;
override varargSelector("dictionaryWithObjectsAndKeys:") = Id, Id;
override selector("dictionaryWithValuesForKeys:") = NSDictionary, NSArray;
override selector("didAddSubview:") = Void, NSView;
override selector("didChange:valuesAtIndexes:forKey:") = Void, CULong, NSIndexSet, NSString;
override selector("didChangeArrangementCriteria") = Void;
override selector("didChangeText") = Void;
override selector("didChangeValueForKey:") = Void, NSString;
override selector("didChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, CULong, NSSet;
override selector("didLoadBytes:loadComplete:") = Void, NSData, Bool;
override selector("directParameter") = Id;
override selector("directory") = NSString;
override selector("directoryAttributes") = NSDictionary;
override selector("directoryContentsAtPath:") = NSArray, NSString;
override selector("directoryURL") = NSURL;
override selector("disable") = Void;
override selector("disableCollectorForPointer:") = Void, RawPointer;
override selector("disableCursorRects") = Void;
override selector("disableFlushWindow") = Void;
override selector("disableKeyEquivalentForDefaultButtonCell") = Void;
override selector("disableScreenUpdatesUntilFlush") = Void;
override selector("disableSuddenTermination") = Void;
override selector("disableUndoRegistration") = Void;
override selector("disableUpdates") = Void;
override selector("disabledControlTextColor") = NSColor;
override selector("disappearingItemCursor") = NSCursor;
override selector("discardCachedImage") = Void;
override selector("discardContentIfPossible") = Void;
override selector("discardCursorRects") = Void;
override selector("discardEditing") = Void;
override selector("discardEventsMatchingMask:beforeEvent:") = Void, CULong, NSEvent;
override selector("discardMarkedText") = Void;
override selector("diskCapacity") = CULong;
override selector("dismissPopUp") = Void;
override selector("dispatch") = Void;
override selector("dispatchRawAppleEvent:withRawReply:handlerRefCon:") = Short, Pointer[AppleEvent], Pointer[AppleEvent], SRefCon;
override selector("display") = Void;
override selector("displayAllColumns") = Void;
override selector("displayColumn:") = Void, CLong;
override selector("displayIfNeeded") = Void;
override selector("displayIfNeededIgnoringOpacity") = Void;
override selector("displayIfNeededInRect:") = Void, NSRect;
override selector("displayIfNeededInRectIgnoringOpacity:") = Void, NSRect;
override selector("displayLayer:") = Void, CALayer;
override selector("displayMode") = CULong;
override selector("displayName") = NSString;
override selector("displayNameAtPath:") = NSString, NSString;
override selector("displayNameForKey:value:") = NSString, Id, Id;
override selector("displayNameForType:") = NSString, NSString;
override selector("displayRect:") = Void, NSRect;
override selector("displayRectIgnoringOpacity:") = Void, NSRect;
override selector("displayRectIgnoringOpacity:inContext:") = Void, NSRect, NSGraphicsContext;
override selector("displayValuesForRow:") = NSArray, CLong;
override selector("displayValuesKeyPath") = NSString;
override selector("displayableSubpredicatesOfPredicate:") = NSArray, NSPredicate;
override selector("displayedCommandsTitle") = NSString;
override selector("displaysLinkToolTips") = Bool;
override selector("displaysWhenScreenProfileChanges") = Bool;
override selector("dissolveToPoint:fraction:") = Void, NSPoint, Double;
override selector("dissolveToPoint:fromRect:fraction:") = Void, NSPoint, NSRect, Double;
override selector("distantFuture") = Id;
override selector("distantPast") = Id;
override selector("distinguishedNames") = NSArray;
override selector("dividerColor") = NSColor;
override selector("dividerStyle") = CLong;
override selector("dividerThickness") = Double;
override selector("doClick:") = Void, Id;
override selector("doCommandBySelector:") = Void, SelectorHandle;
override selector("doCommandBySelector:client:") = Void, SelectorHandle, Id;
override selector("doDoubleClick:") = Void, Id;
override selector("docFormatFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override selector("dockMenu") = NSMenu;
override selector("dockTile") = NSDockTile;
override selector("document") = Id;
override selector("documentClassForType:") = Id, NSString;
override selector("documentClassNames") = NSArray;
override selector("documentContentKind") = CULong;
override selector("documentCursor") = NSCursor;
override selector("documentForFileName:") = Id, NSString;
override selector("documentForURL:") = Id, NSURL;
override selector("documentForWindow:") = Id, NSWindow;
override selector("documentRect") = NSRect;
override selector("documentView") = Id;
override selector("documentVisibleRect") = NSRect;
override selector("documentWithRootElement:") = Id, NSXMLElement;
override selector("documents") = NSArray;
override selector("doesContain:") = Bool, Id;
override selector("doesNotRecognizeSelector:") = Void, SelectorHandle;
override selector("doesRelativeDateFormatting") = Bool;
override selector("domain") = NSString;
override selector("dominantLanguage") = NSString;
override selector("dominantLanguageForScript:") = NSString, NSString;
override selector("dominantScript") = NSString;
override selector("doubleAction") = SelectorHandle;
override selector("doubleClickAtIndex:") = NSRange, CULong;
override selector("doubleClickInterval") = Double;
override selector("doubleForKey:") = Double, NSString;
override selector("doubleValue") = Double;
override selector("download:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLDownload, NSURLProtectionSpace;
override selector("download:decideDestinationWithSuggestedFilename:") = Void, NSURLDownload, NSString;
override selector("download:didCancelAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
override selector("download:didCreateDestination:") = Void, NSURLDownload, NSString;
override selector("download:didFailWithError:") = Void, NSURLDownload, NSError;
override selector("download:didReceiveAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
override selector("download:didReceiveDataOfLength:") = Void, NSURLDownload, CULong;
override selector("download:didReceiveResponse:") = Void, NSURLDownload, NSURLResponse;
override selector("download:shouldDecodeSourceDataOfMIMEType:") = Bool, NSURLDownload, NSString;
override selector("download:willResumeWithResponse:fromByte:") = Void, NSURLDownload, NSURLResponse, Int64;
override selector("download:willSendRequest:redirectResponse:") = NSURLRequest, NSURLDownload, NSURLRequest, NSURLResponse;
override selector("downloadDidBegin:") = Void, NSURLDownload;
override selector("downloadDidFinish:") = Void, NSURLDownload;
override selector("downloadShouldUseCredentialStorage:") = Bool, NSURLDownload;
override selector("dragColor:withEvent:fromView:") = Bool, NSColor, NSEvent, NSView;
override selector("dragCopyCursor") = NSCursor;
override selector("dragFile:fromRect:slideBack:event:") = Bool, NSString, NSRect, Bool, NSEvent;
override selector("dragImage:at:offset:event:pasteboard:source:slideBack:") = Void, NSImage, NSPoint, NSSize, NSEvent, NSPasteboard, Id, Bool;
override selector("dragImageForRows:event:dragImageOffset:") = NSImage, NSArray, NSEvent, NSPointPointer;
override selector("dragImageForRowsWithIndexes:tableColumns:event:offset:") = NSImage, NSIndexSet, NSArray, NSEvent, NSPointPointer;
override selector("dragImageForSelectionWithEvent:origin:") = NSImage, NSEvent, NSPointPointer;
override selector("dragLinkCursor") = NSCursor;
override selector("dragOperationForDraggingInfo:type:") = CULong, Id, NSString;
override selector("dragPromisedFilesOfTypes:fromRect:source:slideBack:event:") = Bool, NSArray, NSRect, Id, Bool, NSEvent;
override selector("dragSelectionWithEvent:offset:slideBack:") = Bool, NSEvent, NSSize, Bool;
override selector("draggedColumn") = CLong;
override selector("draggedDistance") = Double;
override selector("draggedImage") = NSImage;
override selector("draggedImage:beganAt:") = Void, NSImage, NSPoint;
override selector("draggedImage:endedAt:deposited:") = Void, NSImage, NSPoint, Bool;
override selector("draggedImage:endedAt:operation:") = Void, NSImage, NSPoint, CULong;
override selector("draggedImage:movedTo:") = Void, NSImage, NSPoint;
override selector("draggedImageLocation") = NSPoint;
override selector("draggingDestinationFeedbackStyle") = CLong;
override selector("draggingDestinationWindow") = NSWindow;
override selector("draggingEnded:") = Void, Id;
override selector("draggingEntered:") = CULong, Id;
override selector("draggingExited:") = Void, Id;
override selector("draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSIndexSet, NSEvent, NSPointPointer;
override selector("draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSIndexSet, CLong, NSEvent, NSPointPointer;
override selector("draggingLocation") = NSPoint;
override selector("draggingPasteboard") = NSPasteboard;
override selector("draggingSequenceNumber") = CLong;
override selector("draggingSource") = Id;
override selector("draggingSourceOperationMask") = CULong;
override selector("draggingSourceOperationMaskForLocal:") = CULong, Bool;
override selector("draggingUpdated:") = CULong, Id;
override selector("drain") = Void;
override selector("draw") = Bool;
override selector("drawArrow:highlight:") = Void, CULong, Bool;
override selector("drawAtPoint:") = Bool, NSPoint;
override selector("drawAtPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
override selector("drawAtPoint:withAttributes:") = Void, NSPoint, NSDictionary;
override selector("drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:") = Void, NSTextTableBlock, NSRect, NSView, NSRange, NSLayoutManager;
override selector("drawBackgroundForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
override selector("drawBackgroundInClipRect:") = Void, NSRect;
override selector("drawBackgroundWithFrame:inView:characterRange:layoutManager:") = Void, NSRect, NSView, NSRange, NSLayoutManager;
override selector("drawBarInside:flipped:") = Void, NSRect, Bool;
override selector("drawBezelWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawBorderAndBackgroundWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawCell:") = Void, NSCell;
override selector("drawCellAtIndex:") = Void, CLong;
override selector("drawCellAtRow:column:") = Void, CLong, CLong;
override selector("drawCellInside:") = Void, NSCell;
override selector("drawDividerInRect:") = Void, NSRect;
override selector("drawFromCenter:radius:toCenter:radius:options:") = Void, NSPoint, Double, NSPoint, Double, CULong;
override selector("drawFromPoint:toPoint:options:") = Void, NSPoint, NSPoint, CULong;
override selector("drawGlyphsForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
override selector("drawGridInClipRect:") = Void, NSRect;
override selector("drawHashMarksAndLabelsInRect:") = Void, NSRect;
override selector("drawImage:withFrame:inView:") = Void, NSImage, NSRect, NSView;
override selector("drawImageWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawInBezierPath:angle:") = Void, NSBezierPath, Double;
override selector("drawInBezierPath:relativeCenterPosition:") = Void, NSBezierPath, NSPoint;
override selector("drawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Void, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
override selector("drawInContext:") = Void, CGContextRef;
override selector("drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Void, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
override selector("drawInRect:") = Bool, NSRect;
override selector("drawInRect:angle:") = Void, NSRect, Double;
override selector("drawInRect:fromRect:operation:fraction:") = Void, NSRect, NSRect, CULong, Double;
override selector("drawInRect:fromRect:operation:fraction:respectFlipped:hints:") = Bool, NSRect, NSRect, CULong, Double, Bool, NSDictionary;
override selector("drawInRect:relativeCenterPosition:") = Void, NSRect, NSPoint;
override selector("drawInRect:withAttributes:") = Void, NSRect, NSDictionary;
override selector("drawInsertionPointInRect:color:turnedOn:") = Void, NSRect, NSColor, Bool;
override selector("drawInteriorWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawKeyEquivalentWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawKnob") = Void;
override selector("drawKnob:") = Void, NSRect;
override selector("drawKnobSlotInRect:highlight:") = Void, NSRect, Bool;
override selector("drawLabel:inRect:") = Void, Bool, NSRect;
override selector("drawLayer:inContext:") = Void, CALayer, CGContextRef;
override selector("drawMarkersInRect:") = Void, NSRect;
override selector("drawPackedGlyphs:atPoint:") = Void, Pointer[CChar], NSPoint;
override selector("drawPageBorderWithSize:") = Void, NSSize;
override selector("drawParts") = Void;
override selector("drawRect:") = Void, NSRect;
override selector("drawRepresentation:inRect:") = Bool, NSImageRep, NSRect;
override selector("drawRow:clipRect:") = Void, CLong, NSRect;
override selector("drawSegment:inFrame:withView:") = Void, CLong, NSRect, NSView;
override selector("drawSelector") = SelectorHandle;
override selector("drawSeparatorItemWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawSheetBorderWithSize:") = Void, NSSize;
override selector("drawSortIndicatorWithFrame:inView:ascending:priority:") = Void, NSRect, NSView, Bool, CLong;
override selector("drawStateImageWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawStatusBarBackgroundInRect:withHighlight:") = Void, NSRect, Bool;
override selector("drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
override selector("drawSwatchInRect:") = Void, NSRect;
override selector("drawTitle:withFrame:inView:") = NSRect, NSAttributedString, NSRect, NSView;
override selector("drawTitleOfColumn:inRect:") = Void, CLong, NSRect;
override selector("drawTitleWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
override selector("drawViewBackgroundInRect:") = Void, NSRect;
override selector("drawWellInside:") = Void, NSRect;
override selector("drawWithExpansionFrame:inView:") = Void, NSRect, NSView;
override selector("drawWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawWithFrame:inView:characterIndex:") = Void, NSRect, NSView, CULong;
override selector("drawWithFrame:inView:characterIndex:layoutManager:") = Void, NSRect, NSView, CULong, NSLayoutManager;
override selector("drawWithRect:options:") = Void, NSRect, CLong;
override selector("drawWithRect:options:attributes:") = Void, NSRect, CLong, NSDictionary;
override selector("drawerDidClose:") = Void, NSNotification;
override selector("drawerDidOpen:") = Void, NSNotification;
override selector("drawerShouldClose:") = Bool, NSDrawer;
override selector("drawerShouldOpen:") = Bool, NSDrawer;
override selector("drawerWillClose:") = Void, NSNotification;
override selector("drawerWillOpen:") = Void, NSNotification;
override selector("drawerWillResizeContents:toSize:") = NSSize, NSDrawer, NSSize;
override selector("drawers") = NSArray;
override selector("drawingRectForBounds:") = NSRect, NSRect;
override selector("drawsBackground") = Bool;
override selector("drawsCellBackground") = Bool;
override selector("drawsGrid") = Bool;
override selector("drawsOutsideLineFragmentForGlyphAtIndex:") = Bool, CULong;
override selector("drawsVerticallyForCharacterAtIndex:") = Bool, CULong;
override selector("duplicateURLs:completionHandler:") = Void, NSArray, UnknownType;
override selector("duration") = Double;
override selector("earlierDate:") = NSDate, NSDate;
override selector("echosBullets") = Bool;
override selector("edge") = CULong;
override selector("edgeAntialiasingMask") = UInt;
override selector("editColumn:row:withEvent:select:") = Void, CLong, CLong, NSEvent, Bool;
override selector("editItemAtIndexPath:withEvent:select:") = Void, NSIndexPath, NSEvent, Bool;
override selector("editWithFrame:inView:editor:delegate:event:") = Void, NSRect, NSView, NSText, Id, NSEvent;
override selector("edited:range:changeInLength:") = Void, CULong, NSRange, CLong;
override selector("editedColumn") = CLong;
override selector("editedMask") = CULong;
override selector("editedRange") = NSRange;
override selector("editedRow") = CLong;
override selector("editingStringForObjectValue:") = NSString, Id;
override selector("elementAtIndex:") = CULong, CLong;
override selector("elementAtIndex:associatedPoints:") = CULong, CLong, NSPointArray;
override selector("elementCount") = CLong;
override selector("elementDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("elementWithName:") = Id, NSString;
override selector("elementWithName:URI:") = Id, NSString, NSString;
override selector("elementWithName:children:attributes:") = Id, NSString, NSArray, NSArray;
override selector("elementWithName:stringValue:") = Id, NSString, NSString;
override selector("elementsForLocalName:URI:") = NSArray, NSString, NSString;
override selector("elementsForName:") = NSArray, NSString;
override selector("emptyImage") = CIImage;
override selector("enable") = Void;
override selector("enableCollectorForPointer:") = Void, RawPointer;
override selector("enableCursorRects") = Void;
override selector("enableFlushWindow") = Void;
override selector("enableKeyEquivalentForDefaultButtonCell") = Void;
override selector("enableMultipleThreads") = Void;
override selector("enableSuddenTermination") = Void;
override selector("enableUndoRegistration") = Void;
override selector("enableUpdates") = Void;
override selector("enabledTextCheckingTypes") = UInt64;
override selector("enclosingMenuItem") = NSMenuItem;
override selector("enclosingScrollView") = NSScrollView;
override selector("encodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], CULong, RawPointer;
override selector("encodeBool:forKey:") = Void, Bool, NSString;
override selector("encodeBycopyObject:") = Void, Id;
override selector("encodeByrefObject:") = Void, Id;
override selector("encodeBytes:length:") = Void, RawPointer, CULong;
override selector("encodeBytes:length:forKey:") = Void, Pointer[CUChar], CULong, NSString;
override selector("encodeClassName:intoClassName:") = Void, NSString, NSString;
override selector("encodeConditionalObject:") = Void, Id;
override selector("encodeConditionalObject:forKey:") = Void, Id, NSString;
override selector("encodeDataObject:") = Void, NSData;
override selector("encodeDouble:forKey:") = Void, Double, NSString;
override selector("encodeFloat:forKey:") = Void, Float, NSString;
override selector("encodeInt32:forKey:") = Void, Int, NSString;
override selector("encodeInt64:forKey:") = Void, Int64, NSString;
override selector("encodeInt:forKey:") = Void, Int, NSString;
override selector("encodeInteger:forKey:") = Void, CLong, NSString;
override selector("encodeNXObject:") = Void, Id;
override selector("encodeObject:") = Void, Id;
override selector("encodeObject:forKey:") = Void, Id, NSString;
override selector("encodePoint:") = Void, NSPoint;
override selector("encodePoint:forKey:") = Void, NSPoint, NSString;
override selector("encodePortObject:") = Void, NSPort;
override selector("encodePropertyList:") = Void, Id;
override selector("encodeRect:") = Void, NSRect;
override selector("encodeRect:forKey:") = Void, NSRect, NSString;
override selector("encodeRootObject:") = Void, Id;
override selector("encodeSize:") = Void, NSSize;
override selector("encodeSize:forKey:") = Void, NSSize, NSString;
override selector("encodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
override varargSelector("encodeValuesOfObjCTypes:") = Void, Pointer[CChar];
override selector("encodeWithCoder:") = Void, NSCoder;
override selector("endContentAccess") = Void;
override selector("endDocument") = Void;
override selector("endEditing") = Void;
override selector("endEditing:") = Void, NSText;
override selector("endEditingFor:") = Void, Id;
override selector("endGestureWithEvent:") = Void, NSEvent;
override selector("endGrouping") = Void;
override selector("endLineWithGlyphRange:") = Void, NSRange;
override selector("endLoadInBackground") = Void;
override selector("endModalSession:") = Void, NSModalSession;
override selector("endPage") = Void;
override selector("endParagraph") = Void;
override selector("endSheet:") = Void, NSWindow;
override selector("endSheet:returnCode:") = Void, NSWindow, CLong;
override selector("endSpecifier") = NSScriptObjectSpecifier;
override selector("endSubelementIdentifier") = CULong;
override selector("endSubelementIndex") = CLong;
override selector("endUndoGrouping") = Void;
override selector("enqueueNotification:postingStyle:") = Void, NSNotification, CULong;
override selector("enqueueNotification:postingStyle:coalesceMask:forModes:") = Void, NSNotification, CULong, CULong, NSArray;
override selector("ensureAttributesAreFixedInRange:") = Void, NSRange;
override selector("ensureGlyphsForCharacterRange:") = Void, NSRange;
override selector("ensureGlyphsForGlyphRange:") = Void, NSRange;
override selector("ensureLayoutForBoundingRect:inTextContainer:") = Void, NSRect, NSTextContainer;
override selector("ensureLayoutForCharacterRange:") = Void, NSRange;
override selector("ensureLayoutForGlyphRange:") = Void, NSRange;
override selector("ensureLayoutForTextContainer:") = Void, NSTextContainer;
override selector("enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, RawPointer;
override selector("enterFullScreenMode:withOptions:") = Bool, NSScreen, NSDictionary;
override selector("entity") = NSEntityDescription;
override selector("entityDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("entityName") = NSString;
override selector("entryType") = CLong;
override selector("enumCodeValue") = UInt;
override selector("enumerateAttribute:inRange:options:usingBlock:") = Void, NSString, NSRange, CULong, UnknownType;
override selector("enumerateAttributesInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
override selector("enumerateIndexesInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
override selector("enumerateIndexesUsingBlock:") = Void, UnknownType;
override selector("enumerateIndexesWithOptions:usingBlock:") = Void, CULong, UnknownType;
override selector("enumerateKeysAndObjectsUsingBlock:") = Void, UnknownType;
override selector("enumerateKeysAndObjectsWithOptions:usingBlock:") = Void, CULong, UnknownType;
override selector("enumerateLinesUsingBlock:") = Void, UnknownType;
override selector("enumerateObjectsAtIndexes:options:usingBlock:") = Void, NSIndexSet, CULong, UnknownType;
override selector("enumerateObjectsUsingBlock:") = Void, UnknownType;
override selector("enumerateObjectsWithOptions:usingBlock:") = Void, CULong, UnknownType;
override selector("enumerateSubstringsInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
override selector("enumeratorAtPath:") = NSDirectoryEnumerator, NSString;
override selector("enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:") = NSDirectoryEnumerator, NSURL, NSArray, CULong, UnknownType;
override selector("environment") = NSDictionary;
override selector("era") = CLong;
override selector("eraSymbols") = NSArray;
override selector("error") = NSError;
override selector("errorWithDomain:code:userInfo:") = Id, NSString, CLong, NSDictionary;
override selector("evaluate") = Void;
override selector("evaluateWithObject:") = Bool, Id;
override selector("evaluateWithObject:substitutionVariables:") = Bool, Id, NSDictionary;
override selector("evaluatedArguments") = NSDictionary;
override selector("evaluatedReceivers") = Id;
override selector("evaluationErrorNumber") = CLong;
override selector("evaluationErrorSpecifier") = NSScriptObjectSpecifier;
override selector("eventClass") = UInt;
override selector("eventID") = UInt;
override selector("eventNumber") = CLong;
override selector("eventRef") = RawPointer;
override selector("eventWithCGEvent:") = NSEvent, CGEventRef;
override selector("eventWithEventRef:") = NSEvent, RawPointer;
override selector("evictsObjectsWithDiscardedContent") = Bool;
override selector("exceptionDuringOperation:error:leftOperand:rightOperand:") = NSDecimalNumber, SelectorHandle, CULong, NSDecimalNumber, NSDecimalNumber;
override selector("exceptionWithName:reason:userInfo:") = NSException, NSString, NSString, NSDictionary;
override selector("exchangeObjectAtIndex:withObjectAtIndex:") = Void, CULong, CULong;
override selector("excludedKeys") = NSArray;
override selector("executableArchitecture") = CLong;
override selector("executableArchitectures") = NSArray;
override selector("executablePath") = NSString;
override selector("executableURL") = NSURL;
override selector("executeAndReturnError:") = NSAppleEventDescriptor, Pointer[NSDictionary];
override selector("executeAppleEvent:error:") = NSAppleEventDescriptor, NSAppleEventDescriptor, Pointer[NSDictionary];
override selector("executeCommand") = Id;
override selector("executionBlocks") = NSArray;
override selector("exit") = Void;
override selector("exitFullScreenModeWithOptions:") = Void, NSDictionary;
override selector("expandItem:") = Void, Id;
override selector("expandItem:expandChildren:") = Void, Id, Bool;
override selector("expansionFrameWithFrame:inView:") = NSRect, NSRect, NSView;
override selector("expectedContentLength") = Int64;
override selector("expectedResourceDataSize") = Int64;
override selector("expiresDate") = NSDate;
override selector("exponentSymbol") = NSString;
override selector("exposeBinding:") = Void, NSString;
override selector("exposedBindings") = NSArray;
override selector("expressionBlock") = UnknownType;
override selector("expressionForAggregate:") = NSExpression, NSArray;
override selector("expressionForBlock:arguments:") = NSExpression, UnknownType, NSArray;
override selector("expressionForConstantValue:") = NSExpression, Id;
override selector("expressionForEvaluatedObject") = NSExpression;
override selector("expressionForFunction:arguments:") = NSExpression, NSString, NSArray;
override selector("expressionForFunction:selectorName:arguments:") = NSExpression, NSExpression, NSString, NSArray;
override selector("expressionForIntersectSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForKeyPath:") = NSExpression, NSString;
override selector("expressionForMinusSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForSubquery:usingIteratorVariable:predicate:") = NSExpression, NSExpression, NSString, Id;
override selector("expressionForUnionSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForVariable:") = NSExpression, NSString;
override selector("expressionType") = CULong;
override selector("expressionValueWithObject:context:") = Id, Id, NSMutableDictionary;
override selector("extendPowerOffBy:") = CLong, CLong;
override selector("extent") = CGRect;
override selector("extraLineFragmentRect") = NSRect;
override selector("extraLineFragmentTextContainer") = NSTextContainer;
override selector("extraLineFragmentUsedRect") = NSRect;
override selector("failureReason") = NSString;
override selector("failureResponse") = NSURLResponse;
override selector("familyName") = NSString;
override selector("fastestEncoding") = CULong;
override selector("fetch:") = Void, Id;
override selector("fetchPredicate") = NSPredicate;
override selector("fetchWithRequest:merge:error:") = Bool, NSFetchRequest, Bool, Pointer[NSError];
override selector("fieldEditor:forObject:") = NSText, Bool, Id;
override selector("fieldEditorForView:") = NSTextView, NSView;
override selector("fileAttributes") = NSDictionary;
override selector("fileAttributesAtPath:traverseLink:") = NSDictionary, NSString, Bool;
override selector("fileAttributesToWriteToFile:ofType:saveOperation:") = NSDictionary, NSString, NSString, CULong;
override selector("fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:") = NSDictionary, NSURL, NSString, CULong, NSURL, Pointer[NSError];
override selector("fileCreationDate") = NSDate;
override selector("fileDescriptor") = Int;
override selector("fileExistsAtPath:") = Bool, NSString;
override selector("fileExistsAtPath:isDirectory:") = Bool, NSString, Pointer[Bool];
override selector("fileExtensionHidden") = Bool;
override selector("fileExtensionsFromType:") = NSArray, NSString;
override selector("fileGroupOwnerAccountID") = NSNumber;
override selector("fileGroupOwnerAccountName") = NSString;
override selector("fileHFSCreatorCode") = UInt;
override selector("fileHFSTypeCode") = UInt;
override selector("fileHandleForReading") = NSFileHandle;
override selector("fileHandleForReadingAtPath:") = Id, NSString;
override selector("fileHandleForReadingFromURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleForUpdatingAtPath:") = Id, NSString;
override selector("fileHandleForUpdatingURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleForWriting") = NSFileHandle;
override selector("fileHandleForWritingAtPath:") = Id, NSString;
override selector("fileHandleForWritingToURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleWithNullDevice") = Id;
override selector("fileHandleWithStandardError") = Id;
override selector("fileHandleWithStandardInput") = Id;
override selector("fileHandleWithStandardOutput") = Id;
override selector("fileIsAppendOnly") = Bool;
override selector("fileIsImmutable") = Bool;
override selector("fileLabelColors") = NSArray;
override selector("fileLabels") = NSArray;
override selector("fileManager:shouldCopyItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldCopyItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldLinkItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldLinkItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldMoveItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldMoveItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:") = Bool, NSFileManager, NSDictionary;
override selector("fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:movingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:movingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:removingItemAtPath:") = Bool, NSFileManager, NSError, NSString;
override selector("fileManager:shouldProceedAfterError:removingItemAtURL:") = Bool, NSFileManager, NSError, NSURL;
override selector("fileManager:shouldRemoveItemAtPath:") = Bool, NSFileManager, NSString;
override selector("fileManager:shouldRemoveItemAtURL:") = Bool, NSFileManager, NSURL;
override selector("fileManager:willProcessPath:") = Void, NSFileManager, NSString;
override selector("fileModificationDate") = NSDate;
override selector("fileName") = NSString;
override selector("fileNameExtensionForType:saveOperation:") = NSString, NSString, CULong;
override selector("fileNameExtensionWasHiddenInLastRunSavePanel") = Bool;
override selector("fileNamesFromRunningOpenPanel") = NSArray;
override selector("fileOwnerAccountID") = NSNumber;
override selector("fileOwnerAccountName") = NSString;
override selector("filePathURL") = NSURL;
override selector("filePosixPermissions") = CULong;
override selector("fileReferenceURL") = NSURL;
override selector("fileSize") = UInt64;
override selector("fileSystemAttributesAtPath:") = NSDictionary, NSString;
override selector("fileSystemChanged") = Bool;
override selector("fileSystemFileNumber") = CULong;
override selector("fileSystemNumber") = CLong;
override selector("fileSystemRepresentation") = Pointer[CChar];
override selector("fileSystemRepresentationWithPath:") = Pointer[CChar], NSString;
override selector("fileType") = NSString;
override selector("fileTypeFromLastRunSavePanel") = NSString;
override selector("fileURL") = NSURL;
override selector("fileURLWithPath:") = Id, NSString;
override selector("fileURLWithPath:isDirectory:") = Id, NSString, Bool;
override selector("fileURLWithPathComponents:") = NSURL, NSArray;
override selector("fileWrapper") = NSFileWrapper;
override selector("fileWrapperFromRange:documentAttributes:error:") = NSFileWrapper, NSRange, NSDictionary, Pointer[NSError];
override selector("fileWrapperOfType:error:") = NSFileWrapper, NSString, Pointer[NSError];
override selector("fileWrapperRepresentationOfType:") = NSFileWrapper, NSString;
override selector("fileWrappers") = NSDictionary;
override selector("filename") = NSString;
override selector("filenameExtension:isValidForType:") = Bool, NSString, NSString;
override selector("filenames") = NSArray;
override selector("fill") = Void;
override selector("fillBackgroundRectArray:count:forCharacterRange:color:") = Void, NSRectArray, CULong, NSRange, NSColor;
override selector("fillColor") = NSColor;
override selector("fillMode") = NSString;
override selector("fillRect:") = Void, NSRect;
override selector("filterPredicate") = NSPredicate;
override selector("filterUsingPredicate:") = Void, NSPredicate;
override selector("filteredArrayUsingPredicate:") = NSArray, NSPredicate;
override selector("filteredSetUsingPredicate:") = NSSet, NSPredicate;
override selector("filters") = NSArray;
override selector("finalWritePrintInfo") = Void;
override selector("finalize") = Void;
override selector("findApplications") = Void;
override selector("findString:inBook:") = Void, NSString, NSString;
override selector("finishDecoding") = Void;
override selector("finishEncoding") = Void;
override selector("finishLaunching") = Void;
override selector("fire") = Void;
override selector("fireDate") = NSDate;
override selector("firstIndex") = CULong;
override selector("firstLineHeadIndent") = Double;
override selector("firstObjectCommonWithArray:") = Id, NSArray;
override selector("firstRectForCharacterRange:") = NSRect, NSRange;
override selector("firstRectForCharacterRange:actualRange:") = NSRect, NSRange, NSRangePointer;
override selector("firstResponder") = NSResponder;
override selector("firstTextView") = NSTextView;
override selector("firstUnlaidCharacterIndex") = CULong;
override selector("firstUnlaidGlyphIndex") = CULong;
override selector("firstVisibleColumn") = CLong;
override selector("firstWeekday") = CULong;
override selector("fixAttachmentAttributeInRange:") = Void, NSRange;
override selector("fixAttributesInRange:") = Void, NSRange;
override selector("fixFontAttributeInRange:") = Void, NSRange;
override selector("fixParagraphStyleAttributeInRange:") = Void, NSRange;
override selector("fixesAttributesLazily") = Bool;
override selector("flagsChanged:") = Void, NSEvent;
override selector("flatness") = Double;
override selector("floatForKey:") = Float, NSString;
override selector("floatForKey:inTable:") = Float, NSString, NSString;
override selector("floatValue") = Float;
override selector("flushBuffer") = Void;
override selector("flushBufferedKeyEvents") = Void;
override selector("flushCachedData") = Void;
override selector("flushGraphics") = Void;
override selector("flushHostCache") = Void;
override selector("flushWindow") = Void;
override selector("flushWindowIfNeeded") = Void;
override selector("focusRingType") = CULong;
override selector("focusView") = NSView;
override selector("focusedColumn") = CLong;
override selector("font") = NSFont;
override selector("fontAttributes") = NSDictionary;
override selector("fontAttributesInRange:") = NSDictionary, NSRange;
override selector("fontDescriptor") = NSFontDescriptor;
override selector("fontDescriptorByAddingAttributes:") = NSFontDescriptor, NSDictionary;
override selector("fontDescriptorWithFace:") = NSFontDescriptor, NSString;
override selector("fontDescriptorWithFamily:") = NSFontDescriptor, NSString;
override selector("fontDescriptorWithFontAttributes:") = NSFontDescriptor, NSDictionary;
override selector("fontDescriptorWithMatrix:") = NSFontDescriptor, NSAffineTransform;
override selector("fontDescriptorWithName:matrix:") = NSFontDescriptor, NSString, NSAffineTransform;
override selector("fontDescriptorWithName:size:") = NSFontDescriptor, NSString, Double;
override selector("fontDescriptorWithSize:") = NSFontDescriptor, Double;
override selector("fontDescriptorWithSymbolicTraits:") = NSFontDescriptor, UInt;
override selector("fontDescriptorsInCollection:") = NSArray, NSString;
override selector("fontManager:willIncludeFont:") = Bool, Id, NSString;
override selector("fontMenu:") = NSMenu, Bool;
override selector("fontName") = NSString;
override selector("fontNamed:hasTraits:") = Bool, NSString, CULong;
override selector("fontPanel:") = NSFontPanel, Bool;
override selector("fontWithDescriptor:size:") = NSFont, NSFontDescriptor, Double;
override selector("fontWithDescriptor:textTransform:") = NSFont, NSFontDescriptor, NSAffineTransform;
override selector("fontWithFamily:traits:weight:size:") = NSFont, NSString, CULong, CLong, Double;
override selector("fontWithName:matrix:") = NSFont, NSString, Pointer[Double];
override selector("fontWithName:size:") = NSFont, NSString, Double;
override selector("forceTerminate") = Bool;
override selector("foregroundColor") = NSColor;
override selector("forgetWord:") = Void, NSString;
override selector("formIntersectionWithCharacterSet:") = Void, NSCharacterSet;
override selector("formUnionWithCharacterSet:") = Void, NSCharacterSet;
override selector("format") = NSString;
override selector("formatWidth") = CULong;
override selector("formatter") = Id;
override selector("formatterBehavior") = CULong;
override selector("formattingDictionary") = NSDictionary;
override selector("formattingStringsFilename") = NSString;
override selector("forwardInvocation:") = Void, NSInvocation;
override selector("forwardingTargetForSelector:") = Id, SelectorHandle;
override selector("fractionOfDistanceThroughGlyphForPoint:") = Double, NSPoint;
override selector("fractionOfDistanceThroughGlyphForPoint:inTextContainer:") = Double, NSPoint, NSTextContainer;
override selector("fragment") = NSString;
override selector("frame") = NSRect;
override selector("frameAutosaveName") = NSString;
override selector("frameCenterRotation") = Double;
override selector("frameForItemAtIndex:") = NSRect, CULong;
override selector("frameLength") = CULong;
override selector("frameOfCellAtColumn:row:") = NSRect, CLong, CLong;
override selector("frameOfColumn:") = NSRect, CLong;
override selector("frameOfInsideOfColumn:") = NSRect, CLong;
override selector("frameOfOutlineCellAtRow:") = NSRect, CLong;
override selector("frameOfRow:inColumn:") = NSRect, CLong, CLong;
override selector("frameRate") = Float;
override selector("frameRectForContentRect:") = NSRect, NSRect;
override selector("frameRectForContentRect:styleMask:") = NSRect, NSRect, CULong;
override selector("frameRotation") = Double;
override selector("frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
override selector("fullPathForApplication:") = NSString, NSString;
override selector("function") = NSString;
override selector("gState") = CLong;
override selector("generalPasteboard") = NSPasteboard;
override selector("generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:") = Void, Id, CULong, Pointer[CULong], Pointer[CULong];
override selector("generatesCalendarDates") = Bool;
override selector("generatesDecimalNumbers") = Bool;
override selector("genericCMYKColorSpace") = NSColorSpace;
override selector("genericGamma22GrayColorSpace") = NSColorSpace;
override selector("genericGrayColorSpace") = NSColorSpace;
override selector("genericRGBColorSpace") = NSColorSpace;
override selector("getAdvancements:forGlyphs:count:") = Void, NSSizeArray, Pointer[UInt], CULong;
override selector("getAdvancements:forPackedGlyphs:length:") = Void, NSSizeArray, RawPointer, CULong;
override selector("getArgument:atIndex:") = Void, RawPointer, CLong;
override selector("getArgumentTypeAtIndex:") = Pointer[CChar], CULong;
override selector("getBitmapDataPlanes:") = Void, Pointer[Pointer[CUChar]];
override selector("getBoundingRects:forGlyphs:count:") = Void, NSRectArray, Pointer[UInt], CULong;
override selector("getBuffer:length:") = Bool, Pointer[Pointer[CUChar]], Pointer[CULong];
override selector("getBytes:") = Void, RawPointer;
override selector("getBytes:length:") = Void, RawPointer, CULong;
override selector("getBytes:maxLength:usedLength:encoding:options:range:remainingRange:") = Bool, RawPointer, CULong, Pointer[CULong], CULong, CULong, NSRange, NSRangePointer;
override selector("getBytes:range:") = Void, RawPointer, NSRange;
override selector("getCFRunLoop") = CFRunLoopRef;
override selector("getCString:") = Void, Pointer[CChar];
override selector("getCString:maxLength:") = Void, Pointer[CChar], CULong;
override selector("getCString:maxLength:encoding:") = Bool, Pointer[CChar], CULong, CULong;
override selector("getCString:maxLength:range:remainingRange:") = Void, Pointer[CChar], CULong, NSRange, NSRangePointer;
override selector("getCharacters:") = Void, Pointer[UShort];
override selector("getCharacters:range:") = Void, Pointer[UShort], NSRange;
override selector("getColor:location:atIndex:") = Void, Pointer[NSColor], Pointer[Double], CLong;
override selector("getComponents:") = Void, Pointer[Double];
override selector("getCompression:factor:") = Void, Pointer[CULong], Pointer[Float];
override selector("getCyan:magenta:yellow:black:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override selector("getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:") = Bool, NSString, Pointer[Bool], Pointer[Bool], Pointer[Bool], Pointer[NSString], Pointer[NSString];
override selector("getFileSystemRepresentation:maxLength:") = Bool, Pointer[CChar], CULong;
override selector("getFirstUnlaidCharacterIndex:glyphIndex:") = Void, Pointer[CULong], Pointer[CULong];
override selector("getGlyphs:range:") = CULong, Pointer[UInt], NSRange;
override selector("getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool];
override selector("getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool], Pointer[CUChar];
override selector("getHue:saturation:brightness:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override selector("getIndexes:") = Void, Pointer[CULong];
override selector("getIndexes:maxCount:inIndexRange:") = CULong, Pointer[CULong], CULong, NSRangePointer;
override selector("getInfoForFile:application:type:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
override selector("getInputStream:outputStream:") = Bool, Pointer[NSInputStream], Pointer[NSOutputStream];
override selector("getLineDash:count:phase:") = Void, Pointer[Double], Pointer[CLong], Pointer[Double];
override selector("getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:") = CULong, CULong, Bool, Bool, Pointer[Double], Pointer[CULong];
override selector("getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:") = Void, NSRectPointer, NSRectPointer, NSRange, NSPoint;
override selector("getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:") = Void, NSRectPointer, NSRectPointer, NSRectPointer, CULong, NSRect, Double, Double, Double;
override selector("getLineStart:end:contentsEnd:forRange:") = Void, Pointer[CULong], Pointer[CULong], Pointer[CULong], NSRange;
override selector("getNumberOfRows:columns:") = Void, Pointer[CLong], Pointer[CLong];
override selector("getObjectValue:forString:errorDescription:") = Bool, Pointer[Id], NSString, Pointer[NSString];
override selector("getObjectValue:forString:range:error:") = Bool, Pointer[Id], NSString, Pointer[NSRange], Pointer[NSError];
override selector("getObjects:") = Void, Pointer[Id];
override selector("getObjects:andKeys:") = Void, Pointer[Id], Pointer[Id];
override selector("getObjects:range:") = Void, Pointer[Id], NSRange;
override selector("getParagraphStart:end:contentsEnd:forRange:") = Void, Pointer[CULong], Pointer[CULong], Pointer[CULong], NSRange;
override selector("getPeriodicDelay:interval:") = Void, Pointer[Float], Pointer[Float];
override selector("getPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
override selector("getRectsBeingDrawn:count:") = Void, Pointer[Pointer[NSRect]], Pointer[CLong];
override selector("getRectsExposedDuringLiveResize:count:") = Void, Pointer[NSRect], Pointer[CLong];
override selector("getRed:green:blue:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override selector("getResourceValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("getReturnValue:") = Void, RawPointer;
override selector("getRow:column:forPoint:") = Bool, Pointer[CLong], Pointer[CLong], NSPoint;
override selector("getRow:column:ofCell:") = Bool, Pointer[CLong], Pointer[CLong], NSCell;
override selector("getStreamsToHost:port:inputStream:outputStream:") = Void, NSHost, CLong, Pointer[NSInputStream], Pointer[NSOutputStream];
override selector("getTIFFCompressionTypes:count:") = Void, Pointer[Pointer[CULong]], Pointer[CLong];
override selector("getValue:") = Void, RawPointer;
override selector("getValues:forAttribute:forVirtualScreen:") = Void, Pointer[Int], UInt, Int;
override selector("getValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
override selector("getWhite:alpha:") = Void, Pointer[Double], Pointer[Double];
override selector("globallyUniqueString") = NSString;
override selector("glyphAtIndex:") = UInt, CULong;
override selector("glyphAtIndex:isValidIndex:") = UInt, CULong, Pointer[Bool];
override selector("glyphGenerator") = NSGlyphGenerator;
override selector("glyphIndexForCharacterAtIndex:") = CULong, CULong;
override selector("glyphIndexForPoint:inTextContainer:") = CULong, NSPoint, NSTextContainer;
override selector("glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
override selector("glyphInfoWithCharacterIdentifier:collection:baseString:") = NSGlyphInfo, CULong, CULong, NSString;
override selector("glyphInfoWithGlyph:forFont:baseString:") = NSGlyphInfo, UInt, NSFont, NSString;
override selector("glyphInfoWithGlyphName:forFont:baseString:") = NSGlyphInfo, NSString, NSFont, NSString;
override selector("glyphName") = NSString;
override selector("glyphRangeForBoundingRect:inTextContainer:") = NSRange, NSRect, NSTextContainer;
override selector("glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:") = NSRange, NSRect, NSTextContainer;
override selector("glyphRangeForCharacterRange:actualCharacterRange:") = NSRange, NSRange, NSRangePointer;
override selector("glyphRangeForTextContainer:") = NSRange, NSTextContainer;
override selector("glyphWithName:") = UInt, NSString;
override selector("gradientType") = CULong;
override selector("grammarCheckingResultWithRange:details:") = NSTextCheckingResult, NSRange, NSArray;
override selector("grammarDetails") = NSArray;
override selector("graphicsContext") = NSGraphicsContext;
override selector("graphicsContextWithAttributes:") = NSGraphicsContext, NSDictionary;
override selector("graphicsContextWithBitmapImageRep:") = NSGraphicsContext, NSBitmapImageRep;
override selector("graphicsContextWithGraphicsPort:flipped:") = NSGraphicsContext, RawPointer, Bool;
override selector("graphicsContextWithWindow:") = NSGraphicsContext, NSWindow;
override selector("graphicsPort") = RawPointer;
override selector("grayColor") = NSColor;
override selector("green") = Double;
override selector("greenColor") = NSColor;
override selector("greenComponent") = Double;
override selector("gregorianStartDate") = NSDate;
override selector("gridColor") = NSColor;
override selector("gridStyleMask") = CULong;
override selector("groupedResults") = NSArray;
override selector("groupingAttributes") = NSArray;
override selector("groupingLevel") = CLong;
override selector("groupingSeparator") = NSString;
override selector("groupingSize") = CULong;
override selector("groupsByEvent") = Bool;
override selector("guessesForWord:") = NSArray, NSString;
override selector("guessesForWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
override selector("handleCloseScriptCommand:") = Id, NSCloseCommand;
override selector("handleEvent:") = Bool, NSEvent;
override varargSelector("handleFailureInFunction:file:lineNumber:description:") = Void, NSString, NSString, CLong, NSString;
override varargSelector("handleFailureInMethod:object:file:lineNumber:description:") = Void, SelectorHandle, Id, NSString, CLong, NSString;
override selector("handleMachMessage:") = Void, RawPointer;
override selector("handleMouseEvent:") = Bool, NSEvent;
override selector("handlePortMessage:") = Void, NSPortMessage;
override selector("handlePrintScriptCommand:") = Id, NSScriptCommand;
override selector("handleQueryWithUnboundKey:") = Id, NSString;
override selector("handleSaveScriptCommand:") = Id, NSScriptCommand;
override selector("handleTakeValue:forUnboundKey:") = Void, Id, NSString;
override selector("handleTextCheckingResults:forRange:types:options:orthography:wordCount:") = Void, NSArray, NSRange, UInt64, NSDictionary, NSOrthography, CLong;
override selector("hasAlpha") = Bool;
override selector("hasBytesAvailable") = Bool;
override selector("hasCloseBox") = Bool;
override selector("hasDynamicDepthLimit") = Bool;
override selector("hasEditedDocuments") = Bool;
override selector("hasHorizontalRuler") = Bool;
override selector("hasHorizontalScroller") = Bool;
override selector("hasLearnedWord:") = Bool, NSString;
override selector("hasMarkedText") = Bool;
override selector("hasMemberInPlane:") = Bool, CUChar;
override selector("hasNonContiguousLayout") = Bool;
override selector("hasOrderedToManyRelationshipForKey:") = Bool, NSString;
override selector("hasPassword") = Bool;
override selector("hasPrefix:") = Bool, NSString;
override selector("hasPropertyForKey:") = Bool, NSString;
override selector("hasReadablePropertyForKey:") = Bool, NSString;
override selector("hasShadow") = Bool;
override selector("hasSpaceAvailable") = Bool;
override selector("hasSubmenu") = Bool;
override selector("hasSuffix:") = Bool, NSString;
override selector("hasThousandSeparators") = Bool;
override selector("hasTitleBar") = Bool;
override selector("hasUnappliedChanges") = Bool;
override selector("hasUnautosavedChanges") = Bool;
override selector("hasUndoManager") = Bool;
override selector("hasValidObjectValue") = Bool;
override selector("hasVerticalRuler") = Bool;
override selector("hasVerticalScroller") = Bool;
override selector("hasWritablePropertyForKey:") = Bool, NSString;
override selector("hash") = CULong;
override selector("hashFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[CULong]];
override selector("hashTableWithOptions:") = Id, CULong;
override selector("hashTableWithWeakObjects") = Id;
override selector("headIndent") = Double;
override selector("headerCell") = Id;
override selector("headerColor") = NSColor;
override selector("headerLevel") = CLong;
override selector("headerRectOfColumn:") = NSRect, CLong;
override selector("headerTextColor") = NSColor;
override selector("headerToolTip") = NSString;
override selector("headerView") = NSTableHeaderView;
override selector("heightAdjustLimit") = Double;
override selector("heightTracksTextView") = Bool;
override selector("helpAnchor") = NSString;
override selector("helpMenu") = NSMenu;
override selector("helpRequested:") = Void, NSEvent;
override selector("hide") = Bool;
override selector("hide:") = Void, Id;
override selector("hideOtherApplications") = Void;
override selector("hideOtherApplications:") = Void, Id;
override selector("hidesEmptyCells") = Bool;
override selector("hidesOnDeactivate") = Bool;
override selector("highlight:") = Void, Bool;
override selector("highlight:withFrame:inView:") = Void, Bool, NSRect, NSView;
override selector("highlightCell:atRow:column:") = Void, Bool, CLong, CLong;
override selector("highlightColor") = NSColor;
override selector("highlightColorInView:") = NSColor, NSView;
override selector("highlightColorWithFrame:inView:") = NSColor, NSRect, NSView;
override selector("highlightMode") = Bool;
override selector("highlightSelectionInClipRect:") = Void, NSRect;
override selector("highlightWithLevel:") = NSColor, Double;
override selector("highlightedBranchImage") = NSImage;
override selector("highlightedItem") = NSMenuItem;
override selector("highlightedTableColumn") = NSTableColumn;
override selector("highlightsBy") = CLong;
override selector("hitPart") = CULong;
override selector("hitTest:") = Id, NSPoint;
override selector("hitTestForEvent:inRect:ofView:") = CULong, NSEvent, NSRect, NSView;
override selector("hitTestRect:withImageDestinationRect:context:hints:flipped:") = Bool, NSRect, NSRect, NSGraphicsContext, NSDictionary, Bool;
override selector("horizontalLineScroll") = Double;
override selector("horizontalPageScroll") = Double;
override selector("horizontalPagination") = CULong;
override selector("horizontalRulerView") = NSRulerView;
override selector("horizontalScroller") = NSScroller;
override selector("host") = NSString;
override selector("hostName") = NSString;
override selector("hostWithAddress:") = NSHost, NSString;
override selector("hostWithName:") = NSHost, NSString;
override selector("hotSpot") = NSPoint;
override selector("hour") = CLong;
override selector("hourOfDay") = CLong;
override selector("hueComponent") = Double;
override selector("hyphenCharacterForGlyphAtIndex:") = UInt, CULong;
override selector("hyphenationFactor") = Float;
override selector("hyphenationFactorForGlyphAtIndex:") = Float, CULong;
override selector("icon") = NSImage;
override selector("iconForFile:") = NSImage, NSString;
override selector("iconForFileType:") = NSImage, NSString;
override selector("iconForFiles:") = NSImage, NSArray;
override selector("identifier") = Id;
override selector("identity") = SecIdentityRef;
override selector("ignoreModifierKeysWhileDragging") = Bool;
override selector("ignoreSpelling:") = Void, Id;
override selector("ignoreWord:inSpellDocumentWithTag:") = Void, NSString, CLong;
override selector("ignoredWordsInSpellDocumentWithTag:") = NSArray, CLong;
override selector("ignoresAlpha") = Bool;
override selector("ignoresMouseEvents") = Bool;
override selector("ignoresMultiClick") = Bool;
override selector("illegalCharacterSet") = Id;
override selector("image") = NSImage;
override selector("image:didLoadPartOfRepresentation:withValidRows:") = Void, NSImage, NSImageRep, CLong;
override selector("image:didLoadRepresentation:withStatus:") = Void, NSImage, NSImageRep, CULong;
override selector("image:didLoadRepresentationHeader:") = Void, NSImage, NSImageRep;
override selector("image:willLoadRepresentation:") = Void, NSImage, NSImageRep;
override selector("imageAlignment") = CULong;
override selector("imageByApplyingTransform:") = CIImage, CGAffineTransform;
override selector("imageByCroppingToRect:") = CIImage, CGRect;
override selector("imageDidNotDraw:inRect:") = NSImage, Id, NSRect;
override selector("imageDimsWhenDisabled") = Bool;
override selector("imageFileTypes") = NSArray;
override selector("imageForSegment:") = NSImage, CLong;
override selector("imageFrameStyle") = CULong;
override selector("imageInterpolation") = CULong;
override selector("imageNamed:") = Id, NSString;
override selector("imageOrigin") = NSPoint;
override selector("imagePasteboardTypes") = NSArray;
override selector("imagePosition") = CULong;
override selector("imageRectForBounds:") = NSRect, NSRect;
override selector("imageRectForPaper:") = NSRect, NSString;
override selector("imageRectInRuler") = NSRect;
override selector("imageRepClassForData:") = Id, NSData;
override selector("imageRepClassForFileType:") = Id, NSString;
override selector("imageRepClassForPasteboardType:") = Id, NSString;
override selector("imageRepClassForType:") = Id, NSString;
override selector("imageRepWithCIImage:") = Id, CIImage;
override selector("imageRepWithContentsOfFile:") = Id, NSString;
override selector("imageRepWithContentsOfURL:") = Id, NSURL;
override selector("imageRepWithData:") = Id, NSData;
override selector("imageRepWithPasteboard:") = Id, NSPasteboard;
override selector("imageRepsWithContentsOfFile:") = NSArray, NSString;
override selector("imageRepsWithContentsOfURL:") = NSArray, NSURL;
override selector("imageRepsWithData:") = NSArray, NSData;
override selector("imageRepsWithPasteboard:") = NSArray, NSPasteboard;
override selector("imageScaling") = CULong;
override selector("imageScalingForSegment:") = CULong, CLong;
override selector("imageTypes") = NSArray;
override selector("imageUnfilteredFileTypes") = NSArray;
override selector("imageUnfilteredPasteboardTypes") = NSArray;
override selector("imageUnfilteredTypes") = NSArray;
override selector("imageWidth") = Double;
override selector("imageWithBitmapData:bytesPerRow:size:format:colorSpace:") = CIImage, NSData, CULong, CGSize, Int, CGColorSpaceRef;
override selector("imageWithCGImage:") = CIImage, CGImageRef;
override selector("imageWithCGImage:options:") = CIImage, CGImageRef, NSDictionary;
override selector("imageWithCGLayer:") = CIImage, CGLayerRef;
override selector("imageWithCGLayer:options:") = CIImage, CGLayerRef, NSDictionary;
override selector("imageWithCVImageBuffer:") = CIImage, CVImageBufferRef;
override selector("imageWithCVImageBuffer:options:") = CIImage, CVImageBufferRef, NSDictionary;
override selector("imageWithColor:") = CIImage, CIColor;
override selector("imageWithContentsOfURL:") = CIImage, NSURL;
override selector("imageWithContentsOfURL:options:") = CIImage, NSURL, NSDictionary;
override selector("imageWithData:") = CIImage, NSData;
override selector("imageWithData:options:") = CIImage, NSData, NSDictionary;
override selector("imageWithIOSurface:") = CIImage, IOSurfaceRef;
override selector("imageWithIOSurface:options:") = CIImage, IOSurfaceRef, NSDictionary;
override selector("imageWithTexture:size:flipped:colorSpace:") = CIImage, UInt, CGSize, Bool, CGColorSpaceRef;
override selector("imageablePageBounds") = NSRect;
override selector("implementationClassName") = NSString;
override selector("importsGraphics") = Bool;
override selector("inLiveResize") = Bool;
override selector("includedKeys") = NSArray;
override selector("increaseLengthBy:") = Void, CULong;
override selector("increment") = Double;
override selector("incrementBy:") = Void, Double;
override selector("incrementalLoadFromData:complete:") = CLong, NSData, Bool;
override selector("indent:") = Void, Id;
override selector("indentationLevel") = CLong;
override selector("indentationMarkerFollowsCell") = Bool;
override selector("indentationPerLevel") = Double;
override selector("independentConversationQueueing") = Bool;
override selector("index") = CULong;
override selector("indexAtPosition:") = CULong, CULong;
override selector("indexGreaterThanIndex:") = CULong, CULong;
override selector("indexGreaterThanOrEqualToIndex:") = CULong, CULong;
override selector("indexInRange:options:passingTest:") = CULong, NSRange, CULong, UnknownType;
override selector("indexLessThanIndex:") = CULong, CULong;
override selector("indexLessThanOrEqualToIndex:") = CULong, CULong;
override selector("indexOfCellWithTag:") = CLong, CLong;
override selector("indexOfItem:") = CLong, NSMenuItem;
override selector("indexOfItemWithObjectValue:") = CLong, Id;
override selector("indexOfItemWithRepresentedObject:") = CLong, Id;
override selector("indexOfItemWithSubmenu:") = CLong, NSMenu;
override selector("indexOfItemWithTag:") = CLong, CLong;
override selector("indexOfItemWithTarget:andAction:") = CLong, Id, SelectorHandle;
override selector("indexOfItemWithTitle:") = CLong, NSString;
override selector("indexOfObject:") = CULong, Id;
override selector("indexOfObject:inRange:") = CULong, Id, NSRange;
override selector("indexOfObject:inSortedRange:options:usingComparator:") = CULong, Id, NSRange, CULong, NSComparator;
override selector("indexOfObjectAtIndexes:options:passingTest:") = CULong, NSIndexSet, CULong, UnknownType;
override selector("indexOfObjectIdenticalTo:") = CULong, Id;
override selector("indexOfObjectIdenticalTo:inRange:") = CULong, Id, NSRange;
override selector("indexOfObjectPassingTest:") = CULong, UnknownType;
override selector("indexOfObjectWithOptions:passingTest:") = CULong, CULong, UnknownType;
override selector("indexOfPasteboardItem:") = CULong, NSPasteboardItem;
override selector("indexOfResult:") = CULong, Id;
override selector("indexOfSelectedItem") = CLong;
override selector("indexOfTabViewItem:") = CLong, NSTabViewItem;
override selector("indexOfTabViewItemWithIdentifier:") = CLong, Id;
override selector("indexOfTickMarkAtPoint:") = CLong, NSPoint;
override selector("indexPassingTest:") = CULong, UnknownType;
override selector("indexPath") = NSIndexPath;
override selector("indexPathByAddingIndex:") = NSIndexPath, CULong;
override selector("indexPathByRemovingLastIndex") = NSIndexPath;
override selector("indexPathForColumn:") = NSIndexPath, CLong;
override selector("indexPathWithIndex:") = Id, CULong;
override selector("indexPathWithIndexes:length:") = Id, Pointer[CULong], CULong;
override selector("indexSet") = Id;
override selector("indexSetWithIndex:") = Id, CULong;
override selector("indexSetWithIndexesInRange:") = Id, NSRange;
override selector("indexWithOptions:passingTest:") = CULong, CULong, UnknownType;
override selector("indexesInRange:options:passingTest:") = NSIndexSet, NSRange, CULong, UnknownType;
override selector("indexesOfObjectsAtIndexes:options:passingTest:") = NSIndexSet, NSIndexSet, CULong, UnknownType;
override selector("indexesOfObjectsPassingTest:") = NSIndexSet, UnknownType;
override selector("indexesOfObjectsWithOptions:passingTest:") = NSIndexSet, CULong, UnknownType;
override selector("indexesPassingTest:") = NSIndexSet, UnknownType;
override selector("indexesWithOptions:passingTest:") = NSIndexSet, CULong, UnknownType;
override selector("indicatorImageInTableColumn:") = NSImage, NSTableColumn;
override selector("indicesOfObjectsByEvaluatingObjectSpecifier:") = NSArray, NSScriptObjectSpecifier;
override selector("indicesOfObjectsByEvaluatingWithContainer:count:") = Pointer[CLong], Id, Pointer[CLong];
override selector("infoDictionary") = NSDictionary;
override selector("infoForBinding:") = NSDictionary, NSString;
override selector("informativeText") = NSString;
override selector("init") = Id;
override selector("initAndTestWithTests:") = Id, NSArray;
override selector("initByReferencingFile:") = Id, NSString;
override selector("initByReferencingURL:") = Id, NSURL;
override selector("initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, CULong, NSURL, Pointer[Bool], Pointer[NSError];
override selector("initDirectoryWithFileWrappers:") = Id, NSDictionary;
override selector("initFileURLWithPath:") = Id, NSString;
override selector("initFileURLWithPath:isDirectory:") = Id, NSString, Bool;
override selector("initForIncrementalLoad") = Id;
override selector("initForReadingWithData:") = Id, NSData;
override selector("initForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
override selector("initForWritingWithMutableData:") = Id, NSMutableData;
override selector("initImageCell:") = Id, NSImage;
override selector("initListDescriptor") = Id;
override selector("initNotTestWithTest:") = Id, NSScriptWhoseTest;
override selector("initOrTestWithTests:") = Id, NSArray;
override selector("initRecordDescriptor") = Id;
override selector("initRegularFileWithContents:") = Id, NSData;
override selector("initRemoteWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
override selector("initRemoteWithTCPPort:host:") = Id, UShort, NSString;
override selector("initSymbolicLinkWithDestination:") = Id, NSString;
override selector("initSymbolicLinkWithDestinationURL:") = Id, NSURL;
override selector("initTextCell:") = Id, NSString;
override selector("initTextCell:pullsDown:") = Id, NSString, Bool;
override selector("initToBuffer:capacity:") = Id, Pointer[CUChar], CULong;
override selector("initToFileAtPath:append:") = Id, NSString, Bool;
override selector("initToMemory") = Id;
override selector("initWithAEDescNoCopy:") = Id, Pointer[AEDesc];
override selector("initWithArray:") = Id, NSArray;
override selector("initWithArray:copyItems:") = Id, NSArray, Bool;
override selector("initWithAttributedString:") = Id, NSAttributedString;
override selector("initWithAttributes:") = Id, Pointer[UInt];
override selector("initWithAuthenticationChallenge:sender:") = Id, NSURLAuthenticationChallenge, Id;
override selector("initWithBitmapData:bytesPerRow:size:format:colorSpace:") = Id, NSData, CULong, CGSize, Int, CGColorSpaceRef;
override selector("initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CULong, CLong, CLong;
override selector("initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CLong, CLong;
override selector("initWithBitmapImageRep:") = Id, NSBitmapImageRep;
override selector("initWithBool:") = Id, Bool;
override selector("initWithBytes:length:") = Id, RawPointer, CULong;
override selector("initWithBytes:length:encoding:") = Id, RawPointer, CULong, CULong;
override selector("initWithBytes:objCType:") = Id, RawPointer, Pointer[CChar];
override selector("initWithBytesNoCopy:length:") = Id, RawPointer, CULong;
override selector("initWithBytesNoCopy:length:encoding:freeWhenDone:") = Id, RawPointer, CULong, CULong, Bool;
override selector("initWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, CULong, Bool;
override selector("initWithCGColor:") = Id, CGColorRef;
override selector("initWithCGColorSpace:") = Id, CGColorSpaceRef;
override selector("initWithCGImage:") = Id, CGImageRef;
override selector("initWithCGImage:options:") = Id, CGImageRef, NSDictionary;
override selector("initWithCGImage:size:") = Id, CGImageRef, NSSize;
override selector("initWithCGLContextObj:") = Id, RawPointer;
override selector("initWithCGLPBufferObj:") = Id, RawPointer;
override selector("initWithCGLPixelFormatObj:") = Id, RawPointer;
override selector("initWithCGLayer:") = Id, CGLayerRef;
override selector("initWithCGLayer:options:") = Id, CGLayerRef, NSDictionary;
override selector("initWithCIImage:") = Id, CIImage;
override selector("initWithCString:") = Id, Pointer[CChar];
override selector("initWithCString:encoding:") = Id, Pointer[CChar], CULong;
override selector("initWithCString:length:") = Id, Pointer[CChar], CULong;
override selector("initWithCStringNoCopy:length:freeWhenDone:") = Id, Pointer[CChar], CULong, Bool;
override selector("initWithCVImageBuffer:") = Id, CVImageBufferRef;
override selector("initWithCVImageBuffer:options:") = Id, CVImageBufferRef, NSDictionary;
override selector("initWithCalendarIdentifier:") = Id, NSString;
override selector("initWithCapacity:") = Id, CULong;
override selector("initWithChar:") = Id, CChar;
override selector("initWithCharacters:length:") = Id, Pointer[UShort], CULong;
override selector("initWithCharactersNoCopy:length:freeWhenDone:") = Id, Pointer[UShort], CULong, Bool;
override selector("initWithClient:") = Id, Id;
override selector("initWithCoder:") = Id, NSCoder;
override selector("initWithColor:") = Id, NSColor;
override selector("initWithColorSyncProfile:") = Id, RawPointer;
override selector("initWithColors:") = Id, NSArray;
override selector("initWithColors:atLocations:colorSpace:") = Id, NSArray, Pointer[Double], NSColorSpace;
override varargSelector("initWithColorsAndLocations:") = Id, NSColor;
override selector("initWithCommandDescription:") = Id, NSScriptCommandDescription;
override selector("initWithCompoundTypes:") = Id, NSArray;
override selector("initWithCondition:") = Id, CLong;
override selector("initWithContainerClassDescription:containerSpecifier:key:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString;
override selector("initWithContainerClassDescription:containerSpecifier:key:index:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, CLong;
override selector("initWithContainerClassDescription:containerSpecifier:key:name:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSString;
override selector("initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, CULong, NSScriptObjectSpecifier;
override selector("initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptObjectSpecifier, NSScriptObjectSpecifier;
override selector("initWithContainerClassDescription:containerSpecifier:key:test:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptWhoseTest;
override selector("initWithContainerClassDescription:containerSpecifier:key:uniqueID:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, Id;
override selector("initWithContainerSize:") = Id, NSSize;
override selector("initWithContainerSpecifier:key:") = Id, NSScriptObjectSpecifier, NSString;
override selector("initWithContent:") = Id, Id;
override selector("initWithContentRect:styleMask:backing:defer:") = Id, NSRect, CULong, CULong, Bool;
override selector("initWithContentRect:styleMask:backing:defer:screen:") = Id, NSRect, CULong, CULong, Bool, NSScreen;
override selector("initWithContentSize:preferredEdge:") = Id, NSSize, CULong;
override selector("initWithContentsOfFile:") = Id, NSString;
override selector("initWithContentsOfFile:byReference:") = Id, NSString, Bool;
override selector("initWithContentsOfFile:encoding:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("initWithContentsOfFile:ofType:") = Id, NSString, NSString;
override selector("initWithContentsOfFile:options:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("initWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[CULong], Pointer[NSError];
override selector("initWithContentsOfMappedFile:") = Id, NSString;
override selector("initWithContentsOfURL:") = Id, NSURL;
override selector("initWithContentsOfURL:byReference:") = Id, NSURL, Bool;
override selector("initWithContentsOfURL:encoding:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("initWithContentsOfURL:error:") = Id, NSURL, Pointer[NSDictionary];
override selector("initWithContentsOfURL:ofType:") = Id, NSURL, NSString;
override selector("initWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
override selector("initWithContentsOfURL:options:") = Id, NSURL, NSDictionary;
override selector("initWithContentsOfURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("initWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[CULong], Pointer[NSError];
override selector("initWithData:") = Id, NSData;
override selector("initWithData:encoding:") = Id, NSData, CULong;
override selector("initWithData:options:") = Id, NSData, NSDictionary;
override selector("initWithData:options:documentAttributes:error:") = Id, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("initWithData:options:error:") = Id, NSData, CULong, Pointer[NSError];
override selector("initWithDataIgnoringOrientation:") = Id, NSData;
override selector("initWithDateFormat:allowNaturalLanguage:") = Id, NSString, Bool;
override selector("initWithDecimal:") = Id, NSDecimal;
override selector("initWithDefaults:initialValues:") = Id, NSUserDefaults, NSDictionary;
override selector("initWithDelegate:name:") = Id, Id, NSString;
override selector("initWithDescriptorType:bytes:length:") = Id, UInt, RawPointer, CULong;
override selector("initWithDescriptorType:data:") = Id, UInt, NSData;
override selector("initWithDictionary:") = Id, NSDictionary;
override selector("initWithDictionary:copyItems:") = Id, NSDictionary, Bool;
override selector("initWithDocFormat:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithDomain:code:userInfo:") = Id, NSString, CLong, NSDictionary;
override selector("initWithDomain:type:name:") = Id, NSString, NSString, NSString;
override selector("initWithDomain:type:name:port:") = Id, NSString, NSString, NSString, Int;
override selector("initWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
override selector("initWithDouble:") = Id, Double;
override selector("initWithDrawSelector:delegate:") = Id, SelectorHandle, Id;
override selector("initWithDuration:animationCurve:") = Id, Double, CULong;
override selector("initWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = Id, UInt, UInt, NSAppleEventDescriptor, Short, Int;
override selector("initWithExpressionType:") = Id, CULong;
override selector("initWithFileAtPath:") = Id, NSString;
override selector("initWithFileDescriptor:") = Id, Int;
override selector("initWithFileDescriptor:closeOnDealloc:") = Id, Int, Bool;
override selector("initWithFileWrapper:") = Id, NSFileWrapper;
override selector("initWithFireDate:interval:target:selector:userInfo:repeats:") = Id, NSDate, Double, Id, SelectorHandle, Id, Bool;
override selector("initWithFloat:") = Id, Float;
override selector("initWithFocusedViewRect:") = Id, NSRect;
override selector("initWithFontAttributes:") = Id, NSDictionary;
override varargSelector("initWithFormat:") = Id, NSString;
override selector("initWithFormat:arguments:") = Id, NSString, Pointer[__va_list_tag];
override varargSelector("initWithFormat:locale:") = Id, NSString, Id;
override selector("initWithFormat:locale:arguments:") = Id, NSString, Id, Pointer[__va_list_tag];
override selector("initWithFormat:shareContext:") = Id, NSOpenGLPixelFormat, NSOpenGLContext;
override selector("initWithFrame:") = Id, NSRect;
override selector("initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, Id, CLong, CLong;
override selector("initWithFrame:mode:prototype:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, NSCell, CLong, CLong;
override selector("initWithFrame:pixelFormat:") = Id, NSRect, NSOpenGLPixelFormat;
override selector("initWithFrame:pullsDown:") = Id, NSRect, Bool;
override selector("initWithFrame:textContainer:") = Id, NSRect, NSTextContainer;
override selector("initWithHTML:baseURL:documentAttributes:") = Id, NSData, NSURL, Pointer[NSDictionary];
override selector("initWithHTML:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithHTML:options:documentAttributes:") = Id, NSData, NSDictionary, Pointer[NSDictionary];
override selector("initWithHost:port:protocol:realm:authenticationMethod:") = Id, NSString, CLong, NSString, NSString, NSString;
override selector("initWithICCProfileData:") = Id, NSData;
override selector("initWithIOSurface:") = Id, IOSurfaceRef;
override selector("initWithIOSurface:options:") = Id, IOSurfaceRef, NSDictionary;
override selector("initWithIconRef:") = Id, IconRef;
override selector("initWithIdentifier:") = Id, Id;
override selector("initWithIdentity:certificates:persistence:") = Id, SecIdentityRef, NSArray, CULong;
override selector("initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:") = Id, NSImage, NSColor, NSColor, NSPoint;
override selector("initWithImage:hotSpot:") = Id, NSImage, NSPoint;
override selector("initWithIndex:") = Id, CULong;
override selector("initWithIndexSet:") = Id, NSIndexSet;
override selector("initWithIndexes:length:") = Id, Pointer[CULong], CULong;
override selector("initWithIndexesInRange:") = Id, NSRange;
override selector("initWithInt:") = Id, Int;
override selector("initWithInteger:") = Id, CLong;
override selector("initWithInvocation:") = Id, NSInvocation;
override selector("initWithItemIdentifier:") = Id, NSString;
override selector("initWithKey:ascending:") = Id, NSString, Bool;
override selector("initWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
override selector("initWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
override selector("initWithKeyOptions:valueOptions:capacity:") = Id, CULong, CULong, CULong;
override selector("initWithKeyPointerFunctions:valuePointerFunctions:capacity:") = Id, NSPointerFunctions, NSPointerFunctions, CULong;
override selector("initWithKind:") = Id, CULong;
override selector("initWithKind:options:") = Id, CULong, CULong;
override selector("initWithLayer:") = Id, Id;
override selector("initWithLeftExpression:rightExpression:customSelector:") = Id, NSExpression, NSExpression, SelectorHandle;
override selector("initWithLeftExpression:rightExpression:modifier:type:options:") = Id, NSExpression, NSExpression, CULong, CULong, CULong;
override selector("initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:") = Id, NSArray, CULong, CULong, NSArray, CULong;
override selector("initWithLeftExpressions:rightExpressions:modifier:operators:options:") = Id, NSArray, NSArray, CULong, NSArray, CULong;
override selector("initWithLength:") = Id, CULong;
override selector("initWithLevelIndicatorStyle:") = Id, CULong;
override selector("initWithLocal:connection:") = Id, Id, NSConnection;
override selector("initWithLocaleIdentifier:") = Id, NSString;
override selector("initWithLong:") = Id, CLong;
override selector("initWithLongLong:") = Id, Int64;
override selector("initWithMachPort:") = Id, UInt;
override selector("initWithMachPort:options:") = Id, UInt, CULong;
override selector("initWithMantissa:exponent:isNegative:") = Id, UInt64, Short, Bool;
override selector("initWithMarkerFormat:options:") = Id, NSString, CULong;
override selector("initWithMemoryCapacity:diskCapacity:diskPath:") = Id, CULong, CULong, NSString;
override selector("initWithMovie:") = Id, QTMovie;
override selector("initWithName:") = Id, NSString;
override selector("initWithName:URI:") = Id, NSString, NSString;
override selector("initWithName:data:") = Id, NSString, NSData;
override selector("initWithName:fromFile:") = Id, NSString, NSString;
override selector("initWithName:host:") = NSInputManager, NSString, NSString;
override selector("initWithName:reason:userInfo:") = Id, NSString, NSString, NSDictionary;
override selector("initWithName:stringValue:") = Id, NSString, NSString;
override selector("initWithNibName:bundle:") = Id, NSString, NSBundle;
override selector("initWithNibNamed:bundle:") = Id, NSString, NSBundle;
override selector("initWithNotificationCenter:") = Id, NSNotificationCenter;
override selector("initWithObjectSpecifier:comparisonOperator:testObject:") = Id, NSScriptObjectSpecifier, CULong, Id;
override varargSelector("initWithObjects:") = Id, Id;
override selector("initWithObjects:count:") = Id, Pointer[Id], CULong;
override selector("initWithObjects:forKeys:") = Id, NSArray, NSArray;
override selector("initWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], CULong;
override varargSelector("initWithObjectsAndKeys:") = Id, Id;
override selector("initWithOptions:") = Id, CULong;
override selector("initWithOptions:capacity:") = Id, CULong, CULong;
override selector("initWithPasteboard:") = Id, NSPasteboard;
override selector("initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
override selector("initWithPath:") = Id, NSString;
override selector("initWithPath:documentAttributes:") = Id, NSString, Pointer[NSDictionary];
override selector("initWithPickerMask:colorPanel:") = Id, CULong, NSColorPanel;
override selector("initWithPointerFunctions:") = Id, NSPointerFunctions;
override selector("initWithPointerFunctions:capacity:") = Id, NSPointerFunctions, CULong;
override selector("initWithPosition:objectSpecifier:") = Id, CULong, NSScriptObjectSpecifier;
override selector("initWithProperties:") = Id, NSDictionary;
override selector("initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:") = Id, NSURLProtectionSpace, NSURLCredential, CLong, NSURLResponse, NSError, Id;
override selector("initWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
override selector("initWithProtocolFamily:socketType:protocol:socket:") = Id, Int, Int, Int, Int;
override selector("initWithProxyHost:port:type:realm:authenticationMethod:") = Id, NSString, CLong, NSString, NSString, NSString;
override selector("initWithRTF:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithRTFD:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithRTFDFileWrapper:documentAttributes:") = Id, NSFileWrapper, Pointer[NSDictionary];
override selector("initWithReceivePort:sendPort:") = Id, NSPort, NSPort;
override selector("initWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
override selector("initWithRect:options:owner:userInfo:") = Id, NSRect, CULong, Id, NSDictionary;
override selector("initWithRepresentedObject:") = Id, Id;
override selector("initWithRequest:cachedResponse:client:") = Id, NSURLRequest, NSCachedURLResponse, Id;
override selector("initWithRequest:delegate:") = Id, NSURLRequest, Id;
override selector("initWithRequest:delegate:startImmediately:") = Id, NSURLRequest, Id, Bool;
override selector("initWithResponse:data:") = Id, NSURLResponse, NSData;
override selector("initWithResponse:data:userInfo:storagePolicy:") = Id, NSURLResponse, NSData, NSDictionary, CULong;
override selector("initWithResumeData:delegate:path:") = Id, NSData, Id, NSString;
override selector("initWithRootElement:") = Id, NSXMLElement;
override selector("initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, CULong, Short, Bool, Bool, Bool, Bool;
override selector("initWithRulerView:markerLocation:image:imageOrigin:") = Id, NSRulerView, Double, NSImage, NSPoint;
override selector("initWithScheme:host:path:") = Id, NSString, NSString, NSString;
override selector("initWithScrollView:orientation:") = Id, NSScrollView, CULong;
override selector("initWithSendPort:receivePort:components:") = Id, NSPort, NSPort, NSArray;
override selector("initWithSerializedRepresentation:") = Id, NSData;
override selector("initWithSet:") = Id, NSSet;
override selector("initWithSet:copyItems:") = Id, NSSet, Bool;
override selector("initWithShort:") = Id, Short;
override selector("initWithSize:") = Id, NSSize;
override selector("initWithSize:depth:separate:alpha:") = Id, NSSize, Int, Bool, Bool;
override selector("initWithSource:") = Id, NSString;
override selector("initWithStartingColor:endingColor:") = Id, NSColor, NSColor;
override selector("initWithStorageLocation:") = Id, NSURL;
override selector("initWithString:") = Id, NSString;
override selector("initWithString:attributes:") = Id, NSString, NSDictionary;
override selector("initWithString:calendarFormat:") = Id, NSString, NSString;
override selector("initWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
override selector("initWithString:locale:") = Id, NSString, Id;
override selector("initWithString:relativeToURL:") = Id, NSString, NSURL;
override selector("initWithSuiteName:className:dictionary:") = Id, NSString, NSString, NSDictionary;
override selector("initWithSuiteName:commandName:dictionary:") = Id, NSString, NSString, NSDictionary;
override selector("initWithTCPPort:") = Id, UShort;
override selector("initWithTable:startingRow:rowSpan:startingColumn:columnSpan:") = Id, NSTextTable, CLong, CLong, CLong, CLong;
override selector("initWithTarget:connection:") = Id, Id, NSConnection;
override selector("initWithTarget:protocol:") = Id, NSObject, Id;
override selector("initWithTarget:selector:object:") = Id, Id, SelectorHandle, Id;
override selector("initWithTextAlignment:location:options:") = Id, CULong, Double, NSDictionary;
override selector("initWithTexture:size:flipped:colorSpace:") = Id, UInt, CGSize, Bool, CGColorSpaceRef;
override selector("initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:") = Id, UInt, UInt, Int, Int, Int;
override selector("initWithTimeInterval:sinceDate:") = Id, Double, NSDate;
override selector("initWithTimeIntervalSince1970:") = Id, Double;
override selector("initWithTimeIntervalSinceNow:") = Id, Double;
override selector("initWithTimeIntervalSinceReferenceDate:") = Id, Double;
override selector("initWithTitle:") = Id, NSString;
override selector("initWithTitle:action:keyEquivalent:") = Id, NSString, SelectorHandle, NSString;
override selector("initWithTransform:") = Id, NSAffineTransform;
override selector("initWithTrust:") = Id, SecTrustRef;
override selector("initWithType:error:") = Id, NSString, Pointer[NSError];
override selector("initWithType:location:") = Id, CULong, Double;
override selector("initWithType:subpredicates:") = Id, CULong, NSArray;
override selector("initWithURL:") = Id, NSURL;
override selector("initWithURL:MIMEType:expectedContentLength:textEncodingName:") = Id, NSURL, NSString, CLong, NSString;
override selector("initWithURL:append:") = Id, NSURL, Bool;
override selector("initWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, CULong, Double;
override selector("initWithURL:cached:") = Id, NSURL, Bool;
override selector("initWithURL:documentAttributes:") = Id, NSURL, Pointer[NSDictionary];
override selector("initWithURL:options:documentAttributes:error:") = Id, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("initWithURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("initWithUTF8String:") = Id, Pointer[CChar];
override selector("initWithUnsignedChar:") = Id, CUChar;
override selector("initWithUnsignedInt:") = Id, UInt;
override selector("initWithUnsignedInteger:") = Id, CULong;
override selector("initWithUnsignedLong:") = Id, CULong;
override selector("initWithUnsignedLongLong:") = Id, UInt64;
override selector("initWithUnsignedShort:") = Id, UShort;
override selector("initWithUser:") = Id, NSString;
override selector("initWithUser:password:persistence:") = Id, NSString, NSString, CULong;
override selector("initWithValues:count:") = Id, Pointer[Double], CULong;
override selector("initWithViewAnimations:") = Id, NSArray;
override selector("initWithVoice:") = Id, NSString;
override selector("initWithWindow:") = Id, NSWindow;
override selector("initWithWindow:rect:") = Id, NSWindow, NSRect;
override selector("initWithWindowNibName:") = Id, NSString;
override selector("initWithWindowNibName:owner:") = Id, NSString, Id;
override selector("initWithWindowNibPath:owner:") = Id, NSString, Id;
override selector("initWithWindowRef:") = NSWindow, RawPointer;
override selector("initWithX:") = Id, Double;
override selector("initWithX:Y:") = Id, Double, Double;
override selector("initWithX:Y:Z:") = Id, Double, Double, Double;
override selector("initWithX:Y:Z:W:") = Id, Double, Double, Double, Double;
override selector("initWithXMLString:") = Id, NSString;
override selector("initWithXMLString:error:") = Id, NSString, Pointer[NSError];
override selector("initWithXMLString:options:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("initWithYear:month:day:hour:minute:second:timeZone:") = Id, CLong, CULong, CULong, CULong, CULong, CULong, NSTimeZone;
override selector("initialFirstResponder") = Id;
override selector("initialKey") = NSString;
override selector("initialValue") = Id;
override selector("initialValues") = NSDictionary;
override selector("initialize") = Void;
override selector("inputClientBecomeActive:") = Void, Id;
override selector("inputClientDisabled:") = Void, Id;
override selector("inputClientEnabled:") = Void, Id;
override selector("inputClientResignActive:") = Void, Id;
override selector("inputContext") = NSTextInputContext;
override selector("inputStreamWithData:") = Id, NSData;
override selector("inputStreamWithFileAtPath:") = Id, NSString;
override selector("inputStreamWithURL:") = Id, NSURL;
override selector("insert:") = Void, Id;
override selector("insertAttributedString:atIndex:") = Void, NSAttributedString, CULong;
override selector("insertBacktab:") = Void, Id;
override selector("insertChild:") = Void, Id;
override selector("insertChild:atIndex:") = Void, NSXMLNode, CULong;
override selector("insertChildren:atIndex:") = Void, NSArray, CULong;
override selector("insertColor:key:atIndex:") = Void, NSColor, NSString, CULong;
override selector("insertColumn:") = Void, CLong;
override selector("insertColumn:withCells:") = Void, CLong, NSArray;
override selector("insertCompletion:forPartialWordRange:movement:isFinal:") = Void, NSString, NSRange, CLong, Bool;
override selector("insertContainerBreak:") = Void, Id;
override selector("insertDescriptor:atIndex:") = Void, NSAppleEventDescriptor, CLong;
override selector("insertDoubleQuoteIgnoringSubstitution:") = Void, Id;
override selector("insertEntry:atIndex:") = NSFormCell, NSString, CLong;
override selector("insertGlyph:atGlyphIndex:characterIndex:") = Void, UInt, CULong, CULong;
override selector("insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:") = Void, Pointer[UInt], CULong, CULong, CULong;
override selector("insertItem:atIndex:") = Void, NSMenuItem, CLong;
override selector("insertItemWithItemIdentifier:atIndex:") = Void, NSString, CLong;
override selector("insertItemWithObjectValue:atIndex:") = Void, Id, CLong;
override selector("insertItemWithTitle:action:keyEquivalent:atIndex:") = NSMenuItem, NSString, SelectorHandle, NSString, CLong;
override selector("insertItemWithTitle:atIndex:") = Void, NSString, CLong;
override selector("insertLineBreak:") = Void, Id;
override selector("insertNewButtonImage:in:") = Void, NSImage, NSButtonCell;
override selector("insertNewline:") = Void, Id;
override selector("insertNewlineIgnoringFieldEditor:") = Void, Id;
override selector("insertObject:atArrangedObjectIndex:") = Void, Id, CULong;
override selector("insertObject:atArrangedObjectIndexPath:") = Void, Id, NSIndexPath;
override selector("insertObject:atIndex:") = Void, Id, CULong;
override selector("insertObjects:atArrangedObjectIndexPaths:") = Void, NSArray, NSArray;
override selector("insertObjects:atArrangedObjectIndexes:") = Void, NSArray, NSIndexSet;
override selector("insertObjects:atIndexes:") = Void, NSArray, NSIndexSet;
override selector("insertParagraphSeparator:") = Void, Id;
override selector("insertPointer:atIndex:") = Void, RawPointer, CULong;
override selector("insertRow:") = Void, CLong;
override selector("insertRow:withCells:") = Void, CLong, NSArray;
override selector("insertRowAtIndex:withType:asSubrowOfRow:animate:") = Void, CLong, CULong, CLong, Bool;
override selector("insertSingleQuoteIgnoringSubstitution:") = Void, Id;
override selector("insertString:atIndex:") = Void, NSString, CULong;
override selector("insertSublayer:above:") = Void, CALayer, CALayer;
override selector("insertSublayer:atIndex:") = Void, CALayer, UInt;
override selector("insertSublayer:below:") = Void, CALayer, CALayer;
override selector("insertTab:") = Void, Id;
override selector("insertTabIgnoringFieldEditor:") = Void, Id;
override selector("insertTabViewItem:atIndex:") = Void, NSTabViewItem, CLong;
override selector("insertText:") = Void, Id;
override selector("insertText:client:") = Void, Id, Id;
override selector("insertText:replacementRange:") = Void, Id, NSRange;
override selector("insertTextContainer:atIndex:") = Void, NSTextContainer, CULong;
override selector("insertValue:atIndex:inPropertyWithKey:") = Void, Id, CULong, NSString;
override selector("insertValue:inPropertyWithKey:") = Void, Id, NSString;
override selector("insertionContainer") = Id;
override selector("insertionIndex") = CLong;
override selector("insertionKey") = NSString;
override selector("insertionPointColor") = NSColor;
override selector("insertionReplaces") = Bool;
override selector("instanceMethodForSelector:") = IMP, SelectorHandle;
override selector("instanceMethodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
override selector("instancesRespondToSelector:") = Bool, SelectorHandle;
override selector("instantiateNibWithExternalNameTable:") = Bool, NSDictionary;
override selector("instantiateNibWithOwner:topLevelObjects:") = Bool, Id, Pointer[NSArray];
override selector("int32Value") = Int;
override selector("intAttribute:forGlyphAtIndex:") = CLong, CLong, CULong;
override selector("intForKey:inTable:") = Int, NSString, NSString;
override selector("intValue") = Int;
override selector("integerForKey:") = CLong, NSString;
override selector("integerValue") = CLong;
override selector("intercellSpacing") = NSSize;
override selector("interfaceStyle") = CULong;
override selector("interiorBackgroundStyle") = CLong;
override selector("interiorBackgroundStyleForSegment:") = CLong, CLong;
override selector("internationalCurrencySymbol") = NSString;
override selector("interpolatedColorAtLocation:") = NSColor, Double;
override selector("interpretKeyEvents:") = Void, NSArray;
override selector("interrupt") = Void;
override selector("intersectHashTable:") = Void, NSHashTable;
override selector("intersectSet:") = Void, NSSet;
override selector("intersectsHashTable:") = Bool, NSHashTable;
override selector("intersectsIndexesInRange:") = Bool, NSRange;
override selector("intersectsSet:") = Bool, NSSet;
override selector("invalidate") = Void;
override selector("invalidateAttributesInRange:") = Void, NSRange;
override selector("invalidateCharacterCoordinates") = Void;
override selector("invalidateClassDescriptionCache") = Void;
override selector("invalidateCursorRectsForView:") = Void, NSView;
override selector("invalidateDisplayForCharacterRange:") = Void, NSRange;
override selector("invalidateDisplayForGlyphRange:") = Void, NSRange;
override selector("invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:") = Void, NSRange, CLong, NSRangePointer;
override selector("invalidateGlyphsOnLayoutInvalidationForGlyphRange:") = Void, NSRange;
override selector("invalidateHashMarks") = Void;
override selector("invalidateLayoutForCharacterRange:actualCharacterRange:") = Void, NSRange, NSRangePointer;
override selector("invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:") = Void, NSRange, Bool, NSRangePointer;
override selector("invalidateLayoutOfLayer:") = Void, CALayer;
override selector("invalidateShadow") = Void;
override selector("invalidateTextContainerOrigin") = Void;
override selector("inverseForRelationshipKey:") = NSString, NSString;
override selector("invert") = Void;
override selector("invertedSet") = NSCharacterSet;
override selector("invocation") = NSInvocation;
override selector("invocationWithMethodSignature:") = NSInvocation, NSMethodSignature;
override selector("invoke") = Void;
override selector("invokeWithTarget:") = Void, Id;
override selector("isARepeat") = Bool;
override selector("isAbsolutePath") = Bool;
override selector("isActive") = Bool;
override selector("isAlternate") = Bool;
override selector("isAnimating") = Bool;
override selector("isAnyApplicationSpeaking") = Bool;
override selector("isAsynchronous") = Bool;
override selector("isAtEnd") = Bool;
override selector("isAttached") = Bool;
override selector("isAutodisplay") = Bool;
override selector("isAutomaticDashSubstitutionEnabled") = Bool;
override selector("isAutomaticDataDetectionEnabled") = Bool;
override selector("isAutomaticLinkDetectionEnabled") = Bool;
override selector("isAutomaticQuoteSubstitutionEnabled") = Bool;
override selector("isAutomaticSpellingCorrectionEnabled") = Bool;
override selector("isAutomaticTextReplacementEnabled") = Bool;
override selector("isAutoscroll") = Bool;
override selector("isBezeled") = Bool;
override selector("isBordered") = Bool;
override selector("isButtonBordered") = Bool;
override selector("isBycopy") = Bool;
override selector("isByref") = Bool;
override selector("isCachedSeparately") = Bool;
override selector("isCancelled") = Bool;
override selector("isCaseInsensitiveLike:") = Bool, NSString;
override selector("isCoalescingUndo") = Bool;
override selector("isCollecting") = Bool;
override selector("isColor") = Bool;
override selector("isColumnSelected:") = Bool, CLong;
override selector("isCompiled") = Bool;
override selector("isConcurrent") = Bool;
override selector("isContentDiscarded") = Bool;
override selector("isContextHelpModeActive") = Bool;
override selector("isContinuous") = Bool;
override selector("isContinuousSpellCheckingEnabled") = Bool;
override selector("isCopyingOperation") = Bool;
override selector("isDataRetained") = Bool;
override selector("isDaylightSavingTime") = Bool;
override selector("isDaylightSavingTimeForDate:") = Bool, NSDate;
override selector("isDeletableFileAtPath:") = Bool, NSString;
override selector("isDescendantOf:") = Bool, NSView;
override selector("isDirectory") = Bool;
override selector("isDisplayedWhenStopped") = Bool;
override selector("isDocumentEdited") = Bool;
override selector("isDoubleSided") = Bool;
override selector("isDragging") = Bool;
override selector("isDrawingToScreen") = Bool;
override selector("isEditable") = Bool;
override selector("isEditing") = Bool;
override selector("isEmpty") = Bool;
override selector("isEnabled") = Bool;
override selector("isEnabledForSegment:") = Bool, CLong;
override selector("isEnteringProximity") = Bool;
override selector("isEntryAcceptable:") = Bool, NSString;
override selector("isEqual:") = Bool, Id;
override selector("isEqualFunction") = CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[CULong]]],[CChar]];
override selector("isEqualTo:") = Bool, Id;
override selector("isEqualToArray:") = Bool, NSArray;
override selector("isEqualToAttributedString:") = Bool, NSAttributedString;
override selector("isEqualToData:") = Bool, NSData;
override selector("isEqualToDate:") = Bool, NSDate;
override selector("isEqualToDictionary:") = Bool, NSDictionary;
override selector("isEqualToHashTable:") = Bool, NSHashTable;
override selector("isEqualToHost:") = Bool, NSHost;
override selector("isEqualToIndexSet:") = Bool, NSIndexSet;
override selector("isEqualToNumber:") = Bool, NSNumber;
override selector("isEqualToSet:") = Bool, NSSet;
override selector("isEqualToString:") = Bool, NSString;
override selector("isEqualToTimeZone:") = Bool, NSTimeZone;
override selector("isEqualToValue:") = Bool, NSValue;
override selector("isExcludedFromWindowsMenu") = Bool;
override selector("isExecutableFileAtPath:") = Bool, NSString;
override selector("isExecuting") = Bool;
override selector("isExpandable:") = Bool, Id;
override selector("isExpanded") = Bool;
override selector("isExplicitlyIncluded") = Bool;
override selector("isExtensionHidden") = Bool;
override selector("isExternal") = Bool;
override selector("isFieldEditor") = Bool;
override selector("isFilePackageAtPath:") = Bool, NSString;
override selector("isFileReferenceURL") = Bool;
override selector("isFileURL") = Bool;
override selector("isFinished") = Bool;
override selector("isFinishedLaunching") = Bool;
override selector("isFirstResponder") = Bool;
override selector("isFixedPitch") = Bool;
override selector("isFlipped") = Bool;
override selector("isFloatingPanel") = Bool;
override selector("isFlushWindowDisabled") = Bool;
override selector("isFontAvailable:") = Bool, NSString;
override selector("isFullKeyboardAccessEnabled") = Bool;
override selector("isGathering") = Bool;
override selector("isGeometryFlipped") = Bool;
override selector("isGrammarCheckingEnabled") = Bool;
override selector("isGreaterThan:") = Bool, Id;
override selector("isGreaterThanOrEqualTo:") = Bool, Id;
override selector("isHTTPOnly") = Bool;
override selector("isHidden") = Bool;
override selector("isHiddenOrHasHiddenAncestor") = Bool;
override selector("isHighlighted") = Bool;
override selector("isHorizontallyCentered") = Bool;
override selector("isHorizontallyResizable") = Bool;
override selector("isHostCacheEnabled") = Bool;
override selector("isInFullScreenMode") = Bool;
override selector("isIndeterminate") = Bool;
override selector("isIndexed") = Bool;
override selector("isIndexedBySpotlight") = Bool;
override selector("isItemExpanded:") = Bool, Id;
override selector("isKey:inTable:") = Bool, NSString, NSString;
override selector("isKeyWindow") = Bool;
override selector("isKindOfClass:") = Bool, Id;
override selector("isLeaf") = Bool;
override selector("isLeafItem:") = Bool, Id;
override selector("isLenient") = Bool;
override selector("isLessThan:") = Bool, Id;
override selector("isLessThanOrEqualTo:") = Bool, Id;
override selector("isLike:") = Bool, NSString;
override selector("isLoaded") = Bool;
override selector("isLocationRequiredToCreateForKey:") = Bool, NSString;
override selector("isMainThread") = Bool;
override selector("isMainWindow") = Bool;
override selector("isMemberOfClass:") = Bool, Id;
override selector("isMiniaturizable") = Bool;
override selector("isMiniaturized") = Bool;
override selector("isModalPanel") = Bool;
override selector("isMouseCoalescingEnabled") = Bool;
override selector("isMovable") = Bool;
override selector("isMovableByWindowBackground") = Bool;
override selector("isMultiThreaded") = Bool;
override selector("isMultiple") = Bool;
override selector("isNativeType:") = Bool, NSString;
override selector("isNotEqualTo:") = Bool, Id;
override selector("isOnActiveSpace") = Bool;
override selector("isOneShot") = Bool;
override selector("isOneway") = Bool;
override selector("isOpaque") = Bool;
override selector("isOptional") = Bool;
override selector("isOptionalArgumentWithName:") = Bool, NSString;
override selector("isOutputStackInReverseOrder") = Bool;
override selector("isPaneSplitter") = Bool;
override selector("isPartialStringValid:newEditingString:errorDescription:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
override selector("isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:") = Bool, Pointer[NSString], NSRangePointer, NSString, NSRange, Pointer[NSString];
override selector("isPartialStringValidationEnabled") = Bool;
override selector("isPlanar") = Bool;
override selector("isPlaying") = Bool;
override selector("isProxy") = Bool;
override selector("isReadOnlyKey:") = Bool, NSString;
override selector("isReadableFileAtPath:") = Bool, NSString;
override selector("isReady") = Bool;
override selector("isRedoing") = Bool;
override selector("isRegularFile") = Bool;
override selector("isReleasedWhenClosed") = Bool;
override selector("isRemovable") = Bool;
override selector("isResizable") = Bool;
override selector("isResting") = Bool;
override selector("isRichText") = Bool;
override selector("isRotatedFromBase") = Bool;
override selector("isRotatedOrScaledFromBase") = Bool;
override selector("isRowSelected:") = Bool, CLong;
override selector("isRulerVisible") = Bool;
override selector("isRunning") = Bool;
override selector("isScrollable") = Bool;
override selector("isSecure") = Bool;
override selector("isSelectable") = Bool;
override selector("isSelected") = Bool;
override selector("isSelectedForSegment:") = Bool, CLong;
override selector("isSelectionByRect") = Bool;
override selector("isSelectionOnly") = Bool;
override selector("isSeparatorItem") = Bool;
override selector("isSessionOnly") = Bool;
override selector("isSetOnMouseEntered") = Bool;
override selector("isSetOnMouseExited") = Bool;
override selector("isSheet") = Bool;
override selector("isSimpleRectangularTextContainer") = Bool;
override selector("isSpeaking") = Bool;
override selector("isStandalone") = Bool;
override selector("isStarted") = Bool;
override selector("isStopped") = Bool;
override selector("isStoredInExternalRecord") = Bool;
override selector("isSubclassOfClass:") = Bool, Id;
override selector("isSubsetOfHashTable:") = Bool, NSHashTable;
override selector("isSubsetOfSet:") = Bool, NSSet;
override selector("isSubviewCollapsed:") = Bool, NSView;
override selector("isSupersetOfSet:") = Bool, NSCharacterSet;
override selector("isSuspended") = Bool;
override selector("isSymbolicLink") = Bool;
override selector("isTemplate") = Bool;
override selector("isTerminated") = Bool;
override selector("isTitled") = Bool;
override selector("isTornOff") = Bool;
override selector("isTransient") = Bool;
override selector("isTransparent") = Bool;
override selector("isTrue") = Bool;
override selector("isUndoRegistrationEnabled") = Bool;
override selector("isUndoing") = Bool;
override selector("isValid") = Bool;
override selector("isValidGlyphIndex:") = Bool, CULong;
override selector("isVertical") = Bool;
override selector("isVerticallyCentered") = Bool;
override selector("isVerticallyResizable") = Bool;
override selector("isVisible") = Bool;
override selector("isWellFormed") = Bool;
override selector("isWindowLoaded") = Bool;
override selector("isWordInUserDictionaries:caseSensitive:") = Bool, NSString, Bool;
override selector("isWritableFileAtPath:") = Bool, NSString;
override selector("isZoomable") = Bool;
override selector("isZoomed") = Bool;
override selector("italicAngle") = Double;
override selector("itemArray") = NSArray;
override selector("itemAtIndex:") = Id, CLong;
override selector("itemAtIndexPath:") = Id, NSIndexPath;
override selector("itemAtRow:") = Id, CLong;
override selector("itemAtRow:inColumn:") = Id, CLong, CLong;
override selector("itemChanged:") = Void, NSMenuItem;
override selector("itemHeight") = Double;
override selector("itemIdentifier") = NSString;
override selector("itemNumberInTextList:atIndex:") = CLong, NSTextList, CULong;
override selector("itemObjectValueAtIndex:") = Id, CLong;
override selector("itemPrototype") = NSCollectionViewItem;
override selector("itemTitleAtIndex:") = NSString, CLong;
override selector("itemTitles") = NSArray;
override selector("itemWithTag:") = NSMenuItem, CLong;
override selector("itemWithTitle:") = NSMenuItem, NSString;
override selector("items") = NSArray;
override selector("jobDisposition") = NSString;
override selector("jobStyleHint") = NSString;
override selector("jobTitle") = NSString;
override selector("keepBackupFile") = Bool;
override selector("key") = NSString;
override selector("keyCell") = Id;
override selector("keyClassDescription") = NSScriptClassDescription;
override selector("keyCode") = UShort;
override selector("keyDown:") = Void, NSEvent;
override selector("keyEnumerator") = NSEnumerator;
override selector("keyEquivalent") = NSString;
override selector("keyEquivalentFont") = NSFont;
override selector("keyEquivalentModifierMask") = CULong;
override selector("keyEquivalentRectForBounds:") = NSRect, NSRect;
override selector("keyEquivalentWidth") = Double;
override selector("keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, NSString, NSString, Bool, UShort;
override selector("keyForFileWrapper:") = NSString, NSFileWrapper;
override selector("keyPath") = NSString;
override selector("keyPathsForValuesAffectingPreview") = NSSet;
override selector("keyPathsForValuesAffectingValueForKey:") = NSSet, NSString;
override selector("keyPointerFunctions") = NSPointerFunctions;
override selector("keyRepeatDelay") = Double;
override selector("keyRepeatInterval") = Double;
override selector("keySpecifier") = NSScriptObjectSpecifier;
override selector("keyUp:") = Void, NSEvent;
override selector("keyViewSelectionDirection") = CULong;
override selector("keyWindow") = NSWindow;
override selector("keyWithAppleEventCode:") = NSString, UInt;
override selector("keyboardFocusIndicatorColor") = NSColor;
override selector("keyboardInputSources") = NSArray;
override selector("keysOfEntriesPassingTest:") = NSSet, UnknownType;
override selector("keysOfEntriesWithOptions:passingTest:") = NSSet, CULong, UnknownType;
override selector("keysSortedByValueUsingComparator:") = NSArray, NSComparator;
override selector("keysSortedByValueUsingSelector:") = NSArray, SelectorHandle;
override selector("keysSortedByValueWithOptions:usingComparator:") = NSArray, CULong, NSComparator;
override selector("keywordForDescriptorAtIndex:") = UInt, CLong;
override selector("kind") = CULong;
override selector("knobColor") = NSColor;
override selector("knobProportion") = Double;
override selector("knobRectFlipped:") = NSRect, Bool;
override selector("knobThickness") = Double;
override selector("knownTimeZoneNames") = NSArray;
override selector("knowsPageRange:") = Bool, NSRangePointer;
override selector("label") = NSString;
override selector("labelFontOfSize:") = NSFont, Double;
override selector("labelFontSize") = Double;
override selector("labelForSegment:") = NSString, CLong;
override selector("language") = NSString;
override selector("languageLevel") = CLong;
override selector("languageMap") = NSDictionary;
override selector("languagesForScript:") = NSArray, NSString;
override selector("lastColumn") = CLong;
override selector("lastComponentOfFileName") = NSString;
override selector("lastIndex") = CULong;
override selector("lastItem") = NSMenuItem;
override selector("lastObject") = Id;
override selector("lastPathComponent") = NSString;
override selector("lastVisibleColumn") = CLong;
override selector("laterDate:") = NSDate, NSDate;
override selector("launch") = Void;
override selector("launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:") = Bool, NSString, CULong, NSAppleEventDescriptor, Pointer[NSNumber];
override selector("launchApplication:") = Bool, NSString;
override selector("launchApplication:showIcon:autolaunch:") = Bool, NSString, Bool, Bool;
override selector("launchApplicationAtURL:options:configuration:error:") = NSRunningApplication, NSURL, CULong, NSDictionary, Pointer[NSError];
override selector("launchDate") = NSDate;
override selector("launchPath") = NSString;
override selector("launchedApplications") = NSArray;
override selector("launchedTaskWithLaunchPath:arguments:") = NSTask, NSString, NSArray;
override selector("layer") = Id;
override selector("layerContentsPlacement") = CLong;
override selector("layerContentsRedrawPolicy") = CLong;
override selector("layout") = Void;
override selector("layoutAlgorithm") = CULong;
override selector("layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:") = NSRange, NSRange, NSLayoutManager, CULong;
override selector("layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:") = Void, NSLayoutManager, CULong, CULong, Pointer[CULong];
override selector("layoutIfNeeded") = Void;
override selector("layoutManager") = Id;
override selector("layoutManager:didCompleteLayoutForTextContainer:atEnd:") = Void, NSLayoutManager, NSTextContainer, Bool;
override selector("layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:") = NSDictionary, NSLayoutManager, NSDictionary, Bool, CULong, NSRangePointer;
override selector("layoutManagerDidInvalidateLayout:") = Void, NSLayoutManager;
override selector("layoutManagerOwnsFirstResponderInWindow:") = Bool, NSWindow;
override selector("layoutManagers") = NSArray;
override selector("layoutOptions") = CULong;
override selector("layoutParagraphAtPoint:") = CULong, NSPointPointer;
override selector("layoutRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
override selector("layoutRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
override selector("layoutSublayers") = Void;
override selector("layoutSublayersOfLayer:") = Void, CALayer;
override selector("leading") = Double;
override selector("leadingOffset") = Double;
override selector("leafKeyPath") = NSString;
override selector("leafKeyPathForNode:") = NSString, NSTreeNode;
override selector("learnWord:") = Void, NSString;
override selector("leftExpression") = NSExpression;
override selector("leftExpressions") = NSArray;
override selector("leftMargin") = Double;
override selector("length") = CULong;
override selector("lengthOfBytesUsingEncoding:") = CULong, CULong;
override selector("letterCharacterSet") = Id;
override selector("level") = CULong;
override selector("levelForItem:") = CLong, Id;
override selector("levelForRow:") = CLong, CLong;
override selector("levelIndicatorStyle") = CULong;
override selector("levelsOfUndo") = CULong;
override selector("lightGrayColor") = NSColor;
override selector("limitDateForMode:") = NSDate, NSString;
override selector("lineBreakBeforeIndex:withinRange:") = CULong, CULong, NSRange;
override selector("lineBreakByHyphenatingBeforeIndex:withinRange:") = CULong, CULong, NSRange;
override selector("lineBreakMode") = CULong;
override selector("lineCapStyle") = CULong;
override selector("lineDirectionForLanguage:") = CULong, NSString;
override selector("lineFragmentPadding") = Double;
override selector("lineFragmentRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
override selector("lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
override selector("lineFragmentRectForProposedRect:remainingRect:") = NSRect, NSRect, NSRectPointer;
override selector("lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:") = NSRect, NSRect, CULong, CULong, NSRectPointer;
override selector("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
override selector("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
override selector("lineHeightMultiple") = Double;
override selector("lineJoinStyle") = CULong;
override selector("lineNumber") = CLong;
override selector("lineRangeForRange:") = NSRange, NSRange;
override selector("lineScroll") = Double;
override selector("lineSpacing") = Double;
override selector("lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override selector("lineToPoint:") = Void, NSPoint;
override selector("lineWidth") = Double;
override selector("linkCheckingResultWithRange:URL:") = NSTextCheckingResult, NSRange, NSURL;
override selector("linkItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("linkItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("linkPath:toPath:handler:") = Bool, NSString, NSString, Id;
override selector("linkTextAttributes") = NSDictionary;
override selector("listDescriptor") = NSAppleEventDescriptor;
override selector("listOptions") = CULong;
override selector("listensInForegroundOnly") = Bool;
override selector("load") = Bool;
override selector("loadAndReturnError:") = Bool, Pointer[NSError];
override selector("loadColumnZero") = Void;
override selector("loadDataRepresentation:ofType:") = Bool, NSData, NSString;
override selector("loadFileWrapperRepresentation:ofType:") = Bool, NSFileWrapper, NSString;
override selector("loadInBackground") = Void;
override selector("loadInForeground") = NSData;
override selector("loadNibFile:externalNameTable:withZone:") = Bool, NSString, NSDictionary, Pointer[NSZone];
override selector("loadNibNamed:owner:") = Bool, NSString, Id;
override selector("loadResourceDataNotifyingClient:usingCache:") = Void, Id, Bool;
override selector("loadSuiteWithDictionary:fromBundle:") = Void, NSDictionary, NSBundle;
override selector("loadSuitesFromBundle:") = Void, NSBundle;
override selector("loadView") = Void;
override selector("loadWindow") = Void;
override selector("loadedCellAtRow:column:") = Id, CLong, CLong;
override selector("localName") = NSString;
override selector("localNameForName:") = NSString, NSString;
override selector("localObjects") = NSArray;
override selector("localTimeZone") = NSTimeZone;
override selector("locale") = Id;
override selector("localeIdentifier") = NSString;
override selector("localeIdentifierFromComponents:") = NSString, NSDictionary;
override selector("localeIdentifierFromWindowsLocaleCode:") = NSString, UInt;
override selector("localizations") = NSArray;
override selector("localizedCaseInsensitiveCompare:") = CLong, NSString;
override selector("localizedCatalogNameComponent") = NSString;
override selector("localizedColorNameComponent") = NSString;
override selector("localizedCompare:") = CLong, NSString;
override selector("localizedDescription") = NSString;
override selector("localizedDescriptionForType:") = NSString, NSString;
override selector("localizedFailureReason") = NSString;
override selector("localizedInfoDictionary") = NSDictionary;
override selector("localizedInputManagerName") = NSString;
override selector("localizedKey") = NSString;
override selector("localizedKeyDictionary") = NSDictionary;
override selector("localizedKeyTable") = NSString;
override selector("localizedName") = NSString;
override selector("localizedName:locale:") = NSString, CLong, NSLocale;
override selector("localizedNameForFamily:face:") = NSString, NSString, NSString;
override selector("localizedNameForInputSource:") = NSString, NSString;
override selector("localizedNameForTIFFCompressionType:") = NSString, CULong;
override selector("localizedNameOfStringEncoding:") = NSString, CULong;
override selector("localizedPaperName") = NSString;
override selector("localizedRecoveryOptions") = NSArray;
override selector("localizedRecoverySuggestion") = NSString;
override selector("localizedScannerWithString:") = Id, NSString;
override selector("localizedStandardCompare:") = CLong, NSString;
override selector("localizedStringForKey:value:table:") = NSString, NSString, NSString, NSString;
override selector("localizedStringForStatusCode:") = NSString, CLong;
override selector("localizedStringFromDate:dateStyle:timeStyle:") = NSString, NSDate, CULong, CULong;
override selector("localizedStringFromNumber:numberStyle:") = NSString, NSNumber, CULong;
override varargSelector("localizedStringWithFormat:") = Id, NSString;
override selector("localizedSummaryItems") = NSArray;
override selector("localizedTitlesForItem:") = NSArray, Id;
override selector("localizesFormat") = Bool;
override selector("location") = Double;
override selector("locationForGlyphAtIndex:") = NSPoint, CULong;
override selector("locationForSubmenu:") = NSPoint, NSMenu;
override selector("locationInWindow") = NSPoint;
override selector("locationOfPrintRect:") = NSPoint, NSRect;
override selector("lock") = Void;
override selector("lockBeforeDate:") = Bool, NSDate;
override selector("lockDate") = NSDate;
override selector("lockFocus") = Void;
override selector("lockFocusFlipped:") = Void, Bool;
override selector("lockFocusIfCanDraw") = Bool;
override selector("lockFocusIfCanDrawInContext:") = Bool, NSGraphicsContext;
override selector("lockFocusOnRepresentation:") = Void, NSImageRep;
override selector("lockWhenCondition:") = Void, CLong;
override selector("lockWhenCondition:beforeDate:") = Bool, CLong, NSDate;
override selector("lockWithPath:") = NSDistributedLock, NSString;
override selector("longCharacterIsMember:") = Bool, UInt;
override selector("longEraSymbols") = NSArray;
override selector("longLongValue") = Int64;
override selector("longValue") = CLong;
override selector("loops") = Bool;
override selector("loosenKerning:") = Void, Id;
override selector("lossyCString") = Pointer[CChar];
override selector("lowerBaseline:") = Void, Id;
override selector("lowercaseLetterCharacterSet") = Id;
override selector("lowercaseString") = NSString;
override selector("lowercaseWord:") = Void, Id;
override selector("machPort") = UInt;
override selector("magentaColor") = NSColor;
override selector("magentaComponent") = Double;
override selector("magnification") = Double;
override selector("magnificationFilter") = NSString;
override selector("magnifyWithEvent:") = Void, NSEvent;
override selector("main") = Void;
override selector("mainBundle") = NSBundle;
override selector("mainDocumentURL") = NSURL;
override selector("mainMenu") = NSMenu;
override selector("mainQueue") = Id;
override selector("mainRunLoop") = NSRunLoop;
override selector("mainScreen") = NSScreen;
override selector("mainThread") = NSThread;
override selector("mainWindow") = NSWindow;
override selector("makeBackingLayer") = CALayer;
override selector("makeBaseWritingDirectionLeftToRight:") = Void, Id;
override selector("makeBaseWritingDirectionNatural:") = Void, Id;
override selector("makeBaseWritingDirectionRightToLeft:") = Void, Id;
override selector("makeCellAtRow:column:") = NSCell, CLong, CLong;
override selector("makeCurrentContext") = Void;
override selector("makeDocumentForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
override selector("makeDocumentWithContentsOfFile:ofType:") = Id, NSString, NSString;
override selector("makeDocumentWithContentsOfURL:ofType:") = Id, NSURL, NSString;
override selector("makeDocumentWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
override selector("makeFirstResponder:") = Bool, NSResponder;
override selector("makeKeyAndOrderFront:") = Void, Id;
override selector("makeKeyWindow") = Void;
override selector("makeMainWindow") = Void;
override selector("makeNewConnection:sender:") = Bool, NSConnection, NSConnection;
override selector("makeNextSegmentKey") = Void;
override selector("makeObjectsPerformSelector:") = Void, SelectorHandle;
override selector("makeObjectsPerformSelector:withObject:") = Void, SelectorHandle, Id;
override selector("makePreviousSegmentKey") = Void;
override selector("makeTextWritingDirectionLeftToRight:") = Void, Id;
override selector("makeTextWritingDirectionNatural:") = Void, Id;
override selector("makeTextWritingDirectionRightToLeft:") = Void, Id;
override selector("makeUntitledDocumentOfType:") = Id, NSString;
override selector("makeUntitledDocumentOfType:error:") = Id, NSString, Pointer[NSError];
override selector("makeWindowControllers") = Void;
override selector("makeWindowsPerform:inOrder:") = NSWindow, SelectorHandle, Bool;
override selector("managedObjectContext") = NSManagedObjectContext;
override selector("managedObjectModel") = Id;
override selector("mapTableWithKeyOptions:valueOptions:") = Id, CULong, CULong;
override selector("mapTableWithStrongToStrongObjects") = Id;
override selector("mapTableWithStrongToWeakObjects") = Id;
override selector("mapTableWithWeakToStrongObjects") = Id;
override selector("mapTableWithWeakToWeakObjects") = Id;
override selector("markedRange") = NSRange;
override selector("markedTextAbandoned:") = Void, Id;
override selector("markedTextAttributes") = NSDictionary;
override selector("markedTextSelectionChanged:client:") = Void, NSRange, Id;
override selector("markerForItemNumber:") = NSString, CLong;
override selector("markerFormat") = NSString;
override selector("markerLocation") = Double;
override selector("markers") = NSArray;
override selector("mask") = CALayer;
override selector("masksToBounds") = Bool;
override selector("matchForPredicate:") = Double, NSPredicate;
override selector("matchesAppleEventCode:") = Bool, UInt;
override selector("matchesContentsOfURL:") = Bool, NSURL;
override selector("matchesOnMultipleResolution") = Bool;
override selector("matchingFontDescriptorWithMandatoryKeys:") = NSFontDescriptor, NSSet;
override selector("matchingFontDescriptorsWithMandatoryKeys:") = NSArray, NSSet;
override selector("matrix") = Pointer[Double];
override selector("matrixClass") = Id;
override selector("matrixInColumn:") = NSMatrix, CLong;
override selector("maxConcurrentOperationCount") = CLong;
override selector("maxContentSize") = NSSize;
override selector("maxDate") = NSDate;
override selector("maxItemSize") = NSSize;
override selector("maxNumberOfColumns") = CULong;
override selector("maxNumberOfRows") = CULong;
override selector("maxPossiblePositionOfDividerAtIndex:") = Double, CLong;
override selector("maxSize") = NSSize;
override selector("maxValue") = Double;
override selector("maxVisibleColumns") = CLong;
override selector("maxWidth") = Double;
override selector("maximum") = NSNumber;
override selector("maximumAdvancement") = NSSize;
override selector("maximumDecimalNumber") = NSDecimalNumber;
override selector("maximumFractionDigits") = CULong;
override selector("maximumIntegerDigits") = CULong;
override selector("maximumLengthOfBytesUsingEncoding:") = CULong, CULong;
override selector("maximumLineHeight") = Double;
override selector("maximumRangeOfUnit:") = NSRange, CULong;
override selector("maximumRecentDocumentCount") = CULong;
override selector("maximumRecents") = CLong;
override selector("maximumSignificantDigits") = CULong;
override selector("measurementUnits") = NSString;
override selector("member:") = Id, Id;
override selector("memoryCapacity") = CULong;
override selector("menu") = NSMenu;
override selector("menu:updateItem:atIndex:shouldCancel:") = Bool, NSMenu, NSMenuItem, CLong, Bool;
override selector("menu:willHighlightItem:") = Void, NSMenu, NSMenuItem;
override selector("menuBarFontOfSize:") = NSFont, Double;
override selector("menuBarHeight") = Double;
override selector("menuBarVisible") = Bool;
override selector("menuChanged:") = Void, NSMenu;
override selector("menuChangedMessagesEnabled") = Bool;
override selector("menuDidClose:") = Void, NSMenu;
override selector("menuFontOfSize:") = NSFont, Double;
override selector("menuForEvent:") = NSMenu, NSEvent;
override selector("menuForEvent:inRect:ofView:") = NSMenu, NSEvent, NSRect, NSView;
override selector("menuForResult:string:options:atLocation:inView:") = NSMenu, NSTextCheckingResult, NSString, NSDictionary, NSPoint, NSView;
override selector("menuForSegment:") = NSMenu, CLong;
override selector("menuFormRepresentation") = NSMenuItem;
override selector("menuHasKeyEquivalent:forEvent:target:action:") = Bool, NSMenu, NSEvent, Pointer[Id], Pointer[SelectorHandle];
override selector("menuItem") = NSMenuItem;
override selector("menuNeedsUpdate:") = Void, NSMenu;
override selector("menuRepresentation") = Id;
override selector("menuWillOpen:") = Void, NSMenu;
override selector("menuZone") = Pointer[NSZone];
override selector("message") = NSString;
override selector("messageFontOfSize:") = NSFont, Double;
override selector("messageText") = NSString;
override selector("metadataQuery:replacementObjectForResultObject:") = Id, NSMetadataQuery, NSMetadataItem;
override selector("metadataQuery:replacementValueForAttribute:value:") = Id, NSMetadataQuery, NSString, Id;
override selector("methodForSelector:") = IMP, SelectorHandle;
override selector("methodReturnLength") = CULong;
override selector("methodReturnType") = Pointer[CChar];
override selector("methodSignature") = NSMethodSignature;
override selector("methodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
override selector("minColumnWidth") = Double;
override selector("minContentSize") = NSSize;
override selector("minDate") = NSDate;
override selector("minFrameWidthWithTitle:styleMask:") = Double, NSString, CULong;
override selector("minItemSize") = NSSize;
override selector("minPossiblePositionOfDividerAtIndex:") = Double, CLong;
override selector("minSize") = NSSize;
override selector("minValue") = Double;
override selector("minWidth") = Double;
override selector("miniaturize:") = Void, Id;
override selector("miniaturizeAll:") = Void, Id;
override selector("minificationFilter") = NSString;
override selector("minificationFilterBias") = Float;
override selector("minimum") = NSNumber;
override selector("minimumDaysInFirstWeek") = CULong;
override selector("minimumDecimalNumber") = NSDecimalNumber;
override selector("minimumFractionDigits") = CULong;
override selector("minimumIntegerDigits") = CULong;
override selector("minimumLineHeight") = Double;
override selector("minimumRangeOfUnit:") = NSRange, CULong;
override selector("minimumSignificantDigits") = CULong;
override selector("minimumSize") = NSSize;
override selector("minimumWidth") = Double;
override selector("miniwindowImage") = NSImage;
override selector("miniwindowTitle") = NSString;
override selector("minusHashTable:") = Void, NSHashTable;
override selector("minusSet:") = Void, NSSet;
override selector("minusSign") = NSString;
override selector("minute") = CLong;
override selector("minuteOfHour") = CLong;
override selector("miterLimit") = Double;
override selector("mixedStateImage") = NSImage;
override selector("mnemonic") = NSString;
override selector("mnemonicLocation") = CULong;
override selector("modalWindow") = NSWindow;
override selector("mode") = CULong;
override selector("modelLayer") = Id;
override selector("modifier") = CULong;
override selector("modifierFlags") = CULong;
override selector("modifyFont:") = Void, Id;
override selector("modifyFontViaPanel:") = Void, Id;
override selector("month") = CLong;
override selector("monthOfYear") = CLong;
override selector("monthSymbols") = NSArray;
override selector("mostCompatibleStringEncoding") = CULong;
override selector("mountNewRemovableMedia") = NSArray;
override selector("mountedLocalVolumePaths") = NSArray;
override selector("mountedRemovableMedia") = NSArray;
override selector("mountedVolumeURLsIncludingResourceValuesForKeys:options:") = NSArray, NSArray, CULong;
override selector("mouse:inRect:") = Bool, NSPoint, NSRect;
override selector("mouseDown:") = Void, NSEvent;
override selector("mouseDownCanMoveWindow") = Bool;
override selector("mouseDownFlags") = CLong;
override selector("mouseDownOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
override selector("mouseDragged:") = Void, NSEvent;
override selector("mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
override selector("mouseEntered:") = Void, NSEvent;
override selector("mouseEntered:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
override selector("mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, Float;
override selector("mouseExited:") = Void, NSEvent;
override selector("mouseExited:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
override selector("mouseLocation") = NSPoint;
override selector("mouseLocationOutsideOfEventStream") = NSPoint;
override selector("mouseMoved:") = Void, NSEvent;
override selector("mouseUp:") = Void, NSEvent;
override selector("mouseUpOnCharacterIndex:atCoordinate:withModifier:client:") = Void, CULong, NSPoint, CULong, Id;
override selector("moveBackward:") = Void, Id;
override selector("moveBackwardAndModifySelection:") = Void, Id;
override selector("moveColumn:toColumn:") = Void, CLong, CLong;
override selector("moveDown:") = Void, Id;
override selector("moveDownAndModifySelection:") = Void, Id;
override selector("moveForward:") = Void, Id;
override selector("moveForwardAndModifySelection:") = Void, Id;
override selector("moveItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("moveItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("moveLeft:") = Void, Id;
override selector("moveLeftAndModifySelection:") = Void, Id;
override selector("moveNode:toIndexPath:") = Void, NSTreeNode, NSIndexPath;
override selector("moveNodes:toIndexPath:") = Void, NSArray, NSIndexPath;
override selector("moveParagraphBackwardAndModifySelection:") = Void, Id;
override selector("moveParagraphForwardAndModifySelection:") = Void, Id;
override selector("movePath:toPath:handler:") = Bool, NSString, NSString, Id;
override selector("moveRight:") = Void, Id;
override selector("moveRightAndModifySelection:") = Void, Id;
override selector("moveRulerlineFromLocation:toLocation:") = Void, Double, Double;
override selector("moveToBeginningOfDocument:") = Void, Id;
override selector("moveToBeginningOfDocumentAndModifySelection:") = Void, Id;
override selector("moveToBeginningOfLine:") = Void, Id;
override selector("moveToBeginningOfLineAndModifySelection:") = Void, Id;
override selector("moveToBeginningOfParagraph:") = Void, Id;
override selector("moveToBeginningOfParagraphAndModifySelection:") = Void, Id;
override selector("moveToEndOfDocument:") = Void, Id;
override selector("moveToEndOfDocumentAndModifySelection:") = Void, Id;
override selector("moveToEndOfLine:") = Void, Id;
override selector("moveToEndOfLineAndModifySelection:") = Void, Id;
override selector("moveToEndOfParagraph:") = Void, Id;
override selector("moveToEndOfParagraphAndModifySelection:") = Void, Id;
override selector("moveToLeftEndOfLine:") = Void, Id;
override selector("moveToLeftEndOfLineAndModifySelection:") = Void, Id;
override selector("moveToPoint:") = Void, NSPoint;
override selector("moveToRightEndOfLine:") = Void, Id;
override selector("moveToRightEndOfLineAndModifySelection:") = Void, Id;
override selector("moveUp:") = Void, Id;
override selector("moveUpAndModifySelection:") = Void, Id;
override selector("moveWordBackward:") = Void, Id;
override selector("moveWordBackwardAndModifySelection:") = Void, Id;
override selector("moveWordForward:") = Void, Id;
override selector("moveWordForwardAndModifySelection:") = Void, Id;
override selector("moveWordLeft:") = Void, Id;
override selector("moveWordLeftAndModifySelection:") = Void, Id;
override selector("moveWordRight:") = Void, Id;
override selector("moveWordRightAndModifySelection:") = Void, Id;
override selector("msgid") = UInt;
override selector("multipleThreadsEnabled") = Bool;
override selector("multiplier") = NSNumber;
override selector("mutableArrayValueForKey:") = NSMutableArray, NSString;
override selector("mutableArrayValueForKeyPath:") = NSMutableArray, NSString;
override selector("mutableBytes") = RawPointer;
override selector("mutableChildNodes") = NSMutableArray;
override selector("mutableCopy") = Id;
override selector("mutableCopyWithZone:") = Id, Pointer[NSZone];
override selector("mutableSetValueForKey:") = NSMutableSet, NSString;
override selector("mutableSetValueForKeyPath:") = NSMutableSet, NSString;
override selector("mutableString") = NSMutableString;
override selector("name") = NSString;
override selector("nameFieldLabel") = NSString;
override selector("nameFieldStringValue") = NSString;
override selector("names") = NSArray;
override selector("namesOfPromisedFilesDroppedAtDestination:") = NSArray, NSURL;
override selector("namespaceForPrefix:") = NSXMLNode, NSString;
override selector("namespaceWithName:stringValue:") = Id, NSString, NSString;
override selector("namespaces") = NSArray;
override selector("needsDisplay") = Bool;
override selector("needsDisplayForKey:") = Bool, NSString;
override selector("needsDisplayOnBoundsChange") = Bool;
override selector("needsLayout") = Bool;
override selector("needsPanelToBecomeKey") = Bool;
override selector("needsSizing") = Bool;
override selector("needsToBeUpdatedFromPath:") = Bool, NSString;
override selector("needsToDrawRect:") = Bool, NSRect;
override selector("negativeFormat") = NSString;
override selector("negativeInfinitySymbol") = NSString;
override selector("negativePrefix") = NSString;
override selector("negativeSuffix") = NSString;
override selector("nestingMode") = CULong;
override selector("netService:didNotPublish:") = Void, NSNetService, NSDictionary;
override selector("netService:didNotResolve:") = Void, NSNetService, NSDictionary;
override selector("netService:didUpdateTXTRecordData:") = Void, NSNetService, NSData;
override selector("netServiceBrowser:didFindDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
override selector("netServiceBrowser:didFindService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
override selector("netServiceBrowser:didNotSearch:") = Void, NSNetServiceBrowser, NSDictionary;
override selector("netServiceBrowser:didRemoveDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
override selector("netServiceBrowser:didRemoveService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
override selector("netServiceBrowserDidStopSearch:") = Void, NSNetServiceBrowser;
override selector("netServiceBrowserWillSearch:") = Void, NSNetServiceBrowser;
override selector("netServiceDidPublish:") = Void, NSNetService;
override selector("netServiceDidResolveAddress:") = Void, NSNetService;
override selector("netServiceDidStop:") = Void, NSNetService;
override selector("netServiceWillPublish:") = Void, NSNetService;
override selector("netServiceWillResolve:") = Void, NSNetService;
override selector("new") = Id;
override selector("newDocument:") = Void, Id;
override selector("newItemForRepresentedObject:") = NSCollectionViewItem, Id;
override selector("newObject") = Id;
override selector("newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:") = Id, Id, NSString, Id, NSDictionary;
override selector("newlineCharacterSet") = Id;
override selector("nextDaylightSavingTimeTransition") = NSDate;
override selector("nextDaylightSavingTimeTransitionAfterDate:") = NSDate, NSDate;
override selector("nextEventMatchingMask:") = NSEvent, CULong;
override selector("nextEventMatchingMask:untilDate:inMode:dequeue:") = NSEvent, CULong, NSDate, NSString, Bool;
override selector("nextKeyView") = NSView;
override selector("nextNode") = NSXMLNode;
override selector("nextObject") = Id;
override selector("nextResponder") = NSResponder;
override selector("nextSibling") = NSXMLNode;
override selector("nextState") = CLong;
override selector("nextValidKeyView") = NSView;
override selector("nextWordFromIndex:forward:") = CULong, CULong, Bool;
override selector("nibBundle") = NSBundle;
override selector("nibName") = NSString;
override selector("nilSymbol") = NSString;
override selector("noResponderFor:") = Void, SelectorHandle;
override selector("nodesForXPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("nonBaseCharacterSet") = Id;
override selector("nonretainedObjectValue") = Id;
override selector("normalizeAdjacentTextNodesPreservingCDATA:") = Void, Bool;
override selector("normalizedPosition") = NSPoint;
override selector("notANumber") = NSDecimalNumber;
override selector("notANumberSymbol") = NSString;
override selector("notPredicateWithSubpredicate:") = NSPredicate, NSPredicate;
override selector("notShownAttributeForGlyphAtIndex:") = Bool, CULong;
override selector("notationDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("notationName") = NSString;
override selector("note") = NSString;
override selector("noteFileSystemChanged") = Void;
override selector("noteFileSystemChanged:") = Void, NSString;
override selector("noteHeightOfRowsWithIndexesChanged:") = Void, NSIndexSet;
override selector("noteHeightOfRowsWithIndexesChanged:inColumn:") = Void, NSIndexSet, CLong;
override selector("noteNewRecentDocument:") = Void, NSDocument;
override selector("noteNewRecentDocumentURL:") = Void, NSURL;
override selector("noteNumberOfItemsChanged") = Void;
override selector("noteNumberOfRowsChanged") = Void;
override selector("noteUserDefaultsChanged") = Void;
override selector("notificationBatchingInterval") = Double;
override selector("notificationCenter") = NSNotificationCenter;
override selector("notificationCenterForType:") = NSDistributedNotificationCenter, NSString;
override selector("notificationWithName:object:") = Id, NSString, Id;
override selector("notificationWithName:object:userInfo:") = Id, NSString, Id, NSDictionary;
override selector("null") = NSNull;
override selector("nullDescriptor") = NSAppleEventDescriptor;
override selector("numberFromString:") = NSNumber, NSString;
override selector("numberOfArguments") = CULong;
override selector("numberOfColorComponents") = CLong;
override selector("numberOfColorStops") = CLong;
override selector("numberOfColumns") = CLong;
override selector("numberOfComponents") = CULong;
override selector("numberOfGlyphs") = CULong;
override selector("numberOfItems") = CLong;
override selector("numberOfItemsInComboBox:") = CLong, NSComboBox;
override selector("numberOfItemsInComboBoxCell:") = CLong, NSComboBoxCell;
override selector("numberOfItemsInMenu:") = CLong, NSMenu;
override selector("numberOfMajorTickMarks") = CLong;
override selector("numberOfPlanes") = CLong;
override selector("numberOfRows") = CLong;
override selector("numberOfRowsInTableView:") = CLong, NSTableView;
override selector("numberOfSelectedColumns") = CLong;
override selector("numberOfSelectedRows") = CLong;
override selector("numberOfTabViewItems") = CLong;
override selector("numberOfTickMarks") = CLong;
override selector("numberOfVirtualScreens") = Int;
override selector("numberOfVisibleColumns") = CLong;
override selector("numberOfVisibleItems") = CLong;
override selector("numberStyle") = CULong;
override selector("numberWithBool:") = NSNumber, Bool;
override selector("numberWithChar:") = NSNumber, CChar;
override selector("numberWithDouble:") = NSNumber, Double;
override selector("numberWithFloat:") = NSNumber, Float;
override selector("numberWithInt:") = NSNumber, Int;
override selector("numberWithInteger:") = NSNumber, CLong;
override selector("numberWithLong:") = NSNumber, CLong;
override selector("numberWithLongLong:") = NSNumber, Int64;
override selector("numberWithShort:") = NSNumber, Short;
override selector("numberWithUnsignedChar:") = NSNumber, CUChar;
override selector("numberWithUnsignedInt:") = NSNumber, UInt;
override selector("numberWithUnsignedInteger:") = NSNumber, CULong;
override selector("numberWithUnsignedLong:") = NSNumber, CULong;
override selector("numberWithUnsignedLongLong:") = NSNumber, UInt64;
override selector("numberWithUnsignedShort:") = NSNumber, UShort;
override selector("objCType") = Pointer[CChar];
override selector("object") = Id;
override selector("objectAtIndex:") = Id, CULong;
override selector("objectBeingTested") = Id;
override selector("objectByApplyingXSLT:arguments:error:") = Id, NSData, NSDictionary, Pointer[NSError];
override selector("objectByApplyingXSLTAtURL:arguments:error:") = Id, NSURL, NSDictionary, Pointer[NSError];
override selector("objectByApplyingXSLTString:arguments:error:") = Id, NSString, NSDictionary, Pointer[NSError];
override selector("objectClass") = Id;
override selector("objectDidBeginEditing:") = Void, Id;
override selector("objectDidEndEditing:") = Void, Id;
override selector("objectEnumerator") = NSEnumerator;
override selector("objectForInfoDictionaryKey:") = Id, NSString;
override selector("objectForKey:") = Id, Id;
override selector("objectForProperty:error:") = Id, NSString, Pointer[NSError];
override selector("objectIsForcedForKey:") = Bool, NSString;
override selector("objectIsForcedForKey:inDomain:") = Bool, NSString, NSString;
override selector("objectSpecifier") = NSScriptObjectSpecifier;
override selector("objectSpecifierWithDescriptor:") = NSScriptObjectSpecifier, NSAppleEventDescriptor;
override selector("objectValue") = Id;
override selector("objectValueOfSelectedItem") = Id;
override selector("objectValues") = NSArray;
override selector("objectZone") = Pointer[NSZone];
override selector("objectsAtIndexes:") = NSArray, NSIndexSet;
override selector("objectsByEvaluatingSpecifier") = Id;
override selector("objectsByEvaluatingWithContainers:") = Id, Id;
override selector("objectsForKeys:notFoundMarker:") = NSArray, NSArray, Id;
override selector("objectsForXQuery:constants:error:") = NSArray, NSString, NSDictionary, Pointer[NSError];
override selector("objectsForXQuery:error:") = NSArray, NSString, Pointer[NSError];
override selector("objectsPassingTest:") = NSSet, UnknownType;
override selector("objectsWithOptions:passingTest:") = NSSet, CULong, UnknownType;
override selector("observationInfo") = RawPointer;
override selector("observeValueForKeyPath:ofObject:change:context:") = Void, NSString, Id, NSDictionary, RawPointer;
override selector("offStateImage") = NSImage;
override selector("offsetInFile") = UInt64;
override selector("ok:") = Void, Id;
override selector("onStateImage") = NSImage;
override selector("one") = NSDecimalNumber;
override selector("opacity") = Float;
override selector("opaqueAncestor") = NSView;
override selector("open") = Void;
override selector("open:") = Void, Id;
override selector("openDocument:") = Void, Id;
override selector("openDocumentWithContentsOfFile:display:") = Id, NSString, Bool;
override selector("openDocumentWithContentsOfURL:display:") = Id, NSURL, Bool;
override selector("openDocumentWithContentsOfURL:display:error:") = Id, NSURL, Bool, Pointer[NSError];
override selector("openFile:") = Bool, NSString;
override selector("openFile:fromImage:at:inView:") = Bool, NSString, NSImage, NSPoint, NSView;
override selector("openFile:withApplication:") = Bool, NSString, NSString;
override selector("openFile:withApplication:andDeactivate:") = Bool, NSString, NSString, Bool;
override selector("openGLContext") = NSOpenGLContext;
override selector("openGLContextForPixelFormat:") = NSOpenGLContext, NSOpenGLPixelFormat;
override selector("openGLPixelFormat") = NSOpenGLPixelFormat;
override selector("openGLPixelFormatForDisplayMask:") = NSOpenGLPixelFormat, UInt;
override selector("openHandCursor") = NSCursor;
override selector("openHelpAnchor:inBook:") = Void, NSString, NSString;
override selector("openOnEdge:") = Void, CULong;
override selector("openPanel") = NSOpenPanel;
override selector("openTempFile:") = Bool, NSString;
override selector("openURL:") = Bool, NSURL;
override selector("openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:") = Bool, NSArray, NSString, CULong, NSAppleEventDescriptor, Pointer[NSArray];
override selector("openUntitledDocumentAndDisplay:error:") = Id, Bool, Pointer[NSError];
override selector("openUntitledDocumentOfType:display:") = Id, NSString, Bool;
override selector("operand") = NSExpression;
override selector("operatingSystem") = CULong;
override selector("operatingSystemName") = NSString;
override selector("operatingSystemVersionString") = NSString;
override selector("operationCount") = CULong;
override selector("operationNotAllowedCursor") = NSCursor;
override selector("operations") = NSArray;
override selector("operators") = NSArray;
override selector("optionDescriptionsForBinding:") = NSArray, NSString;
override selector("options") = CULong;
override selector("orPredicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("orangeColor") = NSColor;
override selector("orderBack:") = Void, Id;
override selector("orderFront:") = Void, Id;
override selector("orderFrontCharacterPalette:") = Void, Id;
override selector("orderFrontColorPanel:") = Void, Id;
override selector("orderFrontFontPanel:") = Void, Id;
override selector("orderFrontLinkPanel:") = Void, Id;
override selector("orderFrontListPanel:") = Void, Id;
override selector("orderFrontRegardless") = Void;
override selector("orderFrontSpacingPanel:") = Void, Id;
override selector("orderFrontStandardAboutPanel:") = Void, Id;
override selector("orderFrontStandardAboutPanelWithOptions:") = Void, NSDictionary;
override selector("orderFrontStylesPanel:") = Void, Id;
override selector("orderFrontSubstitutionsPanel:") = Void, Id;
override selector("orderFrontTablePanel:") = Void, Id;
override selector("orderOut:") = Void, Id;
override selector("orderWindow:relativeTo:") = Void, CLong, CLong;
override selector("orderedDocuments") = NSArray;
override selector("orderedIndex") = CLong;
override selector("orderedWindows") = NSArray;
override selector("ordinalityOfUnit:inUnit:forDate:") = CULong, CULong, CULong, NSDate;
override selector("orientation") = CULong;
override selector("originOffset") = Double;
override selector("orthography") = NSOrthography;
override selector("orthographyCheckingResultWithRange:orthography:") = NSTextCheckingResult, NSRange, NSOrthography;
override selector("orthographyWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
override selector("otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, Short, CLong, CLong;
override selector("otherMouseDown:") = Void, NSEvent;
override selector("otherMouseDragged:") = Void, NSEvent;
override selector("otherMouseUp:") = Void, NSEvent;
override selector("outline:") = Void, Id;
override selector("outlineTableColumn") = NSTableColumn;
override selector("outlineView:acceptDrop:item:childIndex:") = Bool, NSOutlineView, Id, Id, CLong;
override selector("outlineView:child:ofItem:") = Id, NSOutlineView, CLong, Id;
override selector("outlineView:dataCellForTableColumn:item:") = NSCell, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:didClickTableColumn:") = Void, NSOutlineView, NSTableColumn;
override selector("outlineView:didDragTableColumn:") = Void, NSOutlineView, NSTableColumn;
override selector("outlineView:heightOfRowByItem:") = Double, NSOutlineView, Id;
override selector("outlineView:isGroupItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:isItemExpandable:") = Bool, NSOutlineView, Id;
override selector("outlineView:itemForPersistentObject:") = Id, NSOutlineView, Id;
override selector("outlineView:mouseDownInHeaderOfTableColumn:") = Void, NSOutlineView, NSTableColumn;
override selector("outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:") = NSArray, NSOutlineView, NSURL, NSArray;
override selector("outlineView:nextTypeSelectMatchFromItem:toItem:forString:") = Id, NSOutlineView, Id, Id, NSString;
override selector("outlineView:numberOfChildrenOfItem:") = CLong, NSOutlineView, Id;
override selector("outlineView:objectValueForTableColumn:byItem:") = Id, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:persistentObjectForItem:") = Id, NSOutlineView, Id;
override selector("outlineView:selectionIndexesForProposedSelection:") = NSIndexSet, NSOutlineView, NSIndexSet;
override selector("outlineView:setObjectValue:forTableColumn:byItem:") = Void, NSOutlineView, Id, NSTableColumn, Id;
override selector("outlineView:shouldCollapseItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldEditTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:shouldExpandItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldReorderColumn:toColumn:") = Bool, NSOutlineView, CLong, CLong;
override selector("outlineView:shouldSelectItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldSelectTableColumn:") = Bool, NSOutlineView, NSTableColumn;
override selector("outlineView:shouldShowCellExpansionForTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:shouldShowOutlineCellForItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldTrackCell:forTableColumn:item:") = Bool, NSOutlineView, NSCell, NSTableColumn, Id;
override selector("outlineView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSOutlineView, NSEvent, NSString;
override selector("outlineView:sizeToFitWidthOfColumn:") = Double, NSOutlineView, CLong;
override selector("outlineView:sortDescriptorsDidChange:") = Void, NSOutlineView, NSArray;
override selector("outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:") = NSString, NSOutlineView, NSCell, NSRectPointer, NSTableColumn, Id, NSPoint;
override selector("outlineView:typeSelectStringForTableColumn:item:") = NSString, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:validateDrop:proposedItem:proposedChildIndex:") = CULong, NSOutlineView, Id, Id, CLong;
override selector("outlineView:willDisplayCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
override selector("outlineView:willDisplayOutlineCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
override selector("outlineView:writeItems:toPasteboard:") = Bool, NSOutlineView, NSArray, NSPasteboard;
override selector("outlineViewColumnDidMove:") = Void, NSNotification;
override selector("outlineViewColumnDidResize:") = Void, NSNotification;
override selector("outlineViewItemDidCollapse:") = Void, NSNotification;
override selector("outlineViewItemDidExpand:") = Void, NSNotification;
override selector("outlineViewItemWillCollapse:") = Void, NSNotification;
override selector("outlineViewItemWillExpand:") = Void, NSNotification;
override selector("outlineViewSelectionDidChange:") = Void, NSNotification;
override selector("outlineViewSelectionIsChanging:") = Void, NSNotification;
override selector("outputFormat") = CULong;
override selector("outputStreamToBuffer:capacity:") = Id, Pointer[CUChar], CULong;
override selector("outputStreamToFileAtPath:append:") = Id, NSString, Bool;
override selector("outputStreamToMemory") = Id;
override selector("outputStreamWithURL:append:") = Id, NSURL, Bool;
override selector("owner") = Id;
override selector("paddingCharacter") = NSString;
override selector("paddingPosition") = CULong;
override selector("pageCount") = CLong;
override selector("pageDown:") = Void, Id;
override selector("pageDownAndModifySelection:") = Void, Id;
override selector("pageFooter") = NSAttributedString;
override selector("pageHeader") = NSAttributedString;
override selector("pageLayout") = NSPageLayout;
override selector("pageOrder") = CLong;
override selector("pageRange") = NSRange;
override selector("pageScroll") = Double;
override selector("pageSizeForPaper:") = NSSize, NSString;
override selector("pageUp:") = Void, Id;
override selector("pageUpAndModifySelection:") = Void, Id;
override selector("paletteFontOfSize:") = NSFont, Double;
override selector("paletteLabel") = NSString;
override selector("panel:compareFilename:with:caseSensitive:") = CLong, Id, NSString, NSString, Bool;
override selector("panel:didChangeToDirectoryURL:") = Void, Id, NSURL;
override selector("panel:directoryDidChange:") = Void, Id, NSString;
override selector("panel:isValidFilename:") = Bool, Id, NSString;
override selector("panel:shouldEnableURL:") = Bool, Id, NSURL;
override selector("panel:shouldShowFilename:") = Bool, Id, NSString;
override selector("panel:userEnteredFilename:confirmed:") = NSString, Id, NSString, Bool;
override selector("panel:validateURL:error:") = Bool, Id, NSURL, Pointer[NSError];
override selector("panel:willExpand:") = Void, Id, Bool;
override selector("panelConvertFont:") = NSFont, NSFont;
override selector("panelSelectionDidChange:") = Void, Id;
override selector("paperName") = NSString;
override selector("paperSize") = NSSize;
override selector("paragraphCharacterRange") = NSRange;
override selector("paragraphGlyphRange") = NSRange;
override selector("paragraphRangeForRange:") = NSRange, NSRange;
override selector("paragraphSeparatorCharacterRange") = NSRange;
override selector("paragraphSeparatorGlyphRange") = NSRange;
override selector("paragraphSpacing") = Double;
override selector("paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override selector("paragraphSpacingBefore") = Double;
override selector("paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override selector("paragraphs") = NSArray;
override selector("paramDescriptorForKeyword:") = NSAppleEventDescriptor, UInt;
override selector("parameterString") = NSString;
override selector("parent") = NSXMLNode;
override selector("parentForItem:") = Id, Id;
override selector("parentForItemsInColumn:") = Id, CLong;
override selector("parentItem") = NSMenuItem;
override selector("parentNode") = NSTreeNode;
override selector("parentRowForRow:") = CLong, CLong;
override selector("parentWindow") = NSWindow;
override selector("parse") = Bool;
override selector("parser:didEndElement:namespaceURI:qualifiedName:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:didEndMappingPrefix:") = Void, NSXMLParser, NSString;
override selector("parser:didStartElement:namespaceURI:qualifiedName:attributes:") = Void, NSXMLParser, NSString, NSString, NSString, NSDictionary;
override selector("parser:didStartMappingPrefix:toURI:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
override selector("parser:foundCDATA:") = Void, NSXMLParser, NSData;
override selector("parser:foundCharacters:") = Void, NSXMLParser, NSString;
override selector("parser:foundComment:") = Void, NSXMLParser, NSString;
override selector("parser:foundElementDeclarationWithName:model:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundExternalEntityDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:foundIgnorableWhitespace:") = Void, NSXMLParser, NSString;
override selector("parser:foundInternalEntityDeclarationWithName:value:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundNotationDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:foundProcessingInstructionWithTarget:data:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
override selector("parser:parseErrorOccurred:") = Void, NSXMLParser, NSError;
override selector("parser:resolveExternalEntityName:systemID:") = NSData, NSXMLParser, NSString, NSString;
override selector("parser:validationErrorOccurred:") = Void, NSXMLParser, NSError;
override selector("parserDidEndDocument:") = Void, NSXMLParser;
override selector("parserDidStartDocument:") = Void, NSXMLParser;
override selector("parserError") = NSError;
override selector("password") = NSString;
override selector("paste:") = Void, Id;
override selector("pasteAsPlainText:") = Void, Id;
override selector("pasteAsRichText:") = Void, Id;
override selector("pasteFont:") = Void, Id;
override selector("pasteRuler:") = Void, Id;
override selector("pasteboard:item:provideDataForType:") = Void, NSPasteboard, NSPasteboardItem, NSString;
override selector("pasteboard:provideDataForType:") = Void, NSPasteboard, NSString;
override selector("pasteboardByFilteringData:ofType:") = NSPasteboard, NSData, NSString;
override selector("pasteboardByFilteringFile:") = NSPasteboard, NSString;
override selector("pasteboardByFilteringTypesInPasteboard:") = NSPasteboard, NSPasteboard;
override selector("pasteboardChangedOwner:") = Void, NSPasteboard;
override selector("pasteboardFinishedWithDataProvider:") = Void, NSPasteboard;
override selector("pasteboardItems") = NSArray;
override selector("pasteboardPropertyListForType:") = Id, NSString;
override selector("pasteboardWithName:") = NSPasteboard, NSString;
override selector("pasteboardWithUniqueName") = NSPasteboard;
override selector("path") = NSString;
override selector("pathCell:willDisplayOpenPanel:") = Void, NSPathCell, NSOpenPanel;
override selector("pathCell:willPopUpMenu:") = Void, NSPathCell, NSMenu;
override selector("pathComponentCellAtPoint:withFrame:inView:") = NSPathComponentCell, NSPoint, NSRect, NSView;
override selector("pathComponentCellClass") = Id;
override selector("pathComponentCells") = NSArray;
override selector("pathComponents") = NSArray;
override selector("pathContentOfSymbolicLinkAtPath:") = NSString, NSString;
override selector("pathControl:acceptDrop:") = Bool, NSPathControl, Id;
override selector("pathControl:shouldDragPathComponentCell:withPasteboard:") = Bool, NSPathControl, NSPathComponentCell, NSPasteboard;
override selector("pathControl:validateDrop:") = CULong, NSPathControl, Id;
override selector("pathControl:willDisplayOpenPanel:") = Void, NSPathControl, NSOpenPanel;
override selector("pathControl:willPopUpMenu:") = Void, NSPathControl, NSMenu;
override selector("pathExtension") = NSString;
override selector("pathForAuxiliaryExecutable:") = NSString, NSString;
override selector("pathForImageResource:") = NSString, NSString;
override selector("pathForResource:ofType:") = NSString, NSString, NSString;
override selector("pathForResource:ofType:inDirectory:") = NSString, NSString, NSString, NSString;
override selector("pathForResource:ofType:inDirectory:forLocalization:") = NSString, NSString, NSString, NSString, NSString;
override selector("pathForSoundResource:") = NSString, NSString;
override selector("pathSeparator") = NSString;
override selector("pathStyle") = CLong;
override selector("pathToColumn:") = NSString, CLong;
override selector("pathWithComponents:") = NSString, NSArray;
override selector("pathsForResourcesOfType:inDirectory:") = NSArray, NSString, NSString;
override selector("pathsForResourcesOfType:inDirectory:forLocalization:") = NSArray, NSString, NSString, NSString;
override selector("pathsMatchingExtensions:") = NSArray, NSArray;
override selector("patternImage") = NSImage;
override selector("patternPhase") = NSPoint;
override selector("pause") = Bool;
override selector("pauseSpeakingAtBoundary:") = Void, CULong;
override selector("perMillSymbol") = NSString;
override selector("percentSymbol") = NSString;
override selector("performActionForItem:") = Void, Id;
override selector("performActionForItemAtIndex:") = Void, CLong;
override selector("performClick:") = Void, Id;
override selector("performClickOnCellAtColumn:row:") = Void, CLong, CLong;
override selector("performClickWithFrame:inView:") = Void, NSRect, NSView;
override selector("performClose:") = Void, Id;
override selector("performDefaultImplementation") = Id;
override selector("performDragOperation:") = Bool, Id;
override selector("performFileOperation:source:destination:files:tag:") = Bool, NSString, NSString, NSString, NSArray, Pointer[CLong];
override selector("performFindPanelAction:") = Void, Id;
override selector("performKeyEquivalent:") = Bool, NSEvent;
override selector("performMiniaturize:") = Void, Id;
override selector("performMnemonic:") = Bool, NSString;
override selector("performSelector:") = Id, SelectorHandle;
override selector("performSelector:onThread:withObject:waitUntilDone:") = Void, SelectorHandle, NSThread, Id, Bool;
override selector("performSelector:onThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, NSThread, Id, Bool, NSArray;
override selector("performSelector:target:argument:order:modes:") = Void, SelectorHandle, Id, Id, CULong, NSArray;
override selector("performSelector:withObject:") = Id, SelectorHandle, Id;
override selector("performSelector:withObject:afterDelay:") = Void, SelectorHandle, Id, Double;
override selector("performSelector:withObject:afterDelay:inModes:") = Void, SelectorHandle, Id, Double, NSArray;
override selector("performSelector:withObject:withObject:") = Id, SelectorHandle, Id, Id;
override selector("performSelectorInBackground:withObject:") = Void, SelectorHandle, Id;
override selector("performSelectorOnMainThread:withObject:waitUntilDone:") = Void, SelectorHandle, Id, Bool;
override selector("performSelectorOnMainThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, Id, Bool, NSArray;
override selector("performZoom:") = Void, Id;
override selector("persistence") = CULong;
override selector("persistentDomainForName:") = NSDictionary, NSString;
override selector("persistentDomainNames") = NSArray;
override selector("persistentStoreTypeForFileType:") = NSString, NSString;
override selector("phase") = CULong;
override selector("phonemesFromText:") = NSString, NSString;
override selector("physicalMemory") = UInt64;
override selector("pipe") = Id;
override selector("pixelBuffer") = NSOpenGLPixelBuffer;
override selector("pixelBufferCubeMapFace") = UInt;
override selector("pixelBufferMipMapLevel") = Int;
override selector("pixelFormat") = NSOpenGLPixelFormat;
override selector("pixelsHigh") = CLong;
override selector("pixelsWide") = CLong;
override selector("placeholderAttributedString") = NSAttributedString;
override selector("placeholderString") = NSString;
override selector("play") = Bool;
override selector("playbackDeviceIdentifier") = NSString;
override selector("plusSign") = NSString;
override selector("pointSize") = Double;
override selector("pointValue") = NSPoint;
override selector("pointerArrayWithOptions:") = Id, CULong;
override selector("pointerArrayWithPointerFunctions:") = Id, NSPointerFunctions;
override selector("pointerArrayWithStrongObjects") = Id;
override selector("pointerArrayWithWeakObjects") = Id;
override selector("pointerAtIndex:") = RawPointer, CULong;
override selector("pointerFunctions") = NSPointerFunctions;
override selector("pointerFunctionsWithOptions:") = Id, CULong;
override selector("pointerValue") = RawPointer;
override selector("pointingDeviceID") = CULong;
override selector("pointingDeviceSerialNumber") = CULong;
override selector("pointingDeviceType") = CULong;
override selector("pointingHandCursor") = NSCursor;
override selector("pop") = Void;
override selector("popUpContextMenu:withEvent:forView:") = Void, NSMenu, NSEvent, NSView;
override selector("popUpContextMenu:withEvent:forView:withFont:") = Void, NSMenu, NSEvent, NSView, NSFont;
override selector("popUpMenuPositioningItem:atLocation:inView:") = Bool, NSMenuItem, NSPoint, NSView;
override selector("popUpStatusItemMenu:") = Void, NSMenu;
override selector("port") = Id;
override selector("portCoderWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
override selector("portForName:") = NSPort, NSString;
override selector("portForName:host:") = NSPort, NSString, NSString;
override selector("portForName:host:nameServerPortNumber:") = NSPort, NSString, NSString, UShort;
override selector("portList") = NSArray;
override selector("portWithMachPort:") = NSPort, UInt;
override selector("portWithMachPort:options:") = NSPort, UInt, CULong;
override selector("poseAsClass:") = Void, Id;
override selector("position") = CULong;
override selector("positiveFormat") = NSString;
override selector("positiveInfinitySymbol") = NSString;
override selector("positivePrefix") = NSString;
override selector("positiveSuffix") = NSString;
override selector("postEvent:atStart:") = Void, NSEvent, Bool;
override selector("postNotification:") = Void, NSNotification;
override selector("postNotificationName:object:") = Void, NSString, Id;
override selector("postNotificationName:object:userInfo:") = Void, NSString, Id, NSDictionary;
override selector("postNotificationName:object:userInfo:deliverImmediately:") = Void, NSString, NSString, NSDictionary, Bool;
override selector("postNotificationName:object:userInfo:options:") = Void, NSString, NSString, NSDictionary, CULong;
override selector("postsBoundsChangedNotifications") = Bool;
override selector("postsFrameChangedNotifications") = Bool;
override selector("postscriptName") = NSString;
override selector("precomposedStringWithCanonicalMapping") = NSString;
override selector("precomposedStringWithCompatibilityMapping") = NSString;
override selector("predefinedEntityDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("predefinedNamespaceForPrefix:") = NSXMLNode, NSString;
override selector("predicate") = NSPredicate;
override selector("predicateForRow:") = NSPredicate, CLong;
override selector("predicateFormat") = NSString;
override selector("predicateOperatorType") = CULong;
override selector("predicateWithBlock:") = NSPredicate, UnknownType;
override varargSelector("predicateWithFormat:") = NSPredicate, NSString;
override selector("predicateWithFormat:argumentArray:") = NSPredicate, NSString, NSArray;
override selector("predicateWithFormat:arguments:") = NSPredicate, NSString, Pointer[__va_list_tag];
override selector("predicateWithLeftExpression:rightExpression:customSelector:") = NSPredicate, NSExpression, NSExpression, SelectorHandle;
override selector("predicateWithLeftExpression:rightExpression:modifier:type:options:") = NSPredicate, NSExpression, NSExpression, CULong, CULong, CULong;
override selector("predicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("predicateWithSubstitutionVariables:") = NSPredicate, NSDictionary;
override selector("predicateWithValue:") = NSPredicate, Bool;
override selector("preferredBackingLocation") = CULong;
override selector("preferredEdge") = CULong;
override selector("preferredFilename") = NSString;
override selector("preferredFilenameExtensionForType:") = NSString, NSString;
override selector("preferredFrameSize") = CGSize;
override selector("preferredLanguages") = NSArray;
override selector("preferredLocalizations") = NSArray;
override selector("preferredLocalizationsFromArray:") = NSArray, NSArray;
override selector("preferredLocalizationsFromArray:forPreferences:") = NSArray, NSArray, NSArray;
override selector("preferredPasteboardTypeFromArray:restrictedToTypesFromArray:") = NSString, NSArray, NSArray;
override selector("preferredSizeOfLayer:") = CGSize, CALayer;
override selector("prefersAllColumnUserResizing") = Bool;
override selector("prefersColorMatch") = Bool;
override selector("prefersTrackingUntilMouseUp") = Bool;
override selector("prefix") = NSString;
override selector("prefixForName:") = NSString, NSString;
override selector("preflightAndReturnError:") = Bool, Pointer[NSError];
override selector("prepareContent") = Void;
override selector("prepareForDragOperation:") = Bool, Id;
override selector("prepareGState") = Void;
override selector("prepareOpenGL") = Void;
override selector("preparePageLayout:") = Bool, NSPageLayout;
override selector("prepareSavePanel:") = Bool, NSSavePanel;
override selector("prepareWithInvocationTarget:") = Id, Id;
override selector("preparedCellAtColumn:row:") = NSCell, CLong, CLong;
override selector("prependTransform:") = Void, NSAffineTransform;
override selector("presentError:") = Bool, NSError;
override selector("presentError:modalForWindow:delegate:didPresentSelector:contextInfo:") = Void, NSError, NSWindow, Id, SelectorHandle, RawPointer;
override selector("presentationLayer") = Id;
override selector("presentationOptions") = CULong;
override selector("preservesContentDuringLiveResize") = Bool;
override selector("preservesSelection") = Bool;
override selector("pressedMouseButtons") = CULong;
override selector("pressure") = Float;
override selector("preventWindowOrdering") = Void;
override selector("preventsApplicationTerminationWhenModal") = Bool;
override selector("previousFailureCount") = CLong;
override selector("previousKeyView") = NSView;
override selector("previousNode") = NSXMLNode;
override selector("previousSibling") = NSXMLNode;
override selector("previousValidKeyView") = NSView;
override selector("principalClass") = Id;
override selector("print:") = Void, Id;
override selector("printDocument:") = Void, Id;
override selector("printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:") = Void, NSDictionary, Bool, Id, SelectorHandle, RawPointer;
override selector("printInfo") = NSPrintInfo;
override selector("printJobTitle") = NSString;
override selector("printOperationWithSettings:error:") = NSPrintOperation, NSDictionary, Pointer[NSError];
override selector("printOperationWithView:") = NSPrintOperation, NSView;
override selector("printOperationWithView:printInfo:") = NSPrintOperation, NSView, NSPrintInfo;
override selector("printPanel") = NSPrintPanel;
override selector("printSettings") = NSMutableDictionary;
override selector("printShowingPrintPanel:") = Void, Bool;
override selector("printer") = NSPrinter;
override selector("printerFont") = NSFont;
override selector("printerNames") = NSArray;
override selector("printerTypes") = NSArray;
override selector("printerWithName:") = NSPrinter, NSString;
override selector("printerWithName:domain:includeUnavailable:") = NSPrinter, NSString, NSString, Bool;
override selector("printerWithType:") = NSPrinter, NSString;
override selector("printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:") = NSSize, NSLayoutManager, NSRange, Pointer[CUChar], CULong;
override selector("privateFrameworksPath") = NSString;
override selector("privateFrameworksURL") = NSURL;
override selector("processEditing") = Void;
override selector("processIdentifier") = Int;
override selector("processInfo") = NSProcessInfo;
override selector("processName") = NSString;
override selector("processingInstructionWithName:stringValue:") = Id, NSString, NSString;
override selector("processorCount") = CULong;
override selector("progressMarks") = NSArray;
override selector("prompt") = NSString;
override selector("properties") = NSDictionary;
override selector("propertiesToUpdate") = CULong;
override selector("propertyForKey:") = Id, NSString;
override selector("propertyForKey:inRequest:") = Id, NSString, NSURLRequest;
override selector("propertyForKeyIfAvailable:") = Id, NSString;
override selector("propertyList") = Id;
override selector("propertyList:isValidForFormat:") = Bool, Id, CULong;
override selector("propertyListForType:") = Id, NSString;
override selector("propertyListFromData:mutabilityOption:format:errorDescription:") = Id, NSData, CULong, Pointer[CULong], Pointer[NSString];
override selector("propertyListFromStringsFileFormat") = NSDictionary;
override selector("propertyListWithData:options:format:error:") = Id, NSData, CULong, Pointer[CULong], Pointer[NSError];
override selector("propertyListWithStream:options:format:error:") = Id, NSInputStream, CULong, Pointer[CULong], Pointer[NSError];
override selector("proposedCredential") = NSURLCredential;
override selector("protectionSpace") = NSURLProtectionSpace;
override selector("protocol") = Int;
override selector("protocolCheckerWithTarget:protocol:") = Id, NSObject, Id;
override selector("protocolFamily") = Int;
override selector("protocolSpecificInformation") = NSString;
override selector("prototype") = Id;
override selector("provideNewButtonImage") = NSImage;
override selector("provideNewView:") = NSView, Bool;
override selector("proxyType") = NSString;
override selector("proxyWithLocal:connection:") = NSDistantObject, Id, NSConnection;
override selector("proxyWithTarget:connection:") = NSDistantObject, Id, NSConnection;
override selector("publicID") = NSString;
override selector("publish") = Void;
override selector("publishWithOptions:") = Void, CULong;
override selector("pullsDown") = Bool;
override selector("punctuationCharacterSet") = Id;
override selector("purpleColor") = NSColor;
override selector("push") = Void;
override selector("putCell:atRow:column:") = Void, NSCell, CLong, CLong;
override selector("quarter") = CLong;
override selector("quarterSymbols") = NSArray;
override selector("query") = NSString;
override selector("queuePriority") = CLong;
override selector("quoteCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("raise") = Void;
override varargSelector("raise:format:") = Void, NSString, NSString;
override selector("raise:format:arguments:") = Void, NSString, NSString, Pointer[__va_list_tag];
override selector("raiseBaseline:") = Void, Id;
override selector("range") = NSRange;
override selector("rangeContainerObject") = Id;
override selector("rangeForUserCharacterAttributeChange") = NSRange;
override selector("rangeForUserCompletion") = NSRange;
override selector("rangeForUserParagraphAttributeChange") = NSRange;
override selector("rangeForUserTextChange") = NSRange;
override selector("rangeOfCharacterFromSet:") = NSRange, NSCharacterSet;
override selector("rangeOfCharacterFromSet:options:") = NSRange, NSCharacterSet, CULong;
override selector("rangeOfCharacterFromSet:options:range:") = NSRange, NSCharacterSet, CULong, NSRange;
override selector("rangeOfComposedCharacterSequenceAtIndex:") = NSRange, CULong;
override selector("rangeOfComposedCharacterSequencesForRange:") = NSRange, NSRange;
override selector("rangeOfData:options:range:") = NSRange, NSData, CULong, NSRange;
override selector("rangeOfNominallySpacedGlyphsContainingIndex:") = NSRange, CULong;
override selector("rangeOfString:") = NSRange, NSString;
override selector("rangeOfString:options:") = NSRange, NSString, CULong;
override selector("rangeOfString:options:range:") = NSRange, NSString, CULong, NSRange;
override selector("rangeOfString:options:range:locale:") = NSRange, NSString, CULong, NSRange, NSLocale;
override selector("rangeOfTextBlock:atIndex:") = NSRange, NSTextBlock, CULong;
override selector("rangeOfTextList:atIndex:") = NSRange, NSTextList, CULong;
override selector("rangeOfTextTable:atIndex:") = NSRange, NSTextTable, CULong;
override selector("rangeOfUnit:inUnit:forDate:") = NSRange, CULong, CULong, NSDate;
override selector("rangeOfUnit:startDate:interval:forDate:") = Bool, CULong, Pointer[NSDate], Pointer[Double], NSDate;
override selector("rangeValue") = NSRange;
override selector("rangesForUserCharacterAttributeChange") = NSArray;
override selector("rangesForUserParagraphAttributeChange") = NSArray;
override selector("rangesForUserTextChange") = NSArray;
override selector("rate") = Float;
override selector("read:maxLength:") = CLong, Pointer[CUChar], CULong;
override selector("readDataOfLength:") = NSData, CULong;
override selector("readDataToEndOfFile") = NSData;
override selector("readFileContentsType:toFile:") = NSString, NSString, NSString;
override selector("readFileWrapper") = NSFileWrapper;
override selector("readFromData:ofType:error:") = Bool, NSData, NSString, Pointer[NSError];
override selector("readFromData:options:documentAttributes:") = Bool, NSData, NSDictionary, Pointer[NSDictionary];
override selector("readFromData:options:documentAttributes:error:") = Bool, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("readFromFile:ofType:") = Bool, NSString, NSString;
override selector("readFromFileWrapper:ofType:error:") = Bool, NSFileWrapper, NSString, Pointer[NSError];
override selector("readFromURL:ofType:") = Bool, NSURL, NSString;
override selector("readFromURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("readFromURL:options:documentAttributes:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary];
override selector("readFromURL:options:documentAttributes:error:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("readFromURL:options:error:") = Bool, NSURL, CULong, Pointer[NSError];
override selector("readInBackgroundAndNotify") = Void;
override selector("readInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("readObjectsForClasses:options:") = NSArray, NSArray, NSDictionary;
override selector("readPrintInfo") = Void;
override selector("readRTFDFromFile:") = Bool, NSString;
override selector("readSelectionFromPasteboard:") = Bool, NSPasteboard;
override selector("readSelectionFromPasteboard:type:") = Bool, NSPasteboard, NSString;
override selector("readToEndOfFileInBackgroundAndNotify") = Void;
override selector("readToEndOfFileInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("readablePasteboardTypes") = NSArray;
override selector("readableTypes") = NSArray;
override selector("readableTypesForPasteboard:") = NSArray, NSPasteboard;
override selector("readingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override selector("realm") = NSString;
override selector("rearrangeObjects") = Void;
override selector("reason") = NSString;
override selector("recache") = Void;
override selector("recalculateKeyViewLoop") = Void;
override selector("receivePort") = NSPort;
override selector("receiversSpecifier") = NSScriptObjectSpecifier;
override selector("receivesCredentialSecurely") = Bool;
override selector("recentDocumentURLs") = NSArray;
override selector("recentSearches") = NSArray;
override selector("recentsAutosaveName") = NSString;
override selector("recordDescriptor") = NSAppleEventDescriptor;
override selector("recoveryAttempter") = Id;
override selector("rect") = NSRect;
override selector("rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
override selector("rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
override selector("rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSPoint, NSRect, NSTextContainer, NSRange;
override selector("rectForKey:inTable:") = NSRect, NSString, NSString;
override selector("rectForLayoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSPoint, NSRect, NSTextContainer, NSRange;
override selector("rectForPage:") = NSRect, CLong;
override selector("rectForPart:") = NSRect, CULong;
override selector("rectOfColumn:") = NSRect, CLong;
override selector("rectOfPathComponentCell:withFrame:inView:") = NSRect, NSPathComponentCell, NSRect, NSView;
override selector("rectOfRow:") = NSRect, CLong;
override selector("rectOfTickMarkAtIndex:") = NSRect, CLong;
override selector("rectPreservedDuringLiveResize") = NSRect;
override selector("rectValue") = NSRect;
override selector("recycleURLs:completionHandler:") = Void, NSArray, UnknownType;
override selector("red") = Double;
override selector("redColor") = NSColor;
override selector("redComponent") = Double;
override selector("redo") = Void;
override selector("redoActionName") = NSString;
override selector("redoMenuItemTitle") = NSString;
override selector("redoMenuTitleForUndoActionName:") = NSString, NSString;
override selector("reflectScrolledClipView:") = Void, NSClipView;
override selector("refusesFirstResponder") = Bool;
override selector("registerBooksInBundle:") = Bool, NSBundle;
override selector("registerClass:") = Bool, Id;
override selector("registerClassDescription:") = Void, NSScriptClassDescription;
override selector("registerClassDescription:forClass:") = Void, NSClassDescription, Id;
override selector("registerCoercer:selector:toConvertFromClass:toClass:") = Void, Id, SelectorHandle, Id, Id;
override selector("registerCommandDescription:") = Void, NSScriptCommandDescription;
override selector("registerDefaults:") = Void, NSDictionary;
override selector("registerForDraggedTypes:") = Void, NSArray;
override selector("registerForServices") = Void;
override selector("registerImageRepClass:") = Void, Id;
override selector("registerLanguage:byVendor:") = Bool, NSString, NSString;
override selector("registerName:") = Bool, NSString;
override selector("registerName:withNameServer:") = Bool, NSString, NSPortNameServer;
override selector("registerPort:name:") = Bool, NSPort, NSString;
override selector("registerPort:name:nameServerPortNumber:") = Bool, NSPort, NSString, UShort;
override selector("registerServicesMenuSendTypes:returnTypes:") = Void, NSArray, NSArray;
override selector("registerURLHandleClass:") = Void, Id;
override selector("registerUndoWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
override selector("registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:") = Void, NSString, NSString, Double, NSArray, NSArray;
override selector("registerUserInterfaceItemSearchHandler:") = Void, Id;
override selector("registeredDraggedTypes") = NSArray;
override selector("registeredImageRepClasses") = NSArray;
override selector("regularFileContents") = NSData;
override selector("relativeCurveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
override selector("relativeLineToPoint:") = Void, NSPoint;
override selector("relativeMoveToPoint:") = Void, NSPoint;
override selector("relativePath") = NSString;
override selector("relativePosition") = CULong;
override selector("relativeString") = NSString;
override selector("release") = Void;
override selector("releaseCGLContext:") = Void, CGLContextObj;
override selector("releaseCGLPixelFormat:") = Void, CGLPixelFormatObj;
override selector("releaseGState") = Void;
override selector("releaseGlobally") = Void;
override selector("relinquishFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[]];
override selector("reloadColumn:") = Void, CLong;
override selector("reloadCriteria") = Void;
override selector("reloadData") = Void;
override selector("reloadDataForRowIndexes:columnIndexes:") = Void, NSIndexSet, NSIndexSet;
override selector("reloadDataForRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
override selector("reloadDefaultFontFamilies") = Void;
override selector("reloadItem:") = Void, Id;
override selector("reloadItem:reloadChildren:") = Void, Id, Bool;
override selector("reloadPredicate") = Void;
override selector("remoteObjects") = NSArray;
override selector("remove:") = Void, Id;
override selector("removeAccessoryController:") = Void, NSViewController;
override selector("removeAllActions") = Void;
override selector("removeAllActionsWithTarget:") = Void, Id;
override selector("removeAllAnimations") = Void;
override selector("removeAllCachedResponses") = Void;
override selector("removeAllIndexes") = Void;
override selector("removeAllItems") = Void;
override selector("removeAllObjects") = Void;
override selector("removeAllPoints") = Void;
override selector("removeAllToolTips") = Void;
override selector("removeAnimationForKey:") = Void, NSString;
override selector("removeAttribute:range:") = Void, NSString, NSRange;
override selector("removeAttributeForName:") = Void, NSString;
override selector("removeCachedResponseForRequest:") = Void, NSURLRequest;
override selector("removeCharactersInRange:") = Void, NSRange;
override selector("removeCharactersInString:") = Void, NSString;
override selector("removeChildAtIndex:") = Void, CULong;
override selector("removeChildWindow:") = Void, NSWindow;
override selector("removeClient:") = Void, Id;
override selector("removeCollection:") = Bool, NSString;
override selector("removeColorWithKey:") = Void, NSString;
override selector("removeColumn:") = Void, CLong;
override selector("removeConnection:fromRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
override selector("removeContextHelpForObject:") = Void, Id;
override selector("removeCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("removeCursorRect:cursor:") = Void, NSRect, NSCursor;
override selector("removeDependency:") = Void, NSOperation;
override selector("removeDescriptorAtIndex:") = Void, CLong;
override selector("removeDescriptorWithKeyword:") = Void, UInt;
override selector("removeDocument:") = Void, NSDocument;
override selector("removeEntryAtIndex:") = Void, CLong;
override selector("removeEventHandlerForEventClass:andEventID:") = Void, UInt, UInt;
override selector("removeFile") = Void;
override selector("removeFileAtPath:handler:") = Bool, NSString, Id;
override selector("removeFileWrapper:") = Void, NSFileWrapper;
override selector("removeFontDescriptor:fromCollection:") = Void, NSFontDescriptor, NSString;
override selector("removeFontTrait:") = Void, Id;
override selector("removeFrameUsingName:") = Void, NSString;
override selector("removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("removeFromSuperlayer") = Void;
override selector("removeFromSuperview") = Void;
override selector("removeFromSuperviewWithoutNeedingDisplay") = Void;
override selector("removeIndex:") = Void, CULong;
override selector("removeIndexes:") = Void, NSIndexSet;
override selector("removeIndexesInRange:") = Void, NSRange;
override selector("removeItem:") = Void, NSMenuItem;
override selector("removeItemAtIndex:") = Void, CLong;
override selector("removeItemAtPath:error:") = Bool, NSString, Pointer[NSError];
override selector("removeItemAtURL:error:") = Bool, NSURL, Pointer[NSError];
override selector("removeItemWithObjectValue:") = Void, Id;
override selector("removeItemWithTitle:") = Void, NSString;
override selector("removeLastObject") = Void;
override selector("removeLayoutManager:") = Void, NSLayoutManager;
override selector("removeMarker:") = Void, NSRulerMarker;
override selector("removeMonitor:") = Void, Id;
override selector("removeNamespaceForPrefix:") = Void, NSString;
override selector("removeObject:") = Void, Id;
override selector("removeObject:inRange:") = Void, Id, NSRange;
override selector("removeObjectAtArrangedObjectIndex:") = Void, CULong;
override selector("removeObjectAtArrangedObjectIndexPath:") = Void, NSIndexPath;
override selector("removeObjectAtIndex:") = Void, CULong;
override selector("removeObjectForKey:") = Void, Id;
override selector("removeObjectIdenticalTo:") = Void, Id;
override selector("removeObjectIdenticalTo:inRange:") = Void, Id, NSRange;
override selector("removeObjects:") = Void, NSArray;
override selector("removeObjectsAtArrangedObjectIndexPaths:") = Void, NSArray;
override selector("removeObjectsAtArrangedObjectIndexes:") = Void, NSIndexSet;
override selector("removeObjectsAtIndexes:") = Void, NSIndexSet;
override selector("removeObjectsForKeys:") = Void, NSArray;
override selector("removeObjectsFromIndices:numIndices:") = Void, Pointer[CULong], CULong;
override selector("removeObjectsInArray:") = Void, NSArray;
override selector("removeObjectsInRange:") = Void, NSRange;
override selector("removeObserver:") = Void, Id;
override selector("removeObserver:forKeyPath:") = Void, NSObject, NSString;
override selector("removeObserver:fromObjectsAtIndexes:forKeyPath:") = Void, NSObject, NSIndexSet, NSString;
override selector("removeObserver:name:object:") = Void, Id, NSString, Id;
override selector("removeParamDescriptorWithKeyword:") = Void, UInt;
override selector("removePersistentDomainForName:") = Void, NSString;
override selector("removePointerAtIndex:") = Void, CULong;
override selector("removePort:forMode:") = Void, NSPort, NSString;
override selector("removePortForName:") = Bool, NSString;
override selector("removeProgressMark:") = Void, Float;
override selector("removePropertyForKey:inRequest:") = Void, NSString, NSMutableURLRequest;
override selector("removeRepresentation:") = Void, NSImageRep;
override selector("removeRequestMode:") = Void, NSString;
override selector("removeRow:") = Void, CLong;
override selector("removeRowAtIndex:") = Void, CLong;
override selector("removeRowsAtIndexes:includeSubrows:") = Void, NSIndexSet, Bool;
override selector("removeRunLoop:") = Void, NSRunLoop;
override selector("removeSavedColumnsWithAutosaveName:") = Void, NSString;
override selector("removeSelectedObjects:") = Bool, NSArray;
override selector("removeSelectionIndexPaths:") = Bool, NSArray;
override selector("removeSelectionIndexes:") = Bool, NSIndexSet;
override selector("removeStatusItem:") = Void, NSStatusItem;
override selector("removeSuiteNamed:") = Void, NSString;
override selector("removeTabStop:") = Void, NSTextTab;
override selector("removeTabViewItem:") = Void, NSTabViewItem;
override selector("removeTableColumn:") = Void, NSTableColumn;
override selector("removeTemporaryAttribute:forCharacterRange:") = Void, NSString, NSRange;
override selector("removeTextContainerAtIndex:") = Void, CULong;
override selector("removeToolTip:") = Void, CLong;
override selector("removeTrackingArea:") = Void, NSTrackingArea;
override selector("removeTrackingRect:") = Void, CLong;
override selector("removeValueAtIndex:fromPropertyWithKey:") = Void, CULong, NSString;
override selector("removeVolatileDomainForName:") = Void, NSString;
override selector("removeWindowController:") = Void, NSWindowController;
override selector("removeWindowsItem:") = Void, NSWindow;
override selector("renamingIdentifier") = NSString;
override selector("renderInContext:") = Void, CGContextRef;
override selector("renderingMode") = CULong;
override selector("renewGState") = Void;
override selector("renewRows:columns:") = Void, CLong, CLong;
override selector("reopenDocumentForURL:withContentsOfURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("repeatCount") = Float;
override selector("repeatDuration") = Double;
override selector("replaceBytesInRange:withBytes:") = Void, NSRange, RawPointer;
override selector("replaceBytesInRange:withBytes:length:") = Void, NSRange, RawPointer, CULong;
override selector("replaceCharactersInRange:withAttributedString:") = Void, NSRange, NSAttributedString;
override selector("replaceCharactersInRange:withRTF:") = Void, NSRange, NSData;
override selector("replaceCharactersInRange:withRTFD:") = Void, NSRange, NSData;
override selector("replaceCharactersInRange:withString:") = Void, NSRange, NSString;
override selector("replaceChildAtIndex:withNode:") = Void, CULong, NSXMLNode;
override selector("replaceGlyphAtIndex:withGlyph:") = Void, CULong, UInt;
override selector("replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:") = Bool, NSURL, NSURL, NSString, CULong, Pointer[NSURL], Pointer[NSError];
override selector("replaceLayoutManager:") = Void, NSLayoutManager;
override selector("replaceObject:withObject:") = Void, Id, Id;
override selector("replaceObjectAtIndex:withObject:") = Void, CULong, Id;
override selector("replaceObjectsAtIndexes:withObjects:") = Void, NSIndexSet, NSArray;
override selector("replaceObjectsInRange:withObjectsFromArray:") = Void, NSRange, NSArray;
override selector("replaceObjectsInRange:withObjectsFromArray:range:") = Void, NSRange, NSArray, NSRange;
override selector("replaceOccurrencesOfString:withString:options:range:") = CULong, NSString, NSString, CULong, NSRange;
override selector("replacePointerAtIndex:withPointer:") = Void, CULong, RawPointer;
override selector("replaceSublayer:with:") = Void, CALayer, CALayer;
override selector("replaceSubview:with:") = Void, NSView, NSView;
override selector("replaceTextContainer:") = Void, NSTextContainer;
override selector("replaceTextStorage:") = Void, NSTextStorage;
override selector("replaceValueAtIndex:inPropertyWithKey:withValue:") = Void, CULong, NSString, Id;
override selector("replacementCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("replacementClassForClass:") = Id, Id;
override selector("replacementObjectForArchiver:") = Id, NSArchiver;
override selector("replacementObjectForCoder:") = Id, NSCoder;
override selector("replacementObjectForKeyedArchiver:") = Id, NSKeyedArchiver;
override selector("replacementObjectForPortCoder:") = Id, NSPortCoder;
override selector("replacementString") = NSString;
override selector("replyAppleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
override selector("replyTimeout") = Double;
override selector("replyToApplicationShouldTerminate:") = Void, Bool;
override selector("replyToOpenOrPrint:") = Void, CULong;
override selector("replyWithException:") = Void, NSException;
override selector("reportException:") = Void, NSException;
override selector("representationOfImageRepsInArray:usingType:properties:") = NSData, NSArray, CULong, NSDictionary;
override selector("representationUsingType:properties:") = NSData, CULong, NSDictionary;
override selector("representations") = NSArray;
override selector("representedFilename") = NSString;
override selector("representedObject") = Id;
override selector("representedURL") = NSURL;
override selector("request") = NSURLRequest;
override selector("requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:") = CLong, NSString, NSRange, UInt64, NSDictionary, CLong, UnknownType;
override selector("requestHeaderFieldsWithCookies:") = NSDictionary, NSArray;
override selector("requestIsCacheEquivalent:toRequest:") = Bool, NSURLRequest, NSURLRequest;
override selector("requestModes") = NSArray;
override selector("requestTimeout") = Double;
override selector("requestUserAttention:") = CLong, CULong;
override selector("requestWithURL:") = Id, NSURL;
override selector("requestWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, CULong, Double;
override selector("requiredFileType") = NSString;
override selector("requiredThickness") = Double;
override selector("reservedSpaceLength") = CULong;
override selector("reservedThicknessForAccessoryView") = Double;
override selector("reservedThicknessForMarkers") = Double;
override selector("reset") = Void;
override selector("resetBytesInRange:") = Void, NSRange;
override selector("resetCancelButtonCell") = Void;
override selector("resetCursorRect:inView:") = Void, NSRect, NSView;
override selector("resetCursorRects") = Void;
override selector("resetSearchButtonCell") = Void;
override selector("resetStandardUserDefaults") = Void;
override selector("resetSystemTimeZone") = Void;
override selector("reshape") = Void;
override selector("resignFirstResponder") = Bool;
override selector("resignKeyWindow") = Void;
override selector("resignMainWindow") = Void;
override selector("resizeDownCursor") = NSCursor;
override selector("resizeFlags") = CLong;
override selector("resizeIncrements") = NSSize;
override selector("resizeLeftCursor") = NSCursor;
override selector("resizeLeftRightCursor") = NSCursor;
override selector("resizeRightCursor") = NSCursor;
override selector("resizeSublayersWithOldSize:") = Void, CGSize;
override selector("resizeSubviewsWithOldSize:") = Void, NSSize;
override selector("resizeUpCursor") = NSCursor;
override selector("resizeUpDownCursor") = NSCursor;
override selector("resizeWithOldSuperlayerSize:") = Void, CGSize;
override selector("resizeWithOldSuperviewSize:") = Void, NSSize;
override selector("resizedColumn") = CLong;
override selector("resizingMask") = CULong;
override selector("resolve") = Void;
override selector("resolveClassMethod:") = Bool, SelectorHandle;
override selector("resolveInstanceMethod:") = Bool, SelectorHandle;
override selector("resolveNamespaceForName:") = NSXMLNode, NSString;
override selector("resolvePrefixForNamespaceURI:") = NSString, NSString;
override selector("resolveWithTimeout:") = Void, Double;
override selector("resolvedKeyDictionary") = NSDictionary;
override selector("resolvesAliases") = Bool;
override selector("resourceData") = NSData;
override selector("resourceDataUsingCache:") = NSData, Bool;
override selector("resourcePath") = NSString;
override selector("resourceSpecifier") = NSString;
override selector("resourceURL") = NSURL;
override selector("resourceValuesForKeys:error:") = NSDictionary, NSArray, Pointer[NSError];
override selector("resourceValuesForKeys:fromBookmarkData:") = NSDictionary, NSArray, NSData;
override selector("respondsToSelector:") = Bool, SelectorHandle;
override selector("response") = NSURLResponse;
override selector("restoreCachedImage") = Void;
override selector("restoreGraphicsState") = Void;
override selector("result") = Id;
override selector("resultAtIndex:") = Id, CULong;
override selector("resultCount") = CULong;
override selector("resultType") = UInt64;
override selector("results") = NSArray;
override selector("resume") = Bool;
override selector("resumeData") = NSData;
override selector("resumeExecutionWithResult:") = Void, Id;
override selector("resumeWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
override selector("retain") = Id;
override selector("retainArguments") = Void;
override selector("retainCount") = CULong;
override selector("returnID") = Short;
override selector("returnType") = NSString;
override selector("reusesColumns") = Bool;
override selector("reverseObjectEnumerator") = NSEnumerator;
override selector("reverseTransformedValue:") = Id, Id;
override selector("reversedSortDescriptor") = Id;
override selector("revert:") = Void, Id;
override selector("revertDocumentToSaved:") = Void, Id;
override selector("revertToContentsOfURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("revertToInitialValues:") = Void, Id;
override selector("revertToSavedFromFile:ofType:") = Bool, NSString, NSString;
override selector("revertToSavedFromURL:ofType:") = Bool, NSURL, NSString;
override selector("reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:") = Void, NSString, Bool, Id, SelectorHandle, RawPointer;
override selector("richTextSource") = NSAttributedString;
override selector("rightExpression") = NSExpression;
override selector("rightExpressionAttributeType") = CULong;
override selector("rightExpressions") = NSArray;
override selector("rightMargin") = Double;
override selector("rightMouseDown:") = Void, NSEvent;
override selector("rightMouseDragged:") = Void, NSEvent;
override selector("rightMouseUp:") = Void, NSEvent;
override selector("rootDocument") = NSXMLDocument;
override selector("rootElement") = NSXMLElement;
override selector("rootItemForBrowser:") = Id, NSBrowser;
override selector("rootObject") = Id;
override selector("rootProxy") = NSDistantObject;
override selector("rootProxyForConnectionWithRegisteredName:host:") = NSDistantObject, NSString, NSString;
override selector("rootProxyForConnectionWithRegisteredName:host:usingNameServer:") = NSDistantObject, NSString, NSString, NSPortNameServer;
override selector("rotateByAngle:") = Void, Double;
override selector("rotateByDegrees:") = Void, Double;
override selector("rotateByRadians:") = Void, Double;
override selector("rotateWithEvent:") = Void, NSEvent;
override selector("rotation") = Float;
override selector("roundingBehavior") = NSDecimalNumberHandler;
override selector("roundingIncrement") = NSNumber;
override selector("roundingMode") = CULong;
override selector("rowAtPoint:") = CLong, NSPoint;
override selector("rowClass") = Id;
override selector("rowForDisplayValue:") = CLong, Id;
override selector("rowForItem:") = CLong, Id;
override selector("rowHeight") = Double;
override selector("rowSpan") = CLong;
override selector("rowTemplates") = NSArray;
override selector("rowTypeForRow:") = CULong, CLong;
override selector("rowTypeKeyPath") = NSString;
override selector("rowsInRect:") = NSRange, NSRect;
override selector("ruleEditor:child:forCriterion:withRowType:") = Id, NSRuleEditor, CLong, Id, CULong;
override selector("ruleEditor:displayValueForCriterion:inRow:") = Id, NSRuleEditor, Id, CLong;
override selector("ruleEditor:numberOfChildrenForCriterion:withRowType:") = CLong, NSRuleEditor, Id, CULong;
override selector("ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:") = NSDictionary, NSRuleEditor, Id, Id, CLong;
override selector("ruleEditorRowsDidChange:") = Void, NSNotification;
override selector("ruleThickness") = Double;
override selector("ruler") = NSRulerView;
override selector("rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:") = NSView, NSTextView, NSParagraphStyle, NSRulerView, Bool;
override selector("rulerAttributesInRange:") = NSDictionary, NSRange;
override selector("rulerMarkersForTextView:paragraphStyle:ruler:") = NSArray, NSTextView, NSParagraphStyle, NSRulerView;
override selector("rulerView:didAddMarker:") = Void, NSRulerView, NSRulerMarker;
override selector("rulerView:didMoveMarker:") = Void, NSRulerView, NSRulerMarker;
override selector("rulerView:didRemoveMarker:") = Void, NSRulerView, NSRulerMarker;
override selector("rulerView:handleMouseDown:") = Void, NSRulerView, NSEvent;
override selector("rulerView:shouldAddMarker:") = Bool, NSRulerView, NSRulerMarker;
override selector("rulerView:shouldMoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override selector("rulerView:shouldRemoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override selector("rulerView:willAddMarker:atLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override selector("rulerView:willMoveMarker:toLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override selector("rulerView:willSetClientView:") = Void, NSRulerView, NSView;
override selector("rulerViewClass") = Id;
override selector("rulersVisible") = Bool;
override selector("run") = Void;
override selector("runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
override selector("runCustomizationPalette:") = Void, Id;
override selector("runInNewThread") = Void;
override selector("runLoopModes") = NSArray;
override selector("runLoopModesForAnimating") = NSArray;
override selector("runModal") = CLong;
override selector("runModalForDirectory:file:") = CLong, NSString, NSString;
override selector("runModalForDirectory:file:types:") = CLong, NSString, NSString, NSArray;
override selector("runModalForTypes:") = CLong, NSArray;
override selector("runModalForWindow:") = CLong, NSWindow;
override selector("runModalForWindow:relativeToWindow:") = CLong, NSWindow, NSWindow;
override selector("runModalOpenPanel:forTypes:") = CLong, NSOpenPanel, NSArray;
override selector("runModalPageLayoutWithPrintInfo:") = CLong, NSPrintInfo;
override selector("runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:") = Void, NSPrintInfo, Id, SelectorHandle, RawPointer;
override selector("runModalPrintOperation:delegate:didRunSelector:contextInfo:") = Void, NSPrintOperation, Id, SelectorHandle, RawPointer;
override selector("runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, CULong, Id, SelectorHandle, RawPointer;
override selector("runModalSession:") = CLong, NSModalSession;
override selector("runModalWithPrintInfo:") = CLong, NSPrintInfo;
override selector("runMode:beforeDate:") = Bool, NSString, NSDate;
override selector("runOperation") = Bool;
override selector("runOperationModalForWindow:delegate:didRunSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
override selector("runPageLayout:") = Void, Id;
override selector("runToolbarCustomizationPalette:") = Void, Id;
override selector("runUntilDate:") = Void, NSDate;
override selector("runningApplicationWithProcessIdentifier:") = NSRunningApplication, Int;
override selector("runningApplications") = NSArray;
override selector("runningApplicationsWithBundleIdentifier:") = NSArray, NSString;
override selector("sRGBColorSpace") = NSColorSpace;
override selector("samplesPerPixel") = CLong;
override selector("saturationComponent") = Double;
override selector("save:") = Void, Id;
override selector("saveAllDocuments:") = Void, Id;
override selector("saveDocument:") = Void, Id;
override selector("saveDocumentAs:") = Void, Id;
override selector("saveDocumentTo:") = Void, Id;
override selector("saveDocumentWithDelegate:didSaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("saveFrameUsingName:") = Void, NSString;
override selector("saveGraphicsState") = Void;
override selector("saveOptions") = CULong;
override selector("savePanel") = NSSavePanel;
override selector("saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSString, CULong, Id, SelectorHandle, RawPointer;
override selector("saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSURL, NSString, CULong, Id, SelectorHandle, RawPointer;
override selector("saveToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
override selector("scale") = Short;
override selector("scaleBy:") = Void, Double;
override selector("scaleUnitSquareToSize:") = Void, NSSize;
override selector("scaleXBy:yBy:") = Void, Double, Double;
override selector("scalesWhenResized") = Bool;
override selector("scalingFactor") = Double;
override selector("scanCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
override selector("scanDecimal:") = Bool, Pointer[NSDecimal];
override selector("scanDouble:") = Bool, Pointer[Double];
override selector("scanFloat:") = Bool, Pointer[Float];
override selector("scanHexDouble:") = Bool, Pointer[Double];
override selector("scanHexFloat:") = Bool, Pointer[Float];
override selector("scanHexInt:") = Bool, Pointer[UInt];
override selector("scanHexLongLong:") = Bool, Pointer[UInt64];
override selector("scanInt:") = Bool, Pointer[Int];
override selector("scanInteger:") = Bool, Pointer[CLong];
override selector("scanLocation") = CULong;
override selector("scanLongLong:") = Bool, Pointer[Int64];
override selector("scanString:intoString:") = Bool, NSString, Pointer[NSString];
override selector("scanUpToCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
override selector("scanUpToString:intoString:") = Bool, NSString, Pointer[NSString];
override selector("scannerWithString:") = Id, NSString;
override selector("scheduleInRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("scheduledTimerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
override selector("scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
override selector("scheme") = NSString;
override selector("screen") = NSScreen;
override selector("screenFont") = NSFont;
override selector("screenFontWithRenderingMode:") = NSFont, CULong;
override selector("screens") = NSArray;
override selector("scriptErrorExpectedTypeDescriptor") = NSAppleEventDescriptor;
override selector("scriptErrorNumber") = Int;
override selector("scriptErrorOffendingObjectDescriptor") = NSAppleEventDescriptor;
override selector("scriptErrorString") = NSString;
override selector("scriptingBeginsWith:") = Bool, Id;
override selector("scriptingContains:") = Bool, Id;
override selector("scriptingEndsWith:") = Bool, Id;
override selector("scriptingIsEqualTo:") = Bool, Id;
override selector("scriptingIsGreaterThan:") = Bool, Id;
override selector("scriptingIsGreaterThanOrEqualTo:") = Bool, Id;
override selector("scriptingIsLessThan:") = Bool, Id;
override selector("scriptingIsLessThanOrEqualTo:") = Bool, Id;
override selector("scriptingProperties") = NSDictionary;
override selector("scriptingValueForSpecifier:") = Id, NSScriptObjectSpecifier;
override selector("scrollBarColor") = NSColor;
override selector("scrollCellToVisibleAtRow:column:") = Void, CLong, CLong;
override selector("scrollClipView:toPoint:") = Void, NSClipView, NSPoint;
override selector("scrollColumnToVisible:") = Void, CLong;
override selector("scrollColumnsLeftBy:") = Void, CLong;
override selector("scrollColumnsRightBy:") = Void, CLong;
override selector("scrollItemAtIndexToTop:") = Void, CLong;
override selector("scrollItemAtIndexToVisible:") = Void, CLong;
override selector("scrollLineDown:") = Void, Id;
override selector("scrollLineUp:") = Void, Id;
override selector("scrollPageDown:") = Void, Id;
override selector("scrollPageUp:") = Void, Id;
override selector("scrollPoint:") = Void, NSPoint;
override selector("scrollRangeToVisible:") = Void, NSRange;
override selector("scrollRect:by:") = Void, NSRect, NSSize;
override selector("scrollRectToVisible:") = Bool, NSRect;
override selector("scrollRowToVisible:") = Void, CLong;
override selector("scrollRowToVisible:inColumn:") = Void, CLong, CLong;
override selector("scrollToBeginningOfDocument:") = Void, Id;
override selector("scrollToEndOfDocument:") = Void, Id;
override selector("scrollToPoint:") = Void, NSPoint;
override selector("scrollViaScroller:") = Void, NSScroller;
override selector("scrollView") = NSScrollView;
override selector("scrollWheel:") = Void, NSEvent;
override selector("scrollerWidth") = Double;
override selector("scrollerWidthForControlSize:") = Double, CULong;
override selector("scrollsDynamically") = Bool;
override selector("searchButtonCell") = NSButtonCell;
override selector("searchButtonRectForBounds:") = NSRect, NSRect;
override selector("searchForAllDomains") = Void;
override selector("searchForBrowsableDomains") = Void;
override selector("searchForItemsWithSearchString:resultLimit:matchedItemHandler:") = Void, NSString, CLong, UnknownType;
override selector("searchForRegistrationDomains") = Void;
override selector("searchForServicesOfType:inDomain:") = Void, NSString, NSString;
override selector("searchMenuTemplate") = NSMenu;
override selector("searchScopes") = NSArray;
override selector("searchString:inUserInterfaceItemString:searchRange:foundRange:") = Bool, NSString, NSString, NSRange, Pointer[NSRange];
override selector("searchTextRectForBounds:") = NSRect, NSRect;
override selector("second") = CLong;
override selector("secondOfMinute") = CLong;
override selector("secondaryGroupingSize") = CULong;
override selector("secondarySelectedControlColor") = NSColor;
override selector("secondsFromGMT") = CLong;
override selector("secondsFromGMTForDate:") = CLong, NSDate;
override selector("seekToEndOfFile") = UInt64;
override selector("seekToFileOffset:") = Void, UInt64;
override selector("segmentCount") = CLong;
override selector("segmentStyle") = CLong;
override selector("selectAll:") = Void, Id;
override selector("selectCell:") = Void, NSCell;
override selector("selectCellAtRow:column:") = Void, CLong, CLong;
override selector("selectCellWithTag:") = Bool, CLong;
override selector("selectColumn:byExtendingSelection:") = Void, CLong, Bool;
override selector("selectColumnIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
override selector("selectFile:inFileViewerRootedAtPath:") = Bool, NSString, NSString;
override selector("selectFirstTabViewItem:") = Void, Id;
override selector("selectItem:") = Void, NSMenuItem;
override selector("selectItemAtIndex:") = Void, CLong;
override selector("selectItemWithObjectValue:") = Void, Id;
override selector("selectItemWithTag:") = Bool, CLong;
override selector("selectItemWithTitle:") = Void, NSString;
override selector("selectKeyViewFollowingView:") = Void, NSView;
override selector("selectKeyViewPrecedingView:") = Void, NSView;
override selector("selectLastTabViewItem:") = Void, Id;
override selector("selectLine:") = Void, Id;
override selector("selectNext:") = Void, Id;
override selector("selectNextKeyView:") = Void, Id;
override selector("selectNextTabViewItem:") = Void, Id;
override selector("selectParagraph:") = Void, Id;
override selector("selectPrevious:") = Void, Id;
override selector("selectPreviousKeyView:") = Void, Id;
override selector("selectPreviousTabViewItem:") = Void, Id;
override selector("selectRow:byExtendingSelection:") = Void, CLong, Bool;
override selector("selectRow:inColumn:") = Void, CLong, CLong;
override selector("selectRowIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
override selector("selectRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
override selector("selectSegmentWithTag:") = Bool, CLong;
override selector("selectTabViewItem:") = Void, NSTabViewItem;
override selector("selectTabViewItemAtIndex:") = Void, CLong;
override selector("selectTabViewItemWithIdentifier:") = Void, Id;
override selector("selectText:") = Void, Id;
override selector("selectTextAtIndex:") = Void, CLong;
override selector("selectTextAtRow:column:") = Id, CLong, CLong;
override selector("selectToMark:") = Void, Id;
override selector("selectWithFrame:inView:editor:delegate:start:length:") = Void, NSRect, NSView, NSText, Id, CLong, CLong;
override selector("selectWord:") = Void, Id;
override selector("selectedCell") = Id;
override selector("selectedCellInColumn:") = Id, CLong;
override selector("selectedCells") = NSArray;
override selector("selectedColumn") = CLong;
override selector("selectedColumnEnumerator") = NSEnumerator;
override selector("selectedColumnIndexes") = NSIndexSet;
override selector("selectedControlColor") = NSColor;
override selector("selectedControlTextColor") = NSColor;
override selector("selectedFont") = NSFont;
override selector("selectedItem") = NSMenuItem;
override selector("selectedItemIdentifier") = NSString;
override selector("selectedKeyboardInputSource") = NSString;
override selector("selectedKnobColor") = NSColor;
override selector("selectedMenuItemColor") = NSColor;
override selector("selectedMenuItemTextColor") = NSColor;
override selector("selectedNodes") = NSArray;
override selector("selectedObjects") = NSArray;
override selector("selectedRange") = NSRange;
override selector("selectedRanges") = NSArray;
override selector("selectedRow") = CLong;
override selector("selectedRowEnumerator") = NSEnumerator;
override selector("selectedRowInColumn:") = CLong, CLong;
override selector("selectedRowIndexes") = NSIndexSet;
override selector("selectedRowIndexesInColumn:") = NSIndexSet, CLong;
override selector("selectedSegment") = CLong;
override selector("selectedTabViewItem") = NSTabViewItem;
override selector("selectedTag") = CLong;
override selector("selectedTextAttributes") = NSDictionary;
override selector("selectedTextBackgroundColor") = NSColor;
override selector("selectedTextColor") = NSColor;
override selector("selection") = Id;
override selector("selectionAffinity") = CULong;
override selector("selectionGranularity") = CULong;
override selector("selectionHighlightStyle") = CLong;
override selector("selectionIndex") = CULong;
override selector("selectionIndexPath") = NSIndexPath;
override selector("selectionIndexPaths") = NSArray;
override selector("selectionIndexes") = NSIndexSet;
override selector("selectionRangeForProposedRange:granularity:") = NSRange, NSRange, CULong;
override selector("selectionShouldChangeInOutlineView:") = Bool, NSOutlineView;
override selector("selectionShouldChangeInTableView:") = Bool, NSTableView;
override selector("selector") = SelectorHandle;
override selector("selectorForCommand:") = SelectorHandle, NSScriptCommandDescription;
override selector("selectsInsertedObjects") = Bool;
override selector("self") = Id;
override selector("sendAction") = Bool;
override selector("sendAction:to:") = Bool, SelectorHandle, Id;
override selector("sendAction:to:forAllCells:") = Void, SelectorHandle, Id, Bool;
override selector("sendAction:to:from:") = Bool, SelectorHandle, Id, Id;
override selector("sendActionOn:") = CLong, CLong;
override selector("sendBeforeDate:") = Bool, NSDate;
override selector("sendBeforeDate:components:from:reserved:") = Bool, NSDate, NSMutableArray, NSPort, CULong;
override selector("sendBeforeDate:msgid:components:from:reserved:") = Bool, NSDate, CULong, NSMutableArray, NSPort, CULong;
override selector("sendDoubleAction") = Void;
override selector("sendEvent:") = Void, NSEvent;
override selector("sendPort") = NSPort;
override selector("sendSynchronousRequest:returningResponse:error:") = NSData, NSURLRequest, Pointer[NSURLResponse], Pointer[NSError];
override selector("sender") = Id;
override selector("sendsActionOnArrowKeys") = Bool;
override selector("sendsActionOnEndEditing") = Bool;
override selector("sendsSearchStringImmediately") = Bool;
override selector("sendsWholeSearchString") = Bool;
override selector("separatesColumns") = Bool;
override selector("separatorItem") = NSMenuItem;
override selector("serializedRepresentation") = NSData;
override selector("server") = NSInputServer;
override selector("serverTrust") = SecTrustRef;
override selector("serviceConnectionWithName:rootObject:") = Id, NSString, Id;
override selector("serviceConnectionWithName:rootObject:usingNameServer:") = Id, NSString, Id, NSPortNameServer;
override selector("servicePortWithName:") = NSPort, NSString;
override selector("servicesMenu") = NSMenu;
override selector("servicesProvider") = Id;
override selector("set") = Id;
override selector("setAMSymbol:") = Void, NSString;
override selector("setAbbreviationDictionary:") = Void, NSDictionary;
override selector("setAcceptsArrowKeys:") = Void, Bool;
override selector("setAcceptsGlyphInfo:") = Void, Bool;
override selector("setAcceptsMouseMovedEvents:") = Void, Bool;
override selector("setAcceptsTouchEvents:") = Void, Bool;
override selector("setAccessibilityDescription:") = Void, NSString;
override selector("setAccessoryView:") = Void, NSView;
override selector("setAcquireFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]],CChar],[RawPointer]];
override selector("setAction:") = Void, SelectorHandle;
override selector("setActionName:") = Void, NSString;
override selector("setActions:") = Void, NSDictionary;
override selector("setActivationPolicy:") = Bool, CLong;
override selector("setAffineTransform:") = Void, CGAffineTransform;
override selector("setAlertStyle:") = Void, CULong;
override selector("setAlignment:") = Void, CULong;
override selector("setAlignment:range:") = Void, CULong, NSRange;
override selector("setAlignmentRect:") = Void, NSRect;
override selector("setAllHTTPHeaderFields:") = Void, NSDictionary;
override selector("setAllowedFileTypes:") = Void, NSArray;
override selector("setAllowedInputSourceLocales:") = Void, NSArray;
override selector("setAllowedTypes:") = Void, NSArray;
override selector("setAllowsBranchSelection:") = Void, Bool;
override selector("setAllowsColumnReordering:") = Void, Bool;
override selector("setAllowsColumnResizing:") = Void, Bool;
override selector("setAllowsColumnSelection:") = Void, Bool;
override selector("setAllowsConcurrentViewDrawing:") = Void, Bool;
override selector("setAllowsContextMenuPlugIns:") = Void, Bool;
override selector("setAllowsCutCopyPaste:") = Void, Bool;
override selector("setAllowsDocumentBackgroundColorChange:") = Void, Bool;
override selector("setAllowsEditingTextAttributes:") = Void, Bool;
override selector("setAllowsEmptySelection:") = Void, Bool;
override selector("setAllowsFloats:") = Void, Bool;
override selector("setAllowsImageEditing:") = Void, Bool;
override selector("setAllowsMixedState:") = Void, Bool;
override selector("setAllowsMultipleSelection:") = Void, Bool;
override selector("setAllowsNonContiguousLayout:") = Void, Bool;
override selector("setAllowsOtherFileTypes:") = Void, Bool;
override selector("setAllowsTickMarkValuesOnly:") = Void, Bool;
override selector("setAllowsToolTipsWhenApplicationIsInactive:") = Void, Bool;
override selector("setAllowsTruncatedLabels:") = Void, Bool;
override selector("setAllowsTypeSelect:") = Void, Bool;
override selector("setAllowsUndo:") = Void, Bool;
override selector("setAllowsUserCustomization:") = Void, Bool;
override selector("setAlpha:") = Void, Bool;
override selector("setAlphaValue:") = Void, Double;
override selector("setAltIncrementValue:") = Void, Double;
override selector("setAlternate:") = Void, Bool;
override selector("setAlternateImage:") = Void, NSImage;
override selector("setAlternateMnemonicLocation:") = Void, CULong;
override selector("setAlternateTitle:") = Void, NSString;
override selector("setAlternateTitleWithMnemonic:") = Void, NSString;
override selector("setAltersStateOfSelectedItem:") = Void, Bool;
override selector("setAlwaysShowsDecimalSeparator:") = Void, Bool;
override selector("setAlwaysUsesMultipleValuesMarker:") = Void, Bool;
override selector("setAnchorPoint:") = Void, CGPoint;
override selector("setAnchorPointZ:") = Void, Double;
override selector("setAnimates:") = Void, Bool;
override selector("setAnimationBlockingMode:") = Void, CULong;
override selector("setAnimationCurve:") = Void, CULong;
override selector("setAnimationDelay:") = Void, Double;
override selector("setAnimations:") = Void, NSDictionary;
override selector("setApplicationIconImage:") = Void, NSImage;
override selector("setAppliesImmediately:") = Void, Bool;
override selector("setArgument:atIndex:") = Void, RawPointer, CLong;
override selector("setArguments:") = Void, NSArray;
override selector("setArray:") = Void, NSArray;
override selector("setArrowPosition:") = Void, CULong;
override selector("setArrowsPosition:") = Void, CULong;
override selector("setAspectRatio:") = Void, NSSize;
override selector("setAssociatedPoints:atIndex:") = Void, NSPointArray, CLong;
override selector("setAsynchronous:") = Void, Bool;
override selector("setAttachment:") = Void, NSTextAttachment;
override selector("setAttachmentCell:") = Void, Id;
override selector("setAttachmentSize:forGlyphRange:") = Void, NSSize, NSRange;
override selector("setAttributeDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
override selector("setAttributeRuns:") = Void, NSArray;
override selector("setAttributeType:") = Void, CULong;
override selector("setAttributeValueClassName:") = Void, NSString;
override selector("setAttributedAlternateTitle:") = Void, NSAttributedString;
override selector("setAttributedString:") = Void, NSAttributedString;
override selector("setAttributedStringForNil:") = Void, NSAttributedString;
override selector("setAttributedStringForNotANumber:") = Void, NSAttributedString;
override selector("setAttributedStringForZero:") = Void, NSAttributedString;
override selector("setAttributedStringValue:") = Void, NSAttributedString;
override selector("setAttributedTitle:") = Void, NSAttributedString;
override selector("setAttributes:") = Void, NSArray;
override selector("setAttributes:ofItemAtPath:error:") = Bool, NSDictionary, NSString, Pointer[NSError];
override selector("setAttributes:range:") = Void, NSDictionary, NSRange;
override selector("setAttributesAsDictionary:") = Void, NSDictionary;
override selector("setAutodisplay:") = Void, Bool;
override selector("setAutoenablesItems:") = Void, Bool;
override selector("setAutohidesScroller:") = Void, Bool;
override selector("setAutohidesScrollers:") = Void, Bool;
override selector("setAutomaticDashSubstitutionEnabled:") = Void, Bool;
override selector("setAutomaticDataDetectionEnabled:") = Void, Bool;
override selector("setAutomaticLinkDetectionEnabled:") = Void, Bool;
override selector("setAutomaticQuoteSubstitutionEnabled:") = Void, Bool;
override selector("setAutomaticSpellingCorrectionEnabled:") = Void, Bool;
override selector("setAutomaticTextReplacementEnabled:") = Void, Bool;
override selector("setAutomaticallyIdentifiesLanguages:") = Void, Bool;
override selector("setAutomaticallyPreparesContent:") = Void, Bool;
override selector("setAutomaticallyRearrangesObjects:") = Void, Bool;
override selector("setAutorecalculatesContentBorderThickness:forEdge:") = Void, Bool, CULong;
override selector("setAutorecalculatesKeyViewLoop:") = Void, Bool;
override selector("setAutorepeat:") = Void, Bool;
override selector("setAutoresizesAllColumnsToFit:") = Void, Bool;
override selector("setAutoresizesOutlineColumn:") = Void, Bool;
override selector("setAutoresizesSubviews:") = Void, Bool;
override selector("setAutoresizingMask:") = Void, CULong;
override selector("setAutoreverses:") = Void, Bool;
override selector("setAutosaveExpandedItems:") = Void, Bool;
override selector("setAutosaveName:") = Void, NSString;
override selector("setAutosaveTableColumns:") = Void, Bool;
override selector("setAutosavedContentsFileURL:") = Void, NSURL;
override selector("setAutosavesConfiguration:") = Void, Bool;
override selector("setAutosavingDelay:") = Void, Double;
override selector("setAutoscroll:") = Void, Bool;
override selector("setAutosizesCells:") = Void, Bool;
override selector("setAutovalidates:") = Void, Bool;
override selector("setAvoidsEmptySelection:") = Void, Bool;
override selector("setBackgroundColor:") = Void, NSColor;
override selector("setBackgroundColors:") = Void, NSArray;
override selector("setBackgroundFilters:") = Void, NSArray;
override selector("setBackgroundLayoutEnabled:") = Void, Bool;
override selector("setBackgroundStyle:") = Void, CLong;
override selector("setBackingType:") = Void, CULong;
override selector("setBadgeLabel:") = Void, NSString;
override selector("setBaseSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setBaseWritingDirection:") = Void, CLong;
override selector("setBaseWritingDirection:range:") = Void, CLong, NSRange;
override selector("setBecomesKeyOnlyIfNeeded:") = Void, Bool;
override selector("setBeginTime:") = Void, Double;
override selector("setBezelStyle:") = Void, CULong;
override selector("setBezeled:") = Void, Bool;
override selector("setBidiLevels:forGlyphRange:") = Void, Pointer[CUChar], NSRange;
override selector("setBidiProcessingEnabled:") = Void, Bool;
override selector("setBitsPerSample:") = Void, CLong;
override selector("setBlocksOtherRecognizers:") = Void, Bool;
override selector("setBool:forKey:") = Void, Bool, NSString;
override selector("setBorderColor:") = Void, NSColor;
override selector("setBorderColor:forEdge:") = Void, NSColor, CULong;
override selector("setBorderType:") = Void, CULong;
override selector("setBorderWidth:") = Void, Double;
override selector("setBordered:") = Void, Bool;
override selector("setBottomMargin:") = Void, Double;
override selector("setBounds:") = Void, NSRect;
override selector("setBoundsOrigin:") = Void, NSPoint;
override selector("setBoundsRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
override selector("setBoundsRotation:") = Void, Double;
override selector("setBoundsSize:") = Void, NSSize;
override selector("setBoxType:") = Void, CULong;
override selector("setButtonBordered:") = Void, Bool;
override selector("setButtonType:") = Void, CULong;
override selector("setByAddingObject:") = NSSet, Id;
override selector("setByAddingObjectsFromArray:") = NSSet, NSArray;
override selector("setByAddingObjectsFromSet:") = NSSet, NSSet;
override selector("setCacheDepthMatchesImageDepth:") = Void, Bool;
override selector("setCacheMode:") = Void, CULong;
override selector("setCachePolicy:") = Void, CULong;
override selector("setCachedSeparately:") = Void, Bool;
override selector("setCachesBezierPath:") = Void, Bool;
override selector("setCalendar:") = Void, NSCalendar;
override selector("setCalendarFormat:") = Void, NSString;
override selector("setCanBeVisibleOnAllSpaces:") = Void, Bool;
override selector("setCanBecomeVisibleWithoutLogin:") = Void, Bool;
override selector("setCanChooseDirectories:") = Void, Bool;
override selector("setCanChooseFiles:") = Void, Bool;
override selector("setCanCreateDirectories:") = Void, Bool;
override selector("setCanDrawConcurrently:") = Void, Bool;
override selector("setCanHide:") = Void, Bool;
override selector("setCanRemoveAllRows:") = Void, Bool;
override selector("setCanSelectHiddenExtension:") = Void, Bool;
override selector("setCanSpawnSeparateThread:") = Void, Bool;
override selector("setCancelButtonCell:") = Void, NSButtonCell;
override selector("setCaseSensitive:") = Void, Bool;
override selector("setCell:") = Void, NSCell;
override selector("setCellAttribute:to:") = Void, CULong, CLong;
override selector("setCellBackgroundColor:") = Void, NSColor;
override selector("setCellClass:") = Void, Id;
override selector("setCellPrototype:") = Void, NSCell;
override selector("setCellSize:") = Void, NSSize;
override selector("setChannelMapping:") = Void, NSArray;
override selector("setCharacterEncoding:") = Void, NSString;
override selector("setCharacterIndex:forGlyphAtIndex:") = Void, CULong, CULong;
override selector("setCharacters:") = Void, NSArray;
override selector("setCharactersToBeSkipped:") = Void, NSCharacterSet;
override selector("setChildSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setChildren:") = Void, NSArray;
override selector("setChildrenKeyPath:") = Void, NSString;
override selector("setClass:forClassName:") = Void, Id, NSString;
override selector("setClassName:forClass:") = Void, NSString, Id;
override selector("setClearsFilterPredicateOnInsertion:") = Void, Bool;
override selector("setClientView:") = Void, NSView;
override selector("setClip") = Void;
override selector("setCollapsesBorders:") = Void, Bool;
override selector("setCollectionBehavior:") = Void, CULong;
override selector("setColor:") = Void, NSColor;
override selector("setColor:atX:y:") = Void, NSColor, CLong, CLong;
override selector("setColor:forKey:") = Void, NSColor, NSString;
override selector("setColorRenderingIntent:") = Void, CLong;
override selector("setColorSpace:") = Void, NSColorSpace;
override selector("setColorSpaceName:") = Void, NSString;
override selector("setColumnAutoresizingStyle:") = Void, CULong;
override selector("setColumnResizingType:") = Void, CULong;
override selector("setColumnsAutosaveName:") = Void, NSString;
override selector("setCommands:") = Void, NSArray;
override selector("setCompletes:") = Void, Bool;
override selector("setCompletionBlock:") = Void, UnknownType;
override selector("setCompletionDelay:") = Void, Double;
override selector("setCompositingFilter:") = Void, CIFilter;
override selector("setCompositingOperation:") = Void, CULong;
override selector("setCompression:factor:") = Void, CULong, Float;
override selector("setConfigurationFromDictionary:") = Void, NSDictionary;
override selector("setConstrainedFrameSize:") = Void, NSSize;
override selector("setContainerClassDescription:") = Void, NSScriptClassDescription;
override selector("setContainerIsObjectBeingTested:") = Void, Bool;
override selector("setContainerIsRangeContainerObject:") = Void, Bool;
override selector("setContainerSize:") = Void, NSSize;
override selector("setContainerSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setContent:") = Void, Id;
override selector("setContentAspectRatio:") = Void, NSSize;
override selector("setContentBorderThickness:forEdge:") = Void, Double, CULong;
override selector("setContentFilters:") = Void, NSArray;
override selector("setContentMaxSize:") = Void, NSSize;
override selector("setContentMinSize:") = Void, NSSize;
override selector("setContentResizeIncrements:") = Void, NSSize;
override selector("setContentSize:") = Void, NSSize;
override selector("setContentView:") = Void, NSView;
override selector("setContentViewMargins:") = Void, NSSize;
override selector("setContentWidth:type:") = Void, Double, CULong;
override selector("setContents:") = Void, Id;
override selector("setContentsCenter:") = Void, CGRect;
override selector("setContentsGravity:") = Void, NSString;
override selector("setContentsRect:") = Void, CGRect;
override selector("setContextHelp:forObject:") = Void, NSAttributedString, Id;
override selector("setContextHelpModeActive:") = Void, Bool;
override selector("setContextMenuRepresentation:") = Void, Id;
override selector("setContinuous:") = Void, Bool;
override selector("setContinuousSpellCheckingEnabled:") = Void, Bool;
override selector("setControlSize:") = Void, CULong;
override selector("setControlTint:") = Void, CULong;
override selector("setControlView:") = Void, NSView;
override selector("setCookie:") = Void, NSHTTPCookie;
override selector("setCookieAcceptPolicy:") = Void, CULong;
override selector("setCookies:forURL:mainDocumentURL:") = Void, NSArray, NSURL, NSURL;
override selector("setCopiesOnScroll:") = Void, Bool;
override selector("setCornerRadius:") = Void, Double;
override selector("setCornerView:") = Void, NSView;
override selector("setCount:") = Void, CULong;
override selector("setCountKeyPath:") = Void, NSString;
override selector("setCountLimit:") = Void, CULong;
override selector("setCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("setCriteria:andDisplayValues:forRowAtIndex:") = Void, NSArray, NSArray, CLong;
override selector("setCriteriaKeyPath:") = Void, NSString;
override selector("setCriticalValue:") = Void, Double;
override selector("setCurrencyCode:") = Void, NSString;
override selector("setCurrencyDecimalSeparator:") = Void, NSString;
override selector("setCurrencyGroupingSeparator:") = Void, NSString;
override selector("setCurrencySymbol:") = Void, NSString;
override selector("setCurrentAppleEventAndReplyEventWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
override selector("setCurrentContext:") = Void, NSGraphicsContext;
override selector("setCurrentDirectoryPath:") = Void, NSString;
override selector("setCurrentOperation:") = Void, NSPrintOperation;
override selector("setCurrentPage:") = Void, CLong;
override selector("setCurrentProgress:") = Void, Float;
override selector("setCurrentTime:") = Void, Double;
override selector("setCurrentVirtualScreen:") = Void, Int;
override selector("setDTD:") = Void, NSXMLDTD;
override selector("setDTDKind:") = Void, CULong;
override selector("setData:") = Void, NSData;
override selector("setData:forType:") = Bool, NSData, NSString;
override selector("setDataCell:") = Void, NSCell;
override selector("setDataProvider:forTypes:") = Bool, Id, NSArray;
override selector("setDataRetained:") = Void, Bool;
override selector("setDataSource:") = Void, Id;
override selector("setDateFormat:") = Void, NSString;
override selector("setDatePickerElements:") = Void, CULong;
override selector("setDatePickerMode:") = Void, CULong;
override selector("setDatePickerStyle:") = Void, CULong;
override selector("setDateStyle:") = Void, CULong;
override selector("setDateValue:") = Void, NSDate;
override selector("setDay:") = Void, CLong;
override selector("setDecimalSeparator:") = Void, NSString;
override selector("setDefaultAttachmentScaling:") = Void, CULong;
override selector("setDefaultBehavior:") = Void, Id;
override selector("setDefaultButtonCell:") = Void, NSButtonCell;
override selector("setDefaultButtonTitle:") = Void, NSString;
override selector("setDefaultColumnWidth:") = Void, Double;
override selector("setDefaultCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("setDefaultDate:") = Void, NSDate;
override selector("setDefaultFlatness:") = Void, Double;
override selector("setDefaultFormatterBehavior:") = Void, CULong;
override selector("setDefaultLineCapStyle:") = Void, CULong;
override selector("setDefaultLineJoinStyle:") = Void, CULong;
override selector("setDefaultLineWidth:") = Void, Double;
override selector("setDefaultMiterLimit:") = Void, Double;
override selector("setDefaultNameServerPortNumber:") = Void, UShort;
override selector("setDefaultParagraphStyle:") = Void, NSParagraphStyle;
override selector("setDefaultPlaceholder:forMarker:withBinding:") = Void, Id, Id, NSString;
override selector("setDefaultPrinter:") = Void, NSPrinter;
override selector("setDefaultTabInterval:") = Void, Double;
override selector("setDefaultTimeZone:") = Void, NSTimeZone;
override selector("setDefaultValue:") = Void, Id;
override selector("setDefaultWindingRule:") = Void, CULong;
override selector("setDelegate:") = Void, Id;
override selector("setDeletesFileUponFailure:") = Void, Bool;
override selector("setDepthLimit:") = Void, Int;
override selector("setDescriptionFunction:") = Void, CCodePointer[[RawPointer],[NSString]];
override selector("setDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
override selector("setDesktopImageURL:forScreen:options:error:") = Bool, NSURL, NSScreen, NSDictionary, Pointer[NSError];
override selector("setDestination:allowOverwrite:") = Void, NSString, Bool;
override selector("setDictionary:") = Void, NSDictionary;
override selector("setDirectParameter:") = Void, Id;
override selector("setDirectory:") = Void, NSString;
override selector("setDirectoryURL:") = Void, NSURL;
override selector("setDiskCapacity:") = Void, CULong;
override selector("setDisplayMode:") = Void, CULong;
override selector("setDisplayValuesKeyPath:") = Void, NSString;
override selector("setDisplayedCommandsTitle:") = Void, NSString;
override selector("setDisplayedWhenStopped:") = Void, Bool;
override selector("setDisplaysLinkToolTips:") = Void, Bool;
override selector("setDisplaysWhenScreenProfileChanges:") = Void, Bool;
override selector("setDividerStyle:") = Void, CLong;
override selector("setDockTile:") = Void, NSDockTile;
override selector("setDocument:") = Void, NSDocument;
override selector("setDocumentContentKind:") = Void, CULong;
override selector("setDocumentCursor:") = Void, NSCursor;
override selector("setDocumentEdited:") = Void, Bool;
override selector("setDocumentView:") = Void, NSView;
override selector("setDoesRelativeDateFormatting:") = Void, Bool;
override selector("setDouble:forKey:") = Void, Double, NSString;
override selector("setDoubleAction:") = Void, SelectorHandle;
override selector("setDoubleSided:") = Void, Bool;
override selector("setDoubleValue:") = Void, Double;
override selector("setDraggingDestinationFeedbackStyle:") = Void, CLong;
override selector("setDraggingSourceOperationMask:forLocal:") = Void, CULong, Bool;
override selector("setDrawsBackground:") = Void, Bool;
override selector("setDrawsCellBackground:") = Void, Bool;
override selector("setDrawsGrid:") = Void, Bool;
override selector("setDrawsOutsideLineFragment:forGlyphAtIndex:") = Void, Bool, CULong;
override selector("setDrawsOutsideLineFragment:forGlyphRange:") = Void, Bool, NSRange;
override selector("setDropItem:dropChildIndex:") = Void, Id, CLong;
override selector("setDropRow:dropOperation:") = Void, CLong, CULong;
override selector("setDuration:") = Void, Double;
override selector("setDynamicDepthLimit:") = Void, Bool;
override selector("setEchosBullets:") = Void, Bool;
override selector("setEdgeAntialiasingMask:") = Void, UInt;
override selector("setEditable:") = Void, Bool;
override selector("setEnabled:") = Void, Bool;
override selector("setEnabled:forSegment:") = Void, Bool, CLong;
override selector("setEnabledTextCheckingTypes:") = Void, UInt64;
override selector("setEndSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setEndSubelementIdentifier:") = Void, CULong;
override selector("setEndSubelementIndex:") = Void, CLong;
override selector("setEntityName:") = Void, NSString;
override selector("setEntryType:") = Void, CLong;
override selector("setEntryWidth:") = Void, Double;
override selector("setEnvironment:") = Void, NSDictionary;
override selector("setEra:") = Void, CLong;
override selector("setEraSymbols:") = Void, NSArray;
override selector("setEvaluationErrorNumber:") = Void, CLong;
override selector("setEventHandler:andSelector:forEventClass:andEventID:") = Void, Id, SelectorHandle, UInt, UInt;
override selector("setEvictsObjectsWithDiscardedContent:") = Void, Bool;
override selector("setExcludedFromWindowsMenu:") = Void, Bool;
override selector("setExcludedKeys:") = Void, NSArray;
override selector("setExponentSymbol:") = Void, NSString;
override selector("setExtensionHidden:") = Void, Bool;
override selector("setExtraLineFragmentRect:usedRect:textContainer:") = Void, NSRect, NSRect, NSTextContainer;
override selector("setFetchPredicate:") = Void, NSPredicate;
override selector("setFieldEditor:") = Void, Bool;
override selector("setFileAttributes:") = Void, NSDictionary;
override selector("setFileModificationDate:") = Void, NSDate;
override selector("setFileName:") = Void, NSString;
override selector("setFileType:") = Void, NSString;
override selector("setFileURL:") = Void, NSURL;
override selector("setFileWrapper:") = Void, NSFileWrapper;
override selector("setFilename:") = Void, NSString;
override selector("setFill") = Void;
override selector("setFillColor:") = Void, NSColor;
override selector("setFillMode:") = Void, NSString;
override selector("setFilterPredicate:") = Void, NSPredicate;
override selector("setFilters:") = Void, NSArray;
override selector("setFireDate:") = Void, NSDate;
override selector("setFirstLineHeadIndent:") = Void, Double;
override selector("setFirstWeekday:") = Void, CULong;
override selector("setFlatness:") = Void, Double;
override selector("setFlipped:") = Void, Bool;
override selector("setFloat:forKey:") = Void, Float, NSString;
override selector("setFloatValue:") = Void, Float;
override selector("setFloatValue:knobProportion:") = Void, Float, Double;
override selector("setFloatingPanel:") = Void, Bool;
override selector("setFloatingPointFormat:left:right:") = Void, Bool, CULong, CULong;
override selector("setFocusRingType:") = Void, CULong;
override selector("setFocusedColumn:") = Void, CLong;
override selector("setFont:") = Void, NSFont;
override selector("setFont:range:") = Void, NSFont, NSRange;
override selector("setFontManagerFactory:") = Void, Id;
override selector("setFontMenu:") = Void, NSMenu;
override selector("setFontPanelFactory:") = Void, Id;
override selector("setForegroundColor:") = Void, NSColor;
override selector("setFormat:") = Void, NSString;
override selector("setFormatWidth:") = Void, CULong;
override selector("setFormatter:") = Void, NSFormatter;
override selector("setFormatterBehavior:") = Void, CULong;
override selector("setFormattingDictionary:") = Void, NSDictionary;
override selector("setFormattingStringsFilename:") = Void, NSString;
override selector("setFrame:") = Void, NSRect;
override selector("setFrame:display:") = Void, NSRect, Bool;
override selector("setFrame:display:animate:") = Void, NSRect, Bool, Bool;
override selector("setFrameAutosaveName:") = Bool, NSString;
override selector("setFrameCenterRotation:") = Void, Double;
override selector("setFrameFromContentFrame:") = Void, NSRect;
override selector("setFrameFromString:") = Void, NSString;
override selector("setFrameOrigin:") = Void, NSPoint;
override selector("setFrameRate:") = Void, Float;
override selector("setFrameRotation:") = Void, Double;
override selector("setFrameSize:") = Void, NSSize;
override selector("setFrameTopLeftPoint:") = Void, NSPoint;
override selector("setFrameUsingName:") = Bool, NSString;
override selector("setFrameUsingName:force:") = Bool, NSString, Bool;
override selector("setFullScreen") = Void;
override selector("setGeneratesCalendarDates:") = Void, Bool;
override selector("setGeneratesDecimalNumbers:") = Void, Bool;
override selector("setGeometryFlipped:") = Void, Bool;
override selector("setGlyphGenerator:") = Void, NSGlyphGenerator;
override selector("setGradientType:") = Void, CULong;
override selector("setGrammarCheckingEnabled:") = Void, Bool;
override selector("setGraphicsState:") = Void, CLong;
override selector("setGregorianStartDate:") = Void, NSDate;
override selector("setGridColor:") = Void, NSColor;
override selector("setGridStyleMask:") = Void, CULong;
override selector("setGroupingAttributes:") = Void, NSArray;
override selector("setGroupingSeparator:") = Void, NSString;
override selector("setGroupingSize:") = Void, CULong;
override selector("setGroupsByEvent:") = Void, Bool;
override selector("setHTTPBody:") = Void, NSData;
override selector("setHTTPBodyStream:") = Void, NSInputStream;
override selector("setHTTPMethod:") = Void, NSString;
override selector("setHTTPShouldHandleCookies:") = Void, Bool;
override selector("setHardInvalidation:forGlyphRange:") = Void, Bool, NSRange;
override selector("setHasHorizontalRuler:") = Void, Bool;
override selector("setHasHorizontalScroller:") = Void, Bool;
override selector("setHasShadow:") = Void, Bool;
override selector("setHasThousandSeparators:") = Void, Bool;
override selector("setHasUndoManager:") = Void, Bool;
override selector("setHasVerticalRuler:") = Void, Bool;
override selector("setHasVerticalScroller:") = Void, Bool;
override selector("setHashFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[CULong]];
override selector("setHeadIndent:") = Void, Double;
override selector("setHeaderCell:") = Void, NSCell;
override selector("setHeaderLevel:") = Void, CLong;
override selector("setHeaderToolTip:") = Void, NSString;
override selector("setHeaderView:") = Void, NSTableHeaderView;
override selector("setHeightTracksTextView:") = Void, Bool;
override selector("setHelpAnchor:") = Void, NSString;
override selector("setHelpMenu:") = Void, NSMenu;
override selector("setHidden:") = Void, Bool;
override selector("setHiddenUntilMouseMoves:") = Void, Bool;
override selector("setHidesEmptyCells:") = Void, Bool;
override selector("setHidesOnDeactivate:") = Void, Bool;
override selector("setHighlightMode:") = Void, Bool;
override selector("setHighlighted:") = Void, Bool;
override selector("setHighlightedTableColumn:") = Void, NSTableColumn;
override selector("setHighlightsBy:") = Void, CLong;
override selector("setHorizontalLineScroll:") = Void, Double;
override selector("setHorizontalPageScroll:") = Void, Double;
override selector("setHorizontalPagination:") = Void, CULong;
override selector("setHorizontalRulerView:") = Void, NSRulerView;
override selector("setHorizontalScroller:") = Void, NSScroller;
override selector("setHorizontallyCentered:") = Void, Bool;
override selector("setHorizontallyResizable:") = Void, Bool;
override selector("setHostCacheEnabled:") = Void, Bool;
override selector("setHour:") = Void, CLong;
override selector("setHyphenationFactor:") = Void, Float;
override selector("setIcon:") = Void, NSImage;
override selector("setIcon:forFile:options:") = Bool, NSImage, NSString, CULong;
override selector("setIdentifier:") = Void, Id;
override selector("setIgnoredWords:inSpellDocumentWithTag:") = Void, NSArray, CLong;
override selector("setIgnoresAlpha:") = Void, Bool;
override selector("setIgnoresMouseEvents:") = Void, Bool;
override selector("setIgnoresMultiClick:") = Void, Bool;
override selector("setImage:") = Void, NSImage;
override selector("setImage:forSegment:") = Void, NSImage, CLong;
override selector("setImageAlignment:") = Void, CULong;
override selector("setImageDimsWhenDisabled:") = Void, Bool;
override selector("setImageFrameStyle:") = Void, CULong;
override selector("setImageInterpolation:") = Void, CULong;
override selector("setImageOrigin:") = Void, NSPoint;
override selector("setImagePosition:") = Void, CULong;
override selector("setImageScaling:") = Void, CULong;
override selector("setImageScaling:forSegment:") = Void, CULong, CLong;
override selector("setImportsGraphics:") = Void, Bool;
override selector("setInContext:") = Void, NSGraphicsContext;
override selector("setIncludedKeys:") = Void, NSArray;
override selector("setIncrement:") = Void, Double;
override selector("setIndentationLevel:") = Void, CLong;
override selector("setIndentationMarkerFollowsCell:") = Void, Bool;
override selector("setIndentationPerLevel:") = Void, Double;
override selector("setIndependentConversationQueueing:") = Void, Bool;
override selector("setIndeterminate:") = Void, Bool;
override selector("setIndex:") = Void, CLong;
override selector("setIndexed:") = Void, Bool;
override selector("setIndexedBySpotlight:") = Void, Bool;
override selector("setIndicatorImage:inTableColumn:") = Void, NSImage, NSTableColumn;
override selector("setInformativeText:") = Void, NSString;
override selector("setInitialFirstResponder:") = Void, NSView;
override selector("setInitialKey:") = Void, NSString;
override selector("setInitialValue:") = Void, Id;
override selector("setInitialValues:") = Void, NSDictionary;
override selector("setInsertionClassDescription:") = Void, NSScriptClassDescription;
override selector("setInsertionPointColor:") = Void, NSColor;
override selector("setIntAttribute:value:forGlyphAtIndex:") = Void, CLong, CLong, CULong;
override selector("setIntValue:") = Void, Int;
override selector("setInteger:forKey:") = Void, CLong, NSString;
override selector("setIntegerValue:") = Void, CLong;
override selector("setIntercellSpacing:") = Void, NSSize;
override selector("setInterfaceStyle:") = Void, CULong;
override selector("setInterlineSpacing:") = Void, Double;
override selector("setInternationalCurrencySymbol:") = Void, NSString;
override selector("setIsEqualFunction:") = Void, CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[CULong]]],[CChar]];
override selector("setIsMiniaturized:") = Void, Bool;
override selector("setIsPaneSplitter:") = Void, Bool;
override selector("setIsVisible:") = Void, Bool;
override selector("setIsZoomed:") = Void, Bool;
override selector("setItemHeight:") = Void, Double;
override selector("setItemPrototype:") = Void, NSCollectionViewItem;
override selector("setJobDisposition:") = Void, NSString;
override selector("setJobStyleHint:") = Void, NSString;
override selector("setJobTitle:") = Void, NSString;
override selector("setKey:") = Void, NSString;
override selector("setKeyCell:") = Void, NSCell;
override selector("setKeyEquivalent:") = Void, NSString;
override selector("setKeyEquivalentFont:") = Void, NSFont;
override selector("setKeyEquivalentFont:size:") = Void, NSString, Double;
override selector("setKeyEquivalentModifierMask:") = Void, CULong;
override selector("setKeyboardFocusRingNeedsDisplayInRect:") = Void, NSRect;
override selector("setKeys:triggerChangeNotificationsForDependentKey:") = Void, NSArray, NSString;
override selector("setKnobProportion:") = Void, Double;
override selector("setKnobThickness:") = Void, Double;
override selector("setLabel:") = Void, NSString;
override selector("setLabel:forSegment:") = Void, NSString, CLong;
override selector("setLanguage:") = Bool, NSString;
override selector("setLastColumn:") = Void, CLong;
override selector("setLastComponentOfFileName:") = Void, NSString;
override selector("setLaunchPath:") = Void, NSString;
override selector("setLayer:") = Void, CALayer;
override selector("setLayerContentsPlacement:") = Void, CLong;
override selector("setLayerContentsRedrawPolicy:") = Void, CLong;
override selector("setLayoutAlgorithm:") = Void, CULong;
override selector("setLayoutManager:") = Void, NSLayoutManager;
override selector("setLayoutRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
override selector("setLeadingOffset:") = Void, Double;
override selector("setLeaf:") = Void, Bool;
override selector("setLeafKeyPath:") = Void, NSString;
override selector("setLeftMargin:") = Void, Double;
override selector("setLength:") = Void, CULong;
override selector("setLenient:") = Void, Bool;
override selector("setLevel:") = Void, CLong;
override selector("setLevelIndicatorStyle:") = Void, CULong;
override selector("setLevelsOfUndo:") = Void, CULong;
override selector("setLineBreakMode:") = Void, CULong;
override selector("setLineCapStyle:") = Void, CULong;
override selector("setLineDash:count:phase:") = Void, Pointer[Double], CLong, Double;
override selector("setLineFragmentPadding:") = Void, Double;
override selector("setLineFragmentRect:forGlyphRange:usedRect:") = Void, NSRect, NSRange, NSRect;
override selector("setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRect, NSRange, NSRect, Double;
override selector("setLineHeightMultiple:") = Void, Double;
override selector("setLineJoinStyle:") = Void, CULong;
override selector("setLineScroll:") = Void, Double;
override selector("setLineSpacing:") = Void, Double;
override selector("setLineWidth:") = Void, Double;
override selector("setLinkTextAttributes:") = Void, NSDictionary;
override selector("setListensInForegroundOnly:") = Void, Bool;
override selector("setLoaded:") = Void, Bool;
override selector("setLocale:") = Void, NSLocale;
override selector("setLocalizedKey:") = Void, NSString;
override selector("setLocalizedKeyDictionary:") = Void, NSDictionary;
override selector("setLocalizedKeyTable:") = Void, NSString;
override selector("setLocalizesFormat:") = Void, Bool;
override selector("setLocation:forStartOfGlyphRange:") = Void, NSPoint, NSRange;
override selector("setLocation:withAdvancements:forStartOfGlyphRange:") = Void, NSPoint, Pointer[Double], NSRange;
override selector("setLocations:startingGlyphIndexes:count:forGlyphRange:") = Void, NSPointArray, Pointer[CULong], CULong, NSRange;
override selector("setLongEraSymbols:") = Void, NSArray;
override selector("setLoops:") = Void, Bool;
override selector("setMIMEType:") = Void, NSString;
override selector("setMagnificationFilter:") = Void, NSString;
override selector("setMainDocumentURL:") = Void, NSURL;
override selector("setMainMenu:") = Void, NSMenu;
override selector("setManagedObjectContext:") = Void, NSManagedObjectContext;
override selector("setMark:") = Void, Id;
override selector("setMarkedText:selectedRange:") = Void, Id, NSRange;
override selector("setMarkedText:selectedRange:replacementRange:") = Void, Id, NSRange, NSRange;
override selector("setMarkedTextAttributes:") = Void, NSDictionary;
override selector("setMarkerLocation:") = Void, Double;
override selector("setMarkers:") = Void, NSArray;
override selector("setMask:") = Void, CALayer;
override selector("setMasksToBounds:") = Void, Bool;
override selector("setMatchesOnMultipleResolution:") = Void, Bool;
override selector("setMatrixClass:") = Void, Id;
override selector("setMaxConcurrentOperationCount:") = Void, CLong;
override selector("setMaxContentSize:") = Void, NSSize;
override selector("setMaxDate:") = Void, NSDate;
override selector("setMaxItemSize:") = Void, NSSize;
override selector("setMaxNumberOfColumns:") = Void, CULong;
override selector("setMaxNumberOfRows:") = Void, CULong;
override selector("setMaxSize:") = Void, NSSize;
override selector("setMaxValue:") = Void, Double;
override selector("setMaxVisibleColumns:") = Void, CLong;
override selector("setMaxWidth:") = Void, Double;
override selector("setMaximum:") = Void, NSNumber;
override selector("setMaximumFractionDigits:") = Void, CULong;
override selector("setMaximumIntegerDigits:") = Void, CULong;
override selector("setMaximumLineHeight:") = Void, Double;
override selector("setMaximumRecents:") = Void, CLong;
override selector("setMaximumSignificantDigits:") = Void, CULong;
override selector("setMeasurementUnits:") = Void, NSString;
override selector("setMemoryCapacity:") = Void, CULong;
override selector("setMenu:") = Void, NSMenu;
override selector("setMenu:forSegment:") = Void, NSMenu, CLong;
override selector("setMenuBarVisible:") = Void, Bool;
override selector("setMenuChangedMessagesEnabled:") = Void, Bool;
override selector("setMenuFormRepresentation:") = Void, NSMenuItem;
override selector("setMenuItem:") = Void, NSMenuItem;
override selector("setMenuRepresentation:") = Void, Id;
override selector("setMenuZone:") = Void, Pointer[NSZone];
override selector("setMessage:") = Void, NSString;
override selector("setMessageText:") = Void, NSString;
override selector("setMinColumnWidth:") = Void, Double;
override selector("setMinContentSize:") = Void, NSSize;
override selector("setMinDate:") = Void, NSDate;
override selector("setMinItemSize:") = Void, NSSize;
override selector("setMinSize:") = Void, NSSize;
override selector("setMinValue:") = Void, Double;
override selector("setMinWidth:") = Void, Double;
override selector("setMinificationFilter:") = Void, NSString;
override selector("setMinificationFilterBias:") = Void, Float;
override selector("setMinimum:") = Void, NSNumber;
override selector("setMinimumDaysInFirstWeek:") = Void, CULong;
override selector("setMinimumFractionDigits:") = Void, CULong;
override selector("setMinimumIntegerDigits:") = Void, CULong;
override selector("setMinimumLineHeight:") = Void, Double;
override selector("setMinimumSignificantDigits:") = Void, CULong;
override selector("setMinimumWidth:") = Void, Double;
override selector("setMiniwindowImage:") = Void, NSImage;
override selector("setMiniwindowTitle:") = Void, NSString;
override selector("setMinusSign:") = Void, NSString;
override selector("setMinute:") = Void, CLong;
override selector("setMiterLimit:") = Void, Double;
override selector("setMixedStateImage:") = Void, NSImage;
override selector("setMnemonicLocation:") = Void, CULong;
override selector("setMode:") = Void, CULong;
override selector("setMonth:") = Void, CLong;
override selector("setMonthSymbols:") = Void, NSArray;
override selector("setMouseCoalescingEnabled:") = Void, Bool;
override selector("setMovable:") = Void, Bool;
override selector("setMovableByWindowBackground:") = Void, Bool;
override selector("setMsgid:") = Void, UInt;
override selector("setMultiplier:") = Void, NSNumber;
override selector("setName:") = Bool, NSString;
override selector("setNameFieldLabel:") = Void, NSString;
override selector("setNameFieldStringValue:") = Void, NSString;
override selector("setNamespaces:") = Void, NSArray;
override selector("setNeedsDisplay") = Void;
override selector("setNeedsDisplay:") = Void, Bool;
override selector("setNeedsDisplayInRect:") = Void, NSRect;
override selector("setNeedsDisplayInRect:avoidAdditionalLayout:") = Void, NSRect, Bool;
override selector("setNeedsDisplayOnBoundsChange:") = Void, Bool;
override selector("setNeedsLayout") = Void;
override selector("setNeedsSizing:") = Void, Bool;
override selector("setNegativeFormat:") = Void, NSString;
override selector("setNegativeInfinitySymbol:") = Void, NSString;
override selector("setNegativePrefix:") = Void, NSString;
override selector("setNegativeSuffix:") = Void, NSString;
override selector("setNestingMode:") = Void, CULong;
override selector("setNextKeyView:") = Void, NSView;
override selector("setNextResponder:") = Void, NSResponder;
override selector("setNextState") = Void;
override selector("setNilSymbol:") = Void, NSString;
override selector("setNilValueForKey:") = Void, NSString;
override selector("setNotANumberSymbol:") = Void, NSString;
override selector("setNotShownAttribute:forGlyphAtIndex:") = Void, Bool, CULong;
override selector("setNotShownAttribute:forGlyphRange:") = Void, Bool, NSRange;
override selector("setNotationName:") = Void, NSString;
override selector("setNotificationBatchingInterval:") = Void, Double;
override selector("setNumberOfColumns:") = Void, CULong;
override selector("setNumberOfMajorTickMarks:") = Void, CLong;
override selector("setNumberOfTickMarks:") = Void, CLong;
override selector("setNumberOfVisibleItems:") = Void, CLong;
override selector("setNumberStyle:") = Void, CULong;
override selector("setObject:forKey:") = Void, Id, Id;
override selector("setObject:forKey:cost:") = Void, Id, Id, CULong;
override selector("setObject:forProperty:error:") = Bool, Id, NSString, Pointer[NSError];
override selector("setObjectBeingTested:") = Void, Id;
override selector("setObjectClass:") = Void, Id;
override selector("setObjectValue:") = Void, Id;
override selector("setObjectZone:") = Void, Pointer[NSZone];
override selector("setObservationInfo:") = Void, RawPointer;
override selector("setOffScreen:width:height:rowbytes:") = Void, RawPointer, Int, Int, Int;
override selector("setOffStateImage:") = Void, NSImage;
override selector("setOnMouseEntered:") = Void, Bool;
override selector("setOnMouseExited:") = Void, Bool;
override selector("setOnStateImage:") = Void, NSImage;
override selector("setOneShot:") = Void, Bool;
override selector("setOpacity:") = Void, Float;
override selector("setOpaque:") = Void, Bool;
override selector("setOpenGLContext:") = Void, NSOpenGLContext;
override selector("setOpenGLPixelFormat:") = Void, NSOpenGLPixelFormat;
override selector("setOptional:") = Void, Bool;
override selector("setOptions:") = Void, CLong;
override selector("setOrderedIndex:") = Void, CLong;
override selector("setOrientation:") = Void, CULong;
override selector("setOriginOffset:") = Void, Double;
override selector("setOutlineTableColumn:") = Void, NSTableColumn;
override selector("setOutputFormat:") = Void, CULong;
override selector("setPMSymbol:") = Void, NSString;
override selector("setPaddingCharacter:") = Void, NSString;
override selector("setPaddingPosition:") = Void, CULong;
override selector("setPageOrder:") = Void, CLong;
override selector("setPageScroll:") = Void, Double;
override selector("setPaletteLabel:") = Void, NSString;
override selector("setPanelFont:isMultiple:") = Void, NSFont, Bool;
override selector("setPaperName:") = Void, NSString;
override selector("setPaperSize:") = Void, NSSize;
override selector("setParagraphGlyphRange:separatorGlyphRange:") = Void, NSRange, NSRange;
override selector("setParagraphSpacing:") = Void, Double;
override selector("setParagraphSpacingBefore:") = Void, Double;
override selector("setParagraphStyle:") = Void, NSParagraphStyle;
override selector("setParagraphs:") = Void, NSArray;
override selector("setParamDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
override selector("setParentWindow:") = Void, NSWindow;
override selector("setPartialStringValidationEnabled:") = Void, Bool;
override selector("setPath:") = Bool, NSString;
override selector("setPathComponentCells:") = Void, NSArray;
override selector("setPathSeparator:") = Void, NSString;
override selector("setPathStyle:") = Void, CLong;
override selector("setPatternPhase:") = Void, NSPoint;
override selector("setPerMillSymbol:") = Void, NSString;
override selector("setPercentSymbol:") = Void, NSString;
override selector("setPeriodicDelay:interval:") = Void, Float, Float;
override selector("setPersistentDomain:forName:") = Void, NSDictionary, NSString;
override selector("setPickerMask:") = Void, CULong;
override selector("setPickerMode:") = Void, CLong;
override selector("setPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
override selector("setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:") = Void, NSOpenGLPixelBuffer, UInt, Int, Int;
override selector("setPixelFormat:") = Void, NSOpenGLPixelFormat;
override selector("setPixelsHigh:") = Void, CLong;
override selector("setPixelsWide:") = Void, CLong;
override selector("setPlaceholderAttributedString:") = Void, NSAttributedString;
override selector("setPlaceholderString:") = Void, NSString;
override selector("setPlaybackDeviceIdentifier:") = Void, NSString;
override selector("setPlusSign:") = Void, NSString;
override selector("setPosition:") = Void, CGPoint;
override selector("setPosition:ofDividerAtIndex:") = Void, Double, CLong;
override selector("setPositiveFormat:") = Void, NSString;
override selector("setPositiveInfinitySymbol:") = Void, NSString;
override selector("setPositivePrefix:") = Void, NSString;
override selector("setPositiveSuffix:") = Void, NSString;
override selector("setPostsBoundsChangedNotifications:") = Void, Bool;
override selector("setPostsFrameChangedNotifications:") = Void, Bool;
override selector("setPredicate:") = Void, NSPredicate;
override selector("setPreferredBackingLocation:") = Void, CULong;
override selector("setPreferredEdge:") = Void, CULong;
override selector("setPreferredFilename:") = Void, NSString;
override selector("setPrefersAllColumnUserResizing:") = Void, Bool;
override selector("setPrefersColorMatch:") = Void, Bool;
override selector("setPresentationOptions:") = Void, CULong;
override selector("setPreservesContentDuringLiveResize:") = Void, Bool;
override selector("setPreservesSelection:") = Void, Bool;
override selector("setPreventsApplicationTerminationWhenModal:") = Void, Bool;
override selector("setPrintInfo:") = Void, NSPrintInfo;
override selector("setPrintPanel:") = Void, NSPrintPanel;
override selector("setPrinter:") = Void, NSPrinter;
override selector("setProcessName:") = Void, NSString;
override selector("setProgressMarks:") = Void, NSArray;
override selector("setPrompt:") = Void, NSString;
override selector("setProperty:forKey:") = Bool, Id, NSString;
override selector("setProperty:forKey:inRequest:") = Void, Id, NSString, NSMutableURLRequest;
override selector("setProperty:withValue:") = Void, NSString, Id;
override selector("setPropertyList:forType:") = Bool, Id, NSString;
override selector("setProtocolForProxy:") = Void, Id;
override selector("setProtocolSpecificInformation:") = Void, NSString;
override selector("setPrototype:") = Void, NSCell;
override selector("setPublicID:") = Void, NSString;
override selector("setPullsDown:") = Void, Bool;
override selector("setQuarter:") = Void, CLong;
override selector("setQuarterSymbols:") = Void, NSArray;
override selector("setQueuePriority:") = Void, CLong;
override selector("setRangeContainerObject:") = Void, Id;
override selector("setRate:") = Void, Float;
override selector("setReceiversSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setRecentSearches:") = Void, NSArray;
override selector("setRecentsAutosaveName:") = Void, NSString;
override selector("setRefusesFirstResponder:") = Void, Bool;
override selector("setRelativePosition:") = Void, CULong;
override selector("setReleasedWhenClosed:") = Void, Bool;
override selector("setRelinquishFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[]];
override selector("setRemovable:") = Void, Bool;
override selector("setRenamingIdentifier:") = Void, NSString;
override selector("setRepeatCount:") = Void, Float;
override selector("setRepeatDuration:") = Void, Double;
override selector("setReplyTimeout:") = Void, Double;
override selector("setRepresentation") = NSSet;
override selector("setRepresentedFilename:") = Void, NSString;
override selector("setRepresentedObject:") = Void, Id;
override selector("setRepresentedURL:") = Void, NSURL;
override selector("setRequestTimeout:") = Void, Double;
override selector("setRequiredFileType:") = Void, NSString;
override selector("setReservedThicknessForAccessoryView:") = Void, Double;
override selector("setReservedThicknessForMarkers:") = Void, Double;
override selector("setResizable:") = Void, Bool;
override selector("setResizeIncrements:") = Void, NSSize;
override selector("setResizingMask:") = Void, CULong;
override selector("setResolvesAliases:") = Void, Bool;
override selector("setResourceData:") = Bool, NSData;
override selector("setResourceValue:forKey:error:") = Bool, Id, NSString, Pointer[NSError];
override selector("setResourceValues:error:") = Bool, NSDictionary, Pointer[NSError];
override selector("setReturnValue:") = Void, RawPointer;
override selector("setReusesColumns:") = Void, Bool;
override selector("setRichText:") = Void, Bool;
override selector("setRightMargin:") = Void, Double;
override selector("setRootElement:") = Void, NSXMLNode;
override selector("setRootObject:") = Void, Id;
override selector("setRoundingBehavior:") = Void, NSDecimalNumberHandler;
override selector("setRoundingIncrement:") = Void, NSNumber;
override selector("setRoundingMode:") = Void, CULong;
override selector("setRowClass:") = Void, Id;
override selector("setRowHeight:") = Void, Double;
override selector("setRowTemplates:") = Void, NSArray;
override selector("setRowTypeKeyPath:") = Void, NSString;
override selector("setRuleThickness:") = Void, Double;
override selector("setRulerViewClass:") = Void, Id;
override selector("setRulerVisible:") = Void, Bool;
override selector("setRulersVisible:") = Void, Bool;
override selector("setRunLoopModes:") = Void, NSArray;
override selector("setScalesWhenResized:") = Void, Bool;
override selector("setScalingFactor:") = Void, Double;
override selector("setScanLocation:") = Void, CULong;
override selector("setScriptErrorExpectedTypeDescriptor:") = Void, NSAppleEventDescriptor;
override selector("setScriptErrorNumber:") = Void, Int;
override selector("setScriptErrorOffendingObjectDescriptor:") = Void, NSAppleEventDescriptor;
override selector("setScriptErrorString:") = Void, NSString;
override selector("setScriptingProperties:") = Void, NSDictionary;
override selector("setScrollView:") = Void, NSScrollView;
override selector("setScrollable:") = Void, Bool;
override selector("setScrollsDynamically:") = Void, Bool;
override selector("setSearchButtonCell:") = Void, NSButtonCell;
override selector("setSearchMenuTemplate:") = Void, NSMenu;
override selector("setSearchScopes:") = Void, NSArray;
override selector("setSecond:") = Void, CLong;
override selector("setSecondaryGroupingSize:") = Void, CULong;
override selector("setSegmentCount:") = Void, CLong;
override selector("setSegmentStyle:") = Void, CLong;
override selector("setSelectable:") = Void, Bool;
override selector("setSelected:") = Void, Bool;
override selector("setSelected:forSegment:") = Void, Bool, CLong;
override selector("setSelectedAttributes:isMultiple:") = Void, NSDictionary, Bool;
override selector("setSelectedFont:isMultiple:") = Void, NSFont, Bool;
override selector("setSelectedItemIdentifier:") = Void, NSString;
override selector("setSelectedKeyboardInputSource:") = Void, NSString;
override selector("setSelectedObjects:") = Bool, NSArray;
override selector("setSelectedRange:") = Void, NSRange;
override selector("setSelectedRange:affinity:stillSelecting:") = Void, NSRange, CULong, Bool;
override selector("setSelectedRanges:") = Void, NSArray;
override selector("setSelectedRanges:affinity:stillSelecting:") = Void, NSArray, CULong, Bool;
override selector("setSelectedSegment:") = Void, CLong;
override selector("setSelectedTextAttributes:") = Void, NSDictionary;
override selector("setSelectionByRect:") = Void, Bool;
override selector("setSelectionFrom:to:anchor:highlight:") = Void, CLong, CLong, CLong, Bool;
override selector("setSelectionGranularity:") = Void, CULong;
override selector("setSelectionHighlightStyle:") = Void, CLong;
override selector("setSelectionIndex:") = Bool, CULong;
override selector("setSelectionIndexPath:") = Bool, NSIndexPath;
override selector("setSelectionIndexPaths:") = Bool, NSArray;
override selector("setSelectionIndexes:") = Bool, NSIndexSet;
override selector("setSelectionOnly:") = Void, Bool;
override selector("setSelector:") = Void, SelectorHandle;
override selector("setSelectsInsertedObjects:") = Void, Bool;
override selector("setSendsActionOnArrowKeys:") = Void, Bool;
override selector("setSendsActionOnEndEditing:") = Void, Bool;
override selector("setSendsSearchStringImmediately:") = Void, Bool;
override selector("setSendsWholeSearchString:") = Void, Bool;
override selector("setSeparatesColumns:") = Void, Bool;
override selector("setServicesMenu:") = Void, NSMenu;
override selector("setServicesProvider:") = Void, Id;
override selector("setSet:") = Void, NSSet;
override selector("setShadow:") = Void, NSShadow;
override selector("setShadowBlurRadius:") = Void, Double;
override selector("setShadowColor:") = Void, CGColorRef;
override selector("setShadowOffset:") = Void, CGSize;
override selector("setShadowOpacity:") = Void, Float;
override selector("setShadowRadius:") = Void, Double;
override selector("setSharedPrintInfo:") = Void, NSPrintInfo;
override selector("setSharedScriptSuiteRegistry:") = Void, NSScriptSuiteRegistry;
override selector("setSharedURLCache:") = Void, NSURLCache;
override selector("setSharingType:") = Void, CULong;
override selector("setShortMonthSymbols:") = Void, NSArray;
override selector("setShortQuarterSymbols:") = Void, NSArray;
override selector("setShortStandaloneMonthSymbols:") = Void, NSArray;
override selector("setShortStandaloneQuarterSymbols:") = Void, NSArray;
override selector("setShortStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setShortWeekdaySymbols:") = Void, NSArray;
override selector("setShouldAntialias:") = Void, Bool;
override selector("setShouldCascadeWindows:") = Void, Bool;
override selector("setShouldCloseDocument:") = Void, Bool;
override selector("setShouldCreateUI:") = Void, Bool;
override selector("setShouldProcessNamespaces:") = Void, Bool;
override selector("setShouldReportNamespacePrefixes:") = Void, Bool;
override selector("setShouldResolveExternalEntities:") = Void, Bool;
override selector("setShowPanels:") = Void, Bool;
override selector("setShowsAlpha:") = Void, Bool;
override selector("setShowsApplicationBadge:") = Void, Bool;
override selector("setShowsBaselineSeparator:") = Void, Bool;
override selector("setShowsBorderOnlyWhileMouseInside:") = Void, Bool;
override selector("setShowsControlCharacters:") = Void, Bool;
override selector("setShowsFirstResponder:") = Void, Bool;
override selector("setShowsHelp:") = Void, Bool;
override selector("setShowsHiddenFiles:") = Void, Bool;
override selector("setShowsInvisibleCharacters:") = Void, Bool;
override selector("setShowsPrintPanel:") = Void, Bool;
override selector("setShowsProgressPanel:") = Void, Bool;
override selector("setShowsResizeIndicator:") = Void, Bool;
override selector("setShowsStateBy:") = Void, CLong;
override selector("setShowsStateColumn:") = Void, Bool;
override selector("setShowsSuppressionButton:") = Void, Bool;
override selector("setShowsToolbarButton:") = Void, Bool;
override selector("setSize:") = Void, NSSize;
override selector("setSizeFunction:") = Void, CCodePointer[[RawPointer],[CULong]];
override selector("setSizeMode:") = Void, CULong;
override selector("setSliderType:") = Void, CULong;
override selector("setSmartInsertDeleteEnabled:") = Void, Bool;
override selector("setSortDescriptorPrototype:") = Void, NSSortDescriptor;
override selector("setSortDescriptors:") = Void, NSArray;
override selector("setSound:") = Void, NSSound;
override selector("setSpeed:") = Void, Float;
override selector("setSpellingState:range:") = Void, CLong, NSRange;
override selector("setStackSize:") = Void, CULong;
override selector("setStandalone:") = Void, Bool;
override selector("setStandaloneMonthSymbols:") = Void, NSArray;
override selector("setStandaloneQuarterSymbols:") = Void, NSArray;
override selector("setStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setStandardError:") = Void, Id;
override selector("setStandardInput:") = Void, Id;
override selector("setStandardOutput:") = Void, Id;
override selector("setStartSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setStartSubelementIdentifier:") = Void, CULong;
override selector("setStartSubelementIndex:") = Void, CLong;
override selector("setStartingItemNumber:") = Void, CLong;
override selector("setState:") = Void, CLong;
override selector("setState:atRow:column:") = Void, CLong, CLong, CLong;
override selector("setStoredInExternalRecord:") = Void, Bool;
override selector("setString:") = Void, NSString;
override selector("setString:forType:") = Bool, NSString, NSString;
override selector("setStringValue:") = Void, NSString;
override selector("setStringValue:resolvingEntities:") = Void, NSString, Bool;
override selector("setStroke") = Void;
override selector("setStyle:") = Void, CULong;
override selector("setStyleMask:") = Void, CULong;
override selector("setSubitems:") = Void, NSArray;
override selector("setSublayerTransform:") = Void, CATransform3D;
override selector("setSublayers:") = Void, NSArray;
override selector("setSubmenu:") = Void, NSMenu;
override selector("setSubmenu:forItem:") = Void, NSMenu, NSMenuItem;
override selector("setSubrowsKeyPath:") = Void, NSString;
override selector("setSubstitutionsPanelAccessoryViewController:") = Void, NSViewController;
override selector("setSubviews:") = Void, NSArray;
override selector("setSupermenu:") = Void, NSMenu;
override selector("setSuspended:") = Void, Bool;
override selector("setSystemID:") = Void, NSString;
override selector("setTXTRecordData:") = Bool, NSData;
override selector("setTabKeyTraversesCells:") = Void, Bool;
override selector("setTabStops:") = Void, NSArray;
override selector("setTabViewType:") = Void, CULong;
override selector("setTableView:") = Void, NSTableView;
override selector("setTag:") = Void, CLong;
override selector("setTag:forSegment:") = Void, CLong, CLong;
override selector("setTailIndent:") = Void, Double;
override selector("setTakesTitleFromPreviousColumn:") = Void, Bool;
override selector("setTarget:") = Void, Id;
override selector("setTearOffMenuRepresentation:") = Void, Id;
override selector("setTemplate:") = Void, Bool;
override selector("setTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
override selector("setTest:") = Void, NSScriptWhoseTest;
override selector("setTextAlignment:") = Void, CULong;
override selector("setTextAttributesForNegativeInfinity:") = Void, NSDictionary;
override selector("setTextAttributesForNegativeValues:") = Void, NSDictionary;
override selector("setTextAttributesForNil:") = Void, NSDictionary;
override selector("setTextAttributesForNotANumber:") = Void, NSDictionary;
override selector("setTextAttributesForPositiveInfinity:") = Void, NSDictionary;
override selector("setTextAttributesForPositiveValues:") = Void, NSDictionary;
override selector("setTextAttributesForZero:") = Void, NSDictionary;
override selector("setTextBaseWritingDirection:") = Void, CLong;
override selector("setTextBlocks:") = Void, NSArray;
override selector("setTextColor:") = Void, NSColor;
override selector("setTextColor:range:") = Void, NSColor, NSRange;
override selector("setTextContainer:") = Void, NSTextContainer;
override selector("setTextContainer:forGlyphRange:") = Void, NSTextContainer, NSRange;
override selector("setTextContainerInset:") = Void, NSSize;
override selector("setTextFont:") = Void, NSFont;
override selector("setTextLists:") = Void, NSArray;
override selector("setTextStorage:") = Void, NSTextStorage;
override selector("setTextView:") = Void, NSTextView;
override selector("setTextureImageToPixelBuffer:colorBuffer:") = Void, NSOpenGLPixelBuffer, UInt;
override selector("setThousandSeparator:") = Void, NSString;
override selector("setThreadPriority:") = Bool, Double;
override selector("setTickMarkPosition:") = Void, CULong;
override selector("setTighteningFactorForTruncation:") = Void, Float;
override selector("setTimeInterval:") = Void, Double;
override selector("setTimeOffset:") = Void, Double;
override selector("setTimeStyle:") = Void, CULong;
override selector("setTimeZone:") = Void, NSTimeZone;
override selector("setTimeoutInterval:") = Void, Double;
override selector("setTitle:") = Void, NSString;
override selector("setTitle:ofColumn:") = Void, NSString, CLong;
override selector("setTitleAlignment:") = Void, CULong;
override selector("setTitleBaseWritingDirection:") = Void, CLong;
override selector("setTitleCell:") = Void, NSCell;
override selector("setTitleColor:") = Void, NSColor;
override selector("setTitleFont:") = Void, NSFont;
override selector("setTitlePosition:") = Void, CULong;
override selector("setTitleWidth:") = Void, Double;
override selector("setTitleWithMnemonic:") = Void, NSString;
override selector("setTitleWithRepresentedFilename:") = Void, NSString;
override selector("setTitled:") = Void, Bool;
override selector("setTokenStyle:") = Void, CULong;
override selector("setTokenizingCharacterSet:") = Void, NSCharacterSet;
override selector("setToolTip:") = Void, NSString;
override selector("setToolTip:forCell:") = Void, NSString, NSCell;
override selector("setToolTip:forSegment:") = Void, NSString, CLong;
override selector("setToolbar:") = Void, NSToolbar;
override selector("setTopLevelObject:") = Void, Id;
override selector("setTopMargin:") = Void, Double;
override selector("setTotalCostLimit:") = Void, CULong;
override selector("setTrackingMode:") = Void, CULong;
override selector("setTrailingOffset:") = Void, Double;
override selector("setTransform:") = Void, CATransform3D;
override selector("setTransformStruct:") = Void, NSAffineTransformStruct;
override selector("setTransient:") = Void, Bool;
override selector("setTransparent:") = Void, Bool;
override selector("setTreatsFilePackagesAsDirectories:") = Void, Bool;
override selector("setTruncatesLastVisibleLine:") = Void, Bool;
override selector("setTwoDigitStartDate:") = Void, NSDate;
override selector("setType:") = Void, CULong;
override selector("setTypesetter:") = Void, NSTypesetter;
override selector("setTypesetterBehavior:") = Void, CLong;
override selector("setTypingAttributes:") = Void, NSDictionary;
override selector("setURI:") = Void, NSString;
override selector("setURL:") = Void, NSURL;
override selector("setURL:forKey:") = Void, NSURL, NSString;
override selector("setUndoManager:") = Void, NSUndoManager;
override selector("setUniqueID:") = Void, Id;
override selector("setUpFieldEditorAttributes:") = NSText, NSText;
override selector("setUpGState") = Void;
override selector("setUpPrintOperationDefaultValues") = Void;
override selector("setUserFixedPitchFont:") = Void, NSFont;
override selector("setUserFont:") = Void, NSFont;
override selector("setUserInfo:") = Void, NSDictionary;
override selector("setUserInterfaceLayoutDirection:") = Void, CLong;
override selector("setUsesAlternatingRowBackgroundColors:") = Void, Bool;
override selector("setUsesDataSource:") = Void, Bool;
override selector("setUsesEPSOnResolutionMismatch:") = Void, Bool;
override selector("setUsesFeedbackWindow:") = Void, Bool;
override selector("setUsesFindPanel:") = Void, Bool;
override selector("setUsesFontLeading:") = Void, Bool;
override selector("setUsesFontPanel:") = Void, Bool;
override selector("setUsesGroupingSeparator:") = Void, Bool;
override selector("setUsesItemFromMenu:") = Void, Bool;
override selector("setUsesLazyFetching:") = Void, Bool;
override selector("setUsesRuler:") = Void, Bool;
override selector("setUsesScreenFonts:") = Void, Bool;
override selector("setUsesSignificantDigits:") = Void, Bool;
override selector("setUsesSingleLineMode:") = Void, Bool;
override selector("setUsesStrongWriteBarrier:") = Void, Bool;
override selector("setUsesThreadedAnimation:") = Void, Bool;
override selector("setUsesUserKeyEquivalents:") = Void, Bool;
override selector("setUsesWeakReadAndWriteBarriers:") = Void, Bool;
override selector("setValidateSize:") = Void, Bool;
override selector("setValidationPredicates:withValidationWarnings:") = Void, NSArray, NSArray;
override selector("setValue:") = Void, Id;
override selector("setValue:forHTTPHeaderField:") = Void, NSString, NSString;
override selector("setValue:forKey:") = Void, Id, NSString;
override selector("setValue:forKeyPath:") = Void, Id, NSString;
override selector("setValue:forUndefinedKey:") = Void, Id, NSString;
override selector("setValue:type:forDimension:") = Void, Double, CULong, CULong;
override selector("setValueListAttributes:") = Void, NSArray;
override selector("setValueTransformer:forName:") = Void, NSValueTransformer, NSString;
override selector("setValueTransformerName:") = Void, NSString;
override selector("setValueWraps:") = Void, Bool;
override selector("setValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
override selector("setValuesForKeysWithDictionary:") = Void, NSDictionary;
override selector("setVersion:") = Void, CLong;
override selector("setVersionHashModifier:") = Void, NSString;
override selector("setVertical:") = Void, Bool;
override selector("setVerticalAlignment:") = Void, CULong;
override selector("setVerticalLineScroll:") = Void, Double;
override selector("setVerticalMotionCanBeginDrag:") = Void, Bool;
override selector("setVerticalPageScroll:") = Void, Double;
override selector("setVerticalPagination:") = Void, CULong;
override selector("setVerticalRulerView:") = Void, NSRulerView;
override selector("setVerticalScroller:") = Void, NSScroller;
override selector("setVerticallyCentered:") = Void, Bool;
override selector("setVerticallyResizable:") = Void, Bool;
override selector("setVeryShortMonthSymbols:") = Void, NSArray;
override selector("setVeryShortStandaloneMonthSymbols:") = Void, NSArray;
override selector("setVeryShortStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setVeryShortWeekdaySymbols:") = Void, NSArray;
override selector("setView:") = Void, NSView;
override selector("setViewAnimations:") = Void, NSArray;
override selector("setViewsNeedDisplay:") = Void, Bool;
override selector("setVisibilityPriority:") = Void, CLong;
override selector("setVisible:") = Void, Bool;
override selector("setVoice:") = Bool, NSString;
override selector("setVolatileDomain:forName:") = Void, NSDictionary, NSString;
override selector("setVolume:") = Void, Float;
override selector("setWantsLayer:") = Void, Bool;
override selector("setWantsNotificationForMarkedText:") = Void, Bool;
override selector("setWantsRestingTouches:") = Void, Bool;
override selector("setWarningValue:") = Void, Double;
override selector("setWeek:") = Void, CLong;
override selector("setWeekday:") = Void, CLong;
override selector("setWeekdayOrdinal:") = Void, CLong;
override selector("setWeekdaySymbols:") = Void, NSArray;
override selector("setWidth:") = Void, Double;
override selector("setWidth:forSegment:") = Void, Double, CLong;
override selector("setWidth:ofColumn:") = Void, Double, CLong;
override selector("setWidth:type:forLayer:") = Void, Double, CULong, CLong;
override selector("setWidth:type:forLayer:edge:") = Void, Double, CULong, CLong, CULong;
override selector("setWidthTracksTextView:") = Void, Bool;
override selector("setWindingRule:") = Void, CULong;
override selector("setWindow:") = Void, NSWindow;
override selector("setWindowController:") = Void, NSWindowController;
override selector("setWindowFrameAutosaveName:") = Void, NSString;
override selector("setWindowsMenu:") = Void, NSMenu;
override selector("setWindowsNeedUpdate:") = Void, Bool;
override selector("setWithArray:") = Id, NSArray;
override selector("setWithCapacity:") = Id, CULong;
override selector("setWithObject:") = Id, Id;
override varargSelector("setWithObjects:") = Id, Id;
override selector("setWithObjects:count:") = Id, Pointer[Id], CULong;
override selector("setWithSet:") = Id, NSSet;
override selector("setWordFieldStringValue:") = Void, NSString;
override selector("setWords:") = Void, NSArray;
override selector("setWorksWhenModal:") = Void, Bool;
override selector("setWraps:") = Void, Bool;
override selector("setYear:") = Void, CLong;
override selector("setZPosition:") = Void, Double;
override selector("setZeroSymbol:") = Void, NSString;
override selector("shadow") = NSShadow;
override selector("shadowBlurRadius") = Double;
override selector("shadowColor") = NSColor;
override selector("shadowOffset") = CGSize;
override selector("shadowOpacity") = Float;
override selector("shadowRadius") = Double;
override selector("shadowWithLevel:") = NSColor, Double;
override selector("sharedAppleEventManager") = NSAppleEventManager;
override selector("sharedApplication") = NSApplication;
override selector("sharedCoercionHandler") = NSScriptCoercionHandler;
override selector("sharedColorPanel") = NSColorPanel;
override selector("sharedColorPanelExists") = Bool;
override selector("sharedCredentialStorage") = NSURLCredentialStorage;
override selector("sharedDocumentController") = Id;
override selector("sharedFontManager") = NSFontManager;
override selector("sharedFontPanel") = NSFontPanel;
override selector("sharedFontPanelExists") = Bool;
override selector("sharedFrameworksPath") = NSString;
override selector("sharedFrameworksURL") = NSURL;
override selector("sharedGlyphGenerator") = Id;
override selector("sharedHTTPCookieStorage") = NSHTTPCookieStorage;
override selector("sharedHelpManager") = NSHelpManager;
override selector("sharedInstance") = Id;
override selector("sharedPrintInfo") = NSPrintInfo;
override selector("sharedScriptExecutionContext") = NSScriptExecutionContext;
override selector("sharedScriptSuiteRegistry") = NSScriptSuiteRegistry;
override selector("sharedSpellChecker") = NSSpellChecker;
override selector("sharedSpellCheckerExists") = Bool;
override selector("sharedSupportPath") = NSString;
override selector("sharedSupportURL") = NSURL;
override selector("sharedSystemTypesetter") = Id;
override selector("sharedSystemTypesetterForBehavior:") = Id, CLong;
override selector("sharedTypesetter") = Id;
override selector("sharedURLCache") = NSURLCache;
override selector("sharedUserDefaultsController") = Id;
override selector("sharedWorkspace") = NSWorkspace;
override selector("sharingType") = CULong;
override selector("shiftIndexesStartingAtIndex:by:") = Void, CULong, CLong;
override selector("shortMonthSymbols") = NSArray;
override selector("shortQuarterSymbols") = NSArray;
override selector("shortStandaloneMonthSymbols") = NSArray;
override selector("shortStandaloneQuarterSymbols") = NSArray;
override selector("shortStandaloneWeekdaySymbols") = NSArray;
override selector("shortValue") = Short;
override selector("shortWeekdaySymbols") = NSArray;
override selector("shouldAntialias") = Bool;
override selector("shouldArchiveValueForKey:") = Bool, NSString;
override selector("shouldBeTreatedAsInkEvent:") = Bool, NSEvent;
override selector("shouldBreakLineByHyphenatingBeforeCharacterAtIndex:") = Bool, CULong;
override selector("shouldBreakLineByWordBeforeCharacterAtIndex:") = Bool, CULong;
override selector("shouldCascadeWindows") = Bool;
override selector("shouldChangePrintInfo:") = Bool, NSPrintInfo;
override selector("shouldChangeTextInRange:replacementString:") = Bool, NSRange, NSString;
override selector("shouldChangeTextInRanges:replacementStrings:") = Bool, NSArray, NSArray;
override selector("shouldCloseDocument") = Bool;
override selector("shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:") = Void, NSWindowController, Id, SelectorHandle, RawPointer;
override selector("shouldCollapseAutoExpandedItemsForDeposited:") = Bool, Bool;
override selector("shouldCreateUI") = Bool;
override selector("shouldDelayWindowOrderingForEvent:") = Bool, NSEvent;
override selector("shouldDrawColor") = Bool;
override selector("shouldDrawInsertionPoint") = Bool;
override selector("shouldFocusCell:atColumn:row:") = Bool, NSCell, CLong, CLong;
override selector("shouldProcessNamespaces") = Bool;
override selector("shouldReportNamespacePrefixes") = Bool;
override selector("shouldResolveExternalEntities") = Bool;
override selector("shouldRunSavePanelWithAccessoryView") = Bool;
override selector("showAllHelpTopicsForSearchString:") = Void, NSString;
override selector("showAttachmentCell:inRect:characterIndex:") = Void, NSCell, NSRect, CULong;
override selector("showContextHelp:") = Void, Id;
override selector("showContextHelpForObject:locationHint:") = Bool, Id, NSPoint;
override selector("showDefinitionForAttributedString:atPoint:") = Void, NSAttributedString, NSPoint;
override selector("showDefinitionForAttributedString:range:options:baselineOriginProvider:") = Void, NSAttributedString, NSRange, NSDictionary, UnknownType;
override selector("showFindIndicatorForRange:") = Void, NSRange;
override selector("showGuessPanel:") = Void, Id;
override selector("showHelp:") = Void, Id;
override selector("showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:") = Void, Pointer[CChar], CULong, NSRange, NSPoint, NSFont, NSColor, NSSize;
override selector("showPanels") = Bool;
override selector("showSearchResultsForQueryString:") = Bool, NSString;
override selector("showWindow:") = Void, Id;
override selector("showWindows") = Void;
override selector("showsAlpha") = Bool;
override selector("showsApplicationBadge") = Bool;
override selector("showsBaselineSeparator") = Bool;
override selector("showsBorderOnlyWhileMouseInside") = Bool;
override selector("showsControlCharacters") = Bool;
override selector("showsFirstResponder") = Bool;
override selector("showsHelp") = Bool;
override selector("showsHiddenFiles") = Bool;
override selector("showsInvisibleCharacters") = Bool;
override selector("showsPrintPanel") = Bool;
override selector("showsProgressPanel") = Bool;
override selector("showsResizeIndicator") = Bool;
override selector("showsStateBy") = CLong;
override selector("showsStateColumn") = Bool;
override selector("showsSuppressionButton") = Bool;
override selector("showsToolbarButton") = Bool;
override selector("signal") = Void;
override selector("signatureWithObjCTypes:") = NSMethodSignature, Pointer[CChar];
override selector("size") = NSSize;
override selector("sizeForKey:inTable:") = NSSize, NSString, NSString;
override selector("sizeForPaperName:") = NSSize, NSString;
override selector("sizeFunction") = CCodePointer[[RawPointer],[CULong]];
override selector("sizeLastColumnToFit") = Void;
override selector("sizeMode") = CULong;
override selector("sizeOfLabel:") = NSSize, Bool;
override selector("sizeToCells") = Void;
override selector("sizeToFit") = Void;
override selector("sizeValue") = NSSize;
override selector("sizeWithAttributes:") = NSSize, NSDictionary;
override selector("skipDescendants") = Void;
override selector("skipDescendents") = Void;
override selector("sleepForTimeInterval:") = Void, Double;
override selector("sleepUntilDate:") = Void, NSDate;
override selector("slideDraggedImageTo:") = Void, NSPoint;
override selector("slideImage:from:to:") = Void, NSImage, NSPoint, NSPoint;
override selector("sliderType") = CULong;
override selector("smallSystemFontSize") = Double;
override selector("smallestEncoding") = CULong;
override selector("smartDeleteRangeForProposedRange:") = NSRange, NSRange;
override selector("smartInsertAfterStringForString:replacingRange:") = NSString, NSString, NSRange;
override selector("smartInsertBeforeStringForString:replacingRange:") = NSString, NSString, NSRange;
override selector("smartInsertDeleteEnabled") = Bool;
override selector("smartInsertForString:replacingRange:beforeString:afterString:") = Void, NSString, NSRange, Pointer[NSString], Pointer[NSString];
override selector("socket") = Int;
override selector("socketType") = Int;
override selector("sortDescriptorPrototype") = NSSortDescriptor;
override selector("sortDescriptorWithKey:ascending:") = Id, NSString, Bool;
override selector("sortDescriptorWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
override selector("sortDescriptorWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
override selector("sortDescriptors") = NSArray;
override selector("sortIndicatorRectForBounds:") = NSRect, NSRect;
override selector("sortSubviewsUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override selector("sortUsingComparator:") = Void, NSComparator;
override selector("sortUsingDescriptors:") = Void, NSArray;
override selector("sortUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override selector("sortUsingSelector:") = Void, SelectorHandle;
override selector("sortWithOptions:usingComparator:") = Void, CULong, NSComparator;
override selector("sortWithSortDescriptors:recursively:") = Void, NSArray, Bool;
override selector("sortedArrayHint") = NSData;
override selector("sortedArrayUsingComparator:") = NSArray, NSComparator;
override selector("sortedArrayUsingDescriptors:") = NSArray, NSArray;
override selector("sortedArrayUsingFunction:context:") = NSArray, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override selector("sortedArrayUsingFunction:context:hint:") = NSArray, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer, NSData;
override selector("sortedArrayUsingSelector:") = NSArray, SelectorHandle;
override selector("sortedArrayWithOptions:usingComparator:") = NSArray, CULong, NSComparator;
override selector("sound") = NSSound;
override selector("sound:didFinishPlaying:") = Void, NSSound, Bool;
override selector("soundNamed:") = Id, NSString;
override selector("soundUnfilteredFileTypes") = NSArray;
override selector("soundUnfilteredPasteboardTypes") = NSArray;
override selector("soundUnfilteredTypes") = NSArray;
override selector("source") = NSString;
override selector("speechRecognizer:didRecognizeCommand:") = Void, NSSpeechRecognizer, Id;
override selector("speechSynthesizer:didEncounterErrorAtIndex:ofString:message:") = Void, NSSpeechSynthesizer, CULong, NSString, NSString;
override selector("speechSynthesizer:didEncounterSyncMessage:") = Void, NSSpeechSynthesizer, NSString;
override selector("speechSynthesizer:didFinishSpeaking:") = Void, NSSpeechSynthesizer, Bool;
override selector("speechSynthesizer:willSpeakPhoneme:") = Void, NSSpeechSynthesizer, Short;
override selector("speechSynthesizer:willSpeakWord:ofString:") = Void, NSSpeechSynthesizer, NSRange, NSString;
override selector("speed") = Float;
override selector("spellCheckerDocumentTag") = CLong;
override selector("spellCheckingResultWithRange:") = NSTextCheckingResult, NSRange;
override selector("spellServer:checkGrammarInString:language:details:") = NSRange, NSSpellServer, NSString, NSString, Pointer[NSArray];
override selector("spellServer:checkString:offset:types:options:orthography:wordCount:") = NSArray, NSSpellServer, NSString, CULong, UInt64, NSDictionary, NSOrthography, Pointer[CLong];
override selector("spellServer:didForgetWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
override selector("spellServer:didLearnWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
override selector("spellServer:findMisspelledWordInString:language:wordCount:countOnly:") = NSRange, NSSpellServer, NSString, NSString, Pointer[CLong], Bool;
override selector("spellServer:suggestCompletionsForPartialWordRange:inString:language:") = NSArray, NSSpellServer, NSRange, NSString, NSString;
override selector("spellServer:suggestGuessesForWord:inLanguage:") = NSArray, NSSpellServer, NSString, NSString;
override selector("spellingPanel") = NSPanel;
override selector("splitView:additionalEffectiveRectOfDividerAtIndex:") = NSRect, NSSplitView, CLong;
override selector("splitView:canCollapseSubview:") = Bool, NSSplitView, NSView;
override selector("splitView:constrainMaxCoordinate:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
override selector("splitView:constrainMinCoordinate:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
override selector("splitView:constrainSplitPosition:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
override selector("splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:") = NSRect, NSSplitView, NSRect, NSRect, CLong;
override selector("splitView:resizeSubviewsWithOldSize:") = Void, NSSplitView, NSSize;
override selector("splitView:shouldAdjustSizeOfSubview:") = Bool, NSSplitView, NSView;
override selector("splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:") = Bool, NSSplitView, NSView, CLong;
override selector("splitView:shouldHideDividerAtIndex:") = Bool, NSSplitView, CLong;
override selector("splitViewDidResizeSubviews:") = Void, NSNotification;
override selector("splitViewWillResizeSubviews:") = Void, NSNotification;
override selector("stackSize") = CULong;
override selector("standaloneMonthSymbols") = NSArray;
override selector("standaloneQuarterSymbols") = NSArray;
override selector("standaloneWeekdaySymbols") = NSArray;
override selector("standardError") = Id;
override selector("standardInput") = Id;
override selector("standardOutput") = Id;
override selector("standardUserDefaults") = NSUserDefaults;
override selector("standardWindowButton:") = NSButton, CULong;
override selector("standardWindowButton:forStyleMask:") = NSButton, CULong, CULong;
override selector("standardizedURL") = NSURL;
override selector("start") = Void;
override selector("startAnimation") = Void;
override selector("startAnimation:") = Void, Id;
override selector("startListening") = Void;
override selector("startLoading") = Void;
override selector("startMonitoring") = Void;
override selector("startPeriodicEventsAfterDelay:withPeriod:") = Void, Double, Double;
override selector("startQuery") = Bool;
override selector("startSpeaking:") = Void, Id;
override selector("startSpeakingString:") = Bool, NSString;
override selector("startSpeakingString:toURL:") = Bool, NSString, NSURL;
override selector("startSpecifier") = NSScriptObjectSpecifier;
override selector("startSubelementIdentifier") = CULong;
override selector("startSubelementIndex") = CLong;
override selector("startTrackingAt:inView:") = Bool, NSPoint, NSView;
override selector("startWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
override selector("startingColumn") = CLong;
override selector("startingItemNumber") = CLong;
override selector("startingRow") = CLong;
override selector("state") = CLong;
override selector("stateImageRectForBounds:") = NSRect, NSRect;
override selector("stateImageWidth") = Double;
override selector("statistics") = NSDictionary;
override selector("status") = CULong;
override selector("statusBar") = NSStatusBar;
override selector("statusCode") = CLong;
override selector("statusForTable:") = CULong, NSString;
override selector("statusItemWithLength:") = NSStatusItem, Double;
override selector("stop") = Bool;
override selector("stop:") = Void, Id;
override selector("stopAnimation") = Void;
override selector("stopAnimation:") = Void, Id;
override selector("stopListening") = Void;
override selector("stopLoading") = Void;
override selector("stopModal") = Void;
override selector("stopModalWithCode:") = Void, CLong;
override selector("stopMonitoring") = Void;
override selector("stopPeriodicEvents") = Void;
override selector("stopQuery") = Void;
override selector("stopSpeaking") = Void;
override selector("stopSpeaking:") = Void, Id;
override selector("stopSpeakingAtBoundary:") = Void, CULong;
override selector("stopTracking:at:inView:mouseIsUp:") = Void, NSPoint, NSPoint, NSView, Bool;
override selector("stopWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
override selector("storagePolicy") = CULong;
override selector("storeCachedResponse:forRequest:") = Void, NSCachedURLResponse, NSURLRequest;
override selector("storedValueForKey:") = Id, NSString;
override selector("stream:handleEvent:") = Void, NSStream, CULong;
override selector("streamError") = NSError;
override selector("streamStatus") = CULong;
override selector("strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;
override selector("string") = Id;
override selector("stringArrayForKey:") = NSArray, NSString;
override selector("stringByAbbreviatingWithTildeInPath") = NSString;
override selector("stringByAddingPercentEscapesUsingEncoding:") = NSString, CULong;
override varargSelector("stringByAppendingFormat:") = NSString, NSString;
override selector("stringByAppendingPathComponent:") = NSString, NSString;
override selector("stringByAppendingPathExtension:") = NSString, NSString;
override selector("stringByAppendingString:") = NSString, NSString;
override selector("stringByDeletingLastPathComponent") = NSString;
override selector("stringByDeletingPathExtension") = NSString;
override selector("stringByExpandingTildeInPath") = NSString;
override selector("stringByFoldingWithOptions:locale:") = NSString, CULong, NSLocale;
override selector("stringByPaddingToLength:withString:startingAtIndex:") = NSString, CULong, NSString, CULong;
override selector("stringByReplacingCharactersInRange:withString:") = NSString, NSRange, NSString;
override selector("stringByReplacingOccurrencesOfString:withString:") = NSString, NSString, NSString;
override selector("stringByReplacingOccurrencesOfString:withString:options:range:") = NSString, NSString, NSString, CULong, NSRange;
override selector("stringByReplacingPercentEscapesUsingEncoding:") = NSString, CULong;
override selector("stringByResolvingSymlinksInPath") = NSString;
override selector("stringByStandardizingPath") = NSString;
override selector("stringByTrimmingCharactersInSet:") = NSString, NSCharacterSet;
override selector("stringForKey:") = NSString, NSString;
override selector("stringForKey:inTable:") = NSString, NSString, NSString;
override selector("stringForObjectValue:") = NSString, Id;
override selector("stringForType:") = NSString, NSString;
override selector("stringFromDate:") = NSString, NSDate;
override selector("stringFromNumber:") = NSString, NSNumber;
override selector("stringListForKey:inTable:") = NSArray, NSString, NSString;
override selector("stringRepresentation") = NSString;
override selector("stringValue") = NSString;
override selector("stringWithCString:") = Id, Pointer[CChar];
override selector("stringWithCString:encoding:") = Id, Pointer[CChar], CULong;
override selector("stringWithCString:length:") = Id, Pointer[CChar], CULong;
override selector("stringWithCapacity:") = Id, CULong;
override selector("stringWithCharacters:length:") = Id, Pointer[UShort], CULong;
override selector("stringWithContentsOfFile:") = Id, NSString;
override selector("stringWithContentsOfFile:encoding:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("stringWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[CULong], Pointer[NSError];
override selector("stringWithContentsOfURL:") = Id, NSURL;
override selector("stringWithContentsOfURL:encoding:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("stringWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[CULong], Pointer[NSError];
override selector("stringWithFileSystemRepresentation:length:") = NSString, Pointer[CChar], CULong;
override varargSelector("stringWithFormat:") = Id, NSString;
override selector("stringWithSavedFrame") = NSString;
override selector("stringWithString:") = Id, NSString;
override selector("stringWithUTF8String:") = Id, Pointer[CChar];
override selector("stringsByAppendingPaths:") = NSArray, NSArray;
override selector("stroke") = Void;
override selector("strokeLineFromPoint:toPoint:") = Void, NSPoint, NSPoint;
override selector("strokeRect:") = Void, NSRect;
override selector("style") = CULong;
override selector("styleMask") = CULong;
override selector("subarrayWithRange:") = NSArray, NSRange;
override selector("subdataWithRange:") = NSData, NSRange;
override selector("subgroups") = NSArray;
override selector("subitems") = NSArray;
override selector("sublayerTransform") = CATransform3D;
override selector("sublayers") = NSArray;
override selector("submenu") = NSMenu;
override selector("submenuAction:") = Void, Id;
override selector("subpathsAtPath:") = NSArray, NSString;
override selector("subpathsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("subpredicates") = NSArray;
override selector("subrowIndexesForRow:") = NSIndexSet, CLong;
override selector("subrowsKeyPath") = NSString;
override selector("subscript:") = Void, Id;
override selector("subscriptRange:") = Void, NSRange;
override selector("substituteFontForFont:") = NSFont, NSFont;
override selector("substituteGlyphsInRange:withGlyphs:") = Void, NSRange, Pointer[UInt];
override selector("substitutionsPanel") = NSPanel;
override selector("substitutionsPanelAccessoryViewController") = NSViewController;
override selector("substringFromIndex:") = NSString, CULong;
override selector("substringToIndex:") = NSString, CULong;
override selector("substringWithRange:") = NSString, NSRange;
override selector("subtype") = Short;
override selector("subviews") = NSArray;
override selector("suggestedFilename") = NSString;
override selector("suiteForAppleEventCode:") = NSString, UInt;
override selector("suiteName") = NSString;
override selector("suiteNames") = NSArray;
override selector("superclass") = Id;
override selector("superclassDescription") = NSScriptClassDescription;
override selector("superlayer") = CALayer;
override selector("supermenu") = NSMenu;
override selector("superscript:") = Void, Id;
override selector("superscriptRange:") = Void, NSRange;
override selector("superview") = NSView;
override selector("supportedWindowDepths") = Pointer[Int];
override selector("supportsCommand:") = Bool, NSScriptCommandDescription;
override selector("supportsMode:") = Bool, CLong;
override selector("suppressionButton") = NSButton;
override selector("suspend") = Bool;
override selector("suspendCurrentAppleEvent") = NSAppleEventManagerSuspensionID;
override selector("suspendExecution") = Void;
override selector("suspended") = Bool;
override selector("swapWithMark:") = Void, Id;
override selector("swipeWithEvent:") = Void, NSEvent;
override selector("symbolCharacterSet") = Id;
override selector("symbolicLinkDestination") = NSString;
override selector("symbolicLinkDestinationURL") = NSURL;
override selector("symbolicTraits") = UInt;
override selector("synchronize") = Bool;
override selector("synchronizeFile") = Void;
override selector("synchronizeTitleAndSelectedItem") = Void;
override selector("synchronizeWindowTitleWithDocumentName") = Void;
override selector("systemDefaultPortNameServer") = NSPortNameServer;
override selector("systemFontOfSize:") = NSFont, Double;
override selector("systemFontSize") = Double;
override selector("systemFontSizeForControlSize:") = Double, CULong;
override selector("systemID") = NSString;
override selector("systemLocale") = Id;
override selector("systemStatusBar") = NSStatusBar;
override selector("systemTabletID") = CULong;
override selector("systemTimeZone") = NSTimeZone;
override selector("systemUptime") = Double;
override selector("systemVersion") = UInt;
override selector("tabKeyTraversesCells") = Bool;
override selector("tabState") = CULong;
override selector("tabStopType") = CULong;
override selector("tabStops") = NSArray;
override selector("tabView") = NSTabView;
override selector("tabView:didSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
override selector("tabView:shouldSelectTabViewItem:") = Bool, NSTabView, NSTabViewItem;
override selector("tabView:willSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
override selector("tabViewDidChangeNumberOfTabViewItems:") = Void, NSTabView;
override selector("tabViewItemAtIndex:") = NSTabViewItem, CLong;
override selector("tabViewItemAtPoint:") = NSTabViewItem, NSPoint;
override selector("tabViewItems") = NSArray;
override selector("tabViewType") = CULong;
override selector("table") = NSTextTable;
override selector("tableColumnWithIdentifier:") = NSTableColumn, Id;
override selector("tableColumns") = NSArray;
override selector("tableView") = NSTableView;
override selector("tableView:acceptDrop:row:dropOperation:") = Bool, NSTableView, Id, CLong, CULong;
override selector("tableView:dataCellForTableColumn:row:") = NSCell, NSTableView, NSTableColumn, CLong;
override selector("tableView:didClickTableColumn:") = Void, NSTableView, NSTableColumn;
override selector("tableView:didDragTableColumn:") = Void, NSTableView, NSTableColumn;
override selector("tableView:heightOfRow:") = Double, NSTableView, CLong;
override selector("tableView:isGroupRow:") = Bool, NSTableView, CLong;
override selector("tableView:mouseDownInHeaderOfTableColumn:") = Void, NSTableView, NSTableColumn;
override selector("tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:") = NSArray, NSTableView, NSURL, NSIndexSet;
override selector("tableView:nextTypeSelectMatchFromRow:toRow:forString:") = CLong, NSTableView, CLong, CLong, NSString;
override selector("tableView:objectValueForTableColumn:row:") = Id, NSTableView, NSTableColumn, CLong;
override selector("tableView:selectionIndexesForProposedSelection:") = NSIndexSet, NSTableView, NSIndexSet;
override selector("tableView:setObjectValue:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, CLong;
override selector("tableView:shouldEditTableColumn:row:") = Bool, NSTableView, NSTableColumn, CLong;
override selector("tableView:shouldReorderColumn:toColumn:") = Bool, NSTableView, CLong, CLong;
override selector("tableView:shouldSelectRow:") = Bool, NSTableView, CLong;
override selector("tableView:shouldSelectTableColumn:") = Bool, NSTableView, NSTableColumn;
override selector("tableView:shouldShowCellExpansionForTableColumn:row:") = Bool, NSTableView, NSTableColumn, CLong;
override selector("tableView:shouldTrackCell:forTableColumn:row:") = Bool, NSTableView, NSCell, NSTableColumn, CLong;
override selector("tableView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSTableView, NSEvent, NSString;
override selector("tableView:sizeToFitWidthOfColumn:") = Double, NSTableView, CLong;
override selector("tableView:sortDescriptorsDidChange:") = Void, NSTableView, NSArray;
override selector("tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:") = NSString, NSTableView, NSCell, NSRectPointer, NSTableColumn, CLong, NSPoint;
override selector("tableView:typeSelectStringForTableColumn:row:") = NSString, NSTableView, NSTableColumn, CLong;
override selector("tableView:validateDrop:proposedRow:proposedDropOperation:") = CULong, NSTableView, Id, CLong, CULong;
override selector("tableView:willDisplayCell:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, CLong;
override selector("tableView:writeRows:toPasteboard:") = Bool, NSTableView, NSArray, NSPasteboard;
override selector("tableView:writeRowsWithIndexes:toPasteboard:") = Bool, NSTableView, NSIndexSet, NSPasteboard;
override selector("tableViewColumnDidMove:") = Void, NSNotification;
override selector("tableViewColumnDidResize:") = Void, NSNotification;
override selector("tableViewSelectionDidChange:") = Void, NSNotification;
override selector("tableViewSelectionIsChanging:") = Void, NSNotification;
override selector("tabletID") = CULong;
override selector("tabletPoint:") = Void, NSEvent;
override selector("tabletProximity:") = Void, NSEvent;
override selector("tag") = CLong;
override selector("tagForSegment:") = CLong, CLong;
override selector("tailIndent") = Double;
override selector("takeColorFrom:") = Void, Id;
override selector("takeDoubleValueFrom:") = Void, Id;
override selector("takeFloatValueFrom:") = Void, Id;
override selector("takeIntValueFrom:") = Void, Id;
override selector("takeIntegerValueFrom:") = Void, Id;
override selector("takeObjectValueFrom:") = Void, Id;
override selector("takeSelectedTabViewItemFromSender:") = Void, Id;
override selector("takeStoredValue:forKey:") = Void, Id, NSString;
override selector("takeStringValueFrom:") = Void, Id;
override selector("takeValue:forKey:") = Void, Id, NSString;
override selector("takeValue:forKeyPath:") = Void, Id, NSString;
override selector("takeValuesFromDictionary:") = Void, NSDictionary;
override selector("takesTitleFromPreviousColumn") = Bool;
override selector("tangentialPressure") = Float;
override selector("target") = Id;
override selector("targetForAction:") = Id, SelectorHandle;
override selector("targetForAction:to:from:") = Id, SelectorHandle, Id, Id;
override selector("tearOffMenuRepresentation") = Id;
override selector("templateViews") = NSArray;
override selector("templatesWithAttributeKeyPaths:inEntityDescription:") = NSArray, NSArray, NSEntityDescription;
override selector("temporaryAttribute:atCharacterIndex:effectiveRange:") = Id, NSString, CULong, NSRangePointer;
override selector("temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:") = Id, NSString, CULong, NSRangePointer, NSRange;
override selector("temporaryAttributesAtCharacterIndex:effectiveRange:") = NSDictionary, CULong, NSRangePointer;
override selector("temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:") = NSDictionary, CULong, NSRangePointer, NSRange;
override selector("terminate") = Bool;
override selector("terminate:") = Void, Id;
override selector("terminationReason") = CLong;
override selector("terminationStatus") = Int;
override selector("test") = NSScriptWhoseTest;
override selector("testPart:") = CULong, NSPoint;
override selector("textAttributesForNegativeInfinity") = NSDictionary;
override selector("textAttributesForNegativeValues") = NSDictionary;
override selector("textAttributesForNil") = NSDictionary;
override selector("textAttributesForNotANumber") = NSDictionary;
override selector("textAttributesForPositiveInfinity") = NSDictionary;
override selector("textAttributesForPositiveValues") = NSDictionary;
override selector("textAttributesForZero") = NSDictionary;
override selector("textBackgroundColor") = NSColor;
override selector("textBlocks") = NSArray;
override selector("textColor") = NSColor;
override selector("textContainer") = NSTextContainer;
override selector("textContainerChangedGeometry:") = Void, NSTextContainer;
override selector("textContainerChangedTextView:") = Void, NSTextContainer;
override selector("textContainerForGlyphAtIndex:effectiveRange:") = NSTextContainer, CULong, NSRangePointer;
override selector("textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSTextContainer, CULong, NSRangePointer, Bool;
override selector("textContainerInset") = NSSize;
override selector("textContainerOrigin") = NSPoint;
override selector("textContainers") = NSArray;
override selector("textDidBeginEditing:") = Void, NSNotification;
override selector("textDidChange:") = Void, NSNotification;
override selector("textDidEndEditing:") = Void, NSNotification;
override selector("textEncodingName") = NSString;
override selector("textFileTypes") = NSArray;
override selector("textLists") = NSArray;
override selector("textPasteboardTypes") = NSArray;
override selector("textShouldBeginEditing:") = Bool, NSText;
override selector("textShouldEndEditing:") = Bool, NSText;
override selector("textStorage") = NSTextStorage;
override selector("textStorage:edited:range:changeInLength:invalidatedRange:") = Void, NSTextStorage, CULong, NSRange, CLong, NSRange;
override selector("textStorageDidProcessEditing:") = Void, NSNotification;
override selector("textStorageWillProcessEditing:") = Void, NSNotification;
override selector("textTabForGlyphLocation:writingDirection:maxLocation:") = NSTextTab, Double, CLong, Double;
override selector("textTransform") = NSAffineTransform;
override selector("textTypes") = NSArray;
override selector("textUnfilteredFileTypes") = NSArray;
override selector("textUnfilteredPasteboardTypes") = NSArray;
override selector("textUnfilteredTypes") = NSArray;
override selector("textView") = NSTextView;
override selector("textView:clickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
override selector("textView:clickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
override selector("textView:clickedOnLink:") = Bool, NSTextView, Id;
override selector("textView:clickedOnLink:atIndex:") = Bool, NSTextView, Id, CULong;
override selector("textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSTextView, NSArray, NSRange, Pointer[CLong];
override selector("textView:didCheckTextInRange:types:options:results:orthography:wordCount:") = NSArray, NSTextView, NSRange, UInt64, NSDictionary, NSArray, NSOrthography, CLong;
override selector("textView:doCommandBySelector:") = Bool, NSTextView, SelectorHandle;
override selector("textView:doubleClickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
override selector("textView:doubleClickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
override selector("textView:draggedCell:inRect:event:") = Void, NSTextView, Id, NSRect, NSEvent;
override selector("textView:draggedCell:inRect:event:atIndex:") = Void, NSTextView, Id, NSRect, NSEvent, CULong;
override selector("textView:menu:forEvent:atIndex:") = NSMenu, NSTextView, NSMenu, NSEvent, CULong;
override selector("textView:shouldChangeTextInRange:replacementString:") = Bool, NSTextView, NSRange, NSString;
override selector("textView:shouldChangeTextInRanges:replacementStrings:") = Bool, NSTextView, NSArray, NSArray;
override selector("textView:shouldChangeTypingAttributes:toAttributes:") = NSDictionary, NSTextView, NSDictionary, NSDictionary;
override selector("textView:shouldSetSpellingState:range:") = CLong, NSTextView, CLong, NSRange;
override selector("textView:willChangeSelectionFromCharacterRange:toCharacterRange:") = NSRange, NSTextView, NSRange, NSRange;
override selector("textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:") = NSArray, NSTextView, NSArray, NSArray;
override selector("textView:willCheckTextInRange:options:types:") = NSDictionary, NSTextView, NSRange, NSDictionary, Pointer[UInt64];
override selector("textView:willDisplayToolTip:forCharacterAtIndex:") = NSString, NSTextView, NSString, CULong;
override selector("textView:writablePasteboardTypesForCell:atIndex:") = NSArray, NSTextView, Id, CULong;
override selector("textView:writeCell:atIndex:toPasteboard:type:") = Bool, NSTextView, Id, CULong, NSPasteboard, NSString;
override selector("textViewDidChangeSelection:") = Void, NSNotification;
override selector("textViewDidChangeTypingAttributes:") = Void, NSNotification;
override selector("textViewForBeginningOfSelection") = NSTextView;
override selector("textWithStringValue:") = Id, NSString;
override selector("textureInternalFormat") = UInt;
override selector("textureMaxMipMapLevel") = Int;
override selector("textureTarget") = UInt;
override selector("thickness") = Double;
override selector("thicknessRequiredInRuler") = Double;
override selector("thousandSeparator") = NSString;
override selector("threadDictionary") = NSMutableDictionary;
override selector("threadPriority") = Double;
override selector("tickMarkPosition") = CULong;
override selector("tickMarkValueAtIndex:") = Double, CLong;
override selector("tightenKerning:") = Void, Id;
override selector("tighteningFactorForTruncation") = Float;
override selector("tile") = Void;
override selector("tilt") = NSPoint;
override selector("timeInterval") = Double;
override selector("timeIntervalSince1970") = Double;
override selector("timeIntervalSinceDate:") = Double, NSDate;
override selector("timeIntervalSinceNow") = Double;
override selector("timeIntervalSinceReferenceDate") = Double;
override selector("timeOffset") = Double;
override selector("timeStyle") = CULong;
override selector("timeZone") = NSTimeZone;
override selector("timeZoneDataVersion") = NSString;
override selector("timeZoneForSecondsFromGMT:") = Id, CLong;
override selector("timeZoneWithAbbreviation:") = Id, NSString;
override selector("timeZoneWithName:") = Id, NSString;
override selector("timeZoneWithName:data:") = Id, NSString, NSData;
override selector("timeoutInterval") = Double;
override selector("timerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
override selector("timerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
override selector("timestamp") = Double;
override selector("title") = NSString;
override selector("titleAlignment") = CULong;
override selector("titleBarFontOfSize:") = NSFont, Double;
override selector("titleBaseWritingDirection") = CLong;
override selector("titleCell") = Id;
override selector("titleColor") = NSColor;
override selector("titleFont") = NSFont;
override selector("titleFrameOfColumn:") = NSRect, CLong;
override selector("titleHeight") = Double;
override selector("titleOfColumn:") = NSString, CLong;
override selector("titleOfSelectedItem") = NSString;
override selector("titlePosition") = CULong;
override selector("titleRect") = NSRect;
override selector("titleRectForBounds:") = NSRect, NSRect;
override selector("titleWidth") = Double;
override selector("titleWidth:") = Double, NSSize;
override selector("toManyRelationshipKeys") = NSArray;
override selector("toOneRelationshipKeys") = NSArray;
override selector("toggle:") = Void, Id;
override selector("toggleAutomaticDashSubstitution:") = Void, Id;
override selector("toggleAutomaticDataDetection:") = Void, Id;
override selector("toggleAutomaticLinkDetection:") = Void, Id;
override selector("toggleAutomaticQuoteSubstitution:") = Void, Id;
override selector("toggleAutomaticSpellingCorrection:") = Void, Id;
override selector("toggleAutomaticTextReplacement:") = Void, Id;
override selector("toggleBaseWritingDirection:") = Void, Id;
override selector("toggleContinuousSpellChecking:") = Void, Id;
override selector("toggleGrammarChecking:") = Void, Id;
override selector("toggleRuler:") = Void, Id;
override selector("toggleSmartInsertDelete:") = Void, Id;
override selector("toggleToolbarShown:") = Void, Id;
override selector("toggleTraditionalCharacterShape:") = Void, Id;
override selector("tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenField, NSString, CLong, Pointer[CLong];
override selector("tokenField:displayStringForRepresentedObject:") = NSString, NSTokenField, Id;
override selector("tokenField:editingStringForRepresentedObject:") = NSString, NSTokenField, Id;
override selector("tokenField:hasMenuForRepresentedObject:") = Bool, NSTokenField, Id;
override selector("tokenField:menuForRepresentedObject:") = NSMenu, NSTokenField, Id;
override selector("tokenField:readFromPasteboard:") = NSArray, NSTokenField, NSPasteboard;
override selector("tokenField:representedObjectForEditingString:") = Id, NSTokenField, NSString;
override selector("tokenField:shouldAddObjects:atIndex:") = NSArray, NSTokenField, NSArray, CULong;
override selector("tokenField:styleForRepresentedObject:") = CULong, NSTokenField, Id;
override selector("tokenField:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenField, NSArray, NSPasteboard;
override selector("tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenFieldCell, NSString, CLong, Pointer[CLong];
override selector("tokenFieldCell:displayStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
override selector("tokenFieldCell:editingStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
override selector("tokenFieldCell:hasMenuForRepresentedObject:") = Bool, NSTokenFieldCell, Id;
override selector("tokenFieldCell:menuForRepresentedObject:") = NSMenu, NSTokenFieldCell, Id;
override selector("tokenFieldCell:readFromPasteboard:") = NSArray, NSTokenFieldCell, NSPasteboard;
override selector("tokenFieldCell:representedObjectForEditingString:") = Id, NSTokenFieldCell, NSString;
override selector("tokenFieldCell:shouldAddObjects:atIndex:") = NSArray, NSTokenFieldCell, NSArray, CULong;
override selector("tokenFieldCell:styleForRepresentedObject:") = CULong, NSTokenFieldCell, Id;
override selector("tokenFieldCell:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenFieldCell, NSArray, NSPasteboard;
override selector("tokenStyle") = CULong;
override selector("tokenizingCharacterSet") = NSCharacterSet;
override selector("toolTip") = NSString;
override selector("toolTipForCell:") = NSString, NSCell;
override selector("toolTipForSegment:") = NSString, CLong;
override selector("toolTipsFontOfSize:") = NSFont, Double;
override selector("toolbar") = NSToolbar;
override selector("toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:") = NSToolbarItem, NSToolbar, NSString, Bool;
override selector("toolbarAllowedItemIdentifiers:") = NSArray, NSToolbar;
override selector("toolbarDefaultItemIdentifiers:") = NSArray, NSToolbar;
override selector("toolbarDidRemoveItem:") = Void, NSNotification;
override selector("toolbarSelectableItemIdentifiers:") = NSArray, NSToolbar;
override selector("toolbarWillAddItem:") = Void, NSNotification;
override selector("topLevelObject") = Id;
override selector("topMargin") = Double;
override selector("totalCostLimit") = CULong;
override selector("touchesBeganWithEvent:") = Void, NSEvent;
override selector("touchesCancelledWithEvent:") = Void, NSEvent;
override selector("touchesEndedWithEvent:") = Void, NSEvent;
override selector("touchesMatchingPhase:inView:") = NSSet, CULong, NSView;
override selector("touchesMovedWithEvent:") = Void, NSEvent;
override selector("trackKnob:") = Void, NSEvent;
override selector("trackMarker:withMouseEvent:") = Bool, NSRulerMarker, NSEvent;
override selector("trackMouse:adding:") = Bool, NSEvent, Bool;
override selector("trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, CULong, Bool;
override selector("trackMouse:inRect:ofView:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, Bool;
override selector("trackRect") = NSRect;
override selector("trackScrollButtons:") = Void, NSEvent;
override selector("trackingArea") = NSTrackingArea;
override selector("trackingAreas") = NSArray;
override selector("trackingMode") = CULong;
override selector("trackingNumber") = CLong;
override selector("trailingOffset") = Double;
override selector("traitsOfFont:") = CULong, NSFont;
override selector("transactionID") = Int;
override selector("transform") = NSAffineTransform;
override selector("transformBezierPath:") = NSBezierPath, NSBezierPath;
override selector("transformPoint:") = NSPoint, NSPoint;
override selector("transformSize:") = NSSize, NSSize;
override selector("transformStruct") = NSAffineTransformStruct;
override selector("transformUsingAffineTransform:") = Void, NSAffineTransform;
override selector("transformedValue:") = Id, Id;
override selector("transformedValueClass") = Id;
override selector("translateOriginToPoint:") = Void, NSPoint;
override selector("translateRectsNeedingDisplayInRect:by:") = Void, NSRect, NSSize;
override selector("translateXBy:yBy:") = Void, Double, Double;
override selector("transpose:") = Void, Id;
override selector("transposeWords:") = Void, Id;
override selector("treatsFilePackagesAsDirectories") = Bool;
override selector("treeNodeWithRepresentedObject:") = Id, Id;
override selector("truncateFileAtOffset:") = Void, UInt64;
override selector("truncatesLastVisibleLine") = Bool;
override selector("tryLock") = Bool;
override selector("tryLockWhenCondition:") = Bool, CLong;
override selector("tryToPerform:with:") = Bool, SelectorHandle, Id;
override selector("turnOffKerning:") = Void, Id;
override selector("turnOffLigatures:") = Void, Id;
override selector("twoDigitStartDate") = NSDate;
override selector("type") = NSString;
override selector("type:conformsToType:") = Bool, NSString, NSString;
override selector("typeCodeValue") = UInt;
override selector("typeForArgumentWithName:") = NSString, NSString;
override selector("typeForContentsOfURL:error:") = NSString, NSURL, Pointer[NSError];
override selector("typeForKey:") = NSString, NSString;
override selector("typeFromFileExtension:") = NSString, NSString;
override selector("typeOfFile:error:") = NSString, NSString, Pointer[NSError];
override selector("types") = NSArray;
override selector("typesFilterableTo:") = NSArray, NSString;
override selector("typesetter") = NSTypesetter;
override selector("typesetterBehavior") = CLong;
override selector("typingAttributes") = NSDictionary;
override selector("unableToSetNilForKey:") = Void, NSString;
override selector("unarchiveObjectWithData:") = Id, NSData;
override selector("unarchiveObjectWithFile:") = Id, NSString;
override selector("unarchiver:cannotDecodeObjectOfClassName:originalClasses:") = Id, NSKeyedUnarchiver, NSString, NSArray;
override selector("unarchiver:didDecodeObject:") = Id, NSKeyedUnarchiver, Id;
override selector("unarchiver:willReplaceObject:withObject:") = Void, NSKeyedUnarchiver, Id, Id;
override selector("unarchiverDidFinish:") = Void, NSKeyedUnarchiver;
override selector("unarchiverWillFinish:") = Void, NSKeyedUnarchiver;
override selector("unbind:") = Void, NSString;
override selector("underline:") = Void, Id;
override selector("underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;
override selector("underlinePosition") = Double;
override selector("underlineThickness") = Double;
override selector("undo") = Void;
override selector("undoActionName") = NSString;
override selector("undoManager") = NSUndoManager;
override selector("undoManagerForTextView:") = NSUndoManager, NSTextView;
override selector("undoMenuItemTitle") = NSString;
override selector("undoMenuTitleForUndoActionName:") = NSString, NSString;
override selector("undoNestedGroup") = Void;
override selector("unhide") = Bool;
override selector("unhide:") = Void, Id;
override selector("unhideAllApplications:") = Void, Id;
override selector("unhideWithoutActivation") = Void;
override selector("unionHashTable:") = Void, NSHashTable;
override selector("unionSet:") = Void, NSSet;
override selector("uniqueID") = Id;
override selector("uniqueSpellDocumentTag") = CLong;
override selector("unlearnWord:") = Void, NSString;
override selector("unload") = Bool;
override selector("unlock") = Void;
override selector("unlockFocus") = Void;
override selector("unlockWithCondition:") = Void, CLong;
override selector("unmarkText") = Void;
override selector("unmountAndEjectDeviceAtPath:") = Bool, NSString;
override selector("unmountAndEjectDeviceAtURL:error:") = Bool, NSURL, Pointer[NSError];
override selector("unregisterClass:") = Void, Id;
override selector("unregisterDraggedTypes") = Void;
override selector("unregisterImageRepClass:") = Void, Id;
override selector("unregisterUserInterfaceItemSearchHandler:") = Void, Id;
override selector("unscheduleFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("unscript:") = Void, Id;
override selector("unscriptRange:") = Void, NSRange;
override selector("unsignedCharValue") = CUChar;
override selector("unsignedIntValue") = UInt;
override selector("unsignedIntegerValue") = CULong;
override selector("unsignedLongLongValue") = UInt64;
override selector("unsignedLongValue") = CULong;
override selector("unsignedShortValue") = UShort;
override selector("update") = Void;
override selector("updateAttachmentsFromPath:") = Void, NSString;
override selector("updateCell:") = Void, NSCell;
override selector("updateCellInside:") = Void, NSCell;
override selector("updateChangeCount:") = Void, CULong;
override selector("updateDragTypeRegistration") = Void;
override selector("updateFontPanel") = Void;
override selector("updateFromPMPageFormat") = Void;
override selector("updateFromPMPrintSettings") = Void;
override selector("updateFromPath:") = Bool, NSString;
override selector("updateFromPrintInfo") = Void;
override selector("updateInsertionPointStateAndRestartTimer:") = Void, Bool;
override selector("updatePanels") = Void;
override selector("updateRuler") = Void;
override selector("updateScroller") = Void;
override selector("updateSpellingPanelWithGrammarString:detail:") = Void, NSString, NSDictionary;
override selector("updateSpellingPanelWithMisspelledWord:") = Void, NSString;
override selector("updateTrackingAreas") = Void;
override selector("updateWindows") = Void;
override selector("updateWindowsItem:") = Void, NSWindow;
override selector("uppercaseLetterCharacterSet") = Id;
override selector("uppercaseString") = NSString;
override selector("uppercaseWord:") = Void, Id;
override selector("url") = NSURL;
override selector("usableParts") = CULong;
override selector("useAllLigatures:") = Void, Id;
override selector("useCredential:forAuthenticationChallenge:") = Void, NSURLCredential, NSURLAuthenticationChallenge;
override selector("useOptimizedDrawing:") = Void, Bool;
override selector("useStandardKerning:") = Void, Id;
override selector("useStandardLigatures:") = Void, Id;
override selector("useStoredAccessor") = Bool;
override selector("usedRectForTextContainer:") = NSRect, NSTextContainer;
override selector("user") = NSString;
override selector("userData") = RawPointer;
override selector("userDefaultsChanged") = Bool;
override selector("userFixedPitchFontOfSize:") = NSFont, Double;
override selector("userFontOfSize:") = NSFont, Double;
override selector("userInfo") = Id;
override selector("userInterfaceLayoutDirection") = CLong;
override selector("userKeyEquivalent") = NSString;
override selector("userPreferredLanguages") = NSArray;
override selector("userQuotesArrayForLanguage:") = NSArray, NSString;
override selector("userReplacementsDictionary") = NSDictionary;
override selector("userSpaceScaleFactor") = Double;
override selector("usesAlternatingRowBackgroundColors") = Bool;
override selector("usesDataSource") = Bool;
override selector("usesEPSOnResolutionMismatch") = Bool;
override selector("usesFeedbackWindow") = Bool;
override selector("usesFindPanel") = Bool;
override selector("usesFontLeading") = Bool;
override selector("usesFontPanel") = Bool;
override selector("usesGroupingSeparator") = Bool;
override selector("usesItemFromMenu") = Bool;
override selector("usesLazyFetching") = Bool;
override selector("usesRuler") = Bool;
override selector("usesScreenFonts") = Bool;
override selector("usesSignificantDigits") = Bool;
override selector("usesSingleLineMode") = Bool;
override selector("usesStrongWriteBarrier") = Bool;
override selector("usesThreadedAnimation") = Bool;
override selector("usesUserKeyEquivalents") = Bool;
override selector("usesWeakReadAndWriteBarriers") = Bool;
override selector("validAttributesForMarkedText") = NSArray;
override selector("validModesForFontPanel:") = CULong, NSFontPanel;
override selector("validRequestorForSendType:returnType:") = Id, NSString, NSString;
override selector("validate") = Void;
override selector("validateAndReturnError:") = Bool, Pointer[NSError];
override selector("validateEditing") = Void;
override selector("validateMenuItem:") = Bool, NSMenuItem;
override selector("validateToolbarItem:") = Bool, NSToolbarItem;
override selector("validateUserInterfaceItem:") = Bool, Id;
override selector("validateValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("validateValue:forKeyPath:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("validateVisibleColumns") = Void;
override selector("validateVisibleItems") = Void;
override selector("validationPredicates") = NSArray;
override selector("validationWarnings") = NSArray;
override selector("value") = Id;
override selector("value:withObjCType:") = NSValue, RawPointer, Pointer[CChar];
override selector("valueAtIndex:") = Double, CULong;
override selector("valueAtIndex:inPropertyWithKey:") = Id, CULong, NSString;
override selector("valueClassForBinding:") = Id, NSString;
override selector("valueForAttribute:") = Id, NSString;
override selector("valueForDimension:") = Double, CULong;
override selector("valueForHTTPHeaderField:") = NSString, NSString;
override selector("valueForKey:") = Id, NSString;
override selector("valueForKeyPath:") = Id, NSString;
override selector("valueForProperty:") = Id, NSString;
override selector("valueForUndefinedKey:") = Id, NSString;
override selector("valueListAttributes") = NSArray;
override selector("valueLists") = NSDictionary;
override selector("valueOfAttribute:forResultAtIndex:") = Id, NSString, CULong;
override selector("valuePointerFunctions") = NSPointerFunctions;
override selector("valueTransformerForName:") = NSValueTransformer, NSString;
override selector("valueTransformerName") = NSString;
override selector("valueTransformerNames") = NSArray;
override selector("valueTypeForDimension:") = CULong, CULong;
override selector("valueWithBytes:objCType:") = NSValue, RawPointer, Pointer[CChar];
override selector("valueWithCATransform3D:") = NSValue, CATransform3D;
override selector("valueWithName:inPropertyWithKey:") = Id, NSString, NSString;
override selector("valueWithNonretainedObject:") = NSValue, Id;
override selector("valueWithPoint:") = NSValue, NSPoint;
override selector("valueWithPointer:") = NSValue, RawPointer;
override selector("valueWithRange:") = NSValue, NSRange;
override selector("valueWithRect:") = NSValue, NSRect;
override selector("valueWithSize:") = NSValue, NSSize;
override selector("valueWithUniqueID:inPropertyWithKey:") = Id, Id, NSString;
override selector("valueWraps") = Bool;
override selector("values") = Id;
override selector("valuesForAttributes:") = NSDictionary, NSArray;
override selector("valuesForKeys:") = NSDictionary, NSArray;
override selector("variable") = NSString;
override selector("vectorWithString:") = CIVector, NSString;
override selector("vectorWithValues:count:") = CIVector, Pointer[Double], CULong;
override selector("vectorWithX:") = CIVector, Double;
override selector("vectorWithX:Y:") = CIVector, Double, Double;
override selector("vectorWithX:Y:Z:") = CIVector, Double, Double, Double;
override selector("vectorWithX:Y:Z:W:") = CIVector, Double, Double, Double, Double;
override selector("vendorDefined") = Id;
override selector("vendorID") = CULong;
override selector("vendorPointingDeviceType") = CULong;
override selector("version") = CLong;
override selector("versionForClassName:") = CLong, NSString;
override selector("versionHash") = NSData;
override selector("versionHashModifier") = NSString;
override selector("verticalAlignment") = CULong;
override selector("verticalLineScroll") = Double;
override selector("verticalMotionCanBeginDrag") = Bool;
override selector("verticalPageScroll") = Double;
override selector("verticalPagination") = CULong;
override selector("verticalRulerView") = NSRulerView;
override selector("verticalScroller") = NSScroller;
override selector("veryShortMonthSymbols") = NSArray;
override selector("veryShortStandaloneMonthSymbols") = NSArray;
override selector("veryShortStandaloneWeekdaySymbols") = NSArray;
override selector("veryShortWeekdaySymbols") = NSArray;
override selector("view") = Id;
override selector("view:stringForToolTip:point:userData:") = NSString, NSView, CLong, NSPoint, RawPointer;
override selector("viewAnimations") = NSArray;
override selector("viewBoundsChanged:") = Void, NSNotification;
override selector("viewDidEndLiveResize") = Void;
override selector("viewDidHide") = Void;
override selector("viewDidMoveToSuperview") = Void;
override selector("viewDidMoveToWindow") = Void;
override selector("viewDidUnhide") = Void;
override selector("viewFrameChanged:") = Void, NSNotification;
override selector("viewSizeChanged:") = Void, Id;
override selector("viewWillDraw") = Void;
override selector("viewWillMoveToSuperview:") = Void, NSView;
override selector("viewWillMoveToWindow:") = Void, NSWindow;
override selector("viewWillStartLiveResize") = Void;
override selector("viewWithTag:") = Id, CLong;
override selector("viewsNeedDisplay") = Bool;
override selector("visibilityPriority") = CLong;
override selector("visibleFrame") = NSRect;
override selector("visibleItems") = NSArray;
override selector("visibleRect") = NSRect;
override selector("voice") = NSString;
override selector("volatileDomainForName:") = NSDictionary, NSString;
override selector("volatileDomainNames") = NSArray;
override selector("volume") = Float;
override selector("wait") = Void;
override selector("waitForDataInBackgroundAndNotify") = Void;
override selector("waitForDataInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("waitUntilAllOperationsAreFinished") = Void;
override selector("waitUntilDate:") = Bool, NSDate;
override selector("waitUntilExit") = Void;
override selector("waitUntilFinished") = Void;
override selector("wantsDefaultClipping") = Bool;
override selector("wantsLayer") = Bool;
override selector("wantsNotificationForMarkedText") = Bool;
override selector("wantsPeriodicDraggingUpdates") = Bool;
override selector("wantsRestingTouches") = Bool;
override selector("wantsToDelayTextChangeNotifications") = Bool;
override selector("wantsToHandleMouseEvents") = Bool;
override selector("wantsToInterpretAllKeystrokes") = Bool;
override selector("wantsToTrackMouse") = Bool;
override selector("wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:") = Bool, NSEvent, NSRect, NSView, CULong;
override selector("warningValue") = Double;
override selector("week") = CLong;
override selector("weekday") = CLong;
override selector("weekdayOrdinal") = CLong;
override selector("weekdaySymbols") = NSArray;
override selector("weightOfFont:") = CLong, NSFont;
override selector("whiteColor") = NSColor;
override selector("whiteComponent") = Double;
override selector("whitespaceAndNewlineCharacterSet") = Id;
override selector("whitespaceCharacterSet") = Id;
override selector("width") = Double;
override selector("widthAdjustLimit") = Double;
override selector("widthForLayer:edge:") = Double, CLong, CULong;
override selector("widthForSegment:") = Double, CLong;
override selector("widthOfColumn:") = Double, CLong;
override selector("widthTracksTextView") = Bool;
override selector("widthValueTypeForLayer:edge:") = CULong, CLong, CULong;
override selector("willChange:valuesAtIndexes:forKey:") = Void, CULong, NSIndexSet, NSString;
override selector("willChangeValueForKey:") = Void, NSString;
override selector("willChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, CULong, NSSet;
override selector("willPresentError:") = NSError, NSError;
override selector("willRemoveSubview:") = Void, NSView;
override selector("willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRectPointer, NSRange, NSRectPointer, Pointer[Double];
override selector("windingRule") = CULong;
override selector("window") = Id;
override selector("window:shouldDragDocumentWithEvent:from:withPasteboard:") = Bool, NSWindow, NSEvent, NSPoint, NSPasteboard;
override selector("window:shouldPopUpDocumentPathMenu:") = Bool, NSWindow, NSMenu;
override selector("window:willPositionSheet:usingRect:") = NSRect, NSWindow, NSWindow, NSRect;
override selector("windowBackgroundColor") = NSColor;
override selector("windowController") = Id;
override selector("windowControllerDidLoadNib:") = Void, NSWindowController;
override selector("windowControllerWillLoadNib:") = Void, NSWindowController;
override selector("windowControllers") = NSArray;
override selector("windowDidBecomeKey:") = Void, NSNotification;
override selector("windowDidBecomeMain:") = Void, NSNotification;
override selector("windowDidChangeScreen:") = Void, NSNotification;
override selector("windowDidChangeScreenProfile:") = Void, NSNotification;
override selector("windowDidDeminiaturize:") = Void, NSNotification;
override selector("windowDidEndLiveResize:") = Void, NSNotification;
override selector("windowDidEndSheet:") = Void, NSNotification;
override selector("windowDidExpose:") = Void, NSNotification;
override selector("windowDidLoad") = Void;
override selector("windowDidMiniaturize:") = Void, NSNotification;
override selector("windowDidMove:") = Void, NSNotification;
override selector("windowDidResignKey:") = Void, NSNotification;
override selector("windowDidResignMain:") = Void, NSNotification;
override selector("windowDidResize:") = Void, NSNotification;
override selector("windowDidUpdate:") = Void, NSNotification;
override selector("windowForSheet") = NSWindow;
override selector("windowFrameAutosaveName") = NSString;
override selector("windowFrameColor") = NSColor;
override selector("windowFrameTextColor") = NSColor;
override selector("windowLevel") = CLong;
override selector("windowNibName") = NSString;
override selector("windowNibPath") = NSString;
override selector("windowNumber") = CLong;
override selector("windowNumberAtPoint:belowWindowWithWindowNumber:") = CLong, NSPoint, CLong;
override selector("windowNumbersWithOptions:") = NSArray, CULong;
override selector("windowRef") = RawPointer;
override selector("windowShouldClose:") = Bool, Id;
override selector("windowShouldZoom:toFrame:") = Bool, NSWindow, NSRect;
override selector("windowTitleForDocumentDisplayName:") = NSString, NSString;
override selector("windowWillBeginSheet:") = Void, NSNotification;
override selector("windowWillClose:") = Void, NSNotification;
override selector("windowWillLoad") = Void;
override selector("windowWillMiniaturize:") = Void, NSNotification;
override selector("windowWillMove:") = Void, NSNotification;
override selector("windowWillResize:toSize:") = NSSize, NSWindow, NSSize;
override selector("windowWillReturnFieldEditor:toObject:") = Id, NSWindow, Id;
override selector("windowWillReturnUndoManager:") = NSUndoManager, NSWindow;
override selector("windowWillStartLiveResize:") = Void, NSNotification;
override selector("windowWillUseStandardFrame:defaultFrame:") = NSRect, NSWindow, NSRect;
override selector("windowWithWindowNumber:") = NSWindow, CLong;
override selector("windows") = NSArray;
override selector("windowsLocaleCodeFromLocaleIdentifier:") = UInt, NSString;
override selector("windowsMenu") = NSMenu;
override selector("words") = NSArray;
override selector("worksWhenModal") = Bool;
override selector("wraps") = Bool;
override selector("writablePasteboardTypes") = NSArray;
override selector("writableTypes") = NSArray;
override selector("writableTypesForPasteboard:") = NSArray, NSPasteboard;
override selector("writableTypesForSaveOperation:") = NSArray, CULong;
override selector("write:maxLength:") = CLong, Pointer[CUChar], CULong;
override selector("writeBookmarkData:toURL:options:error:") = Bool, NSData, NSURL, CULong, Pointer[NSError];
override selector("writeData:") = Bool, NSData;
override selector("writeEPSInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
override selector("writeFileContents:") = Bool, NSString;
override selector("writeFileWrapper:") = Bool, NSFileWrapper;
override selector("writeObjects:") = Bool, NSArray;
override selector("writePDFInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
override selector("writePrintInfo") = Void;
override selector("writeProperty:forKey:") = Bool, Id, NSString;
override selector("writePropertyList:toStream:format:options:error:") = CLong, Id, NSOutputStream, CULong, CULong, Pointer[NSError];
override selector("writeRTFDToFile:atomically:") = Bool, NSString, Bool;
override selector("writeSafelyToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
override selector("writeSelectionToPasteboard:type:") = Bool, NSPasteboard, NSString;
override selector("writeSelectionToPasteboard:types:") = Bool, NSPasteboard, NSArray;
override selector("writeToFile:") = Bool, NSString;
override selector("writeToFile:atomically:") = Bool, NSString, Bool;
override selector("writeToFile:atomically:encoding:error:") = Bool, NSString, Bool, CULong, Pointer[NSError];
override selector("writeToFile:atomically:updateFilenames:") = Bool, NSString, Bool, Bool;
override selector("writeToFile:ofType:") = Bool, NSString, NSString;
override selector("writeToFile:ofType:originalFile:saveOperation:") = Bool, NSString, NSString, NSString, CULong;
override selector("writeToFile:options:error:") = Bool, NSString, CULong, Pointer[NSError];
override selector("writeToPasteboard:") = Void, NSPasteboard;
override selector("writeToURL:atomically:") = Bool, NSURL, Bool;
override selector("writeToURL:atomically:encoding:error:") = Bool, NSURL, Bool, CULong, Pointer[NSError];
override selector("writeToURL:ofType:") = Bool, NSURL, NSString;
override selector("writeToURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("writeToURL:ofType:forSaveOperation:originalContentsURL:error:") = Bool, NSURL, NSString, CULong, NSURL, Pointer[NSError];
override selector("writeToURL:options:error:") = Bool, NSURL, CULong, Pointer[NSError];
override selector("writeToURL:options:originalContentsURL:error:") = Bool, NSURL, CULong, NSURL, Pointer[NSError];
override selector("writeWithBackupToFile:ofType:saveOperation:") = Bool, NSString, NSString, CULong;
override selector("writingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override selector("xHeight") = Double;
override selector("yank:") = Void, Id;
override selector("year") = CLong;
override selector("yearOfCommonEra") = CLong;
override selector("years:months:days:hours:minutes:seconds:sinceDate:") = Void, Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], NSCalendarDate;
override selector("yellowColor") = NSColor;
override selector("yellowComponent") = Double;
override selector("zPosition") = Double;
override selector("zero") = NSDecimalNumber;
override selector("zeroSymbol") = NSString;
override selector("zone") = Pointer[NSZone];
override selector("zoom:") = Void, Id;

override externalInstanceMethod(#CIColor, "initWithColor:") = Id, NSColor;

override externalInstanceMethod(#CIImage, "initWithBitmapImageRep:") = Id, NSBitmapImageRep;
override externalInstanceMethod(#CIImage, "drawInRect:fromRect:operation:fraction:") = Void, NSRect, NSRect, CULong, Double;
override externalInstanceMethod(#CIImage, "drawAtPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;

record NSATSTypesetter = externalClass(NSTypesetter);
override externalClassMethod(#NSATSTypesetter, "sharedTypesetter") = Id;
override externalInstanceMethod(#NSATSTypesetter, "lineFragmentRectForProposedRect:remainingRect:") = NSRect, NSRect, NSRectPointer;

record NSActionCell = externalClass(NSCell);
override externalInstanceMethod(#NSActionCell, "target") = Id;
override externalInstanceMethod(#NSActionCell, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSActionCell, "action") = SelectorHandle;
override externalInstanceMethod(#NSActionCell, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSActionCell, "tag") = CLong;
override externalInstanceMethod(#NSActionCell, "setTag:") = Void, CLong;

override externalInstanceMethod(#NSAffineTransform, "transformBezierPath:") = NSBezierPath, NSBezierPath;
override externalInstanceMethod(#NSAffineTransform, "set") = Void;
override externalInstanceMethod(#NSAffineTransform, "concat") = Void;

record NSAlert = externalClass(NSObject);
override externalClassMethod(#NSAlert, "alertWithError:") = NSAlert, NSError;
override externalVarargClassMethod(#NSAlert, "alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:") = NSAlert, NSString, NSString, NSString, NSString, NSString;
override externalInstanceMethod(#NSAlert, "setMessageText:") = Void, NSString;
override externalInstanceMethod(#NSAlert, "setInformativeText:") = Void, NSString;
override externalInstanceMethod(#NSAlert, "messageText") = NSString;
override externalInstanceMethod(#NSAlert, "informativeText") = NSString;
override externalInstanceMethod(#NSAlert, "setIcon:") = Void, NSImage;
override externalInstanceMethod(#NSAlert, "icon") = NSImage;
override externalInstanceMethod(#NSAlert, "addButtonWithTitle:") = NSButton, NSString;
override externalInstanceMethod(#NSAlert, "buttons") = NSArray;
override externalInstanceMethod(#NSAlert, "setShowsHelp:") = Void, Bool;
override externalInstanceMethod(#NSAlert, "showsHelp") = Bool;
override externalInstanceMethod(#NSAlert, "setHelpAnchor:") = Void, NSString;
override externalInstanceMethod(#NSAlert, "helpAnchor") = NSString;
override externalInstanceMethod(#NSAlert, "setAlertStyle:") = Void, CULong;
override externalInstanceMethod(#NSAlert, "alertStyle") = CULong;
override externalInstanceMethod(#NSAlert, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSAlert, "delegate") = Id;
override externalInstanceMethod(#NSAlert, "setShowsSuppressionButton:") = Void, Bool;
override externalInstanceMethod(#NSAlert, "showsSuppressionButton") = Bool;
override externalInstanceMethod(#NSAlert, "suppressionButton") = NSButton;
override externalInstanceMethod(#NSAlert, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSAlert, "accessoryView") = NSView;
override externalInstanceMethod(#NSAlert, "layout") = Void;
override externalInstanceMethod(#NSAlert, "runModal") = CLong;
override externalInstanceMethod(#NSAlert, "beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSAlert, "window") = Id;

record NSAnimation = externalClass(NSObject);
override externalInstanceMethod(#NSAnimation, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSAnimation, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSAnimation, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSAnimation, "initWithDuration:animationCurve:") = Id, Double, CULong;
override externalInstanceMethod(#NSAnimation, "startAnimation") = Void;
override externalInstanceMethod(#NSAnimation, "stopAnimation") = Void;
override externalInstanceMethod(#NSAnimation, "isAnimating") = Bool;
override externalInstanceMethod(#NSAnimation, "currentProgress") = Float;
override externalInstanceMethod(#NSAnimation, "setCurrentProgress:") = Void, Float;
override externalInstanceMethod(#NSAnimation, "setDuration:") = Void, Double;
override externalInstanceMethod(#NSAnimation, "duration") = Double;
override externalInstanceMethod(#NSAnimation, "animationBlockingMode") = CULong;
override externalInstanceMethod(#NSAnimation, "setAnimationBlockingMode:") = Void, CULong;
override externalInstanceMethod(#NSAnimation, "setFrameRate:") = Void, Float;
override externalInstanceMethod(#NSAnimation, "frameRate") = Float;
override externalInstanceMethod(#NSAnimation, "setAnimationCurve:") = Void, CULong;
override externalInstanceMethod(#NSAnimation, "animationCurve") = CULong;
override externalInstanceMethod(#NSAnimation, "currentValue") = Float;
override externalInstanceMethod(#NSAnimation, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSAnimation, "delegate") = Id;
override externalInstanceMethod(#NSAnimation, "progressMarks") = NSArray;
override externalInstanceMethod(#NSAnimation, "setProgressMarks:") = Void, NSArray;
override externalInstanceMethod(#NSAnimation, "addProgressMark:") = Void, Float;
override externalInstanceMethod(#NSAnimation, "removeProgressMark:") = Void, Float;
override externalInstanceMethod(#NSAnimation, "startWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
override externalInstanceMethod(#NSAnimation, "stopWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
override externalInstanceMethod(#NSAnimation, "clearStartAnimation") = Void;
override externalInstanceMethod(#NSAnimation, "clearStopAnimation") = Void;
override externalInstanceMethod(#NSAnimation, "runLoopModesForAnimating") = NSArray;

record NSAnimationContext = externalClass(NSObject);
override externalClassMethod(#NSAnimationContext, "beginGrouping") = Void;
override externalClassMethod(#NSAnimationContext, "endGrouping") = Void;
override externalClassMethod(#NSAnimationContext, "currentContext") = NSAnimationContext;
override externalInstanceMethod(#NSAnimationContext, "setDuration:") = Void, Double;
override externalInstanceMethod(#NSAnimationContext, "duration") = Double;

override externalInstanceMethod(#NSAppleScript, "richTextSource") = NSAttributedString;

record NSApplication = externalClass(NSResponder);
override externalInstanceMethod(#NSApplication, "validateUserInterfaceItem:") = Bool, Id;
override externalClassMethod(#NSApplication, "sharedApplication") = NSApplication;
override externalInstanceMethod(#NSApplication, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSApplication, "delegate") = Id;
override externalInstanceMethod(#NSApplication, "context") = NSGraphicsContext;
override externalInstanceMethod(#NSApplication, "hide:") = Void, Id;
override externalInstanceMethod(#NSApplication, "unhide:") = Void, Id;
override externalInstanceMethod(#NSApplication, "unhideWithoutActivation") = Void;
override externalInstanceMethod(#NSApplication, "windowWithWindowNumber:") = NSWindow, CLong;
override externalInstanceMethod(#NSApplication, "mainWindow") = NSWindow;
override externalInstanceMethod(#NSApplication, "keyWindow") = NSWindow;
override externalInstanceMethod(#NSApplication, "isActive") = Bool;
override externalInstanceMethod(#NSApplication, "isHidden") = Bool;
override externalInstanceMethod(#NSApplication, "isRunning") = Bool;
override externalInstanceMethod(#NSApplication, "deactivate") = Void;
override externalInstanceMethod(#NSApplication, "activateIgnoringOtherApps:") = Void, Bool;
override externalInstanceMethod(#NSApplication, "hideOtherApplications:") = Void, Id;
override externalInstanceMethod(#NSApplication, "unhideAllApplications:") = Void, Id;
override externalInstanceMethod(#NSApplication, "finishLaunching") = Void;
override externalInstanceMethod(#NSApplication, "run") = Void;
override externalInstanceMethod(#NSApplication, "runModalForWindow:") = CLong, NSWindow;
override externalInstanceMethod(#NSApplication, "stop:") = Void, Id;
override externalInstanceMethod(#NSApplication, "stopModal") = Void;
override externalInstanceMethod(#NSApplication, "stopModalWithCode:") = Void, CLong;
override externalInstanceMethod(#NSApplication, "abortModal") = Void;
override externalInstanceMethod(#NSApplication, "modalWindow") = NSWindow;
override externalInstanceMethod(#NSApplication, "beginModalSessionForWindow:") = NSModalSession, NSWindow;
override externalInstanceMethod(#NSApplication, "runModalSession:") = CLong, NSModalSession;
override externalInstanceMethod(#NSApplication, "endModalSession:") = Void, NSModalSession;
override externalInstanceMethod(#NSApplication, "terminate:") = Void, Id;
override externalInstanceMethod(#NSApplication, "requestUserAttention:") = CLong, CULong;
override externalInstanceMethod(#NSApplication, "cancelUserAttentionRequest:") = Void, CLong;
override externalInstanceMethod(#NSApplication, "beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSApplication, "endSheet:") = Void, NSWindow;
override externalInstanceMethod(#NSApplication, "endSheet:returnCode:") = Void, NSWindow, CLong;
override externalInstanceMethod(#NSApplication, "nextEventMatchingMask:untilDate:inMode:dequeue:") = NSEvent, CULong, NSDate, NSString, Bool;
override externalInstanceMethod(#NSApplication, "discardEventsMatchingMask:beforeEvent:") = Void, CULong, NSEvent;
override externalInstanceMethod(#NSApplication, "postEvent:atStart:") = Void, NSEvent, Bool;
override externalInstanceMethod(#NSApplication, "currentEvent") = NSEvent;
override externalInstanceMethod(#NSApplication, "sendEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSApplication, "preventWindowOrdering") = Void;
override externalInstanceMethod(#NSApplication, "makeWindowsPerform:inOrder:") = NSWindow, SelectorHandle, Bool;
override externalInstanceMethod(#NSApplication, "windows") = NSArray;
override externalInstanceMethod(#NSApplication, "setWindowsNeedUpdate:") = Void, Bool;
override externalInstanceMethod(#NSApplication, "updateWindows") = Void;
override externalInstanceMethod(#NSApplication, "setMainMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSApplication, "mainMenu") = NSMenu;
override externalInstanceMethod(#NSApplication, "setHelpMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSApplication, "helpMenu") = NSMenu;
override externalInstanceMethod(#NSApplication, "setApplicationIconImage:") = Void, NSImage;
override externalInstanceMethod(#NSApplication, "applicationIconImage") = NSImage;
override externalInstanceMethod(#NSApplication, "activationPolicy") = CLong;
override externalInstanceMethod(#NSApplication, "setActivationPolicy:") = Bool, CLong;
override externalInstanceMethod(#NSApplication, "dockTile") = NSDockTile;
override externalInstanceMethod(#NSApplication, "sendAction:to:from:") = Bool, SelectorHandle, Id, Id;
override externalInstanceMethod(#NSApplication, "targetForAction:") = Id, SelectorHandle;
override externalInstanceMethod(#NSApplication, "targetForAction:to:from:") = Id, SelectorHandle, Id, Id;
override externalInstanceMethod(#NSApplication, "tryToPerform:with:") = Bool, SelectorHandle, Id;
override externalInstanceMethod(#NSApplication, "validRequestorForSendType:returnType:") = Id, NSString, NSString;
override externalInstanceMethod(#NSApplication, "reportException:") = Void, NSException;
override externalClassMethod(#NSApplication, "detachDrawingThread:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
override externalInstanceMethod(#NSApplication, "replyToApplicationShouldTerminate:") = Void, Bool;
override externalInstanceMethod(#NSApplication, "replyToOpenOrPrint:") = Void, CULong;
override externalInstanceMethod(#NSApplication, "orderFrontCharacterPalette:") = Void, Id;
override externalInstanceMethod(#NSApplication, "presentationOptions") = CULong;
override externalInstanceMethod(#NSApplication, "setPresentationOptions:") = Void, CULong;
override externalInstanceMethod(#NSApplication, "currentSystemPresentationOptions") = CULong;
override externalInstanceMethod(#NSApplication, "setWindowsMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSApplication, "windowsMenu") = NSMenu;
override externalInstanceMethod(#NSApplication, "arrangeInFront:") = Void, Id;
override externalInstanceMethod(#NSApplication, "removeWindowsItem:") = Void, NSWindow;
override externalInstanceMethod(#NSApplication, "addWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
override externalInstanceMethod(#NSApplication, "changeWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
override externalInstanceMethod(#NSApplication, "updateWindowsItem:") = Void, NSWindow;
override externalInstanceMethod(#NSApplication, "miniaturizeAll:") = Void, Id;
override externalInstanceMethod(#NSApplication, "isFullKeyboardAccessEnabled") = Bool;
override externalInstanceMethod(#NSApplication, "setServicesMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSApplication, "servicesMenu") = NSMenu;
override externalInstanceMethod(#NSApplication, "registerServicesMenuSendTypes:returnTypes:") = Void, NSArray, NSArray;
override externalInstanceMethod(#NSApplication, "setServicesProvider:") = Void, Id;
override externalInstanceMethod(#NSApplication, "servicesProvider") = Id;
override externalInstanceMethod(#NSApplication, "orderFrontStandardAboutPanel:") = Void, Id;
override externalInstanceMethod(#NSApplication, "orderFrontStandardAboutPanelWithOptions:") = Void, NSDictionary;
override externalInstanceMethod(#NSApplication, "userInterfaceLayoutDirection") = CLong;
override externalInstanceMethod(#NSApplication, "runModalForWindow:relativeToWindow:") = CLong, NSWindow, NSWindow;
override externalInstanceMethod(#NSApplication, "beginModalSessionForWindow:relativeToWindow:") = NSModalSession, NSWindow, NSWindow;
override externalInstanceMethod(#NSApplication, "application:printFiles:") = Void, NSApplication, NSArray;
override externalInstanceMethod(#NSApplication, "orderFrontColorPanel:") = Void, Id;
override externalInstanceMethod(#NSApplication, "activateContextHelpMode:") = Void, Id;
override externalInstanceMethod(#NSApplication, "showHelp:") = Void, Id;
override externalInstanceMethod(#NSApplication, "runPageLayout:") = Void, Id;
override externalInstanceMethod(#NSApplication, "orderedDocuments") = NSArray;
override externalInstanceMethod(#NSApplication, "orderedWindows") = NSArray;
override externalInstanceMethod(#NSApplication, "registerUserInterfaceItemSearchHandler:") = Void, Id;
override externalInstanceMethod(#NSApplication, "unregisterUserInterfaceItemSearchHandler:") = Void, Id;
override externalInstanceMethod(#NSApplication, "searchString:inUserInterfaceItemString:searchRange:foundRange:") = Bool, NSString, NSString, NSRange, Pointer[NSRange];

record NSArrayController = externalClass(NSObjectController);
override externalInstanceMethod(#NSArrayController, "rearrangeObjects") = Void;
override externalInstanceMethod(#NSArrayController, "setAutomaticallyRearrangesObjects:") = Void, Bool;
override externalInstanceMethod(#NSArrayController, "automaticallyRearrangesObjects") = Bool;
override externalInstanceMethod(#NSArrayController, "automaticRearrangementKeyPaths") = NSArray;
override externalInstanceMethod(#NSArrayController, "didChangeArrangementCriteria") = Void;
override externalInstanceMethod(#NSArrayController, "setSortDescriptors:") = Void, NSArray;
override externalInstanceMethod(#NSArrayController, "sortDescriptors") = NSArray;
override externalInstanceMethod(#NSArrayController, "setFilterPredicate:") = Void, NSPredicate;
override externalInstanceMethod(#NSArrayController, "filterPredicate") = NSPredicate;
override externalInstanceMethod(#NSArrayController, "setClearsFilterPredicateOnInsertion:") = Void, Bool;
override externalInstanceMethod(#NSArrayController, "clearsFilterPredicateOnInsertion") = Bool;
override externalInstanceMethod(#NSArrayController, "arrangeObjects:") = NSArray, NSArray;
override externalInstanceMethod(#NSArrayController, "arrangedObjects") = Id;
override externalInstanceMethod(#NSArrayController, "setAvoidsEmptySelection:") = Void, Bool;
override externalInstanceMethod(#NSArrayController, "avoidsEmptySelection") = Bool;
override externalInstanceMethod(#NSArrayController, "setPreservesSelection:") = Void, Bool;
override externalInstanceMethod(#NSArrayController, "preservesSelection") = Bool;
override externalInstanceMethod(#NSArrayController, "setSelectsInsertedObjects:") = Void, Bool;
override externalInstanceMethod(#NSArrayController, "selectsInsertedObjects") = Bool;
override externalInstanceMethod(#NSArrayController, "setAlwaysUsesMultipleValuesMarker:") = Void, Bool;
override externalInstanceMethod(#NSArrayController, "alwaysUsesMultipleValuesMarker") = Bool;
override externalInstanceMethod(#NSArrayController, "setSelectionIndexes:") = Bool, NSIndexSet;
override externalInstanceMethod(#NSArrayController, "selectionIndexes") = NSIndexSet;
override externalInstanceMethod(#NSArrayController, "setSelectionIndex:") = Bool, CULong;
override externalInstanceMethod(#NSArrayController, "selectionIndex") = CULong;
override externalInstanceMethod(#NSArrayController, "addSelectionIndexes:") = Bool, NSIndexSet;
override externalInstanceMethod(#NSArrayController, "removeSelectionIndexes:") = Bool, NSIndexSet;
override externalInstanceMethod(#NSArrayController, "setSelectedObjects:") = Bool, NSArray;
override externalInstanceMethod(#NSArrayController, "selectedObjects") = NSArray;
override externalInstanceMethod(#NSArrayController, "addSelectedObjects:") = Bool, NSArray;
override externalInstanceMethod(#NSArrayController, "removeSelectedObjects:") = Bool, NSArray;
override externalInstanceMethod(#NSArrayController, "add:") = Void, Id;
override externalInstanceMethod(#NSArrayController, "remove:") = Void, Id;
override externalInstanceMethod(#NSArrayController, "insert:") = Void, Id;
override externalInstanceMethod(#NSArrayController, "canInsert") = Bool;
override externalInstanceMethod(#NSArrayController, "selectNext:") = Void, Id;
override externalInstanceMethod(#NSArrayController, "selectPrevious:") = Void, Id;
override externalInstanceMethod(#NSArrayController, "canSelectNext") = Bool;
override externalInstanceMethod(#NSArrayController, "canSelectPrevious") = Bool;
override externalInstanceMethod(#NSArrayController, "addObject:") = Void, Id;
override externalInstanceMethod(#NSArrayController, "addObjects:") = Void, NSArray;
override externalInstanceMethod(#NSArrayController, "insertObject:atArrangedObjectIndex:") = Void, Id, CULong;
override externalInstanceMethod(#NSArrayController, "insertObjects:atArrangedObjectIndexes:") = Void, NSArray, NSIndexSet;
override externalInstanceMethod(#NSArrayController, "removeObjectAtArrangedObjectIndex:") = Void, CULong;
override externalInstanceMethod(#NSArrayController, "removeObjectsAtArrangedObjectIndexes:") = Void, NSIndexSet;
override externalInstanceMethod(#NSArrayController, "removeObject:") = Void, Id;
override externalInstanceMethod(#NSArrayController, "removeObjects:") = Void, NSArray;

override externalInstanceMethod(#NSAttributedString, "fontAttributesInRange:") = NSDictionary, NSRange;
override externalInstanceMethod(#NSAttributedString, "rulerAttributesInRange:") = NSDictionary, NSRange;
override externalInstanceMethod(#NSAttributedString, "containsAttachments") = Bool;
override externalInstanceMethod(#NSAttributedString, "lineBreakBeforeIndex:withinRange:") = CULong, CULong, NSRange;
override externalInstanceMethod(#NSAttributedString, "lineBreakByHyphenatingBeforeIndex:withinRange:") = CULong, CULong, NSRange;
override externalInstanceMethod(#NSAttributedString, "doubleClickAtIndex:") = NSRange, CULong;
override externalInstanceMethod(#NSAttributedString, "nextWordFromIndex:forward:") = CULong, CULong, Bool;
override externalInstanceMethod(#NSAttributedString, "URLAtIndex:effectiveRange:") = NSURL, CULong, NSRangePointer;
override externalClassMethod(#NSAttributedString, "textTypes") = NSArray;
override externalClassMethod(#NSAttributedString, "textUnfilteredTypes") = NSArray;
override externalInstanceMethod(#NSAttributedString, "rangeOfTextBlock:atIndex:") = NSRange, NSTextBlock, CULong;
override externalInstanceMethod(#NSAttributedString, "rangeOfTextTable:atIndex:") = NSRange, NSTextTable, CULong;
override externalInstanceMethod(#NSAttributedString, "rangeOfTextList:atIndex:") = NSRange, NSTextList, CULong;
override externalInstanceMethod(#NSAttributedString, "itemNumberInTextList:atIndex:") = CLong, NSTextList, CULong;
override externalInstanceMethod(#NSAttributedString, "initWithURL:options:documentAttributes:error:") = Id, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override externalInstanceMethod(#NSAttributedString, "initWithData:options:documentAttributes:error:") = Id, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override externalInstanceMethod(#NSAttributedString, "initWithPath:documentAttributes:") = Id, NSString, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithURL:documentAttributes:") = Id, NSURL, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithRTF:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithRTFD:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithHTML:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithHTML:baseURL:documentAttributes:") = Id, NSData, NSURL, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithDocFormat:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithHTML:options:documentAttributes:") = Id, NSData, NSDictionary, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "initWithRTFDFileWrapper:documentAttributes:") = Id, NSFileWrapper, Pointer[NSDictionary];
override externalInstanceMethod(#NSAttributedString, "dataFromRange:documentAttributes:error:") = NSData, NSRange, NSDictionary, Pointer[NSError];
override externalInstanceMethod(#NSAttributedString, "fileWrapperFromRange:documentAttributes:error:") = NSFileWrapper, NSRange, NSDictionary, Pointer[NSError];
override externalInstanceMethod(#NSAttributedString, "RTFFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override externalInstanceMethod(#NSAttributedString, "RTFDFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override externalInstanceMethod(#NSAttributedString, "RTFDFileWrapperFromRange:documentAttributes:") = NSFileWrapper, NSRange, NSDictionary;
override externalInstanceMethod(#NSAttributedString, "docFormatFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override externalClassMethod(#NSAttributedString, "textFileTypes") = NSArray;
override externalClassMethod(#NSAttributedString, "textPasteboardTypes") = NSArray;
override externalClassMethod(#NSAttributedString, "textUnfilteredFileTypes") = NSArray;
override externalClassMethod(#NSAttributedString, "textUnfilteredPasteboardTypes") = NSArray;
override externalClassMethod(#NSAttributedString, "attributedStringWithAttachment:") = NSAttributedString, NSTextAttachment;
override externalInstanceMethod(#NSAttributedString, "size") = NSSize;
override externalInstanceMethod(#NSAttributedString, "drawAtPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSAttributedString, "drawInRect:") = Void, NSRect;
override externalInstanceMethod(#NSAttributedString, "drawWithRect:options:") = Void, NSRect, CLong;
override externalInstanceMethod(#NSAttributedString, "boundingRectWithSize:options:") = NSRect, NSSize, CLong;

record NSBezierPath = externalClass(NSObject);
override externalInstanceMethod(#NSBezierPath, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSBezierPath, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSBezierPath, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSBezierPath, "bezierPath") = NSBezierPath;
override externalClassMethod(#NSBezierPath, "bezierPathWithRect:") = NSBezierPath, NSRect;
override externalClassMethod(#NSBezierPath, "bezierPathWithOvalInRect:") = NSBezierPath, NSRect;
override externalClassMethod(#NSBezierPath, "bezierPathWithRoundedRect:xRadius:yRadius:") = NSBezierPath, NSRect, Double, Double;
override externalClassMethod(#NSBezierPath, "fillRect:") = Void, NSRect;
override externalClassMethod(#NSBezierPath, "strokeRect:") = Void, NSRect;
override externalClassMethod(#NSBezierPath, "clipRect:") = Void, NSRect;
override externalClassMethod(#NSBezierPath, "strokeLineFromPoint:toPoint:") = Void, NSPoint, NSPoint;
override externalClassMethod(#NSBezierPath, "drawPackedGlyphs:atPoint:") = Void, Pointer[CChar], NSPoint;
override externalClassMethod(#NSBezierPath, "setDefaultMiterLimit:") = Void, Double;
override externalClassMethod(#NSBezierPath, "defaultMiterLimit") = Double;
override externalClassMethod(#NSBezierPath, "setDefaultFlatness:") = Void, Double;
override externalClassMethod(#NSBezierPath, "defaultFlatness") = Double;
override externalClassMethod(#NSBezierPath, "setDefaultWindingRule:") = Void, CULong;
override externalClassMethod(#NSBezierPath, "defaultWindingRule") = CULong;
override externalClassMethod(#NSBezierPath, "setDefaultLineCapStyle:") = Void, CULong;
override externalClassMethod(#NSBezierPath, "defaultLineCapStyle") = CULong;
override externalClassMethod(#NSBezierPath, "setDefaultLineJoinStyle:") = Void, CULong;
override externalClassMethod(#NSBezierPath, "defaultLineJoinStyle") = CULong;
override externalClassMethod(#NSBezierPath, "setDefaultLineWidth:") = Void, Double;
override externalClassMethod(#NSBezierPath, "defaultLineWidth") = Double;
override externalInstanceMethod(#NSBezierPath, "moveToPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSBezierPath, "lineToPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSBezierPath, "curveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
override externalInstanceMethod(#NSBezierPath, "closePath") = Void;
override externalInstanceMethod(#NSBezierPath, "removeAllPoints") = Void;
override externalInstanceMethod(#NSBezierPath, "relativeMoveToPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSBezierPath, "relativeLineToPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSBezierPath, "relativeCurveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
override externalInstanceMethod(#NSBezierPath, "lineWidth") = Double;
override externalInstanceMethod(#NSBezierPath, "setLineWidth:") = Void, Double;
override externalInstanceMethod(#NSBezierPath, "lineCapStyle") = CULong;
override externalInstanceMethod(#NSBezierPath, "setLineCapStyle:") = Void, CULong;
override externalInstanceMethod(#NSBezierPath, "lineJoinStyle") = CULong;
override externalInstanceMethod(#NSBezierPath, "setLineJoinStyle:") = Void, CULong;
override externalInstanceMethod(#NSBezierPath, "windingRule") = CULong;
override externalInstanceMethod(#NSBezierPath, "setWindingRule:") = Void, CULong;
override externalInstanceMethod(#NSBezierPath, "miterLimit") = Double;
override externalInstanceMethod(#NSBezierPath, "setMiterLimit:") = Void, Double;
override externalInstanceMethod(#NSBezierPath, "flatness") = Double;
override externalInstanceMethod(#NSBezierPath, "setFlatness:") = Void, Double;
override externalInstanceMethod(#NSBezierPath, "getLineDash:count:phase:") = Void, Pointer[Double], Pointer[CLong], Pointer[Double];
override externalInstanceMethod(#NSBezierPath, "setLineDash:count:phase:") = Void, Pointer[Double], CLong, Double;
override externalInstanceMethod(#NSBezierPath, "stroke") = Void;
override externalInstanceMethod(#NSBezierPath, "fill") = Void;
override externalInstanceMethod(#NSBezierPath, "addClip") = Void;
override externalInstanceMethod(#NSBezierPath, "setClip") = Void;
override externalInstanceMethod(#NSBezierPath, "bezierPathByFlatteningPath") = NSBezierPath;
override externalInstanceMethod(#NSBezierPath, "bezierPathByReversingPath") = NSBezierPath;
override externalInstanceMethod(#NSBezierPath, "transformUsingAffineTransform:") = Void, NSAffineTransform;
override externalInstanceMethod(#NSBezierPath, "isEmpty") = Bool;
override externalInstanceMethod(#NSBezierPath, "currentPoint") = NSPoint;
override externalInstanceMethod(#NSBezierPath, "controlPointBounds") = NSRect;
override externalInstanceMethod(#NSBezierPath, "bounds") = NSRect;
override externalInstanceMethod(#NSBezierPath, "elementCount") = CLong;
override externalInstanceMethod(#NSBezierPath, "elementAtIndex:associatedPoints:") = CULong, CLong, NSPointArray;
override externalInstanceMethod(#NSBezierPath, "elementAtIndex:") = CULong, CLong;
override externalInstanceMethod(#NSBezierPath, "setAssociatedPoints:atIndex:") = Void, NSPointArray, CLong;
override externalInstanceMethod(#NSBezierPath, "appendBezierPath:") = Void, NSBezierPath;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithRect:") = Void, NSRect;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithPoints:count:") = Void, NSPointArray, CLong;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithOvalInRect:") = Void, NSRect;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:") = Void, NSPoint, Double, Double, Double, Bool;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:") = Void, NSPoint, Double, Double, Double;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithArcFromPoint:toPoint:radius:") = Void, NSPoint, NSPoint, Double;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithGlyph:inFont:") = Void, UInt, NSFont;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithGlyphs:count:inFont:") = Void, Pointer[UInt], CLong, NSFont;
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithPackedGlyphs:") = Void, Pointer[CChar];
override externalInstanceMethod(#NSBezierPath, "appendBezierPathWithRoundedRect:xRadius:yRadius:") = Void, NSRect, Double, Double;
override externalInstanceMethod(#NSBezierPath, "containsPoint:") = Bool, NSPoint;
override externalInstanceMethod(#NSBezierPath, "cachesBezierPath") = Bool;
override externalInstanceMethod(#NSBezierPath, "setCachesBezierPath:") = Void, Bool;

record NSBitmapImageRep = externalClass(NSImageRep);
override externalInstanceMethod(#NSBitmapImageRep, "initWithFocusedViewRect:") = Id, NSRect;
override externalInstanceMethod(#NSBitmapImageRep, "initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CLong, CLong;
override externalInstanceMethod(#NSBitmapImageRep, "initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CULong, CLong, CLong;
override externalInstanceMethod(#NSBitmapImageRep, "initWithCGImage:") = Id, CGImageRef;
override externalInstanceMethod(#NSBitmapImageRep, "initWithCIImage:") = Id, CIImage;
override externalClassMethod(#NSBitmapImageRep, "imageRepsWithData:") = NSArray, NSData;
override externalClassMethod(#NSBitmapImageRep, "imageRepWithData:") = Id, NSData;
override externalInstanceMethod(#NSBitmapImageRep, "initWithData:") = Id, NSData;
override externalInstanceMethod(#NSBitmapImageRep, "bitmapData") = Pointer[CUChar];
override externalInstanceMethod(#NSBitmapImageRep, "getBitmapDataPlanes:") = Void, Pointer[Pointer[CUChar]];
override externalInstanceMethod(#NSBitmapImageRep, "isPlanar") = Bool;
override externalInstanceMethod(#NSBitmapImageRep, "samplesPerPixel") = CLong;
override externalInstanceMethod(#NSBitmapImageRep, "bitsPerPixel") = CLong;
override externalInstanceMethod(#NSBitmapImageRep, "bytesPerRow") = CLong;
override externalInstanceMethod(#NSBitmapImageRep, "bytesPerPlane") = CLong;
override externalInstanceMethod(#NSBitmapImageRep, "numberOfPlanes") = CLong;
override externalInstanceMethod(#NSBitmapImageRep, "bitmapFormat") = CULong;
override externalInstanceMethod(#NSBitmapImageRep, "getCompression:factor:") = Void, Pointer[CULong], Pointer[Float];
override externalInstanceMethod(#NSBitmapImageRep, "setCompression:factor:") = Void, CULong, Float;
override externalInstanceMethod(#NSBitmapImageRep, "TIFFRepresentation") = NSData;
override externalInstanceMethod(#NSBitmapImageRep, "TIFFRepresentationUsingCompression:factor:") = NSData, CULong, Float;
override externalClassMethod(#NSBitmapImageRep, "TIFFRepresentationOfImageRepsInArray:") = NSData, NSArray;
override externalClassMethod(#NSBitmapImageRep, "TIFFRepresentationOfImageRepsInArray:usingCompression:factor:") = NSData, NSArray, CULong, Float;
override externalClassMethod(#NSBitmapImageRep, "getTIFFCompressionTypes:count:") = Void, Pointer[Pointer[CULong]], Pointer[CLong];
override externalClassMethod(#NSBitmapImageRep, "localizedNameForTIFFCompressionType:") = NSString, CULong;
override externalInstanceMethod(#NSBitmapImageRep, "canBeCompressedUsing:") = Bool, CULong;
override externalInstanceMethod(#NSBitmapImageRep, "colorizeByMappingGray:toColor:blackMapping:whiteMapping:") = Void, Double, NSColor, NSColor, NSColor;
override externalInstanceMethod(#NSBitmapImageRep, "initForIncrementalLoad") = Id;
override externalInstanceMethod(#NSBitmapImageRep, "incrementalLoadFromData:complete:") = CLong, NSData, Bool;
override externalInstanceMethod(#NSBitmapImageRep, "setColor:atX:y:") = Void, NSColor, CLong, CLong;
override externalInstanceMethod(#NSBitmapImageRep, "colorAtX:y:") = NSColor, CLong, CLong;
override externalInstanceMethod(#NSBitmapImageRep, "getPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
override externalInstanceMethod(#NSBitmapImageRep, "setPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
override externalInstanceMethod(#NSBitmapImageRep, "CGImage") = CGImageRef;
override externalInstanceMethod(#NSBitmapImageRep, "colorSpace") = NSColorSpace;
override externalInstanceMethod(#NSBitmapImageRep, "bitmapImageRepByConvertingToColorSpace:renderingIntent:") = NSBitmapImageRep, NSColorSpace, CLong;
override externalInstanceMethod(#NSBitmapImageRep, "bitmapImageRepByRetaggingWithColorSpace:") = NSBitmapImageRep, NSColorSpace;
override externalClassMethod(#NSBitmapImageRep, "representationOfImageRepsInArray:usingType:properties:") = NSData, NSArray, CULong, NSDictionary;
override externalInstanceMethod(#NSBitmapImageRep, "representationUsingType:properties:") = NSData, CULong, NSDictionary;
override externalInstanceMethod(#NSBitmapImageRep, "setProperty:withValue:") = Void, NSString, Id;
override externalInstanceMethod(#NSBitmapImageRep, "valueForProperty:") = Id, NSString;

record NSBox = externalClass(NSView);
override externalInstanceMethod(#NSBox, "borderType") = CULong;
override externalInstanceMethod(#NSBox, "titlePosition") = CULong;
override externalInstanceMethod(#NSBox, "setBorderType:") = Void, CULong;
override externalInstanceMethod(#NSBox, "setBoxType:") = Void, CULong;
override externalInstanceMethod(#NSBox, "boxType") = CULong;
override externalInstanceMethod(#NSBox, "setTitlePosition:") = Void, CULong;
override externalInstanceMethod(#NSBox, "title") = NSString;
override externalInstanceMethod(#NSBox, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSBox, "titleFont") = NSFont;
override externalInstanceMethod(#NSBox, "setTitleFont:") = Void, NSFont;
override externalInstanceMethod(#NSBox, "borderRect") = NSRect;
override externalInstanceMethod(#NSBox, "titleRect") = NSRect;
override externalInstanceMethod(#NSBox, "titleCell") = Id;
override externalInstanceMethod(#NSBox, "sizeToFit") = Void;
override externalInstanceMethod(#NSBox, "contentViewMargins") = NSSize;
override externalInstanceMethod(#NSBox, "setContentViewMargins:") = Void, NSSize;
override externalInstanceMethod(#NSBox, "setFrameFromContentFrame:") = Void, NSRect;
override externalInstanceMethod(#NSBox, "contentView") = Id;
override externalInstanceMethod(#NSBox, "setContentView:") = Void, NSView;
override externalInstanceMethod(#NSBox, "isTransparent") = Bool;
override externalInstanceMethod(#NSBox, "setTransparent:") = Void, Bool;
override externalInstanceMethod(#NSBox, "setTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSBox, "borderWidth") = Double;
override externalInstanceMethod(#NSBox, "setBorderWidth:") = Void, Double;
override externalInstanceMethod(#NSBox, "cornerRadius") = Double;
override externalInstanceMethod(#NSBox, "setCornerRadius:") = Void, Double;
override externalInstanceMethod(#NSBox, "borderColor") = NSColor;
override externalInstanceMethod(#NSBox, "setBorderColor:") = Void, NSColor;
override externalInstanceMethod(#NSBox, "fillColor") = NSColor;
override externalInstanceMethod(#NSBox, "setFillColor:") = Void, NSColor;

record NSBrowser = externalClass(NSControl);
override externalClassMethod(#NSBrowser, "cellClass") = Id;
override externalInstanceMethod(#NSBrowser, "loadColumnZero") = Void;
override externalInstanceMethod(#NSBrowser, "isLoaded") = Bool;
override externalInstanceMethod(#NSBrowser, "setDoubleAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSBrowser, "doubleAction") = SelectorHandle;
override externalInstanceMethod(#NSBrowser, "setMatrixClass:") = Void, Id;
override externalInstanceMethod(#NSBrowser, "matrixClass") = Id;
override externalInstanceMethod(#NSBrowser, "setCellClass:") = Void, Id;
override externalInstanceMethod(#NSBrowser, "setCellPrototype:") = Void, NSCell;
override externalInstanceMethod(#NSBrowser, "cellPrototype") = Id;
override externalInstanceMethod(#NSBrowser, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSBrowser, "delegate") = Id;
override externalInstanceMethod(#NSBrowser, "setReusesColumns:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "reusesColumns") = Bool;
override externalInstanceMethod(#NSBrowser, "setHasHorizontalScroller:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "hasHorizontalScroller") = Bool;
override externalInstanceMethod(#NSBrowser, "setAutohidesScroller:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "autohidesScroller") = Bool;
override externalInstanceMethod(#NSBrowser, "setSeparatesColumns:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "separatesColumns") = Bool;
override externalInstanceMethod(#NSBrowser, "setTitled:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "isTitled") = Bool;
override externalInstanceMethod(#NSBrowser, "setMinColumnWidth:") = Void, Double;
override externalInstanceMethod(#NSBrowser, "minColumnWidth") = Double;
override externalInstanceMethod(#NSBrowser, "setMaxVisibleColumns:") = Void, CLong;
override externalInstanceMethod(#NSBrowser, "maxVisibleColumns") = CLong;
override externalInstanceMethod(#NSBrowser, "setAllowsMultipleSelection:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "allowsMultipleSelection") = Bool;
override externalInstanceMethod(#NSBrowser, "setAllowsBranchSelection:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "allowsBranchSelection") = Bool;
override externalInstanceMethod(#NSBrowser, "setAllowsEmptySelection:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "allowsEmptySelection") = Bool;
override externalInstanceMethod(#NSBrowser, "setTakesTitleFromPreviousColumn:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "takesTitleFromPreviousColumn") = Bool;
override externalInstanceMethod(#NSBrowser, "setSendsActionOnArrowKeys:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "sendsActionOnArrowKeys") = Bool;
override externalInstanceMethod(#NSBrowser, "itemAtIndexPath:") = Id, NSIndexPath;
override externalInstanceMethod(#NSBrowser, "itemAtRow:inColumn:") = Id, CLong, CLong;
override externalInstanceMethod(#NSBrowser, "indexPathForColumn:") = NSIndexPath, CLong;
override externalInstanceMethod(#NSBrowser, "isLeafItem:") = Bool, Id;
override externalInstanceMethod(#NSBrowser, "reloadDataForRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
override externalInstanceMethod(#NSBrowser, "parentForItemsInColumn:") = Id, CLong;
override externalInstanceMethod(#NSBrowser, "scrollRowToVisible:inColumn:") = Void, CLong, CLong;
override externalInstanceMethod(#NSBrowser, "setTitle:ofColumn:") = Void, NSString, CLong;
override externalInstanceMethod(#NSBrowser, "titleOfColumn:") = NSString, CLong;
override externalInstanceMethod(#NSBrowser, "setPathSeparator:") = Void, NSString;
override externalInstanceMethod(#NSBrowser, "pathSeparator") = NSString;
override externalInstanceMethod(#NSBrowser, "setPath:") = Bool, NSString;
override externalInstanceMethod(#NSBrowser, "path") = NSString;
override externalInstanceMethod(#NSBrowser, "pathToColumn:") = NSString, CLong;
override externalInstanceMethod(#NSBrowser, "clickedColumn") = CLong;
override externalInstanceMethod(#NSBrowser, "clickedRow") = CLong;
override externalInstanceMethod(#NSBrowser, "selectedColumn") = CLong;
override externalInstanceMethod(#NSBrowser, "selectedCell") = Id;
override externalInstanceMethod(#NSBrowser, "selectedCellInColumn:") = Id, CLong;
override externalInstanceMethod(#NSBrowser, "selectedCells") = NSArray;
override externalInstanceMethod(#NSBrowser, "selectRow:inColumn:") = Void, CLong, CLong;
override externalInstanceMethod(#NSBrowser, "selectedRowInColumn:") = CLong, CLong;
override externalInstanceMethod(#NSBrowser, "selectionIndexPath") = NSIndexPath;
override externalInstanceMethod(#NSBrowser, "setSelectionIndexPath:") = Void, NSIndexPath;
override externalInstanceMethod(#NSBrowser, "selectionIndexPaths") = NSArray;
override externalInstanceMethod(#NSBrowser, "setSelectionIndexPaths:") = Void, NSArray;
override externalInstanceMethod(#NSBrowser, "selectRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
override externalInstanceMethod(#NSBrowser, "selectedRowIndexesInColumn:") = NSIndexSet, CLong;
override externalInstanceMethod(#NSBrowser, "reloadColumn:") = Void, CLong;
override externalInstanceMethod(#NSBrowser, "validateVisibleColumns") = Void;
override externalInstanceMethod(#NSBrowser, "scrollColumnsRightBy:") = Void, CLong;
override externalInstanceMethod(#NSBrowser, "scrollColumnsLeftBy:") = Void, CLong;
override externalInstanceMethod(#NSBrowser, "scrollColumnToVisible:") = Void, CLong;
override externalInstanceMethod(#NSBrowser, "lastColumn") = CLong;
override externalInstanceMethod(#NSBrowser, "setLastColumn:") = Void, CLong;
override externalInstanceMethod(#NSBrowser, "addColumn") = Void;
override externalInstanceMethod(#NSBrowser, "numberOfVisibleColumns") = CLong;
override externalInstanceMethod(#NSBrowser, "firstVisibleColumn") = CLong;
override externalInstanceMethod(#NSBrowser, "lastVisibleColumn") = CLong;
override externalInstanceMethod(#NSBrowser, "columnOfMatrix:") = CLong, NSMatrix;
override externalInstanceMethod(#NSBrowser, "matrixInColumn:") = NSMatrix, CLong;
override externalInstanceMethod(#NSBrowser, "loadedCellAtRow:column:") = Id, CLong, CLong;
override externalInstanceMethod(#NSBrowser, "selectAll:") = Void, Id;
override externalInstanceMethod(#NSBrowser, "tile") = Void;
override externalInstanceMethod(#NSBrowser, "doClick:") = Void, Id;
override externalInstanceMethod(#NSBrowser, "doDoubleClick:") = Void, Id;
override externalInstanceMethod(#NSBrowser, "sendAction") = Bool;
override externalInstanceMethod(#NSBrowser, "titleFrameOfColumn:") = NSRect, CLong;
override externalInstanceMethod(#NSBrowser, "drawTitleOfColumn:inRect:") = Void, CLong, NSRect;
override externalInstanceMethod(#NSBrowser, "titleHeight") = Double;
override externalInstanceMethod(#NSBrowser, "frameOfColumn:") = NSRect, CLong;
override externalInstanceMethod(#NSBrowser, "frameOfInsideOfColumn:") = NSRect, CLong;
override externalInstanceMethod(#NSBrowser, "frameOfRow:inColumn:") = NSRect, CLong, CLong;
override externalInstanceMethod(#NSBrowser, "getRow:column:forPoint:") = Bool, Pointer[CLong], Pointer[CLong], NSPoint;
override externalInstanceMethod(#NSBrowser, "columnWidthForColumnContentWidth:") = Double, Double;
override externalInstanceMethod(#NSBrowser, "columnContentWidthForColumnWidth:") = Double, Double;
override externalInstanceMethod(#NSBrowser, "setColumnResizingType:") = Void, CULong;
override externalInstanceMethod(#NSBrowser, "columnResizingType") = CULong;
override externalInstanceMethod(#NSBrowser, "setPrefersAllColumnUserResizing:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "prefersAllColumnUserResizing") = Bool;
override externalInstanceMethod(#NSBrowser, "setWidth:ofColumn:") = Void, Double, CLong;
override externalInstanceMethod(#NSBrowser, "widthOfColumn:") = Double, CLong;
override externalInstanceMethod(#NSBrowser, "setRowHeight:") = Void, Double;
override externalInstanceMethod(#NSBrowser, "rowHeight") = Double;
override externalInstanceMethod(#NSBrowser, "noteHeightOfRowsWithIndexesChanged:inColumn:") = Void, NSIndexSet, CLong;
override externalInstanceMethod(#NSBrowser, "setDefaultColumnWidth:") = Void, Double;
override externalInstanceMethod(#NSBrowser, "defaultColumnWidth") = Double;
override externalInstanceMethod(#NSBrowser, "setColumnsAutosaveName:") = Void, NSString;
override externalInstanceMethod(#NSBrowser, "columnsAutosaveName") = NSString;
override externalClassMethod(#NSBrowser, "removeSavedColumnsWithAutosaveName:") = Void, NSString;
override externalInstanceMethod(#NSBrowser, "canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSIndexSet, CLong, NSEvent;
override externalInstanceMethod(#NSBrowser, "draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSIndexSet, CLong, NSEvent, NSPointPointer;
override externalInstanceMethod(#NSBrowser, "setDraggingSourceOperationMask:forLocal:") = Void, CULong, Bool;
override externalInstanceMethod(#NSBrowser, "allowsTypeSelect") = Bool;
override externalInstanceMethod(#NSBrowser, "setAllowsTypeSelect:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSBrowser, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSBrowser, "editItemAtIndexPath:withEvent:select:") = Void, NSIndexPath, NSEvent, Bool;
override externalInstanceMethod(#NSBrowser, "setAcceptsArrowKeys:") = Void, Bool;
override externalInstanceMethod(#NSBrowser, "acceptsArrowKeys") = Bool;
override externalInstanceMethod(#NSBrowser, "displayColumn:") = Void, CLong;
override externalInstanceMethod(#NSBrowser, "displayAllColumns") = Void;
override externalInstanceMethod(#NSBrowser, "scrollViaScroller:") = Void, NSScroller;
override externalInstanceMethod(#NSBrowser, "updateScroller") = Void;

record NSBrowserCell = externalClass(NSCell);
override externalClassMethod(#NSBrowserCell, "branchImage") = NSImage;
override externalClassMethod(#NSBrowserCell, "highlightedBranchImage") = NSImage;
override externalInstanceMethod(#NSBrowserCell, "highlightColorInView:") = NSColor, NSView;
override externalInstanceMethod(#NSBrowserCell, "isLeaf") = Bool;
override externalInstanceMethod(#NSBrowserCell, "setLeaf:") = Void, Bool;
override externalInstanceMethod(#NSBrowserCell, "isLoaded") = Bool;
override externalInstanceMethod(#NSBrowserCell, "setLoaded:") = Void, Bool;
override externalInstanceMethod(#NSBrowserCell, "reset") = Void;
override externalInstanceMethod(#NSBrowserCell, "set") = Void;
override externalInstanceMethod(#NSBrowserCell, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSBrowserCell, "image") = NSImage;
override externalInstanceMethod(#NSBrowserCell, "setAlternateImage:") = Void, NSImage;
override externalInstanceMethod(#NSBrowserCell, "alternateImage") = NSImage;

override externalInstanceMethod(#NSBundle, "contextHelpForKey:") = NSAttributedString, NSString;
override externalInstanceMethod(#NSBundle, "pathForImageResource:") = NSString, NSString;
override externalInstanceMethod(#NSBundle, "URLForImageResource:") = NSURL, NSString;
override externalClassMethod(#NSBundle, "loadNibFile:externalNameTable:withZone:") = Bool, NSString, NSDictionary, Pointer[NSZone];
override externalClassMethod(#NSBundle, "loadNibNamed:owner:") = Bool, NSString, Id;
override externalInstanceMethod(#NSBundle, "loadNibFile:externalNameTable:withZone:") = Bool, NSString, NSDictionary, Pointer[NSZone];
override externalInstanceMethod(#NSBundle, "pathForSoundResource:") = NSString, NSString;

record NSButton = externalClass(NSControl);
override externalInstanceMethod(#NSButton, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSButton, "title") = NSString;
override externalInstanceMethod(#NSButton, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSButton, "alternateTitle") = NSString;
override externalInstanceMethod(#NSButton, "setAlternateTitle:") = Void, NSString;
override externalInstanceMethod(#NSButton, "image") = NSImage;
override externalInstanceMethod(#NSButton, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSButton, "alternateImage") = NSImage;
override externalInstanceMethod(#NSButton, "setAlternateImage:") = Void, NSImage;
override externalInstanceMethod(#NSButton, "imagePosition") = CULong;
override externalInstanceMethod(#NSButton, "setImagePosition:") = Void, CULong;
override externalInstanceMethod(#NSButton, "setButtonType:") = Void, CULong;
override externalInstanceMethod(#NSButton, "state") = CLong;
override externalInstanceMethod(#NSButton, "setState:") = Void, CLong;
override externalInstanceMethod(#NSButton, "isBordered") = Bool;
override externalInstanceMethod(#NSButton, "setBordered:") = Void, Bool;
override externalInstanceMethod(#NSButton, "isTransparent") = Bool;
override externalInstanceMethod(#NSButton, "setTransparent:") = Void, Bool;
override externalInstanceMethod(#NSButton, "setPeriodicDelay:interval:") = Void, Float, Float;
override externalInstanceMethod(#NSButton, "getPeriodicDelay:interval:") = Void, Pointer[Float], Pointer[Float];
override externalInstanceMethod(#NSButton, "keyEquivalent") = NSString;
override externalInstanceMethod(#NSButton, "setKeyEquivalent:") = Void, NSString;
override externalInstanceMethod(#NSButton, "keyEquivalentModifierMask") = CULong;
override externalInstanceMethod(#NSButton, "setKeyEquivalentModifierMask:") = Void, CULong;
override externalInstanceMethod(#NSButton, "highlight:") = Void, Bool;
override externalInstanceMethod(#NSButton, "performKeyEquivalent:") = Bool, NSEvent;
override externalInstanceMethod(#NSButton, "setTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSButton, "attributedTitle") = NSAttributedString;
override externalInstanceMethod(#NSButton, "setAttributedTitle:") = Void, NSAttributedString;
override externalInstanceMethod(#NSButton, "attributedAlternateTitle") = NSAttributedString;
override externalInstanceMethod(#NSButton, "setAttributedAlternateTitle:") = Void, NSAttributedString;
override externalInstanceMethod(#NSButton, "setBezelStyle:") = Void, CULong;
override externalInstanceMethod(#NSButton, "bezelStyle") = CULong;
override externalInstanceMethod(#NSButton, "setAllowsMixedState:") = Void, Bool;
override externalInstanceMethod(#NSButton, "allowsMixedState") = Bool;
override externalInstanceMethod(#NSButton, "setNextState") = Void;
override externalInstanceMethod(#NSButton, "setShowsBorderOnlyWhileMouseInside:") = Void, Bool;
override externalInstanceMethod(#NSButton, "showsBorderOnlyWhileMouseInside") = Bool;
override externalInstanceMethod(#NSButton, "setSound:") = Void, NSSound;
override externalInstanceMethod(#NSButton, "sound") = NSSound;

record NSButtonCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSButtonCell, "title") = NSString;
override externalInstanceMethod(#NSButtonCell, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSButtonCell, "alternateTitle") = NSString;
override externalInstanceMethod(#NSButtonCell, "setAlternateTitle:") = Void, NSString;
override externalInstanceMethod(#NSButtonCell, "alternateImage") = NSImage;
override externalInstanceMethod(#NSButtonCell, "setAlternateImage:") = Void, NSImage;
override externalInstanceMethod(#NSButtonCell, "imagePosition") = CULong;
override externalInstanceMethod(#NSButtonCell, "setImagePosition:") = Void, CULong;
override externalInstanceMethod(#NSButtonCell, "imageScaling") = CULong;
override externalInstanceMethod(#NSButtonCell, "setImageScaling:") = Void, CULong;
override externalInstanceMethod(#NSButtonCell, "highlightsBy") = CLong;
override externalInstanceMethod(#NSButtonCell, "setHighlightsBy:") = Void, CLong;
override externalInstanceMethod(#NSButtonCell, "showsStateBy") = CLong;
override externalInstanceMethod(#NSButtonCell, "setShowsStateBy:") = Void, CLong;
override externalInstanceMethod(#NSButtonCell, "setButtonType:") = Void, CULong;
override externalInstanceMethod(#NSButtonCell, "isOpaque") = Bool;
override externalInstanceMethod(#NSButtonCell, "setFont:") = Void, NSFont;
override externalInstanceMethod(#NSButtonCell, "isTransparent") = Bool;
override externalInstanceMethod(#NSButtonCell, "setTransparent:") = Void, Bool;
override externalInstanceMethod(#NSButtonCell, "setPeriodicDelay:interval:") = Void, Float, Float;
override externalInstanceMethod(#NSButtonCell, "getPeriodicDelay:interval:") = Void, Pointer[Float], Pointer[Float];
override externalInstanceMethod(#NSButtonCell, "keyEquivalent") = NSString;
override externalInstanceMethod(#NSButtonCell, "setKeyEquivalent:") = Void, NSString;
override externalInstanceMethod(#NSButtonCell, "keyEquivalentModifierMask") = CULong;
override externalInstanceMethod(#NSButtonCell, "setKeyEquivalentModifierMask:") = Void, CULong;
override externalInstanceMethod(#NSButtonCell, "keyEquivalentFont") = NSFont;
override externalInstanceMethod(#NSButtonCell, "setKeyEquivalentFont:") = Void, NSFont;
override externalInstanceMethod(#NSButtonCell, "setKeyEquivalentFont:size:") = Void, NSString, Double;
override externalInstanceMethod(#NSButtonCell, "performClick:") = Void, Id;
override externalInstanceMethod(#NSButtonCell, "drawImage:withFrame:inView:") = Void, NSImage, NSRect, NSView;
override externalInstanceMethod(#NSButtonCell, "drawTitle:withFrame:inView:") = NSRect, NSAttributedString, NSRect, NSView;
override externalInstanceMethod(#NSButtonCell, "drawBezelWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSButtonCell, "setTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSButtonCell, "setAlternateTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSButtonCell, "setAlternateMnemonicLocation:") = Void, CULong;
override externalInstanceMethod(#NSButtonCell, "alternateMnemonicLocation") = CULong;
override externalInstanceMethod(#NSButtonCell, "alternateMnemonic") = NSString;
override externalInstanceMethod(#NSButtonCell, "gradientType") = CULong;
override externalInstanceMethod(#NSButtonCell, "setGradientType:") = Void, CULong;
override externalInstanceMethod(#NSButtonCell, "setImageDimsWhenDisabled:") = Void, Bool;
override externalInstanceMethod(#NSButtonCell, "imageDimsWhenDisabled") = Bool;
override externalInstanceMethod(#NSButtonCell, "setShowsBorderOnlyWhileMouseInside:") = Void, Bool;
override externalInstanceMethod(#NSButtonCell, "showsBorderOnlyWhileMouseInside") = Bool;
override externalInstanceMethod(#NSButtonCell, "mouseEntered:") = Void, NSEvent;
override externalInstanceMethod(#NSButtonCell, "mouseExited:") = Void, NSEvent;
override externalInstanceMethod(#NSButtonCell, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSButtonCell, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSButtonCell, "attributedTitle") = NSAttributedString;
override externalInstanceMethod(#NSButtonCell, "setAttributedTitle:") = Void, NSAttributedString;
override externalInstanceMethod(#NSButtonCell, "attributedAlternateTitle") = NSAttributedString;
override externalInstanceMethod(#NSButtonCell, "setAttributedAlternateTitle:") = Void, NSAttributedString;
override externalInstanceMethod(#NSButtonCell, "setBezelStyle:") = Void, CULong;
override externalInstanceMethod(#NSButtonCell, "bezelStyle") = CULong;
override externalInstanceMethod(#NSButtonCell, "setSound:") = Void, NSSound;
override externalInstanceMethod(#NSButtonCell, "sound") = NSSound;

record NSCIImageRep = externalClass(NSImageRep);
override externalClassMethod(#NSCIImageRep, "imageRepWithCIImage:") = Id, CIImage;
override externalInstanceMethod(#NSCIImageRep, "initWithCIImage:") = Id, CIImage;
override externalInstanceMethod(#NSCIImageRep, "CIImage") = CIImage;

record NSCachedImageRep = externalClass(NSImageRep);
override externalInstanceMethod(#NSCachedImageRep, "initWithWindow:rect:") = Id, NSWindow, NSRect;
override externalInstanceMethod(#NSCachedImageRep, "initWithSize:depth:separate:alpha:") = Id, NSSize, Int, Bool, Bool;
override externalInstanceMethod(#NSCachedImageRep, "window") = NSWindow;
override externalInstanceMethod(#NSCachedImageRep, "rect") = NSRect;

record NSCell = externalClass(NSObject);
override externalInstanceMethod(#NSCell, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSCell, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSCell, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSCell, "prefersTrackingUntilMouseUp") = Bool;
override externalInstanceMethod(#NSCell, "initTextCell:") = Id, NSString;
override externalInstanceMethod(#NSCell, "initImageCell:") = Id, NSImage;
override externalInstanceMethod(#NSCell, "controlView") = NSView;
override externalInstanceMethod(#NSCell, "setControlView:") = Void, NSView;
override externalInstanceMethod(#NSCell, "type") = CULong;
override externalInstanceMethod(#NSCell, "setType:") = Void, CULong;
override externalInstanceMethod(#NSCell, "state") = CLong;
override externalInstanceMethod(#NSCell, "setState:") = Void, CLong;
override externalInstanceMethod(#NSCell, "target") = Id;
override externalInstanceMethod(#NSCell, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSCell, "action") = SelectorHandle;
override externalInstanceMethod(#NSCell, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSCell, "tag") = CLong;
override externalInstanceMethod(#NSCell, "setTag:") = Void, CLong;
override externalInstanceMethod(#NSCell, "title") = NSString;
override externalInstanceMethod(#NSCell, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSCell, "isOpaque") = Bool;
override externalInstanceMethod(#NSCell, "isEnabled") = Bool;
override externalInstanceMethod(#NSCell, "setEnabled:") = Void, Bool;
override externalInstanceMethod(#NSCell, "sendActionOn:") = CLong, CLong;
override externalInstanceMethod(#NSCell, "isContinuous") = Bool;
override externalInstanceMethod(#NSCell, "setContinuous:") = Void, Bool;
override externalInstanceMethod(#NSCell, "isEditable") = Bool;
override externalInstanceMethod(#NSCell, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSCell, "isSelectable") = Bool;
override externalInstanceMethod(#NSCell, "setSelectable:") = Void, Bool;
override externalInstanceMethod(#NSCell, "isBordered") = Bool;
override externalInstanceMethod(#NSCell, "setBordered:") = Void, Bool;
override externalInstanceMethod(#NSCell, "isBezeled") = Bool;
override externalInstanceMethod(#NSCell, "setBezeled:") = Void, Bool;
override externalInstanceMethod(#NSCell, "isScrollable") = Bool;
override externalInstanceMethod(#NSCell, "setScrollable:") = Void, Bool;
override externalInstanceMethod(#NSCell, "isHighlighted") = Bool;
override externalInstanceMethod(#NSCell, "setHighlighted:") = Void, Bool;
override externalInstanceMethod(#NSCell, "alignment") = CULong;
override externalInstanceMethod(#NSCell, "setAlignment:") = Void, CULong;
override externalInstanceMethod(#NSCell, "wraps") = Bool;
override externalInstanceMethod(#NSCell, "setWraps:") = Void, Bool;
override externalInstanceMethod(#NSCell, "font") = NSFont;
override externalInstanceMethod(#NSCell, "setFont:") = Void, NSFont;
override externalInstanceMethod(#NSCell, "isEntryAcceptable:") = Bool, NSString;
override externalInstanceMethod(#NSCell, "keyEquivalent") = NSString;
override externalInstanceMethod(#NSCell, "setFormatter:") = Void, NSFormatter;
override externalInstanceMethod(#NSCell, "formatter") = Id;
override externalInstanceMethod(#NSCell, "objectValue") = Id;
override externalInstanceMethod(#NSCell, "setObjectValue:") = Void, Id;
override externalInstanceMethod(#NSCell, "hasValidObjectValue") = Bool;
override externalInstanceMethod(#NSCell, "stringValue") = NSString;
override externalInstanceMethod(#NSCell, "setStringValue:") = Void, NSString;
override externalInstanceMethod(#NSCell, "compare:") = CLong, Id;
override externalInstanceMethod(#NSCell, "intValue") = Int;
override externalInstanceMethod(#NSCell, "setIntValue:") = Void, Int;
override externalInstanceMethod(#NSCell, "floatValue") = Float;
override externalInstanceMethod(#NSCell, "setFloatValue:") = Void, Float;
override externalInstanceMethod(#NSCell, "doubleValue") = Double;
override externalInstanceMethod(#NSCell, "setDoubleValue:") = Void, Double;
override externalInstanceMethod(#NSCell, "takeIntValueFrom:") = Void, Id;
override externalInstanceMethod(#NSCell, "takeFloatValueFrom:") = Void, Id;
override externalInstanceMethod(#NSCell, "takeDoubleValueFrom:") = Void, Id;
override externalInstanceMethod(#NSCell, "takeStringValueFrom:") = Void, Id;
override externalInstanceMethod(#NSCell, "takeObjectValueFrom:") = Void, Id;
override externalInstanceMethod(#NSCell, "image") = NSImage;
override externalInstanceMethod(#NSCell, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSCell, "setControlTint:") = Void, CULong;
override externalInstanceMethod(#NSCell, "controlTint") = CULong;
override externalInstanceMethod(#NSCell, "setControlSize:") = Void, CULong;
override externalInstanceMethod(#NSCell, "controlSize") = CULong;
override externalInstanceMethod(#NSCell, "representedObject") = Id;
override externalInstanceMethod(#NSCell, "setRepresentedObject:") = Void, Id;
override externalInstanceMethod(#NSCell, "cellAttribute:") = CLong, CULong;
override externalInstanceMethod(#NSCell, "setCellAttribute:to:") = Void, CULong, CLong;
override externalInstanceMethod(#NSCell, "imageRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSCell, "titleRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSCell, "drawingRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSCell, "cellSize") = NSSize;
override externalInstanceMethod(#NSCell, "cellSizeForBounds:") = NSSize, NSRect;
override externalInstanceMethod(#NSCell, "highlightColorWithFrame:inView:") = NSColor, NSRect, NSView;
override externalInstanceMethod(#NSCell, "calcDrawInfo:") = Void, NSRect;
override externalInstanceMethod(#NSCell, "setUpFieldEditorAttributes:") = NSText, NSText;
override externalInstanceMethod(#NSCell, "drawInteriorWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSCell, "drawWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSCell, "highlight:withFrame:inView:") = Void, Bool, NSRect, NSView;
override externalInstanceMethod(#NSCell, "mouseDownFlags") = CLong;
override externalInstanceMethod(#NSCell, "getPeriodicDelay:interval:") = Void, Pointer[Float], Pointer[Float];
override externalInstanceMethod(#NSCell, "startTrackingAt:inView:") = Bool, NSPoint, NSView;
override externalInstanceMethod(#NSCell, "continueTracking:at:inView:") = Bool, NSPoint, NSPoint, NSView;
override externalInstanceMethod(#NSCell, "stopTracking:at:inView:mouseIsUp:") = Void, NSPoint, NSPoint, NSView, Bool;
override externalInstanceMethod(#NSCell, "trackMouse:inRect:ofView:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, Bool;
override externalInstanceMethod(#NSCell, "editWithFrame:inView:editor:delegate:event:") = Void, NSRect, NSView, NSText, Id, NSEvent;
override externalInstanceMethod(#NSCell, "selectWithFrame:inView:editor:delegate:start:length:") = Void, NSRect, NSView, NSText, Id, CLong, CLong;
override externalInstanceMethod(#NSCell, "endEditing:") = Void, NSText;
override externalInstanceMethod(#NSCell, "resetCursorRect:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSCell, "setMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSCell, "menu") = NSMenu;
override externalInstanceMethod(#NSCell, "menuForEvent:inRect:ofView:") = NSMenu, NSEvent, NSRect, NSView;
override externalClassMethod(#NSCell, "defaultMenu") = NSMenu;
override externalInstanceMethod(#NSCell, "setSendsActionOnEndEditing:") = Void, Bool;
override externalInstanceMethod(#NSCell, "sendsActionOnEndEditing") = Bool;
override externalInstanceMethod(#NSCell, "baseWritingDirection") = CLong;
override externalInstanceMethod(#NSCell, "setBaseWritingDirection:") = Void, CLong;
override externalInstanceMethod(#NSCell, "setLineBreakMode:") = Void, CULong;
override externalInstanceMethod(#NSCell, "lineBreakMode") = CULong;
override externalInstanceMethod(#NSCell, "setAllowsUndo:") = Void, Bool;
override externalInstanceMethod(#NSCell, "allowsUndo") = Bool;
override externalInstanceMethod(#NSCell, "integerValue") = CLong;
override externalInstanceMethod(#NSCell, "setIntegerValue:") = Void, CLong;
override externalInstanceMethod(#NSCell, "takeIntegerValueFrom:") = Void, Id;
override externalInstanceMethod(#NSCell, "truncatesLastVisibleLine") = Bool;
override externalInstanceMethod(#NSCell, "setTruncatesLastVisibleLine:") = Void, Bool;
override externalInstanceMethod(#NSCell, "userInterfaceLayoutDirection") = CLong;
override externalInstanceMethod(#NSCell, "setUserInterfaceLayoutDirection:") = Void, CLong;
override externalInstanceMethod(#NSCell, "fieldEditorForView:") = NSTextView, NSView;
override externalInstanceMethod(#NSCell, "usesSingleLineMode") = Bool;
override externalInstanceMethod(#NSCell, "setUsesSingleLineMode:") = Void, Bool;
override externalInstanceMethod(#NSCell, "setRefusesFirstResponder:") = Void, Bool;
override externalInstanceMethod(#NSCell, "refusesFirstResponder") = Bool;
override externalInstanceMethod(#NSCell, "acceptsFirstResponder") = Bool;
override externalInstanceMethod(#NSCell, "setShowsFirstResponder:") = Void, Bool;
override externalInstanceMethod(#NSCell, "showsFirstResponder") = Bool;
override externalInstanceMethod(#NSCell, "setMnemonicLocation:") = Void, CULong;
override externalInstanceMethod(#NSCell, "mnemonicLocation") = CULong;
override externalInstanceMethod(#NSCell, "mnemonic") = NSString;
override externalInstanceMethod(#NSCell, "setTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSCell, "performClick:") = Void, Id;
override externalInstanceMethod(#NSCell, "setFocusRingType:") = Void, CULong;
override externalInstanceMethod(#NSCell, "focusRingType") = CULong;
override externalClassMethod(#NSCell, "defaultFocusRingType") = CULong;
override externalInstanceMethod(#NSCell, "wantsNotificationForMarkedText") = Bool;
override externalInstanceMethod(#NSCell, "attributedStringValue") = NSAttributedString;
override externalInstanceMethod(#NSCell, "setAttributedStringValue:") = Void, NSAttributedString;
override externalInstanceMethod(#NSCell, "allowsEditingTextAttributes") = Bool;
override externalInstanceMethod(#NSCell, "setAllowsEditingTextAttributes:") = Void, Bool;
override externalInstanceMethod(#NSCell, "importsGraphics") = Bool;
override externalInstanceMethod(#NSCell, "setImportsGraphics:") = Void, Bool;
override externalInstanceMethod(#NSCell, "setAllowsMixedState:") = Void, Bool;
override externalInstanceMethod(#NSCell, "allowsMixedState") = Bool;
override externalInstanceMethod(#NSCell, "nextState") = CLong;
override externalInstanceMethod(#NSCell, "setNextState") = Void;
override externalInstanceMethod(#NSCell, "hitTestForEvent:inRect:ofView:") = CULong, NSEvent, NSRect, NSView;
override externalInstanceMethod(#NSCell, "expansionFrameWithFrame:inView:") = NSRect, NSRect, NSView;
override externalInstanceMethod(#NSCell, "drawWithExpansionFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSCell, "backgroundStyle") = CLong;
override externalInstanceMethod(#NSCell, "setBackgroundStyle:") = Void, CLong;
override externalInstanceMethod(#NSCell, "interiorBackgroundStyle") = CLong;
override externalInstanceMethod(#NSCell, "entryType") = CLong;
override externalInstanceMethod(#NSCell, "setEntryType:") = Void, CLong;
override externalInstanceMethod(#NSCell, "setFloatingPointFormat:left:right:") = Void, Bool, CULong, CULong;

record NSClipView = externalClass(NSView);
override externalInstanceMethod(#NSClipView, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSClipView, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSClipView, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSClipView, "drawsBackground") = Bool;
override externalInstanceMethod(#NSClipView, "setDocumentView:") = Void, NSView;
override externalInstanceMethod(#NSClipView, "documentView") = Id;
override externalInstanceMethod(#NSClipView, "documentRect") = NSRect;
override externalInstanceMethod(#NSClipView, "setDocumentCursor:") = Void, NSCursor;
override externalInstanceMethod(#NSClipView, "documentCursor") = NSCursor;
override externalInstanceMethod(#NSClipView, "documentVisibleRect") = NSRect;
override externalInstanceMethod(#NSClipView, "viewFrameChanged:") = Void, NSNotification;
override externalInstanceMethod(#NSClipView, "viewBoundsChanged:") = Void, NSNotification;
override externalInstanceMethod(#NSClipView, "setCopiesOnScroll:") = Void, Bool;
override externalInstanceMethod(#NSClipView, "copiesOnScroll") = Bool;
override externalInstanceMethod(#NSClipView, "autoscroll:") = Bool, NSEvent;
override externalInstanceMethod(#NSClipView, "constrainScrollPoint:") = NSPoint, NSPoint;
override externalInstanceMethod(#NSClipView, "scrollToPoint:") = Void, NSPoint;

override externalInstanceMethod(#NSCoder, "decodeNXColor") = NSColor;

record NSCollectionView = externalClass(NSView);
override externalInstanceMethod(#NSCollectionView, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSCollectionView, "delegate") = Id;
override externalInstanceMethod(#NSCollectionView, "isFirstResponder") = Bool;
override externalInstanceMethod(#NSCollectionView, "setContent:") = Void, NSArray;
override externalInstanceMethod(#NSCollectionView, "content") = NSArray;
override externalInstanceMethod(#NSCollectionView, "setSelectable:") = Void, Bool;
override externalInstanceMethod(#NSCollectionView, "isSelectable") = Bool;
override externalInstanceMethod(#NSCollectionView, "setAllowsMultipleSelection:") = Void, Bool;
override externalInstanceMethod(#NSCollectionView, "allowsMultipleSelection") = Bool;
override externalInstanceMethod(#NSCollectionView, "setSelectionIndexes:") = Void, NSIndexSet;
override externalInstanceMethod(#NSCollectionView, "selectionIndexes") = NSIndexSet;
override externalInstanceMethod(#NSCollectionView, "newItemForRepresentedObject:") = NSCollectionViewItem, Id;
override externalInstanceMethod(#NSCollectionView, "setItemPrototype:") = Void, NSCollectionViewItem;
override externalInstanceMethod(#NSCollectionView, "itemPrototype") = NSCollectionViewItem;
override externalInstanceMethod(#NSCollectionView, "setMaxNumberOfRows:") = Void, CULong;
override externalInstanceMethod(#NSCollectionView, "maxNumberOfRows") = CULong;
override externalInstanceMethod(#NSCollectionView, "setMaxNumberOfColumns:") = Void, CULong;
override externalInstanceMethod(#NSCollectionView, "maxNumberOfColumns") = CULong;
override externalInstanceMethod(#NSCollectionView, "setMinItemSize:") = Void, NSSize;
override externalInstanceMethod(#NSCollectionView, "minItemSize") = NSSize;
override externalInstanceMethod(#NSCollectionView, "setMaxItemSize:") = Void, NSSize;
override externalInstanceMethod(#NSCollectionView, "maxItemSize") = NSSize;
override externalInstanceMethod(#NSCollectionView, "setBackgroundColors:") = Void, NSArray;
override externalInstanceMethod(#NSCollectionView, "backgroundColors") = NSArray;
override externalInstanceMethod(#NSCollectionView, "itemAtIndex:") = NSCollectionViewItem, CULong;
override externalInstanceMethod(#NSCollectionView, "frameForItemAtIndex:") = NSRect, CULong;
override externalInstanceMethod(#NSCollectionView, "setDraggingSourceOperationMask:forLocal:") = Void, CULong, Bool;
override externalInstanceMethod(#NSCollectionView, "draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSIndexSet, NSEvent, NSPointPointer;

record NSCollectionViewItem = externalClass(NSViewController);
override externalInstanceMethod(#NSCollectionViewItem, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSCollectionViewItem, "collectionView") = NSCollectionView;
override externalInstanceMethod(#NSCollectionViewItem, "setSelected:") = Void, Bool;
override externalInstanceMethod(#NSCollectionViewItem, "isSelected") = Bool;

record NSColor = externalClass(NSObject);
override externalInstanceMethod(#NSColor, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSColor, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSColor, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSColor, "readableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalClassMethod(#NSColor, "readingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSColor, "initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
override externalInstanceMethod(#NSColor, "writableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalInstanceMethod(#NSColor, "writingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSColor, "pasteboardPropertyListForType:") = Id, NSString;
override externalClassMethod(#NSColor, "colorWithCalibratedWhite:alpha:") = NSColor, Double, Double;
override externalClassMethod(#NSColor, "colorWithCalibratedHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
override externalClassMethod(#NSColor, "colorWithCalibratedRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
override externalClassMethod(#NSColor, "colorWithDeviceWhite:alpha:") = NSColor, Double, Double;
override externalClassMethod(#NSColor, "colorWithDeviceHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
override externalClassMethod(#NSColor, "colorWithDeviceRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
override externalClassMethod(#NSColor, "colorWithDeviceCyan:magenta:yellow:black:alpha:") = NSColor, Double, Double, Double, Double, Double;
override externalClassMethod(#NSColor, "colorWithCatalogName:colorName:") = NSColor, NSString, NSString;
override externalClassMethod(#NSColor, "colorWithColorSpace:components:count:") = NSColor, NSColorSpace, Pointer[Double], CLong;
override externalClassMethod(#NSColor, "blackColor") = NSColor;
override externalClassMethod(#NSColor, "darkGrayColor") = NSColor;
override externalClassMethod(#NSColor, "lightGrayColor") = NSColor;
override externalClassMethod(#NSColor, "whiteColor") = NSColor;
override externalClassMethod(#NSColor, "grayColor") = NSColor;
override externalClassMethod(#NSColor, "redColor") = NSColor;
override externalClassMethod(#NSColor, "greenColor") = NSColor;
override externalClassMethod(#NSColor, "blueColor") = NSColor;
override externalClassMethod(#NSColor, "cyanColor") = NSColor;
override externalClassMethod(#NSColor, "yellowColor") = NSColor;
override externalClassMethod(#NSColor, "magentaColor") = NSColor;
override externalClassMethod(#NSColor, "orangeColor") = NSColor;
override externalClassMethod(#NSColor, "purpleColor") = NSColor;
override externalClassMethod(#NSColor, "brownColor") = NSColor;
override externalClassMethod(#NSColor, "clearColor") = NSColor;
override externalClassMethod(#NSColor, "controlShadowColor") = NSColor;
override externalClassMethod(#NSColor, "controlDarkShadowColor") = NSColor;
override externalClassMethod(#NSColor, "controlColor") = NSColor;
override externalClassMethod(#NSColor, "controlHighlightColor") = NSColor;
override externalClassMethod(#NSColor, "controlLightHighlightColor") = NSColor;
override externalClassMethod(#NSColor, "controlTextColor") = NSColor;
override externalClassMethod(#NSColor, "controlBackgroundColor") = NSColor;
override externalClassMethod(#NSColor, "selectedControlColor") = NSColor;
override externalClassMethod(#NSColor, "secondarySelectedControlColor") = NSColor;
override externalClassMethod(#NSColor, "selectedControlTextColor") = NSColor;
override externalClassMethod(#NSColor, "disabledControlTextColor") = NSColor;
override externalClassMethod(#NSColor, "textColor") = NSColor;
override externalClassMethod(#NSColor, "textBackgroundColor") = NSColor;
override externalClassMethod(#NSColor, "selectedTextColor") = NSColor;
override externalClassMethod(#NSColor, "selectedTextBackgroundColor") = NSColor;
override externalClassMethod(#NSColor, "gridColor") = NSColor;
override externalClassMethod(#NSColor, "keyboardFocusIndicatorColor") = NSColor;
override externalClassMethod(#NSColor, "windowBackgroundColor") = NSColor;
override externalClassMethod(#NSColor, "scrollBarColor") = NSColor;
override externalClassMethod(#NSColor, "knobColor") = NSColor;
override externalClassMethod(#NSColor, "selectedKnobColor") = NSColor;
override externalClassMethod(#NSColor, "windowFrameColor") = NSColor;
override externalClassMethod(#NSColor, "windowFrameTextColor") = NSColor;
override externalClassMethod(#NSColor, "selectedMenuItemColor") = NSColor;
override externalClassMethod(#NSColor, "selectedMenuItemTextColor") = NSColor;
override externalClassMethod(#NSColor, "highlightColor") = NSColor;
override externalClassMethod(#NSColor, "shadowColor") = NSColor;
override externalClassMethod(#NSColor, "headerColor") = NSColor;
override externalClassMethod(#NSColor, "headerTextColor") = NSColor;
override externalClassMethod(#NSColor, "alternateSelectedControlColor") = NSColor;
override externalClassMethod(#NSColor, "alternateSelectedControlTextColor") = NSColor;
override externalClassMethod(#NSColor, "controlAlternatingRowBackgroundColors") = NSArray;
override externalInstanceMethod(#NSColor, "highlightWithLevel:") = NSColor, Double;
override externalInstanceMethod(#NSColor, "shadowWithLevel:") = NSColor, Double;
override externalClassMethod(#NSColor, "colorForControlTint:") = NSColor, CULong;
override externalClassMethod(#NSColor, "currentControlTint") = CULong;
override externalInstanceMethod(#NSColor, "set") = Void;
override externalInstanceMethod(#NSColor, "setFill") = Void;
override externalInstanceMethod(#NSColor, "setStroke") = Void;
override externalInstanceMethod(#NSColor, "colorSpaceName") = NSString;
override externalInstanceMethod(#NSColor, "colorUsingColorSpaceName:") = NSColor, NSString;
override externalInstanceMethod(#NSColor, "colorUsingColorSpaceName:device:") = NSColor, NSString, NSDictionary;
override externalInstanceMethod(#NSColor, "colorUsingColorSpace:") = NSColor, NSColorSpace;
override externalInstanceMethod(#NSColor, "blendedColorWithFraction:ofColor:") = NSColor, Double, NSColor;
override externalInstanceMethod(#NSColor, "colorWithAlphaComponent:") = NSColor, Double;
override externalInstanceMethod(#NSColor, "catalogNameComponent") = NSString;
override externalInstanceMethod(#NSColor, "colorNameComponent") = NSString;
override externalInstanceMethod(#NSColor, "localizedCatalogNameComponent") = NSString;
override externalInstanceMethod(#NSColor, "localizedColorNameComponent") = NSString;
override externalInstanceMethod(#NSColor, "redComponent") = Double;
override externalInstanceMethod(#NSColor, "greenComponent") = Double;
override externalInstanceMethod(#NSColor, "blueComponent") = Double;
override externalInstanceMethod(#NSColor, "getRed:green:blue:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override externalInstanceMethod(#NSColor, "hueComponent") = Double;
override externalInstanceMethod(#NSColor, "saturationComponent") = Double;
override externalInstanceMethod(#NSColor, "brightnessComponent") = Double;
override externalInstanceMethod(#NSColor, "getHue:saturation:brightness:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override externalInstanceMethod(#NSColor, "whiteComponent") = Double;
override externalInstanceMethod(#NSColor, "getWhite:alpha:") = Void, Pointer[Double], Pointer[Double];
override externalInstanceMethod(#NSColor, "cyanComponent") = Double;
override externalInstanceMethod(#NSColor, "magentaComponent") = Double;
override externalInstanceMethod(#NSColor, "yellowComponent") = Double;
override externalInstanceMethod(#NSColor, "blackComponent") = Double;
override externalInstanceMethod(#NSColor, "getCyan:magenta:yellow:black:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override externalInstanceMethod(#NSColor, "colorSpace") = NSColorSpace;
override externalInstanceMethod(#NSColor, "numberOfComponents") = CLong;
override externalInstanceMethod(#NSColor, "getComponents:") = Void, Pointer[Double];
override externalInstanceMethod(#NSColor, "alphaComponent") = Double;
override externalClassMethod(#NSColor, "colorFromPasteboard:") = NSColor, NSPasteboard;
override externalInstanceMethod(#NSColor, "writeToPasteboard:") = Void, NSPasteboard;
override externalClassMethod(#NSColor, "colorWithPatternImage:") = NSColor, NSImage;
override externalInstanceMethod(#NSColor, "patternImage") = NSImage;
override externalInstanceMethod(#NSColor, "drawSwatchInRect:") = Void, NSRect;
override externalClassMethod(#NSColor, "setIgnoresAlpha:") = Void, Bool;
override externalClassMethod(#NSColor, "ignoresAlpha") = Bool;
override externalClassMethod(#NSColor, "colorWithCIColor:") = NSColor, CIColor;

record NSColorList = externalClass(NSObject);
override externalInstanceMethod(#NSColorList, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSColorList, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSColorList, "availableColorLists") = NSArray;
override externalClassMethod(#NSColorList, "colorListNamed:") = NSColorList, NSString;
override externalInstanceMethod(#NSColorList, "initWithName:") = Id, NSString;
override externalInstanceMethod(#NSColorList, "initWithName:fromFile:") = Id, NSString, NSString;
override externalInstanceMethod(#NSColorList, "name") = NSString;
override externalInstanceMethod(#NSColorList, "setColor:forKey:") = Void, NSColor, NSString;
override externalInstanceMethod(#NSColorList, "insertColor:key:atIndex:") = Void, NSColor, NSString, CULong;
override externalInstanceMethod(#NSColorList, "removeColorWithKey:") = Void, NSString;
override externalInstanceMethod(#NSColorList, "colorWithKey:") = NSColor, NSString;
override externalInstanceMethod(#NSColorList, "allKeys") = NSArray;
override externalInstanceMethod(#NSColorList, "isEditable") = Bool;
override externalInstanceMethod(#NSColorList, "writeToFile:") = Bool, NSString;
override externalInstanceMethod(#NSColorList, "removeFile") = Void;

record NSColorPanel = externalClass(NSPanel);
override externalClassMethod(#NSColorPanel, "sharedColorPanel") = NSColorPanel;
override externalClassMethod(#NSColorPanel, "sharedColorPanelExists") = Bool;
override externalClassMethod(#NSColorPanel, "dragColor:withEvent:fromView:") = Bool, NSColor, NSEvent, NSView;
override externalClassMethod(#NSColorPanel, "setPickerMask:") = Void, CULong;
override externalClassMethod(#NSColorPanel, "setPickerMode:") = Void, CLong;
override externalInstanceMethod(#NSColorPanel, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSColorPanel, "accessoryView") = NSView;
override externalInstanceMethod(#NSColorPanel, "setContinuous:") = Void, Bool;
override externalInstanceMethod(#NSColorPanel, "isContinuous") = Bool;
override externalInstanceMethod(#NSColorPanel, "setShowsAlpha:") = Void, Bool;
override externalInstanceMethod(#NSColorPanel, "showsAlpha") = Bool;
override externalInstanceMethod(#NSColorPanel, "setMode:") = Void, CLong;
override externalInstanceMethod(#NSColorPanel, "mode") = CLong;
override externalInstanceMethod(#NSColorPanel, "setColor:") = Void, NSColor;
override externalInstanceMethod(#NSColorPanel, "color") = NSColor;
override externalInstanceMethod(#NSColorPanel, "alpha") = Double;
override externalInstanceMethod(#NSColorPanel, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSColorPanel, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSColorPanel, "attachColorList:") = Void, NSColorList;
override externalInstanceMethod(#NSColorPanel, "detachColorList:") = Void, NSColorList;

record NSColorPicker = externalClass(NSObject);
override externalInstanceMethod(#NSColorPicker, "initWithPickerMask:colorPanel:") = Id, CULong, NSColorPanel;
override externalInstanceMethod(#NSColorPicker, "provideNewButtonImage") = NSImage;
override externalInstanceMethod(#NSColorPicker, "insertNewButtonImage:in:") = Void, NSImage, NSButtonCell;
override externalInstanceMethod(#NSColorPicker, "viewSizeChanged:") = Void, Id;
override externalInstanceMethod(#NSColorPicker, "alphaControlAddedOrRemoved:") = Void, Id;
override externalInstanceMethod(#NSColorPicker, "attachColorList:") = Void, NSColorList;
override externalInstanceMethod(#NSColorPicker, "detachColorList:") = Void, NSColorList;
override externalInstanceMethod(#NSColorPicker, "setMode:") = Void, CLong;
override externalInstanceMethod(#NSColorPicker, "buttonToolTip") = NSString;
override externalInstanceMethod(#NSColorPicker, "minContentSize") = NSSize;
override externalInstanceMethod(#NSColorPicker, "initWithPickerMask:colorPanel:") = Id, CULong, NSColorPanel;
override externalInstanceMethod(#NSColorPicker, "colorPanel") = NSColorPanel;
override externalInstanceMethod(#NSColorPicker, "provideNewButtonImage") = NSImage;
override externalInstanceMethod(#NSColorPicker, "insertNewButtonImage:in:") = Void, NSImage, NSButtonCell;
override externalInstanceMethod(#NSColorPicker, "viewSizeChanged:") = Void, Id;
override externalInstanceMethod(#NSColorPicker, "attachColorList:") = Void, NSColorList;
override externalInstanceMethod(#NSColorPicker, "detachColorList:") = Void, NSColorList;
override externalInstanceMethod(#NSColorPicker, "setMode:") = Void, CLong;
override externalInstanceMethod(#NSColorPicker, "buttonToolTip") = NSString;
override externalInstanceMethod(#NSColorPicker, "minContentSize") = NSSize;

record NSColorSpace = externalClass(NSObject);
override externalInstanceMethod(#NSColorSpace, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSColorSpace, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSColorSpace, "initWithICCProfileData:") = Id, NSData;
override externalInstanceMethod(#NSColorSpace, "ICCProfileData") = NSData;
override externalInstanceMethod(#NSColorSpace, "initWithColorSyncProfile:") = Id, RawPointer;
override externalInstanceMethod(#NSColorSpace, "colorSyncProfile") = RawPointer;
override externalInstanceMethod(#NSColorSpace, "initWithCGColorSpace:") = Id, CGColorSpaceRef;
override externalInstanceMethod(#NSColorSpace, "CGColorSpace") = CGColorSpaceRef;
override externalInstanceMethod(#NSColorSpace, "numberOfColorComponents") = CLong;
override externalInstanceMethod(#NSColorSpace, "colorSpaceModel") = CLong;
override externalInstanceMethod(#NSColorSpace, "localizedName") = NSString;
override externalClassMethod(#NSColorSpace, "genericRGBColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "genericGrayColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "genericCMYKColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "deviceRGBColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "deviceGrayColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "deviceCMYKColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "sRGBColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "genericGamma22GrayColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "adobeRGB1998ColorSpace") = NSColorSpace;
override externalClassMethod(#NSColorSpace, "availableColorSpacesWithModel:") = NSArray, CLong;

record NSColorWell = externalClass(NSControl);
override externalInstanceMethod(#NSColorWell, "deactivate") = Void;
override externalInstanceMethod(#NSColorWell, "activate:") = Void, Bool;
override externalInstanceMethod(#NSColorWell, "isActive") = Bool;
override externalInstanceMethod(#NSColorWell, "drawWellInside:") = Void, NSRect;
override externalInstanceMethod(#NSColorWell, "isBordered") = Bool;
override externalInstanceMethod(#NSColorWell, "setBordered:") = Void, Bool;
override externalInstanceMethod(#NSColorWell, "takeColorFrom:") = Void, Id;
override externalInstanceMethod(#NSColorWell, "setColor:") = Void, NSColor;
override externalInstanceMethod(#NSColorWell, "color") = NSColor;

record NSComboBox = externalClass(NSTextField);
override externalInstanceMethod(#NSComboBox, "hasVerticalScroller") = Bool;
override externalInstanceMethod(#NSComboBox, "setHasVerticalScroller:") = Void, Bool;
override externalInstanceMethod(#NSComboBox, "intercellSpacing") = NSSize;
override externalInstanceMethod(#NSComboBox, "setIntercellSpacing:") = Void, NSSize;
override externalInstanceMethod(#NSComboBox, "itemHeight") = Double;
override externalInstanceMethod(#NSComboBox, "setItemHeight:") = Void, Double;
override externalInstanceMethod(#NSComboBox, "numberOfVisibleItems") = CLong;
override externalInstanceMethod(#NSComboBox, "setNumberOfVisibleItems:") = Void, CLong;
override externalInstanceMethod(#NSComboBox, "setButtonBordered:") = Void, Bool;
override externalInstanceMethod(#NSComboBox, "isButtonBordered") = Bool;
override externalInstanceMethod(#NSComboBox, "reloadData") = Void;
override externalInstanceMethod(#NSComboBox, "noteNumberOfItemsChanged") = Void;
override externalInstanceMethod(#NSComboBox, "setUsesDataSource:") = Void, Bool;
override externalInstanceMethod(#NSComboBox, "usesDataSource") = Bool;
override externalInstanceMethod(#NSComboBox, "scrollItemAtIndexToTop:") = Void, CLong;
override externalInstanceMethod(#NSComboBox, "scrollItemAtIndexToVisible:") = Void, CLong;
override externalInstanceMethod(#NSComboBox, "selectItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSComboBox, "deselectItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSComboBox, "indexOfSelectedItem") = CLong;
override externalInstanceMethod(#NSComboBox, "numberOfItems") = CLong;
override externalInstanceMethod(#NSComboBox, "completes") = Bool;
override externalInstanceMethod(#NSComboBox, "setCompletes:") = Void, Bool;
override externalInstanceMethod(#NSComboBox, "delegate") = Id;
override externalInstanceMethod(#NSComboBox, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSComboBox, "dataSource") = Id;
override externalInstanceMethod(#NSComboBox, "setDataSource:") = Void, Id;
override externalInstanceMethod(#NSComboBox, "addItemWithObjectValue:") = Void, Id;
override externalInstanceMethod(#NSComboBox, "addItemsWithObjectValues:") = Void, NSArray;
override externalInstanceMethod(#NSComboBox, "insertItemWithObjectValue:atIndex:") = Void, Id, CLong;
override externalInstanceMethod(#NSComboBox, "removeItemWithObjectValue:") = Void, Id;
override externalInstanceMethod(#NSComboBox, "removeItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSComboBox, "removeAllItems") = Void;
override externalInstanceMethod(#NSComboBox, "selectItemWithObjectValue:") = Void, Id;
override externalInstanceMethod(#NSComboBox, "itemObjectValueAtIndex:") = Id, CLong;
override externalInstanceMethod(#NSComboBox, "objectValueOfSelectedItem") = Id;
override externalInstanceMethod(#NSComboBox, "indexOfItemWithObjectValue:") = CLong, Id;
override externalInstanceMethod(#NSComboBox, "objectValues") = NSArray;

record NSComboBoxCell = externalClass(NSTextFieldCell);
override externalInstanceMethod(#NSComboBoxCell, "hasVerticalScroller") = Bool;
override externalInstanceMethod(#NSComboBoxCell, "setHasVerticalScroller:") = Void, Bool;
override externalInstanceMethod(#NSComboBoxCell, "intercellSpacing") = NSSize;
override externalInstanceMethod(#NSComboBoxCell, "setIntercellSpacing:") = Void, NSSize;
override externalInstanceMethod(#NSComboBoxCell, "itemHeight") = Double;
override externalInstanceMethod(#NSComboBoxCell, "setItemHeight:") = Void, Double;
override externalInstanceMethod(#NSComboBoxCell, "numberOfVisibleItems") = CLong;
override externalInstanceMethod(#NSComboBoxCell, "setNumberOfVisibleItems:") = Void, CLong;
override externalInstanceMethod(#NSComboBoxCell, "setButtonBordered:") = Void, Bool;
override externalInstanceMethod(#NSComboBoxCell, "isButtonBordered") = Bool;
override externalInstanceMethod(#NSComboBoxCell, "reloadData") = Void;
override externalInstanceMethod(#NSComboBoxCell, "noteNumberOfItemsChanged") = Void;
override externalInstanceMethod(#NSComboBoxCell, "setUsesDataSource:") = Void, Bool;
override externalInstanceMethod(#NSComboBoxCell, "usesDataSource") = Bool;
override externalInstanceMethod(#NSComboBoxCell, "scrollItemAtIndexToTop:") = Void, CLong;
override externalInstanceMethod(#NSComboBoxCell, "scrollItemAtIndexToVisible:") = Void, CLong;
override externalInstanceMethod(#NSComboBoxCell, "selectItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSComboBoxCell, "deselectItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSComboBoxCell, "indexOfSelectedItem") = CLong;
override externalInstanceMethod(#NSComboBoxCell, "numberOfItems") = CLong;
override externalInstanceMethod(#NSComboBoxCell, "completes") = Bool;
override externalInstanceMethod(#NSComboBoxCell, "setCompletes:") = Void, Bool;
override externalInstanceMethod(#NSComboBoxCell, "completedString:") = NSString, NSString;
override externalInstanceMethod(#NSComboBoxCell, "dataSource") = Id;
override externalInstanceMethod(#NSComboBoxCell, "setDataSource:") = Void, Id;
override externalInstanceMethod(#NSComboBoxCell, "addItemWithObjectValue:") = Void, Id;
override externalInstanceMethod(#NSComboBoxCell, "addItemsWithObjectValues:") = Void, NSArray;
override externalInstanceMethod(#NSComboBoxCell, "insertItemWithObjectValue:atIndex:") = Void, Id, CLong;
override externalInstanceMethod(#NSComboBoxCell, "removeItemWithObjectValue:") = Void, Id;
override externalInstanceMethod(#NSComboBoxCell, "removeItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSComboBoxCell, "removeAllItems") = Void;
override externalInstanceMethod(#NSComboBoxCell, "selectItemWithObjectValue:") = Void, Id;
override externalInstanceMethod(#NSComboBoxCell, "itemObjectValueAtIndex:") = Id, CLong;
override externalInstanceMethod(#NSComboBoxCell, "objectValueOfSelectedItem") = Id;
override externalInstanceMethod(#NSComboBoxCell, "indexOfItemWithObjectValue:") = CLong, Id;
override externalInstanceMethod(#NSComboBoxCell, "objectValues") = NSArray;

record NSControl = externalClass(NSView);
override externalClassMethod(#NSControl, "setCellClass:") = Void, Id;
override externalClassMethod(#NSControl, "cellClass") = Id;
override externalInstanceMethod(#NSControl, "initWithFrame:") = Id, NSRect;
override externalInstanceMethod(#NSControl, "sizeToFit") = Void;
override externalInstanceMethod(#NSControl, "calcSize") = Void;
override externalInstanceMethod(#NSControl, "cell") = Id;
override externalInstanceMethod(#NSControl, "setCell:") = Void, NSCell;
override externalInstanceMethod(#NSControl, "selectedCell") = Id;
override externalInstanceMethod(#NSControl, "target") = Id;
override externalInstanceMethod(#NSControl, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSControl, "action") = SelectorHandle;
override externalInstanceMethod(#NSControl, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSControl, "tag") = CLong;
override externalInstanceMethod(#NSControl, "setTag:") = Void, CLong;
override externalInstanceMethod(#NSControl, "selectedTag") = CLong;
override externalInstanceMethod(#NSControl, "setIgnoresMultiClick:") = Void, Bool;
override externalInstanceMethod(#NSControl, "ignoresMultiClick") = Bool;
override externalInstanceMethod(#NSControl, "sendActionOn:") = CLong, CLong;
override externalInstanceMethod(#NSControl, "isContinuous") = Bool;
override externalInstanceMethod(#NSControl, "setContinuous:") = Void, Bool;
override externalInstanceMethod(#NSControl, "isEnabled") = Bool;
override externalInstanceMethod(#NSControl, "setEnabled:") = Void, Bool;
override externalInstanceMethod(#NSControl, "alignment") = CULong;
override externalInstanceMethod(#NSControl, "setAlignment:") = Void, CULong;
override externalInstanceMethod(#NSControl, "font") = NSFont;
override externalInstanceMethod(#NSControl, "setFont:") = Void, NSFont;
override externalInstanceMethod(#NSControl, "setFormatter:") = Void, NSFormatter;
override externalInstanceMethod(#NSControl, "formatter") = Id;
override externalInstanceMethod(#NSControl, "setObjectValue:") = Void, Id;
override externalInstanceMethod(#NSControl, "setStringValue:") = Void, NSString;
override externalInstanceMethod(#NSControl, "setIntValue:") = Void, Int;
override externalInstanceMethod(#NSControl, "setFloatValue:") = Void, Float;
override externalInstanceMethod(#NSControl, "setDoubleValue:") = Void, Double;
override externalInstanceMethod(#NSControl, "objectValue") = Id;
override externalInstanceMethod(#NSControl, "stringValue") = NSString;
override externalInstanceMethod(#NSControl, "intValue") = Int;
override externalInstanceMethod(#NSControl, "floatValue") = Float;
override externalInstanceMethod(#NSControl, "doubleValue") = Double;
override externalInstanceMethod(#NSControl, "setNeedsDisplay") = Void;
override externalInstanceMethod(#NSControl, "updateCell:") = Void, NSCell;
override externalInstanceMethod(#NSControl, "updateCellInside:") = Void, NSCell;
override externalInstanceMethod(#NSControl, "drawCellInside:") = Void, NSCell;
override externalInstanceMethod(#NSControl, "drawCell:") = Void, NSCell;
override externalInstanceMethod(#NSControl, "selectCell:") = Void, NSCell;
override externalInstanceMethod(#NSControl, "sendAction:to:") = Bool, SelectorHandle, Id;
override externalInstanceMethod(#NSControl, "takeIntValueFrom:") = Void, Id;
override externalInstanceMethod(#NSControl, "takeFloatValueFrom:") = Void, Id;
override externalInstanceMethod(#NSControl, "takeDoubleValueFrom:") = Void, Id;
override externalInstanceMethod(#NSControl, "takeStringValueFrom:") = Void, Id;
override externalInstanceMethod(#NSControl, "takeObjectValueFrom:") = Void, Id;
override externalInstanceMethod(#NSControl, "currentEditor") = NSText;
override externalInstanceMethod(#NSControl, "abortEditing") = Bool;
override externalInstanceMethod(#NSControl, "validateEditing") = Void;
override externalInstanceMethod(#NSControl, "mouseDown:") = Void, NSEvent;
override externalInstanceMethod(#NSControl, "baseWritingDirection") = CLong;
override externalInstanceMethod(#NSControl, "setBaseWritingDirection:") = Void, CLong;
override externalInstanceMethod(#NSControl, "integerValue") = CLong;
override externalInstanceMethod(#NSControl, "setIntegerValue:") = Void, CLong;
override externalInstanceMethod(#NSControl, "takeIntegerValueFrom:") = Void, Id;
override externalInstanceMethod(#NSControl, "performClick:") = Void, Id;
override externalInstanceMethod(#NSControl, "setRefusesFirstResponder:") = Void, Bool;
override externalInstanceMethod(#NSControl, "refusesFirstResponder") = Bool;
override externalInstanceMethod(#NSControl, "attributedStringValue") = NSAttributedString;
override externalInstanceMethod(#NSControl, "setAttributedStringValue:") = Void, NSAttributedString;
override externalInstanceMethod(#NSControl, "setFloatingPointFormat:left:right:") = Void, Bool, CULong, CULong;

record NSController = externalClass(NSObject);
override externalInstanceMethod(#NSController, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSController, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSController, "objectDidBeginEditing:") = Void, Id;
override externalInstanceMethod(#NSController, "objectDidEndEditing:") = Void, Id;
override externalInstanceMethod(#NSController, "discardEditing") = Void;
override externalInstanceMethod(#NSController, "commitEditing") = Bool;
override externalInstanceMethod(#NSController, "commitEditingWithDelegate:didCommitSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSController, "isEditing") = Bool;

record NSCursor = externalClass(NSObject);
override externalInstanceMethod(#NSCursor, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSCursor, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSCursor, "currentCursor") = NSCursor;
override externalClassMethod(#NSCursor, "currentSystemCursor") = NSCursor;
override externalClassMethod(#NSCursor, "arrowCursor") = NSCursor;
override externalClassMethod(#NSCursor, "IBeamCursor") = NSCursor;
override externalClassMethod(#NSCursor, "pointingHandCursor") = NSCursor;
override externalClassMethod(#NSCursor, "closedHandCursor") = NSCursor;
override externalClassMethod(#NSCursor, "openHandCursor") = NSCursor;
override externalClassMethod(#NSCursor, "resizeLeftCursor") = NSCursor;
override externalClassMethod(#NSCursor, "resizeRightCursor") = NSCursor;
override externalClassMethod(#NSCursor, "resizeLeftRightCursor") = NSCursor;
override externalClassMethod(#NSCursor, "resizeUpCursor") = NSCursor;
override externalClassMethod(#NSCursor, "resizeDownCursor") = NSCursor;
override externalClassMethod(#NSCursor, "resizeUpDownCursor") = NSCursor;
override externalClassMethod(#NSCursor, "crosshairCursor") = NSCursor;
override externalClassMethod(#NSCursor, "disappearingItemCursor") = NSCursor;
override externalClassMethod(#NSCursor, "operationNotAllowedCursor") = NSCursor;
override externalClassMethod(#NSCursor, "dragLinkCursor") = NSCursor;
override externalClassMethod(#NSCursor, "dragCopyCursor") = NSCursor;
override externalClassMethod(#NSCursor, "contextualMenuCursor") = NSCursor;
override externalInstanceMethod(#NSCursor, "initWithImage:hotSpot:") = Id, NSImage, NSPoint;
override externalInstanceMethod(#NSCursor, "initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:") = Id, NSImage, NSColor, NSColor, NSPoint;
override externalClassMethod(#NSCursor, "hide") = Void;
override externalClassMethod(#NSCursor, "unhide") = Void;
override externalClassMethod(#NSCursor, "setHiddenUntilMouseMoves:") = Void, Bool;
override externalClassMethod(#NSCursor, "pop") = Void;
override externalInstanceMethod(#NSCursor, "image") = NSImage;
override externalInstanceMethod(#NSCursor, "hotSpot") = NSPoint;
override externalInstanceMethod(#NSCursor, "push") = Void;
override externalInstanceMethod(#NSCursor, "pop") = Void;
override externalInstanceMethod(#NSCursor, "set") = Void;
override externalInstanceMethod(#NSCursor, "setOnMouseExited:") = Void, Bool;
override externalInstanceMethod(#NSCursor, "setOnMouseEntered:") = Void, Bool;
override externalInstanceMethod(#NSCursor, "isSetOnMouseExited") = Bool;
override externalInstanceMethod(#NSCursor, "isSetOnMouseEntered") = Bool;
override externalInstanceMethod(#NSCursor, "mouseEntered:") = Void, NSEvent;
override externalInstanceMethod(#NSCursor, "mouseExited:") = Void, NSEvent;

record NSCustomImageRep = externalClass(NSImageRep);
override externalInstanceMethod(#NSCustomImageRep, "initWithDrawSelector:delegate:") = Id, SelectorHandle, Id;
override externalInstanceMethod(#NSCustomImageRep, "drawSelector") = SelectorHandle;
override externalInstanceMethod(#NSCustomImageRep, "delegate") = Id;

record NSDatePicker = externalClass(NSControl);
override externalInstanceMethod(#NSDatePicker, "datePickerStyle") = CULong;
override externalInstanceMethod(#NSDatePicker, "setDatePickerStyle:") = Void, CULong;
override externalInstanceMethod(#NSDatePicker, "isBezeled") = Bool;
override externalInstanceMethod(#NSDatePicker, "setBezeled:") = Void, Bool;
override externalInstanceMethod(#NSDatePicker, "isBordered") = Bool;
override externalInstanceMethod(#NSDatePicker, "setBordered:") = Void, Bool;
override externalInstanceMethod(#NSDatePicker, "drawsBackground") = Bool;
override externalInstanceMethod(#NSDatePicker, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSDatePicker, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSDatePicker, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSDatePicker, "textColor") = NSColor;
override externalInstanceMethod(#NSDatePicker, "setTextColor:") = Void, NSColor;
override externalInstanceMethod(#NSDatePicker, "datePickerMode") = CULong;
override externalInstanceMethod(#NSDatePicker, "setDatePickerMode:") = Void, CULong;
override externalInstanceMethod(#NSDatePicker, "datePickerElements") = CULong;
override externalInstanceMethod(#NSDatePicker, "setDatePickerElements:") = Void, CULong;
override externalInstanceMethod(#NSDatePicker, "calendar") = NSCalendar;
override externalInstanceMethod(#NSDatePicker, "setCalendar:") = Void, NSCalendar;
override externalInstanceMethod(#NSDatePicker, "locale") = NSLocale;
override externalInstanceMethod(#NSDatePicker, "setLocale:") = Void, NSLocale;
override externalInstanceMethod(#NSDatePicker, "timeZone") = NSTimeZone;
override externalInstanceMethod(#NSDatePicker, "setTimeZone:") = Void, NSTimeZone;
override externalInstanceMethod(#NSDatePicker, "dateValue") = NSDate;
override externalInstanceMethod(#NSDatePicker, "setDateValue:") = Void, NSDate;
override externalInstanceMethod(#NSDatePicker, "timeInterval") = Double;
override externalInstanceMethod(#NSDatePicker, "setTimeInterval:") = Void, Double;
override externalInstanceMethod(#NSDatePicker, "minDate") = NSDate;
override externalInstanceMethod(#NSDatePicker, "setMinDate:") = Void, NSDate;
override externalInstanceMethod(#NSDatePicker, "maxDate") = NSDate;
override externalInstanceMethod(#NSDatePicker, "setMaxDate:") = Void, NSDate;
override externalInstanceMethod(#NSDatePicker, "delegate") = Id;
override externalInstanceMethod(#NSDatePicker, "setDelegate:") = Void, Id;

record NSDatePickerCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSDatePickerCell, "datePickerStyle") = CULong;
override externalInstanceMethod(#NSDatePickerCell, "setDatePickerStyle:") = Void, CULong;
override externalInstanceMethod(#NSDatePickerCell, "drawsBackground") = Bool;
override externalInstanceMethod(#NSDatePickerCell, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSDatePickerCell, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSDatePickerCell, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSDatePickerCell, "textColor") = NSColor;
override externalInstanceMethod(#NSDatePickerCell, "setTextColor:") = Void, NSColor;
override externalInstanceMethod(#NSDatePickerCell, "datePickerMode") = CULong;
override externalInstanceMethod(#NSDatePickerCell, "setDatePickerMode:") = Void, CULong;
override externalInstanceMethod(#NSDatePickerCell, "datePickerElements") = CULong;
override externalInstanceMethod(#NSDatePickerCell, "setDatePickerElements:") = Void, CULong;
override externalInstanceMethod(#NSDatePickerCell, "calendar") = NSCalendar;
override externalInstanceMethod(#NSDatePickerCell, "setCalendar:") = Void, NSCalendar;
override externalInstanceMethod(#NSDatePickerCell, "locale") = NSLocale;
override externalInstanceMethod(#NSDatePickerCell, "setLocale:") = Void, NSLocale;
override externalInstanceMethod(#NSDatePickerCell, "timeZone") = NSTimeZone;
override externalInstanceMethod(#NSDatePickerCell, "setTimeZone:") = Void, NSTimeZone;
override externalInstanceMethod(#NSDatePickerCell, "dateValue") = NSDate;
override externalInstanceMethod(#NSDatePickerCell, "setDateValue:") = Void, NSDate;
override externalInstanceMethod(#NSDatePickerCell, "timeInterval") = Double;
override externalInstanceMethod(#NSDatePickerCell, "setTimeInterval:") = Void, Double;
override externalInstanceMethod(#NSDatePickerCell, "minDate") = NSDate;
override externalInstanceMethod(#NSDatePickerCell, "setMinDate:") = Void, NSDate;
override externalInstanceMethod(#NSDatePickerCell, "maxDate") = NSDate;
override externalInstanceMethod(#NSDatePickerCell, "setMaxDate:") = Void, NSDate;
override externalInstanceMethod(#NSDatePickerCell, "delegate") = Id;
override externalInstanceMethod(#NSDatePickerCell, "setDelegate:") = Void, Id;

record NSDictionaryController = externalClass(NSArrayController);
override externalInstanceMethod(#NSDictionaryController, "newObject") = Id;
override externalInstanceMethod(#NSDictionaryController, "setInitialKey:") = Void, NSString;
override externalInstanceMethod(#NSDictionaryController, "initialKey") = NSString;
override externalInstanceMethod(#NSDictionaryController, "setInitialValue:") = Void, Id;
override externalInstanceMethod(#NSDictionaryController, "initialValue") = Id;
override externalInstanceMethod(#NSDictionaryController, "setIncludedKeys:") = Void, NSArray;
override externalInstanceMethod(#NSDictionaryController, "includedKeys") = NSArray;
override externalInstanceMethod(#NSDictionaryController, "setExcludedKeys:") = Void, NSArray;
override externalInstanceMethod(#NSDictionaryController, "excludedKeys") = NSArray;
override externalInstanceMethod(#NSDictionaryController, "setLocalizedKeyDictionary:") = Void, NSDictionary;
override externalInstanceMethod(#NSDictionaryController, "localizedKeyDictionary") = NSDictionary;
override externalInstanceMethod(#NSDictionaryController, "setLocalizedKeyTable:") = Void, NSString;
override externalInstanceMethod(#NSDictionaryController, "localizedKeyTable") = NSString;

record NSDockTile = externalClass(NSObject);
override externalInstanceMethod(#NSDockTile, "size") = NSSize;
override externalInstanceMethod(#NSDockTile, "setContentView:") = Void, NSView;
override externalInstanceMethod(#NSDockTile, "contentView") = NSView;
override externalInstanceMethod(#NSDockTile, "display") = Void;
override externalInstanceMethod(#NSDockTile, "setShowsApplicationBadge:") = Void, Bool;
override externalInstanceMethod(#NSDockTile, "showsApplicationBadge") = Bool;
override externalInstanceMethod(#NSDockTile, "setBadgeLabel:") = Void, NSString;
override externalInstanceMethod(#NSDockTile, "badgeLabel") = NSString;
override externalInstanceMethod(#NSDockTile, "owner") = Id;

record NSDocument = externalClass(NSObject);
override externalInstanceMethod(#NSDocument, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSDocument, "init") = Id;
override externalInstanceMethod(#NSDocument, "initWithType:error:") = Id, NSString, Pointer[NSError];
override externalClassMethod(#NSDocument, "canConcurrentlyReadDocumentsOfType:") = Bool, NSString;
override externalInstanceMethod(#NSDocument, "initWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "initForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "setFileType:") = Void, NSString;
override externalInstanceMethod(#NSDocument, "fileType") = NSString;
override externalInstanceMethod(#NSDocument, "setFileURL:") = Void, NSURL;
override externalInstanceMethod(#NSDocument, "fileURL") = NSURL;
override externalInstanceMethod(#NSDocument, "setFileModificationDate:") = Void, NSDate;
override externalInstanceMethod(#NSDocument, "fileModificationDate") = NSDate;
override externalInstanceMethod(#NSDocument, "revertDocumentToSaved:") = Void, Id;
override externalInstanceMethod(#NSDocument, "revertToContentsOfURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "readFromURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "readFromFileWrapper:ofType:error:") = Bool, NSFileWrapper, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "readFromData:ofType:error:") = Bool, NSData, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "writeToURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "fileWrapperOfType:error:") = NSFileWrapper, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "dataOfType:error:") = NSData, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "writeSafelyToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "writeToURL:ofType:forSaveOperation:originalContentsURL:error:") = Bool, NSURL, NSString, CULong, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:") = NSDictionary, NSURL, NSString, CULong, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "keepBackupFile") = Bool;
override externalInstanceMethod(#NSDocument, "saveDocument:") = Void, Id;
override externalInstanceMethod(#NSDocument, "saveDocumentAs:") = Void, Id;
override externalInstanceMethod(#NSDocument, "saveDocumentTo:") = Void, Id;
override externalInstanceMethod(#NSDocument, "saveDocumentWithDelegate:didSaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, CULong, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "shouldRunSavePanelWithAccessoryView") = Bool;
override externalInstanceMethod(#NSDocument, "prepareSavePanel:") = Bool, NSSavePanel;
override externalInstanceMethod(#NSDocument, "fileNameExtensionWasHiddenInLastRunSavePanel") = Bool;
override externalInstanceMethod(#NSDocument, "fileTypeFromLastRunSavePanel") = NSString;
override externalInstanceMethod(#NSDocument, "saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSURL, NSString, CULong, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "saveToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "hasUnautosavedChanges") = Bool;
override externalInstanceMethod(#NSDocument, "autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "autosavingFileType") = NSString;
override externalInstanceMethod(#NSDocument, "setAutosavedContentsFileURL:") = Void, NSURL;
override externalInstanceMethod(#NSDocument, "autosavedContentsFileURL") = NSURL;
override externalInstanceMethod(#NSDocument, "canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "close") = Void;
override externalInstanceMethod(#NSDocument, "runPageLayout:") = Void, Id;
override externalInstanceMethod(#NSDocument, "runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:") = Void, NSPrintInfo, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "preparePageLayout:") = Bool, NSPageLayout;
override externalInstanceMethod(#NSDocument, "shouldChangePrintInfo:") = Bool, NSPrintInfo;
override externalInstanceMethod(#NSDocument, "setPrintInfo:") = Void, NSPrintInfo;
override externalInstanceMethod(#NSDocument, "printInfo") = NSPrintInfo;
override externalInstanceMethod(#NSDocument, "printDocument:") = Void, Id;
override externalInstanceMethod(#NSDocument, "printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:") = Void, NSDictionary, Bool, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "printOperationWithSettings:error:") = NSPrintOperation, NSDictionary, Pointer[NSError];
override externalInstanceMethod(#NSDocument, "runModalPrintOperation:delegate:didRunSelector:contextInfo:") = Void, NSPrintOperation, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "isDocumentEdited") = Bool;
override externalInstanceMethod(#NSDocument, "updateChangeCount:") = Void, CULong;
override externalInstanceMethod(#NSDocument, "setUndoManager:") = Void, NSUndoManager;
override externalInstanceMethod(#NSDocument, "undoManager") = NSUndoManager;
override externalInstanceMethod(#NSDocument, "setHasUndoManager:") = Void, Bool;
override externalInstanceMethod(#NSDocument, "hasUndoManager") = Bool;
override externalInstanceMethod(#NSDocument, "presentError:modalForWindow:delegate:didPresentSelector:contextInfo:") = Void, NSError, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "presentError:") = Bool, NSError;
override externalInstanceMethod(#NSDocument, "willPresentError:") = NSError, NSError;
override externalInstanceMethod(#NSDocument, "makeWindowControllers") = Void;
override externalInstanceMethod(#NSDocument, "windowNibName") = NSString;
override externalInstanceMethod(#NSDocument, "windowControllerWillLoadNib:") = Void, NSWindowController;
override externalInstanceMethod(#NSDocument, "windowControllerDidLoadNib:") = Void, NSWindowController;
override externalInstanceMethod(#NSDocument, "setWindow:") = Void, NSWindow;
override externalInstanceMethod(#NSDocument, "addWindowController:") = Void, NSWindowController;
override externalInstanceMethod(#NSDocument, "removeWindowController:") = Void, NSWindowController;
override externalInstanceMethod(#NSDocument, "showWindows") = Void;
override externalInstanceMethod(#NSDocument, "windowControllers") = NSArray;
override externalInstanceMethod(#NSDocument, "shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:") = Void, NSWindowController, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "displayName") = NSString;
override externalInstanceMethod(#NSDocument, "windowForSheet") = NSWindow;
override externalClassMethod(#NSDocument, "readableTypes") = NSArray;
override externalClassMethod(#NSDocument, "writableTypes") = NSArray;
override externalClassMethod(#NSDocument, "isNativeType:") = Bool, NSString;
override externalInstanceMethod(#NSDocument, "writableTypesForSaveOperation:") = NSArray, CULong;
override externalInstanceMethod(#NSDocument, "fileNameExtensionForType:saveOperation:") = NSString, NSString, CULong;
override externalInstanceMethod(#NSDocument, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSDocument, "dataRepresentationOfType:") = NSData, NSString;
override externalInstanceMethod(#NSDocument, "fileAttributesToWriteToFile:ofType:saveOperation:") = NSDictionary, NSString, NSString, CULong;
override externalInstanceMethod(#NSDocument, "fileName") = NSString;
override externalInstanceMethod(#NSDocument, "fileWrapperRepresentationOfType:") = NSFileWrapper, NSString;
override externalInstanceMethod(#NSDocument, "initWithContentsOfFile:ofType:") = Id, NSString, NSString;
override externalInstanceMethod(#NSDocument, "initWithContentsOfURL:ofType:") = Id, NSURL, NSString;
override externalInstanceMethod(#NSDocument, "loadDataRepresentation:ofType:") = Bool, NSData, NSString;
override externalInstanceMethod(#NSDocument, "loadFileWrapperRepresentation:ofType:") = Bool, NSFileWrapper, NSString;
override externalInstanceMethod(#NSDocument, "printShowingPrintPanel:") = Void, Bool;
override externalInstanceMethod(#NSDocument, "readFromFile:ofType:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSDocument, "readFromURL:ofType:") = Bool, NSURL, NSString;
override externalInstanceMethod(#NSDocument, "revertToSavedFromFile:ofType:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSDocument, "revertToSavedFromURL:ofType:") = Bool, NSURL, NSString;
override externalInstanceMethod(#NSDocument, "runModalPageLayoutWithPrintInfo:") = CLong, NSPrintInfo;
override externalInstanceMethod(#NSDocument, "saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSString, CULong, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocument, "setFileName:") = Void, NSString;
override externalInstanceMethod(#NSDocument, "writeToFile:ofType:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSDocument, "writeToFile:ofType:originalFile:saveOperation:") = Bool, NSString, NSString, NSString, CULong;
override externalInstanceMethod(#NSDocument, "writeToURL:ofType:") = Bool, NSURL, NSString;
override externalInstanceMethod(#NSDocument, "writeWithBackupToFile:ofType:saveOperation:") = Bool, NSString, NSString, CULong;
override externalInstanceMethod(#NSDocument, "lastComponentOfFileName") = NSString;
override externalInstanceMethod(#NSDocument, "setLastComponentOfFileName:") = Void, NSString;
override externalInstanceMethod(#NSDocument, "handleSaveScriptCommand:") = Id, NSScriptCommand;
override externalInstanceMethod(#NSDocument, "handleCloseScriptCommand:") = Id, NSCloseCommand;
override externalInstanceMethod(#NSDocument, "handlePrintScriptCommand:") = Id, NSScriptCommand;
override externalInstanceMethod(#NSDocument, "objectSpecifier") = NSScriptObjectSpecifier;

record NSDocumentController = externalClass(NSObject);
override externalInstanceMethod(#NSDocumentController, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSDocumentController, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSDocumentController, "validateUserInterfaceItem:") = Bool, Id;
override externalClassMethod(#NSDocumentController, "sharedDocumentController") = Id;
override externalInstanceMethod(#NSDocumentController, "init") = Id;
override externalInstanceMethod(#NSDocumentController, "documents") = NSArray;
override externalInstanceMethod(#NSDocumentController, "currentDocument") = Id;
override externalInstanceMethod(#NSDocumentController, "currentDirectory") = NSString;
override externalInstanceMethod(#NSDocumentController, "documentForURL:") = Id, NSURL;
override externalInstanceMethod(#NSDocumentController, "documentForWindow:") = Id, NSWindow;
override externalInstanceMethod(#NSDocumentController, "addDocument:") = Void, NSDocument;
override externalInstanceMethod(#NSDocumentController, "removeDocument:") = Void, NSDocument;
override externalInstanceMethod(#NSDocumentController, "newDocument:") = Void, Id;
override externalInstanceMethod(#NSDocumentController, "openUntitledDocumentAndDisplay:error:") = Id, Bool, Pointer[NSError];
override externalInstanceMethod(#NSDocumentController, "makeUntitledDocumentOfType:error:") = Id, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocumentController, "openDocument:") = Void, Id;
override externalInstanceMethod(#NSDocumentController, "URLsFromRunningOpenPanel") = NSArray;
override externalInstanceMethod(#NSDocumentController, "runModalOpenPanel:forTypes:") = CLong, NSOpenPanel, NSArray;
override externalInstanceMethod(#NSDocumentController, "openDocumentWithContentsOfURL:display:error:") = Id, NSURL, Bool, Pointer[NSError];
override externalInstanceMethod(#NSDocumentController, "makeDocumentWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocumentController, "reopenDocumentForURL:withContentsOfURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSDocumentController, "makeDocumentForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSDocumentController, "setAutosavingDelay:") = Void, Double;
override externalInstanceMethod(#NSDocumentController, "autosavingDelay") = Double;
override externalInstanceMethod(#NSDocumentController, "saveAllDocuments:") = Void, Id;
override externalInstanceMethod(#NSDocumentController, "hasEditedDocuments") = Bool;
override externalInstanceMethod(#NSDocumentController, "reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:") = Void, NSString, Bool, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocumentController, "closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocumentController, "presentError:modalForWindow:delegate:didPresentSelector:contextInfo:") = Void, NSError, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSDocumentController, "presentError:") = Bool, NSError;
override externalInstanceMethod(#NSDocumentController, "willPresentError:") = NSError, NSError;
override externalInstanceMethod(#NSDocumentController, "maximumRecentDocumentCount") = CULong;
override externalInstanceMethod(#NSDocumentController, "clearRecentDocuments:") = Void, Id;
override externalInstanceMethod(#NSDocumentController, "noteNewRecentDocument:") = Void, NSDocument;
override externalInstanceMethod(#NSDocumentController, "noteNewRecentDocumentURL:") = Void, NSURL;
override externalInstanceMethod(#NSDocumentController, "recentDocumentURLs") = NSArray;
override externalInstanceMethod(#NSDocumentController, "defaultType") = NSString;
override externalInstanceMethod(#NSDocumentController, "typeForContentsOfURL:error:") = NSString, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSDocumentController, "documentClassNames") = NSArray;
override externalInstanceMethod(#NSDocumentController, "documentClassForType:") = Id, NSString;
override externalInstanceMethod(#NSDocumentController, "displayNameForType:") = NSString, NSString;
override externalInstanceMethod(#NSDocumentController, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSDocumentController, "fileExtensionsFromType:") = NSArray, NSString;
override externalInstanceMethod(#NSDocumentController, "typeFromFileExtension:") = NSString, NSString;
override externalInstanceMethod(#NSDocumentController, "documentForFileName:") = Id, NSString;
override externalInstanceMethod(#NSDocumentController, "fileNamesFromRunningOpenPanel") = NSArray;
override externalInstanceMethod(#NSDocumentController, "makeDocumentWithContentsOfFile:ofType:") = Id, NSString, NSString;
override externalInstanceMethod(#NSDocumentController, "makeDocumentWithContentsOfURL:ofType:") = Id, NSURL, NSString;
override externalInstanceMethod(#NSDocumentController, "makeUntitledDocumentOfType:") = Id, NSString;
override externalInstanceMethod(#NSDocumentController, "openDocumentWithContentsOfFile:display:") = Id, NSString, Bool;
override externalInstanceMethod(#NSDocumentController, "openDocumentWithContentsOfURL:display:") = Id, NSURL, Bool;
override externalInstanceMethod(#NSDocumentController, "openUntitledDocumentOfType:display:") = Id, NSString, Bool;
override externalInstanceMethod(#NSDocumentController, "setShouldCreateUI:") = Void, Bool;
override externalInstanceMethod(#NSDocumentController, "shouldCreateUI") = Bool;

record NSDrawer = externalClass(NSResponder);
override externalInstanceMethod(#NSDrawer, "initWithContentSize:preferredEdge:") = Id, NSSize, CULong;
override externalInstanceMethod(#NSDrawer, "setParentWindow:") = Void, NSWindow;
override externalInstanceMethod(#NSDrawer, "parentWindow") = NSWindow;
override externalInstanceMethod(#NSDrawer, "setContentView:") = Void, NSView;
override externalInstanceMethod(#NSDrawer, "contentView") = NSView;
override externalInstanceMethod(#NSDrawer, "setPreferredEdge:") = Void, CULong;
override externalInstanceMethod(#NSDrawer, "preferredEdge") = CULong;
override externalInstanceMethod(#NSDrawer, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSDrawer, "delegate") = Id;
override externalInstanceMethod(#NSDrawer, "open") = Void;
override externalInstanceMethod(#NSDrawer, "openOnEdge:") = Void, CULong;
override externalInstanceMethod(#NSDrawer, "close") = Void;
override externalInstanceMethod(#NSDrawer, "open:") = Void, Id;
override externalInstanceMethod(#NSDrawer, "close:") = Void, Id;
override externalInstanceMethod(#NSDrawer, "toggle:") = Void, Id;
override externalInstanceMethod(#NSDrawer, "state") = CLong;
override externalInstanceMethod(#NSDrawer, "edge") = CULong;
override externalInstanceMethod(#NSDrawer, "setContentSize:") = Void, NSSize;
override externalInstanceMethod(#NSDrawer, "contentSize") = NSSize;
override externalInstanceMethod(#NSDrawer, "setMinContentSize:") = Void, NSSize;
override externalInstanceMethod(#NSDrawer, "minContentSize") = NSSize;
override externalInstanceMethod(#NSDrawer, "setMaxContentSize:") = Void, NSSize;
override externalInstanceMethod(#NSDrawer, "maxContentSize") = NSSize;
override externalInstanceMethod(#NSDrawer, "setLeadingOffset:") = Void, Double;
override externalInstanceMethod(#NSDrawer, "leadingOffset") = Double;
override externalInstanceMethod(#NSDrawer, "setTrailingOffset:") = Void, Double;
override externalInstanceMethod(#NSDrawer, "trailingOffset") = Double;

record NSEPSImageRep = externalClass(NSImageRep);
override externalClassMethod(#NSEPSImageRep, "imageRepWithData:") = Id, NSData;
override externalInstanceMethod(#NSEPSImageRep, "initWithData:") = Id, NSData;
override externalInstanceMethod(#NSEPSImageRep, "prepareGState") = Void;
override externalInstanceMethod(#NSEPSImageRep, "EPSRepresentation") = NSData;
override externalInstanceMethod(#NSEPSImageRep, "boundingBox") = NSRect;

record NSEvent = externalClass(NSObject);
override externalInstanceMethod(#NSEvent, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSEvent, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSEvent, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSEvent, "type") = CULong;
override externalInstanceMethod(#NSEvent, "modifierFlags") = CULong;
override externalInstanceMethod(#NSEvent, "timestamp") = Double;
override externalInstanceMethod(#NSEvent, "window") = NSWindow;
override externalInstanceMethod(#NSEvent, "windowNumber") = CLong;
override externalInstanceMethod(#NSEvent, "context") = NSGraphicsContext;
override externalInstanceMethod(#NSEvent, "clickCount") = CLong;
override externalInstanceMethod(#NSEvent, "buttonNumber") = CLong;
override externalInstanceMethod(#NSEvent, "eventNumber") = CLong;
override externalInstanceMethod(#NSEvent, "pressure") = Float;
override externalInstanceMethod(#NSEvent, "locationInWindow") = NSPoint;
override externalInstanceMethod(#NSEvent, "deltaX") = Double;
override externalInstanceMethod(#NSEvent, "deltaY") = Double;
override externalInstanceMethod(#NSEvent, "deltaZ") = Double;
override externalInstanceMethod(#NSEvent, "characters") = NSString;
override externalInstanceMethod(#NSEvent, "charactersIgnoringModifiers") = NSString;
override externalInstanceMethod(#NSEvent, "isARepeat") = Bool;
override externalInstanceMethod(#NSEvent, "keyCode") = UShort;
override externalInstanceMethod(#NSEvent, "trackingNumber") = CLong;
override externalInstanceMethod(#NSEvent, "userData") = RawPointer;
override externalInstanceMethod(#NSEvent, "trackingArea") = NSTrackingArea;
override externalInstanceMethod(#NSEvent, "subtype") = Short;
override externalInstanceMethod(#NSEvent, "data1") = CLong;
override externalInstanceMethod(#NSEvent, "data2") = CLong;
override externalInstanceMethod(#NSEvent, "eventRef") = RawPointer;
override externalClassMethod(#NSEvent, "eventWithEventRef:") = NSEvent, RawPointer;
override externalInstanceMethod(#NSEvent, "CGEvent") = CGEventRef;
override externalClassMethod(#NSEvent, "eventWithCGEvent:") = NSEvent, CGEventRef;
override externalClassMethod(#NSEvent, "setMouseCoalescingEnabled:") = Void, Bool;
override externalClassMethod(#NSEvent, "isMouseCoalescingEnabled") = Bool;
override externalInstanceMethod(#NSEvent, "magnification") = Double;
override externalInstanceMethod(#NSEvent, "deviceID") = CULong;
override externalInstanceMethod(#NSEvent, "rotation") = Float;
override externalInstanceMethod(#NSEvent, "absoluteX") = CLong;
override externalInstanceMethod(#NSEvent, "absoluteY") = CLong;
override externalInstanceMethod(#NSEvent, "absoluteZ") = CLong;
override externalInstanceMethod(#NSEvent, "buttonMask") = CULong;
override externalInstanceMethod(#NSEvent, "tilt") = NSPoint;
override externalInstanceMethod(#NSEvent, "tangentialPressure") = Float;
override externalInstanceMethod(#NSEvent, "vendorDefined") = Id;
override externalInstanceMethod(#NSEvent, "vendorID") = CULong;
override externalInstanceMethod(#NSEvent, "tabletID") = CULong;
override externalInstanceMethod(#NSEvent, "pointingDeviceID") = CULong;
override externalInstanceMethod(#NSEvent, "systemTabletID") = CULong;
override externalInstanceMethod(#NSEvent, "vendorPointingDeviceType") = CULong;
override externalInstanceMethod(#NSEvent, "pointingDeviceSerialNumber") = CULong;
override externalInstanceMethod(#NSEvent, "uniqueID") = UInt64;
override externalInstanceMethod(#NSEvent, "capabilityMask") = CULong;
override externalInstanceMethod(#NSEvent, "pointingDeviceType") = CULong;
override externalInstanceMethod(#NSEvent, "isEnteringProximity") = Bool;
override externalInstanceMethod(#NSEvent, "touchesMatchingPhase:inView:") = NSSet, CULong, NSView;
override externalClassMethod(#NSEvent, "startPeriodicEventsAfterDelay:withPeriod:") = Void, Double, Double;
override externalClassMethod(#NSEvent, "stopPeriodicEvents") = Void;
override externalClassMethod(#NSEvent, "mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, Float;
override externalClassMethod(#NSEvent, "keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, NSString, NSString, Bool, UShort;
override externalClassMethod(#NSEvent, "enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, RawPointer;
override externalClassMethod(#NSEvent, "otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, Short, CLong, CLong;
override externalClassMethod(#NSEvent, "mouseLocation") = NSPoint;
override externalClassMethod(#NSEvent, "modifierFlags") = CULong;
override externalClassMethod(#NSEvent, "pressedMouseButtons") = CULong;
override externalClassMethod(#NSEvent, "doubleClickInterval") = Double;
override externalClassMethod(#NSEvent, "keyRepeatDelay") = Double;
override externalClassMethod(#NSEvent, "keyRepeatInterval") = Double;
override externalClassMethod(#NSEvent, "addGlobalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
override externalClassMethod(#NSEvent, "addLocalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
override externalClassMethod(#NSEvent, "removeMonitor:") = Void, Id;

record NSFileWrapper = externalClass(NSObject);
override externalInstanceMethod(#NSFileWrapper, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSFileWrapper, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSFileWrapper, "initWithURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
override externalInstanceMethod(#NSFileWrapper, "initDirectoryWithFileWrappers:") = Id, NSDictionary;
override externalInstanceMethod(#NSFileWrapper, "initRegularFileWithContents:") = Id, NSData;
override externalInstanceMethod(#NSFileWrapper, "initSymbolicLinkWithDestinationURL:") = Id, NSURL;
override externalInstanceMethod(#NSFileWrapper, "initWithSerializedRepresentation:") = Id, NSData;
override externalInstanceMethod(#NSFileWrapper, "isDirectory") = Bool;
override externalInstanceMethod(#NSFileWrapper, "isRegularFile") = Bool;
override externalInstanceMethod(#NSFileWrapper, "isSymbolicLink") = Bool;
override externalInstanceMethod(#NSFileWrapper, "setPreferredFilename:") = Void, NSString;
override externalInstanceMethod(#NSFileWrapper, "preferredFilename") = NSString;
override externalInstanceMethod(#NSFileWrapper, "setFilename:") = Void, NSString;
override externalInstanceMethod(#NSFileWrapper, "filename") = NSString;
override externalInstanceMethod(#NSFileWrapper, "setFileAttributes:") = Void, NSDictionary;
override externalInstanceMethod(#NSFileWrapper, "fileAttributes") = NSDictionary;
override externalInstanceMethod(#NSFileWrapper, "setIcon:") = Void, NSImage;
override externalInstanceMethod(#NSFileWrapper, "icon") = NSImage;
override externalInstanceMethod(#NSFileWrapper, "matchesContentsOfURL:") = Bool, NSURL;
override externalInstanceMethod(#NSFileWrapper, "readFromURL:options:error:") = Bool, NSURL, CULong, Pointer[NSError];
override externalInstanceMethod(#NSFileWrapper, "writeToURL:options:originalContentsURL:error:") = Bool, NSURL, CULong, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSFileWrapper, "serializedRepresentation") = NSData;
override externalInstanceMethod(#NSFileWrapper, "addFileWrapper:") = NSString, NSFileWrapper;
override externalInstanceMethod(#NSFileWrapper, "addRegularFileWithContents:preferredFilename:") = NSString, NSData, NSString;
override externalInstanceMethod(#NSFileWrapper, "removeFileWrapper:") = Void, NSFileWrapper;
override externalInstanceMethod(#NSFileWrapper, "fileWrappers") = NSDictionary;
override externalInstanceMethod(#NSFileWrapper, "keyForFileWrapper:") = NSString, NSFileWrapper;
override externalInstanceMethod(#NSFileWrapper, "regularFileContents") = NSData;
override externalInstanceMethod(#NSFileWrapper, "symbolicLinkDestinationURL") = NSURL;
override externalInstanceMethod(#NSFileWrapper, "initWithPath:") = Id, NSString;
override externalInstanceMethod(#NSFileWrapper, "initSymbolicLinkWithDestination:") = Id, NSString;
override externalInstanceMethod(#NSFileWrapper, "needsToBeUpdatedFromPath:") = Bool, NSString;
override externalInstanceMethod(#NSFileWrapper, "updateFromPath:") = Bool, NSString;
override externalInstanceMethod(#NSFileWrapper, "writeToFile:atomically:updateFilenames:") = Bool, NSString, Bool, Bool;
override externalInstanceMethod(#NSFileWrapper, "addFileWithPath:") = NSString, NSString;
override externalInstanceMethod(#NSFileWrapper, "addSymbolicLinkWithDestination:preferredFilename:") = NSString, NSString, NSString;
override externalInstanceMethod(#NSFileWrapper, "symbolicLinkDestination") = NSString;

record NSFont = externalClass(NSObject);
override externalInstanceMethod(#NSFont, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSFont, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSFont, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSFont, "fontWithName:size:") = NSFont, NSString, Double;
override externalClassMethod(#NSFont, "fontWithName:matrix:") = NSFont, NSString, Pointer[Double];
override externalClassMethod(#NSFont, "fontWithDescriptor:size:") = NSFont, NSFontDescriptor, Double;
override externalClassMethod(#NSFont, "fontWithDescriptor:textTransform:") = NSFont, NSFontDescriptor, NSAffineTransform;
override externalClassMethod(#NSFont, "userFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "userFixedPitchFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "setUserFont:") = Void, NSFont;
override externalClassMethod(#NSFont, "setUserFixedPitchFont:") = Void, NSFont;
override externalClassMethod(#NSFont, "systemFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "boldSystemFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "labelFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "titleBarFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "menuFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "menuBarFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "messageFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "paletteFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "toolTipsFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "controlContentFontOfSize:") = NSFont, Double;
override externalClassMethod(#NSFont, "systemFontSize") = Double;
override externalClassMethod(#NSFont, "smallSystemFontSize") = Double;
override externalClassMethod(#NSFont, "labelFontSize") = Double;
override externalClassMethod(#NSFont, "systemFontSizeForControlSize:") = Double, CULong;
override externalInstanceMethod(#NSFont, "fontName") = NSString;
override externalInstanceMethod(#NSFont, "pointSize") = Double;
override externalInstanceMethod(#NSFont, "matrix") = Pointer[Double];
override externalInstanceMethod(#NSFont, "familyName") = NSString;
override externalInstanceMethod(#NSFont, "displayName") = NSString;
override externalInstanceMethod(#NSFont, "fontDescriptor") = NSFontDescriptor;
override externalInstanceMethod(#NSFont, "textTransform") = NSAffineTransform;
override externalInstanceMethod(#NSFont, "numberOfGlyphs") = CULong;
override externalInstanceMethod(#NSFont, "mostCompatibleStringEncoding") = CULong;
override externalInstanceMethod(#NSFont, "glyphWithName:") = UInt, NSString;
override externalInstanceMethod(#NSFont, "coveredCharacterSet") = NSCharacterSet;
override externalInstanceMethod(#NSFont, "boundingRectForFont") = NSRect;
override externalInstanceMethod(#NSFont, "maximumAdvancement") = NSSize;
override externalInstanceMethod(#NSFont, "ascender") = Double;
override externalInstanceMethod(#NSFont, "descender") = Double;
override externalInstanceMethod(#NSFont, "leading") = Double;
override externalInstanceMethod(#NSFont, "underlinePosition") = Double;
override externalInstanceMethod(#NSFont, "underlineThickness") = Double;
override externalInstanceMethod(#NSFont, "italicAngle") = Double;
override externalInstanceMethod(#NSFont, "capHeight") = Double;
override externalInstanceMethod(#NSFont, "xHeight") = Double;
override externalInstanceMethod(#NSFont, "isFixedPitch") = Bool;
override externalInstanceMethod(#NSFont, "boundingRectForGlyph:") = NSRect, UInt;
override externalInstanceMethod(#NSFont, "advancementForGlyph:") = NSSize, UInt;
override externalInstanceMethod(#NSFont, "getBoundingRects:forGlyphs:count:") = Void, NSRectArray, Pointer[UInt], CULong;
override externalInstanceMethod(#NSFont, "getAdvancements:forGlyphs:count:") = Void, NSSizeArray, Pointer[UInt], CULong;
override externalInstanceMethod(#NSFont, "getAdvancements:forPackedGlyphs:length:") = Void, NSSizeArray, RawPointer, CULong;
override externalInstanceMethod(#NSFont, "set") = Void;
override externalInstanceMethod(#NSFont, "setInContext:") = Void, NSGraphicsContext;
override externalInstanceMethod(#NSFont, "printerFont") = NSFont;
override externalInstanceMethod(#NSFont, "screenFont") = NSFont;
override externalInstanceMethod(#NSFont, "screenFontWithRenderingMode:") = NSFont, CULong;
override externalInstanceMethod(#NSFont, "renderingMode") = CULong;

record NSFontDescriptor = externalClass(NSObject);
override externalInstanceMethod(#NSFontDescriptor, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSFontDescriptor, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSFontDescriptor, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSFontDescriptor, "postscriptName") = NSString;
override externalInstanceMethod(#NSFontDescriptor, "pointSize") = Double;
override externalInstanceMethod(#NSFontDescriptor, "matrix") = NSAffineTransform;
override externalInstanceMethod(#NSFontDescriptor, "symbolicTraits") = UInt;
override externalInstanceMethod(#NSFontDescriptor, "objectForKey:") = Id, NSString;
override externalInstanceMethod(#NSFontDescriptor, "fontAttributes") = NSDictionary;
override externalClassMethod(#NSFontDescriptor, "fontDescriptorWithFontAttributes:") = NSFontDescriptor, NSDictionary;
override externalClassMethod(#NSFontDescriptor, "fontDescriptorWithName:size:") = NSFontDescriptor, NSString, Double;
override externalClassMethod(#NSFontDescriptor, "fontDescriptorWithName:matrix:") = NSFontDescriptor, NSString, NSAffineTransform;
override externalInstanceMethod(#NSFontDescriptor, "initWithFontAttributes:") = Id, NSDictionary;
override externalInstanceMethod(#NSFontDescriptor, "matchingFontDescriptorsWithMandatoryKeys:") = NSArray, NSSet;
override externalInstanceMethod(#NSFontDescriptor, "matchingFontDescriptorWithMandatoryKeys:") = NSFontDescriptor, NSSet;
override externalInstanceMethod(#NSFontDescriptor, "fontDescriptorByAddingAttributes:") = NSFontDescriptor, NSDictionary;
override externalInstanceMethod(#NSFontDescriptor, "fontDescriptorWithSymbolicTraits:") = NSFontDescriptor, UInt;
override externalInstanceMethod(#NSFontDescriptor, "fontDescriptorWithSize:") = NSFontDescriptor, Double;
override externalInstanceMethod(#NSFontDescriptor, "fontDescriptorWithMatrix:") = NSFontDescriptor, NSAffineTransform;
override externalInstanceMethod(#NSFontDescriptor, "fontDescriptorWithFace:") = NSFontDescriptor, NSString;
override externalInstanceMethod(#NSFontDescriptor, "fontDescriptorWithFamily:") = NSFontDescriptor, NSString;

record NSFontManager = externalClass(NSObject);
override externalClassMethod(#NSFontManager, "setFontPanelFactory:") = Void, Id;
override externalClassMethod(#NSFontManager, "setFontManagerFactory:") = Void, Id;
override externalClassMethod(#NSFontManager, "sharedFontManager") = NSFontManager;
override externalInstanceMethod(#NSFontManager, "isMultiple") = Bool;
override externalInstanceMethod(#NSFontManager, "selectedFont") = NSFont;
override externalInstanceMethod(#NSFontManager, "setSelectedFont:isMultiple:") = Void, NSFont, Bool;
override externalInstanceMethod(#NSFontManager, "setFontMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSFontManager, "fontMenu:") = NSMenu, Bool;
override externalInstanceMethod(#NSFontManager, "fontPanel:") = NSFontPanel, Bool;
override externalInstanceMethod(#NSFontManager, "fontWithFamily:traits:weight:size:") = NSFont, NSString, CULong, CLong, Double;
override externalInstanceMethod(#NSFontManager, "traitsOfFont:") = CULong, NSFont;
override externalInstanceMethod(#NSFontManager, "weightOfFont:") = CLong, NSFont;
override externalInstanceMethod(#NSFontManager, "availableFonts") = NSArray;
override externalInstanceMethod(#NSFontManager, "availableFontFamilies") = NSArray;
override externalInstanceMethod(#NSFontManager, "availableMembersOfFontFamily:") = NSArray, NSString;
override externalInstanceMethod(#NSFontManager, "convertFont:") = NSFont, NSFont;
override externalInstanceMethod(#NSFontManager, "convertFont:toSize:") = NSFont, NSFont, Double;
override externalInstanceMethod(#NSFontManager, "convertFont:toFace:") = NSFont, NSFont, NSString;
override externalInstanceMethod(#NSFontManager, "convertFont:toFamily:") = NSFont, NSFont, NSString;
override externalInstanceMethod(#NSFontManager, "convertFont:toHaveTrait:") = NSFont, NSFont, CULong;
override externalInstanceMethod(#NSFontManager, "convertFont:toNotHaveTrait:") = NSFont, NSFont, CULong;
override externalInstanceMethod(#NSFontManager, "convertWeight:ofFont:") = NSFont, Bool, NSFont;
override externalInstanceMethod(#NSFontManager, "isEnabled") = Bool;
override externalInstanceMethod(#NSFontManager, "setEnabled:") = Void, Bool;
override externalInstanceMethod(#NSFontManager, "action") = SelectorHandle;
override externalInstanceMethod(#NSFontManager, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSFontManager, "sendAction") = Bool;
override externalInstanceMethod(#NSFontManager, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSFontManager, "delegate") = Id;
override externalInstanceMethod(#NSFontManager, "localizedNameForFamily:face:") = NSString, NSString, NSString;
override externalInstanceMethod(#NSFontManager, "setSelectedAttributes:isMultiple:") = Void, NSDictionary, Bool;
override externalInstanceMethod(#NSFontManager, "convertAttributes:") = NSDictionary, NSDictionary;
override externalInstanceMethod(#NSFontManager, "availableFontNamesMatchingFontDescriptor:") = NSArray, NSFontDescriptor;
override externalInstanceMethod(#NSFontManager, "collectionNames") = NSArray;
override externalInstanceMethod(#NSFontManager, "fontDescriptorsInCollection:") = NSArray, NSString;
override externalInstanceMethod(#NSFontManager, "addCollection:options:") = Bool, NSString, CLong;
override externalInstanceMethod(#NSFontManager, "removeCollection:") = Bool, NSString;
override externalInstanceMethod(#NSFontManager, "addFontDescriptors:toCollection:") = Void, NSArray, NSString;
override externalInstanceMethod(#NSFontManager, "removeFontDescriptor:fromCollection:") = Void, NSFontDescriptor, NSString;
override externalInstanceMethod(#NSFontManager, "currentFontAction") = CULong;
override externalInstanceMethod(#NSFontManager, "convertFontTraits:") = CULong, CULong;
override externalInstanceMethod(#NSFontManager, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSFontManager, "target") = Id;
override externalInstanceMethod(#NSFontManager, "fontNamed:hasTraits:") = Bool, NSString, CULong;
override externalInstanceMethod(#NSFontManager, "availableFontNamesWithTraits:") = NSArray, CULong;
override externalInstanceMethod(#NSFontManager, "addFontTrait:") = Void, Id;
override externalInstanceMethod(#NSFontManager, "removeFontTrait:") = Void, Id;
override externalInstanceMethod(#NSFontManager, "modifyFontViaPanel:") = Void, Id;
override externalInstanceMethod(#NSFontManager, "modifyFont:") = Void, Id;
override externalInstanceMethod(#NSFontManager, "orderFrontFontPanel:") = Void, Id;
override externalInstanceMethod(#NSFontManager, "orderFrontStylesPanel:") = Void, Id;

record NSFontPanel = externalClass(NSPanel);
override externalClassMethod(#NSFontPanel, "sharedFontPanel") = NSFontPanel;
override externalClassMethod(#NSFontPanel, "sharedFontPanelExists") = Bool;
override externalInstanceMethod(#NSFontPanel, "accessoryView") = NSView;
override externalInstanceMethod(#NSFontPanel, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSFontPanel, "setPanelFont:isMultiple:") = Void, NSFont, Bool;
override externalInstanceMethod(#NSFontPanel, "panelConvertFont:") = NSFont, NSFont;
override externalInstanceMethod(#NSFontPanel, "worksWhenModal") = Bool;
override externalInstanceMethod(#NSFontPanel, "isEnabled") = Bool;
override externalInstanceMethod(#NSFontPanel, "setEnabled:") = Void, Bool;
override externalInstanceMethod(#NSFontPanel, "reloadDefaultFontFamilies") = Void;

record NSForm = externalClass(NSMatrix);
override externalInstanceMethod(#NSForm, "indexOfSelectedItem") = CLong;
override externalInstanceMethod(#NSForm, "setEntryWidth:") = Void, Double;
override externalInstanceMethod(#NSForm, "setInterlineSpacing:") = Void, Double;
override externalInstanceMethod(#NSForm, "setBordered:") = Void, Bool;
override externalInstanceMethod(#NSForm, "setBezeled:") = Void, Bool;
override externalInstanceMethod(#NSForm, "setTitleAlignment:") = Void, CULong;
override externalInstanceMethod(#NSForm, "setTextAlignment:") = Void, CULong;
override externalInstanceMethod(#NSForm, "setTitleFont:") = Void, NSFont;
override externalInstanceMethod(#NSForm, "setTextFont:") = Void, NSFont;
override externalInstanceMethod(#NSForm, "cellAtIndex:") = Id, CLong;
override externalInstanceMethod(#NSForm, "drawCellAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSForm, "addEntry:") = NSFormCell, NSString;
override externalInstanceMethod(#NSForm, "insertEntry:atIndex:") = NSFormCell, NSString, CLong;
override externalInstanceMethod(#NSForm, "removeEntryAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSForm, "indexOfCellWithTag:") = CLong, CLong;
override externalInstanceMethod(#NSForm, "selectTextAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSForm, "setFrameSize:") = Void, NSSize;
override externalInstanceMethod(#NSForm, "setTitleBaseWritingDirection:") = Void, CLong;
override externalInstanceMethod(#NSForm, "setTextBaseWritingDirection:") = Void, CLong;

record NSFormCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSFormCell, "initTextCell:") = Id, NSString;
override externalInstanceMethod(#NSFormCell, "titleWidth:") = Double, NSSize;
override externalInstanceMethod(#NSFormCell, "titleWidth") = Double;
override externalInstanceMethod(#NSFormCell, "setTitleWidth:") = Void, Double;
override externalInstanceMethod(#NSFormCell, "title") = NSString;
override externalInstanceMethod(#NSFormCell, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSFormCell, "titleFont") = NSFont;
override externalInstanceMethod(#NSFormCell, "setTitleFont:") = Void, NSFont;
override externalInstanceMethod(#NSFormCell, "titleAlignment") = CULong;
override externalInstanceMethod(#NSFormCell, "setTitleAlignment:") = Void, CULong;
override externalInstanceMethod(#NSFormCell, "isOpaque") = Bool;
override externalInstanceMethod(#NSFormCell, "setPlaceholderString:") = Void, NSString;
override externalInstanceMethod(#NSFormCell, "placeholderString") = NSString;
override externalInstanceMethod(#NSFormCell, "setPlaceholderAttributedString:") = Void, NSAttributedString;
override externalInstanceMethod(#NSFormCell, "placeholderAttributedString") = NSAttributedString;
override externalInstanceMethod(#NSFormCell, "titleBaseWritingDirection") = CLong;
override externalInstanceMethod(#NSFormCell, "setTitleBaseWritingDirection:") = Void, CLong;
override externalInstanceMethod(#NSFormCell, "setTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSFormCell, "attributedTitle") = NSAttributedString;
override externalInstanceMethod(#NSFormCell, "setAttributedTitle:") = Void, NSAttributedString;

record NSGlyphGenerator = externalClass(NSObject);
override externalInstanceMethod(#NSGlyphGenerator, "generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:") = Void, Id, CULong, Pointer[CULong], Pointer[CULong];
override externalClassMethod(#NSGlyphGenerator, "sharedGlyphGenerator") = Id;

record NSGlyphInfo = externalClass(NSObject);
override externalInstanceMethod(#NSGlyphInfo, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSGlyphInfo, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSGlyphInfo, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSGlyphInfo, "glyphInfoWithGlyphName:forFont:baseString:") = NSGlyphInfo, NSString, NSFont, NSString;
override externalClassMethod(#NSGlyphInfo, "glyphInfoWithGlyph:forFont:baseString:") = NSGlyphInfo, UInt, NSFont, NSString;
override externalClassMethod(#NSGlyphInfo, "glyphInfoWithCharacterIdentifier:collection:baseString:") = NSGlyphInfo, CULong, CULong, NSString;
override externalInstanceMethod(#NSGlyphInfo, "glyphName") = NSString;
override externalInstanceMethod(#NSGlyphInfo, "characterIdentifier") = CULong;
override externalInstanceMethod(#NSGlyphInfo, "characterCollection") = CULong;

record NSGradient = externalClass(NSObject);
override externalInstanceMethod(#NSGradient, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSGradient, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSGradient, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSGradient, "initWithStartingColor:endingColor:") = Id, NSColor, NSColor;
override externalInstanceMethod(#NSGradient, "initWithColors:") = Id, NSArray;
override externalVarargInstanceMethod(#NSGradient, "initWithColorsAndLocations:") = Id, NSColor;
override externalInstanceMethod(#NSGradient, "initWithColors:atLocations:colorSpace:") = Id, NSArray, Pointer[Double], NSColorSpace;
override externalInstanceMethod(#NSGradient, "drawFromPoint:toPoint:options:") = Void, NSPoint, NSPoint, CULong;
override externalInstanceMethod(#NSGradient, "drawInRect:angle:") = Void, NSRect, Double;
override externalInstanceMethod(#NSGradient, "drawInBezierPath:angle:") = Void, NSBezierPath, Double;
override externalInstanceMethod(#NSGradient, "drawFromCenter:radius:toCenter:radius:options:") = Void, NSPoint, Double, NSPoint, Double, CULong;
override externalInstanceMethod(#NSGradient, "drawInRect:relativeCenterPosition:") = Void, NSRect, NSPoint;
override externalInstanceMethod(#NSGradient, "drawInBezierPath:relativeCenterPosition:") = Void, NSBezierPath, NSPoint;
override externalInstanceMethod(#NSGradient, "colorSpace") = NSColorSpace;
override externalInstanceMethod(#NSGradient, "numberOfColorStops") = CLong;
override externalInstanceMethod(#NSGradient, "getColor:location:atIndex:") = Void, Pointer[NSColor], Pointer[Double], CLong;
override externalInstanceMethod(#NSGradient, "interpolatedColorAtLocation:") = NSColor, Double;

record NSGraphicsContext = externalClass(NSObject);
override externalClassMethod(#NSGraphicsContext, "graphicsContextWithAttributes:") = NSGraphicsContext, NSDictionary;
override externalClassMethod(#NSGraphicsContext, "graphicsContextWithWindow:") = NSGraphicsContext, NSWindow;
override externalClassMethod(#NSGraphicsContext, "graphicsContextWithBitmapImageRep:") = NSGraphicsContext, NSBitmapImageRep;
override externalClassMethod(#NSGraphicsContext, "graphicsContextWithGraphicsPort:flipped:") = NSGraphicsContext, RawPointer, Bool;
override externalClassMethod(#NSGraphicsContext, "currentContext") = NSGraphicsContext;
override externalClassMethod(#NSGraphicsContext, "setCurrentContext:") = Void, NSGraphicsContext;
override externalClassMethod(#NSGraphicsContext, "currentContextDrawingToScreen") = Bool;
override externalClassMethod(#NSGraphicsContext, "saveGraphicsState") = Void;
override externalClassMethod(#NSGraphicsContext, "restoreGraphicsState") = Void;
override externalClassMethod(#NSGraphicsContext, "setGraphicsState:") = Void, CLong;
override externalInstanceMethod(#NSGraphicsContext, "attributes") = NSDictionary;
override externalInstanceMethod(#NSGraphicsContext, "isDrawingToScreen") = Bool;
override externalInstanceMethod(#NSGraphicsContext, "saveGraphicsState") = Void;
override externalInstanceMethod(#NSGraphicsContext, "restoreGraphicsState") = Void;
override externalInstanceMethod(#NSGraphicsContext, "flushGraphics") = Void;
override externalInstanceMethod(#NSGraphicsContext, "graphicsPort") = RawPointer;
override externalInstanceMethod(#NSGraphicsContext, "isFlipped") = Bool;
override externalInstanceMethod(#NSGraphicsContext, "setShouldAntialias:") = Void, Bool;
override externalInstanceMethod(#NSGraphicsContext, "shouldAntialias") = Bool;
override externalInstanceMethod(#NSGraphicsContext, "setImageInterpolation:") = Void, CULong;
override externalInstanceMethod(#NSGraphicsContext, "imageInterpolation") = CULong;
override externalInstanceMethod(#NSGraphicsContext, "setPatternPhase:") = Void, NSPoint;
override externalInstanceMethod(#NSGraphicsContext, "patternPhase") = NSPoint;
override externalInstanceMethod(#NSGraphicsContext, "setCompositingOperation:") = Void, CULong;
override externalInstanceMethod(#NSGraphicsContext, "compositingOperation") = CULong;
override externalInstanceMethod(#NSGraphicsContext, "colorRenderingIntent") = CLong;
override externalInstanceMethod(#NSGraphicsContext, "setColorRenderingIntent:") = Void, CLong;
override externalInstanceMethod(#NSGraphicsContext, "CIContext") = CIContext;

record NSHelpManager = externalClass(NSObject);
override externalClassMethod(#NSHelpManager, "sharedHelpManager") = NSHelpManager;
override externalClassMethod(#NSHelpManager, "setContextHelpModeActive:") = Void, Bool;
override externalClassMethod(#NSHelpManager, "isContextHelpModeActive") = Bool;
override externalInstanceMethod(#NSHelpManager, "setContextHelp:forObject:") = Void, NSAttributedString, Id;
override externalInstanceMethod(#NSHelpManager, "removeContextHelpForObject:") = Void, Id;
override externalInstanceMethod(#NSHelpManager, "contextHelpForObject:") = NSAttributedString, Id;
override externalInstanceMethod(#NSHelpManager, "showContextHelpForObject:locationHint:") = Bool, Id, NSPoint;
override externalInstanceMethod(#NSHelpManager, "openHelpAnchor:inBook:") = Void, NSString, NSString;
override externalInstanceMethod(#NSHelpManager, "findString:inBook:") = Void, NSString, NSString;
override externalInstanceMethod(#NSHelpManager, "registerBooksInBundle:") = Bool, NSBundle;

record NSImage = externalClass(NSObject);
override externalInstanceMethod(#NSImage, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSImage, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSImage, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSImage, "readableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalClassMethod(#NSImage, "readingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSImage, "initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
override externalInstanceMethod(#NSImage, "writableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalInstanceMethod(#NSImage, "writingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSImage, "pasteboardPropertyListForType:") = Id, NSString;
override externalClassMethod(#NSImage, "imageNamed:") = Id, NSString;
override externalInstanceMethod(#NSImage, "initWithSize:") = Id, NSSize;
override externalInstanceMethod(#NSImage, "initWithData:") = Id, NSData;
override externalInstanceMethod(#NSImage, "initWithContentsOfFile:") = Id, NSString;
override externalInstanceMethod(#NSImage, "initWithContentsOfURL:") = Id, NSURL;
override externalInstanceMethod(#NSImage, "initByReferencingFile:") = Id, NSString;
override externalInstanceMethod(#NSImage, "initByReferencingURL:") = Id, NSURL;
override externalInstanceMethod(#NSImage, "initWithIconRef:") = Id, IconRef;
override externalInstanceMethod(#NSImage, "initWithPasteboard:") = Id, NSPasteboard;
override externalInstanceMethod(#NSImage, "initWithDataIgnoringOrientation:") = Id, NSData;
override externalInstanceMethod(#NSImage, "setSize:") = Void, NSSize;
override externalInstanceMethod(#NSImage, "size") = NSSize;
override externalInstanceMethod(#NSImage, "setName:") = Bool, NSString;
override externalInstanceMethod(#NSImage, "name") = NSString;
override externalInstanceMethod(#NSImage, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSImage, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSImage, "setUsesEPSOnResolutionMismatch:") = Void, Bool;
override externalInstanceMethod(#NSImage, "usesEPSOnResolutionMismatch") = Bool;
override externalInstanceMethod(#NSImage, "setPrefersColorMatch:") = Void, Bool;
override externalInstanceMethod(#NSImage, "prefersColorMatch") = Bool;
override externalInstanceMethod(#NSImage, "setMatchesOnMultipleResolution:") = Void, Bool;
override externalInstanceMethod(#NSImage, "matchesOnMultipleResolution") = Bool;
override externalInstanceMethod(#NSImage, "drawAtPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
override externalInstanceMethod(#NSImage, "drawInRect:fromRect:operation:fraction:") = Void, NSRect, NSRect, CULong, Double;
override externalInstanceMethod(#NSImage, "drawInRect:fromRect:operation:fraction:respectFlipped:hints:") = Void, NSRect, NSRect, CULong, Double, Bool, NSDictionary;
override externalInstanceMethod(#NSImage, "drawRepresentation:inRect:") = Bool, NSImageRep, NSRect;
override externalInstanceMethod(#NSImage, "recache") = Void;
override externalInstanceMethod(#NSImage, "TIFFRepresentation") = NSData;
override externalInstanceMethod(#NSImage, "TIFFRepresentationUsingCompression:factor:") = NSData, CULong, Float;
override externalInstanceMethod(#NSImage, "representations") = NSArray;
override externalInstanceMethod(#NSImage, "addRepresentations:") = Void, NSArray;
override externalInstanceMethod(#NSImage, "addRepresentation:") = Void, NSImageRep;
override externalInstanceMethod(#NSImage, "removeRepresentation:") = Void, NSImageRep;
override externalInstanceMethod(#NSImage, "isValid") = Bool;
override externalInstanceMethod(#NSImage, "lockFocus") = Void;
override externalInstanceMethod(#NSImage, "lockFocusFlipped:") = Void, Bool;
override externalInstanceMethod(#NSImage, "unlockFocus") = Void;
override externalInstanceMethod(#NSImage, "bestRepresentationForDevice:") = NSImageRep, NSDictionary;
override externalInstanceMethod(#NSImage, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSImage, "delegate") = Id;
override externalClassMethod(#NSImage, "imageUnfilteredFileTypes") = NSArray;
override externalClassMethod(#NSImage, "imageUnfilteredPasteboardTypes") = NSArray;
override externalClassMethod(#NSImage, "imageFileTypes") = NSArray;
override externalClassMethod(#NSImage, "imagePasteboardTypes") = NSArray;
override externalClassMethod(#NSImage, "imageTypes") = NSArray;
override externalClassMethod(#NSImage, "imageUnfilteredTypes") = NSArray;
override externalClassMethod(#NSImage, "canInitWithPasteboard:") = Bool, NSPasteboard;
override externalInstanceMethod(#NSImage, "cancelIncrementalLoad") = Void;
override externalInstanceMethod(#NSImage, "setCacheMode:") = Void, CULong;
override externalInstanceMethod(#NSImage, "cacheMode") = CULong;
override externalInstanceMethod(#NSImage, "alignmentRect") = NSRect;
override externalInstanceMethod(#NSImage, "setAlignmentRect:") = Void, NSRect;
override externalInstanceMethod(#NSImage, "isTemplate") = Bool;
override externalInstanceMethod(#NSImage, "setTemplate:") = Void, Bool;
override externalInstanceMethod(#NSImage, "accessibilityDescription") = NSString;
override externalInstanceMethod(#NSImage, "setAccessibilityDescription:") = Void, NSString;
override externalInstanceMethod(#NSImage, "initWithCGImage:size:") = Id, CGImageRef, NSSize;
override externalInstanceMethod(#NSImage, "CGImageForProposedRect:context:hints:") = CGImageRef, Pointer[NSRect], NSGraphicsContext, NSDictionary;
override externalInstanceMethod(#NSImage, "bestRepresentationForRect:context:hints:") = NSImageRep, NSRect, NSGraphicsContext, NSDictionary;
override externalInstanceMethod(#NSImage, "hitTestRect:withImageDestinationRect:context:hints:flipped:") = Bool, NSRect, NSRect, NSGraphicsContext, NSDictionary, Bool;
override externalInstanceMethod(#NSImage, "setFlipped:") = Void, Bool;
override externalInstanceMethod(#NSImage, "isFlipped") = Bool;
override externalInstanceMethod(#NSImage, "dissolveToPoint:fraction:") = Void, NSPoint, Double;
override externalInstanceMethod(#NSImage, "dissolveToPoint:fromRect:fraction:") = Void, NSPoint, NSRect, Double;
override externalInstanceMethod(#NSImage, "compositeToPoint:operation:") = Void, NSPoint, CULong;
override externalInstanceMethod(#NSImage, "compositeToPoint:fromRect:operation:") = Void, NSPoint, NSRect, CULong;
override externalInstanceMethod(#NSImage, "compositeToPoint:operation:fraction:") = Void, NSPoint, CULong, Double;
override externalInstanceMethod(#NSImage, "compositeToPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
override externalInstanceMethod(#NSImage, "lockFocusOnRepresentation:") = Void, NSImageRep;
override externalInstanceMethod(#NSImage, "setScalesWhenResized:") = Void, Bool;
override externalInstanceMethod(#NSImage, "scalesWhenResized") = Bool;
override externalInstanceMethod(#NSImage, "setDataRetained:") = Void, Bool;
override externalInstanceMethod(#NSImage, "isDataRetained") = Bool;
override externalInstanceMethod(#NSImage, "setCachedSeparately:") = Void, Bool;
override externalInstanceMethod(#NSImage, "isCachedSeparately") = Bool;
override externalInstanceMethod(#NSImage, "setCacheDepthMatchesImageDepth:") = Void, Bool;
override externalInstanceMethod(#NSImage, "cacheDepthMatchesImageDepth") = Bool;

record NSImageCell = externalClass(NSCell);
override externalInstanceMethod(#NSImageCell, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSImageCell, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSImageCell, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSImageCell, "imageAlignment") = CULong;
override externalInstanceMethod(#NSImageCell, "setImageAlignment:") = Void, CULong;
override externalInstanceMethod(#NSImageCell, "imageScaling") = CULong;
override externalInstanceMethod(#NSImageCell, "setImageScaling:") = Void, CULong;
override externalInstanceMethod(#NSImageCell, "imageFrameStyle") = CULong;
override externalInstanceMethod(#NSImageCell, "setImageFrameStyle:") = Void, CULong;

record NSImageRep = externalClass(NSObject);
override externalInstanceMethod(#NSImageRep, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSImageRep, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSImageRep, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSImageRep, "draw") = Bool;
override externalInstanceMethod(#NSImageRep, "drawAtPoint:") = Bool, NSPoint;
override externalInstanceMethod(#NSImageRep, "drawInRect:") = Bool, NSRect;
override externalInstanceMethod(#NSImageRep, "drawInRect:fromRect:operation:fraction:respectFlipped:hints:") = Bool, NSRect, NSRect, CULong, Double, Bool, NSDictionary;
override externalInstanceMethod(#NSImageRep, "setSize:") = Void, NSSize;
override externalInstanceMethod(#NSImageRep, "size") = NSSize;
override externalInstanceMethod(#NSImageRep, "setAlpha:") = Void, Bool;
override externalInstanceMethod(#NSImageRep, "hasAlpha") = Bool;
override externalInstanceMethod(#NSImageRep, "setOpaque:") = Void, Bool;
override externalInstanceMethod(#NSImageRep, "isOpaque") = Bool;
override externalInstanceMethod(#NSImageRep, "setColorSpaceName:") = Void, NSString;
override externalInstanceMethod(#NSImageRep, "colorSpaceName") = NSString;
override externalInstanceMethod(#NSImageRep, "setBitsPerSample:") = Void, CLong;
override externalInstanceMethod(#NSImageRep, "bitsPerSample") = CLong;
override externalInstanceMethod(#NSImageRep, "setPixelsWide:") = Void, CLong;
override externalInstanceMethod(#NSImageRep, "pixelsWide") = CLong;
override externalInstanceMethod(#NSImageRep, "setPixelsHigh:") = Void, CLong;
override externalInstanceMethod(#NSImageRep, "pixelsHigh") = CLong;
override externalClassMethod(#NSImageRep, "registerImageRepClass:") = Void, Id;
override externalClassMethod(#NSImageRep, "unregisterImageRepClass:") = Void, Id;
override externalClassMethod(#NSImageRep, "registeredImageRepClasses") = NSArray;
override externalClassMethod(#NSImageRep, "imageRepClassForFileType:") = Id, NSString;
override externalClassMethod(#NSImageRep, "imageRepClassForPasteboardType:") = Id, NSString;
override externalClassMethod(#NSImageRep, "imageRepClassForType:") = Id, NSString;
override externalClassMethod(#NSImageRep, "imageRepClassForData:") = Id, NSData;
override externalClassMethod(#NSImageRep, "canInitWithData:") = Bool, NSData;
override externalClassMethod(#NSImageRep, "imageUnfilteredFileTypes") = NSArray;
override externalClassMethod(#NSImageRep, "imageUnfilteredPasteboardTypes") = NSArray;
override externalClassMethod(#NSImageRep, "imageFileTypes") = NSArray;
override externalClassMethod(#NSImageRep, "imagePasteboardTypes") = NSArray;
override externalClassMethod(#NSImageRep, "imageUnfilteredTypes") = NSArray;
override externalClassMethod(#NSImageRep, "imageTypes") = NSArray;
override externalClassMethod(#NSImageRep, "canInitWithPasteboard:") = Bool, NSPasteboard;
override externalClassMethod(#NSImageRep, "imageRepsWithContentsOfFile:") = NSArray, NSString;
override externalClassMethod(#NSImageRep, "imageRepWithContentsOfFile:") = Id, NSString;
override externalClassMethod(#NSImageRep, "imageRepsWithContentsOfURL:") = NSArray, NSURL;
override externalClassMethod(#NSImageRep, "imageRepWithContentsOfURL:") = Id, NSURL;
override externalClassMethod(#NSImageRep, "imageRepsWithPasteboard:") = NSArray, NSPasteboard;
override externalClassMethod(#NSImageRep, "imageRepWithPasteboard:") = Id, NSPasteboard;
override externalInstanceMethod(#NSImageRep, "CGImageForProposedRect:context:hints:") = CGImageRef, Pointer[NSRect], NSGraphicsContext, NSDictionary;

record NSImageView = externalClass(NSControl);
override externalInstanceMethod(#NSImageView, "image") = NSImage;
override externalInstanceMethod(#NSImageView, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSImageView, "imageAlignment") = CULong;
override externalInstanceMethod(#NSImageView, "setImageAlignment:") = Void, CULong;
override externalInstanceMethod(#NSImageView, "imageScaling") = CULong;
override externalInstanceMethod(#NSImageView, "setImageScaling:") = Void, CULong;
override externalInstanceMethod(#NSImageView, "imageFrameStyle") = CULong;
override externalInstanceMethod(#NSImageView, "setImageFrameStyle:") = Void, CULong;
override externalInstanceMethod(#NSImageView, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSImageView, "isEditable") = Bool;
override externalInstanceMethod(#NSImageView, "setAnimates:") = Void, Bool;
override externalInstanceMethod(#NSImageView, "animates") = Bool;
override externalInstanceMethod(#NSImageView, "allowsCutCopyPaste") = Bool;
override externalInstanceMethod(#NSImageView, "setAllowsCutCopyPaste:") = Void, Bool;

record NSInputManager = externalClass(NSObject);
override externalInstanceMethod(#NSInputManager, "insertText:") = Void, Id;
override externalInstanceMethod(#NSInputManager, "doCommandBySelector:") = Void, SelectorHandle;
override externalInstanceMethod(#NSInputManager, "setMarkedText:selectedRange:") = Void, Id, NSRange;
override externalInstanceMethod(#NSInputManager, "unmarkText") = Void;
override externalInstanceMethod(#NSInputManager, "hasMarkedText") = Bool;
override externalInstanceMethod(#NSInputManager, "conversationIdentifier") = CLong;
override externalInstanceMethod(#NSInputManager, "attributedSubstringFromRange:") = NSAttributedString, NSRange;
override externalInstanceMethod(#NSInputManager, "markedRange") = NSRange;
override externalInstanceMethod(#NSInputManager, "selectedRange") = NSRange;
override externalInstanceMethod(#NSInputManager, "firstRectForCharacterRange:") = NSRect, NSRange;
override externalInstanceMethod(#NSInputManager, "characterIndexForPoint:") = CULong, NSPoint;
override externalInstanceMethod(#NSInputManager, "validAttributesForMarkedText") = NSArray;
override externalClassMethod(#NSInputManager, "currentInputManager") = NSInputManager;
override externalClassMethod(#NSInputManager, "cycleToNextInputLanguage:") = Void, Id;
override externalClassMethod(#NSInputManager, "cycleToNextInputServerInLanguage:") = Void, Id;
override externalInstanceMethod(#NSInputManager, "initWithName:host:") = NSInputManager, NSString, NSString;
override externalInstanceMethod(#NSInputManager, "localizedInputManagerName") = NSString;
override externalInstanceMethod(#NSInputManager, "markedTextAbandoned:") = Void, Id;
override externalInstanceMethod(#NSInputManager, "markedTextSelectionChanged:client:") = Void, NSRange, Id;
override externalInstanceMethod(#NSInputManager, "wantsToInterpretAllKeystrokes") = Bool;
override externalInstanceMethod(#NSInputManager, "language") = NSString;
override externalInstanceMethod(#NSInputManager, "image") = NSImage;
override externalInstanceMethod(#NSInputManager, "server") = NSInputServer;
override externalInstanceMethod(#NSInputManager, "wantsToHandleMouseEvents") = Bool;
override externalInstanceMethod(#NSInputManager, "handleMouseEvent:") = Bool, NSEvent;
override externalInstanceMethod(#NSInputManager, "wantsToDelayTextChangeNotifications") = Bool;

record NSInputServer = externalClass(NSObject);
override externalInstanceMethod(#NSInputServer, "insertText:client:") = Void, Id, Id;
override externalInstanceMethod(#NSInputServer, "doCommandBySelector:client:") = Void, SelectorHandle, Id;
override externalInstanceMethod(#NSInputServer, "markedTextAbandoned:") = Void, Id;
override externalInstanceMethod(#NSInputServer, "markedTextSelectionChanged:client:") = Void, NSRange, Id;
override externalInstanceMethod(#NSInputServer, "terminate:") = Void, Id;
override externalInstanceMethod(#NSInputServer, "canBeDisabled") = Bool;
override externalInstanceMethod(#NSInputServer, "wantsToInterpretAllKeystrokes") = Bool;
override externalInstanceMethod(#NSInputServer, "wantsToHandleMouseEvents") = Bool;
override externalInstanceMethod(#NSInputServer, "wantsToDelayTextChangeNotifications") = Bool;
override externalInstanceMethod(#NSInputServer, "inputClientBecomeActive:") = Void, Id;
override externalInstanceMethod(#NSInputServer, "inputClientResignActive:") = Void, Id;
override externalInstanceMethod(#NSInputServer, "inputClientEnabled:") = Void, Id;
override externalInstanceMethod(#NSInputServer, "inputClientDisabled:") = Void, Id;
override externalInstanceMethod(#NSInputServer, "activeConversationWillChange:fromOldConversation:") = Void, Id, CLong;
override externalInstanceMethod(#NSInputServer, "activeConversationChanged:toNewConversation:") = Void, Id, CLong;
override externalInstanceMethod(#NSInputServer, "mouseDownOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
override externalInstanceMethod(#NSInputServer, "mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
override externalInstanceMethod(#NSInputServer, "mouseUpOnCharacterIndex:atCoordinate:withModifier:client:") = Void, CULong, NSPoint, CULong, Id;
override externalInstanceMethod(#NSInputServer, "initWithDelegate:name:") = Id, Id, NSString;

record NSLayoutManager = externalClass(NSObject);
override externalInstanceMethod(#NSLayoutManager, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSLayoutManager, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSLayoutManager, "insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:") = Void, Pointer[UInt], CULong, CULong, CULong;
override externalInstanceMethod(#NSLayoutManager, "setIntAttribute:value:forGlyphAtIndex:") = Void, CLong, CLong, CULong;
override externalInstanceMethod(#NSLayoutManager, "attributedString") = NSAttributedString;
override externalInstanceMethod(#NSLayoutManager, "layoutOptions") = CULong;
override externalInstanceMethod(#NSLayoutManager, "init") = Id;
override externalInstanceMethod(#NSLayoutManager, "textStorage") = NSTextStorage;
override externalInstanceMethod(#NSLayoutManager, "setTextStorage:") = Void, NSTextStorage;
override externalInstanceMethod(#NSLayoutManager, "attributedString") = NSAttributedString;
override externalInstanceMethod(#NSLayoutManager, "replaceTextStorage:") = Void, NSTextStorage;
override externalInstanceMethod(#NSLayoutManager, "glyphGenerator") = NSGlyphGenerator;
override externalInstanceMethod(#NSLayoutManager, "setGlyphGenerator:") = Void, NSGlyphGenerator;
override externalInstanceMethod(#NSLayoutManager, "typesetter") = NSTypesetter;
override externalInstanceMethod(#NSLayoutManager, "setTypesetter:") = Void, NSTypesetter;
override externalInstanceMethod(#NSLayoutManager, "delegate") = Id;
override externalInstanceMethod(#NSLayoutManager, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSLayoutManager, "textContainers") = NSArray;
override externalInstanceMethod(#NSLayoutManager, "addTextContainer:") = Void, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "insertTextContainer:atIndex:") = Void, NSTextContainer, CULong;
override externalInstanceMethod(#NSLayoutManager, "removeTextContainerAtIndex:") = Void, CULong;
override externalInstanceMethod(#NSLayoutManager, "textContainerChangedGeometry:") = Void, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "textContainerChangedTextView:") = Void, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "setBackgroundLayoutEnabled:") = Void, Bool;
override externalInstanceMethod(#NSLayoutManager, "backgroundLayoutEnabled") = Bool;
override externalInstanceMethod(#NSLayoutManager, "setUsesScreenFonts:") = Void, Bool;
override externalInstanceMethod(#NSLayoutManager, "usesScreenFonts") = Bool;
override externalInstanceMethod(#NSLayoutManager, "setShowsInvisibleCharacters:") = Void, Bool;
override externalInstanceMethod(#NSLayoutManager, "showsInvisibleCharacters") = Bool;
override externalInstanceMethod(#NSLayoutManager, "setShowsControlCharacters:") = Void, Bool;
override externalInstanceMethod(#NSLayoutManager, "showsControlCharacters") = Bool;
override externalInstanceMethod(#NSLayoutManager, "setHyphenationFactor:") = Void, Float;
override externalInstanceMethod(#NSLayoutManager, "hyphenationFactor") = Float;
override externalInstanceMethod(#NSLayoutManager, "setDefaultAttachmentScaling:") = Void, CULong;
override externalInstanceMethod(#NSLayoutManager, "defaultAttachmentScaling") = CULong;
override externalInstanceMethod(#NSLayoutManager, "setTypesetterBehavior:") = Void, CLong;
override externalInstanceMethod(#NSLayoutManager, "typesetterBehavior") = CLong;
override externalInstanceMethod(#NSLayoutManager, "layoutOptions") = CULong;
override externalInstanceMethod(#NSLayoutManager, "setAllowsNonContiguousLayout:") = Void, Bool;
override externalInstanceMethod(#NSLayoutManager, "allowsNonContiguousLayout") = Bool;
override externalInstanceMethod(#NSLayoutManager, "hasNonContiguousLayout") = Bool;
override externalInstanceMethod(#NSLayoutManager, "invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:") = Void, NSRange, CLong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "invalidateLayoutForCharacterRange:actualCharacterRange:") = Void, NSRange, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:") = Void, NSRange, Bool, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "invalidateDisplayForCharacterRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "invalidateDisplayForGlyphRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "textStorage:edited:range:changeInLength:invalidatedRange:") = Void, NSTextStorage, CULong, NSRange, CLong, NSRange;
override externalInstanceMethod(#NSLayoutManager, "ensureGlyphsForCharacterRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "ensureGlyphsForGlyphRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "ensureLayoutForCharacterRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "ensureLayoutForGlyphRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "ensureLayoutForTextContainer:") = Void, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "ensureLayoutForBoundingRect:inTextContainer:") = Void, NSRect, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:") = Void, Pointer[UInt], CULong, CULong, CULong;
override externalInstanceMethod(#NSLayoutManager, "insertGlyph:atGlyphIndex:characterIndex:") = Void, UInt, CULong, CULong;
override externalInstanceMethod(#NSLayoutManager, "replaceGlyphAtIndex:withGlyph:") = Void, CULong, UInt;
override externalInstanceMethod(#NSLayoutManager, "deleteGlyphsInRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "setCharacterIndex:forGlyphAtIndex:") = Void, CULong, CULong;
override externalInstanceMethod(#NSLayoutManager, "setIntAttribute:value:forGlyphAtIndex:") = Void, CLong, CLong, CULong;
override externalInstanceMethod(#NSLayoutManager, "invalidateGlyphsOnLayoutInvalidationForGlyphRange:") = Void, NSRange;
override externalInstanceMethod(#NSLayoutManager, "numberOfGlyphs") = CULong;
override externalInstanceMethod(#NSLayoutManager, "glyphAtIndex:isValidIndex:") = UInt, CULong, Pointer[Bool];
override externalInstanceMethod(#NSLayoutManager, "glyphAtIndex:") = UInt, CULong;
override externalInstanceMethod(#NSLayoutManager, "isValidGlyphIndex:") = Bool, CULong;
override externalInstanceMethod(#NSLayoutManager, "characterIndexForGlyphAtIndex:") = CULong, CULong;
override externalInstanceMethod(#NSLayoutManager, "glyphIndexForCharacterAtIndex:") = CULong, CULong;
override externalInstanceMethod(#NSLayoutManager, "intAttribute:forGlyphAtIndex:") = CLong, CLong, CULong;
override externalInstanceMethod(#NSLayoutManager, "getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool];
override externalInstanceMethod(#NSLayoutManager, "getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool], Pointer[CUChar];
override externalInstanceMethod(#NSLayoutManager, "getGlyphs:range:") = CULong, Pointer[UInt], NSRange;
override externalInstanceMethod(#NSLayoutManager, "setTextContainer:forGlyphRange:") = Void, NSTextContainer, NSRange;
override externalInstanceMethod(#NSLayoutManager, "setLineFragmentRect:forGlyphRange:usedRect:") = Void, NSRect, NSRange, NSRect;
override externalInstanceMethod(#NSLayoutManager, "setExtraLineFragmentRect:usedRect:textContainer:") = Void, NSRect, NSRect, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "setLocation:forStartOfGlyphRange:") = Void, NSPoint, NSRange;
override externalInstanceMethod(#NSLayoutManager, "setLocations:startingGlyphIndexes:count:forGlyphRange:") = Void, NSPointArray, Pointer[CULong], CULong, NSRange;
override externalInstanceMethod(#NSLayoutManager, "setNotShownAttribute:forGlyphAtIndex:") = Void, Bool, CULong;
override externalInstanceMethod(#NSLayoutManager, "setDrawsOutsideLineFragment:forGlyphAtIndex:") = Void, Bool, CULong;
override externalInstanceMethod(#NSLayoutManager, "setAttachmentSize:forGlyphRange:") = Void, NSSize, NSRange;
override externalInstanceMethod(#NSLayoutManager, "getFirstUnlaidCharacterIndex:glyphIndex:") = Void, Pointer[CULong], Pointer[CULong];
override externalInstanceMethod(#NSLayoutManager, "firstUnlaidCharacterIndex") = CULong;
override externalInstanceMethod(#NSLayoutManager, "firstUnlaidGlyphIndex") = CULong;
override externalInstanceMethod(#NSLayoutManager, "textContainerForGlyphAtIndex:effectiveRange:") = NSTextContainer, CULong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "usedRectForTextContainer:") = NSRect, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "lineFragmentRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "lineFragmentUsedRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
override externalInstanceMethod(#NSLayoutManager, "lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
override externalInstanceMethod(#NSLayoutManager, "textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSTextContainer, CULong, NSRangePointer, Bool;
override externalInstanceMethod(#NSLayoutManager, "extraLineFragmentRect") = NSRect;
override externalInstanceMethod(#NSLayoutManager, "extraLineFragmentUsedRect") = NSRect;
override externalInstanceMethod(#NSLayoutManager, "extraLineFragmentTextContainer") = NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "locationForGlyphAtIndex:") = NSPoint, CULong;
override externalInstanceMethod(#NSLayoutManager, "notShownAttributeForGlyphAtIndex:") = Bool, CULong;
override externalInstanceMethod(#NSLayoutManager, "drawsOutsideLineFragmentForGlyphAtIndex:") = Bool, CULong;
override externalInstanceMethod(#NSLayoutManager, "attachmentSizeForGlyphAtIndex:") = NSSize, CULong;
override externalInstanceMethod(#NSLayoutManager, "setLayoutRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
override externalInstanceMethod(#NSLayoutManager, "setBoundsRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
override externalInstanceMethod(#NSLayoutManager, "layoutRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
override externalInstanceMethod(#NSLayoutManager, "boundsRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
override externalInstanceMethod(#NSLayoutManager, "layoutRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "boundsRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "glyphRangeForCharacterRange:actualCharacterRange:") = NSRange, NSRange, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "characterRangeForGlyphRange:actualGlyphRange:") = NSRange, NSRange, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "glyphRangeForTextContainer:") = NSRange, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "rangeOfNominallySpacedGlyphsContainingIndex:") = NSRange, CULong;
override externalInstanceMethod(#NSLayoutManager, "rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
override externalInstanceMethod(#NSLayoutManager, "rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
override externalInstanceMethod(#NSLayoutManager, "boundingRectForGlyphRange:inTextContainer:") = NSRect, NSRange, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "glyphRangeForBoundingRect:inTextContainer:") = NSRange, NSRect, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:") = NSRange, NSRect, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
override externalInstanceMethod(#NSLayoutManager, "glyphIndexForPoint:inTextContainer:") = CULong, NSPoint, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "fractionOfDistanceThroughGlyphForPoint:inTextContainer:") = Double, NSPoint, NSTextContainer;
override externalInstanceMethod(#NSLayoutManager, "characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
override externalInstanceMethod(#NSLayoutManager, "getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:") = CULong, CULong, Bool, Bool, Pointer[Double], Pointer[CULong];
override externalInstanceMethod(#NSLayoutManager, "temporaryAttributesAtCharacterIndex:effectiveRange:") = NSDictionary, CULong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "setTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
override externalInstanceMethod(#NSLayoutManager, "addTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
override externalInstanceMethod(#NSLayoutManager, "removeTemporaryAttribute:forCharacterRange:") = Void, NSString, NSRange;
override externalInstanceMethod(#NSLayoutManager, "temporaryAttribute:atCharacterIndex:effectiveRange:") = Id, NSString, CULong, NSRangePointer;
override externalInstanceMethod(#NSLayoutManager, "temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:") = Id, NSString, CULong, NSRangePointer, NSRange;
override externalInstanceMethod(#NSLayoutManager, "temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:") = NSDictionary, CULong, NSRangePointer, NSRange;
override externalInstanceMethod(#NSLayoutManager, "addTemporaryAttribute:value:forCharacterRange:") = Void, NSString, Id, NSRange;
override externalInstanceMethod(#NSLayoutManager, "substituteFontForFont:") = NSFont, NSFont;
override externalInstanceMethod(#NSLayoutManager, "defaultLineHeightForFont:") = Double, NSFont;
override externalInstanceMethod(#NSLayoutManager, "defaultBaselineOffsetForFont:") = Double, NSFont;
override externalInstanceMethod(#NSLayoutManager, "usesFontLeading") = Bool;
override externalInstanceMethod(#NSLayoutManager, "setUsesFontLeading:") = Void, Bool;
override externalInstanceMethod(#NSLayoutManager, "rulerMarkersForTextView:paragraphStyle:ruler:") = NSArray, NSTextView, NSParagraphStyle, NSRulerView;
override externalInstanceMethod(#NSLayoutManager, "rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:") = NSView, NSTextView, NSParagraphStyle, NSRulerView, Bool;
override externalInstanceMethod(#NSLayoutManager, "layoutManagerOwnsFirstResponderInWindow:") = Bool, NSWindow;
override externalInstanceMethod(#NSLayoutManager, "firstTextView") = NSTextView;
override externalInstanceMethod(#NSLayoutManager, "textViewForBeginningOfSelection") = NSTextView;
override externalInstanceMethod(#NSLayoutManager, "drawBackgroundForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
override externalInstanceMethod(#NSLayoutManager, "drawGlyphsForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
override externalInstanceMethod(#NSLayoutManager, "showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:") = Void, Pointer[CChar], CULong, NSRange, NSPoint, NSFont, NSColor, NSSize;
override externalInstanceMethod(#NSLayoutManager, "showAttachmentCell:inRect:characterIndex:") = Void, NSCell, NSRect, CULong;
override externalInstanceMethod(#NSLayoutManager, "fillBackgroundRectArray:count:forCharacterRange:color:") = Void, NSRectArray, CULong, NSRange, NSColor;
override externalInstanceMethod(#NSLayoutManager, "drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
override externalInstanceMethod(#NSLayoutManager, "underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;
override externalInstanceMethod(#NSLayoutManager, "drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
override externalInstanceMethod(#NSLayoutManager, "strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;

record NSLevelIndicator = externalClass(NSControl);
override externalInstanceMethod(#NSLevelIndicator, "minValue") = Double;
override externalInstanceMethod(#NSLevelIndicator, "setMinValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicator, "maxValue") = Double;
override externalInstanceMethod(#NSLevelIndicator, "setMaxValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicator, "warningValue") = Double;
override externalInstanceMethod(#NSLevelIndicator, "setWarningValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicator, "criticalValue") = Double;
override externalInstanceMethod(#NSLevelIndicator, "setCriticalValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicator, "tickMarkPosition") = CULong;
override externalInstanceMethod(#NSLevelIndicator, "setTickMarkPosition:") = Void, CULong;
override externalInstanceMethod(#NSLevelIndicator, "numberOfTickMarks") = CLong;
override externalInstanceMethod(#NSLevelIndicator, "setNumberOfTickMarks:") = Void, CLong;
override externalInstanceMethod(#NSLevelIndicator, "numberOfMajorTickMarks") = CLong;
override externalInstanceMethod(#NSLevelIndicator, "setNumberOfMajorTickMarks:") = Void, CLong;
override externalInstanceMethod(#NSLevelIndicator, "tickMarkValueAtIndex:") = Double, CLong;
override externalInstanceMethod(#NSLevelIndicator, "rectOfTickMarkAtIndex:") = NSRect, CLong;

record NSLevelIndicatorCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSLevelIndicatorCell, "initWithLevelIndicatorStyle:") = Id, CULong;
override externalInstanceMethod(#NSLevelIndicatorCell, "levelIndicatorStyle") = CULong;
override externalInstanceMethod(#NSLevelIndicatorCell, "setLevelIndicatorStyle:") = Void, CULong;
override externalInstanceMethod(#NSLevelIndicatorCell, "minValue") = Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "setMinValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "maxValue") = Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "setMaxValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "warningValue") = Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "setWarningValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "criticalValue") = Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "setCriticalValue:") = Void, Double;
override externalInstanceMethod(#NSLevelIndicatorCell, "setTickMarkPosition:") = Void, CULong;
override externalInstanceMethod(#NSLevelIndicatorCell, "tickMarkPosition") = CULong;
override externalInstanceMethod(#NSLevelIndicatorCell, "setNumberOfTickMarks:") = Void, CLong;
override externalInstanceMethod(#NSLevelIndicatorCell, "numberOfTickMarks") = CLong;
override externalInstanceMethod(#NSLevelIndicatorCell, "setNumberOfMajorTickMarks:") = Void, CLong;
override externalInstanceMethod(#NSLevelIndicatorCell, "numberOfMajorTickMarks") = CLong;
override externalInstanceMethod(#NSLevelIndicatorCell, "rectOfTickMarkAtIndex:") = NSRect, CLong;
override externalInstanceMethod(#NSLevelIndicatorCell, "tickMarkValueAtIndex:") = Double, CLong;
override externalInstanceMethod(#NSLevelIndicatorCell, "setImage:") = Void, NSImage;

record NSMatrix = externalClass(NSControl);
override externalInstanceMethod(#NSMatrix, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSMatrix, "initWithFrame:") = Id, NSRect;
override externalInstanceMethod(#NSMatrix, "initWithFrame:mode:prototype:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, NSCell, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, Id, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "setCellClass:") = Void, Id;
override externalInstanceMethod(#NSMatrix, "cellClass") = Id;
override externalInstanceMethod(#NSMatrix, "prototype") = Id;
override externalInstanceMethod(#NSMatrix, "setPrototype:") = Void, NSCell;
override externalInstanceMethod(#NSMatrix, "makeCellAtRow:column:") = NSCell, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "mode") = CULong;
override externalInstanceMethod(#NSMatrix, "setMode:") = Void, CULong;
override externalInstanceMethod(#NSMatrix, "setAllowsEmptySelection:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "allowsEmptySelection") = Bool;
override externalInstanceMethod(#NSMatrix, "sendAction:to:forAllCells:") = Void, SelectorHandle, Id, Bool;
override externalInstanceMethod(#NSMatrix, "cells") = NSArray;
override externalInstanceMethod(#NSMatrix, "sortUsingSelector:") = Void, SelectorHandle;
override externalInstanceMethod(#NSMatrix, "sortUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override externalInstanceMethod(#NSMatrix, "selectedCell") = Id;
override externalInstanceMethod(#NSMatrix, "selectedCells") = NSArray;
override externalInstanceMethod(#NSMatrix, "selectedRow") = CLong;
override externalInstanceMethod(#NSMatrix, "selectedColumn") = CLong;
override externalInstanceMethod(#NSMatrix, "setSelectionByRect:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "isSelectionByRect") = Bool;
override externalInstanceMethod(#NSMatrix, "setSelectionFrom:to:anchor:highlight:") = Void, CLong, CLong, CLong, Bool;
override externalInstanceMethod(#NSMatrix, "deselectSelectedCell") = Void;
override externalInstanceMethod(#NSMatrix, "deselectAllCells") = Void;
override externalInstanceMethod(#NSMatrix, "selectCellAtRow:column:") = Void, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "selectAll:") = Void, Id;
override externalInstanceMethod(#NSMatrix, "selectCellWithTag:") = Bool, CLong;
override externalInstanceMethod(#NSMatrix, "cellSize") = NSSize;
override externalInstanceMethod(#NSMatrix, "setCellSize:") = Void, NSSize;
override externalInstanceMethod(#NSMatrix, "intercellSpacing") = NSSize;
override externalInstanceMethod(#NSMatrix, "setIntercellSpacing:") = Void, NSSize;
override externalInstanceMethod(#NSMatrix, "setScrollable:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSMatrix, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSMatrix, "setCellBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSMatrix, "cellBackgroundColor") = NSColor;
override externalInstanceMethod(#NSMatrix, "setDrawsCellBackground:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "drawsCellBackground") = Bool;
override externalInstanceMethod(#NSMatrix, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "drawsBackground") = Bool;
override externalInstanceMethod(#NSMatrix, "setState:atRow:column:") = Void, CLong, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "getNumberOfRows:columns:") = Void, Pointer[CLong], Pointer[CLong];
override externalInstanceMethod(#NSMatrix, "numberOfRows") = CLong;
override externalInstanceMethod(#NSMatrix, "numberOfColumns") = CLong;
override externalInstanceMethod(#NSMatrix, "cellAtRow:column:") = Id, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "cellFrameAtRow:column:") = NSRect, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "getRow:column:ofCell:") = Bool, Pointer[CLong], Pointer[CLong], NSCell;
override externalInstanceMethod(#NSMatrix, "getRow:column:forPoint:") = Bool, Pointer[CLong], Pointer[CLong], NSPoint;
override externalInstanceMethod(#NSMatrix, "renewRows:columns:") = Void, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "putCell:atRow:column:") = Void, NSCell, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "addRow") = Void;
override externalInstanceMethod(#NSMatrix, "addRowWithCells:") = Void, NSArray;
override externalInstanceMethod(#NSMatrix, "insertRow:") = Void, CLong;
override externalInstanceMethod(#NSMatrix, "insertRow:withCells:") = Void, CLong, NSArray;
override externalInstanceMethod(#NSMatrix, "removeRow:") = Void, CLong;
override externalInstanceMethod(#NSMatrix, "addColumn") = Void;
override externalInstanceMethod(#NSMatrix, "addColumnWithCells:") = Void, NSArray;
override externalInstanceMethod(#NSMatrix, "insertColumn:") = Void, CLong;
override externalInstanceMethod(#NSMatrix, "insertColumn:withCells:") = Void, CLong, NSArray;
override externalInstanceMethod(#NSMatrix, "removeColumn:") = Void, CLong;
override externalInstanceMethod(#NSMatrix, "cellWithTag:") = Id, CLong;
override externalInstanceMethod(#NSMatrix, "doubleAction") = SelectorHandle;
override externalInstanceMethod(#NSMatrix, "setDoubleAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSMatrix, "setAutosizesCells:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "autosizesCells") = Bool;
override externalInstanceMethod(#NSMatrix, "sizeToCells") = Void;
override externalInstanceMethod(#NSMatrix, "setValidateSize:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "drawCellAtRow:column:") = Void, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "highlightCell:atRow:column:") = Void, Bool, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "setAutoscroll:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "isAutoscroll") = Bool;
override externalInstanceMethod(#NSMatrix, "scrollCellToVisibleAtRow:column:") = Void, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "mouseDownFlags") = CLong;
override externalInstanceMethod(#NSMatrix, "mouseDown:") = Void, NSEvent;
override externalInstanceMethod(#NSMatrix, "performKeyEquivalent:") = Bool, NSEvent;
override externalInstanceMethod(#NSMatrix, "sendAction") = Bool;
override externalInstanceMethod(#NSMatrix, "sendDoubleAction") = Void;
override externalInstanceMethod(#NSMatrix, "delegate") = Id;
override externalInstanceMethod(#NSMatrix, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSMatrix, "textShouldBeginEditing:") = Bool, NSText;
override externalInstanceMethod(#NSMatrix, "textShouldEndEditing:") = Bool, NSText;
override externalInstanceMethod(#NSMatrix, "textDidBeginEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSMatrix, "textDidEndEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSMatrix, "textDidChange:") = Void, NSNotification;
override externalInstanceMethod(#NSMatrix, "selectText:") = Void, Id;
override externalInstanceMethod(#NSMatrix, "selectTextAtRow:column:") = Id, CLong, CLong;
override externalInstanceMethod(#NSMatrix, "acceptsFirstMouse:") = Bool, NSEvent;
override externalInstanceMethod(#NSMatrix, "resetCursorRects") = Void;
override externalInstanceMethod(#NSMatrix, "setToolTip:forCell:") = Void, NSString, NSCell;
override externalInstanceMethod(#NSMatrix, "toolTipForCell:") = NSString, NSCell;
override externalInstanceMethod(#NSMatrix, "setTabKeyTraversesCells:") = Void, Bool;
override externalInstanceMethod(#NSMatrix, "tabKeyTraversesCells") = Bool;
override externalInstanceMethod(#NSMatrix, "setKeyCell:") = Void, NSCell;
override externalInstanceMethod(#NSMatrix, "keyCell") = Id;

record NSMenu = externalClass(NSObject);
override externalInstanceMethod(#NSMenu, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSMenu, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSMenu, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSMenu, "initWithTitle:") = Id, NSString;
override externalInstanceMethod(#NSMenu, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSMenu, "title") = NSString;
override externalClassMethod(#NSMenu, "popUpContextMenu:withEvent:forView:") = Void, NSMenu, NSEvent, NSView;
override externalClassMethod(#NSMenu, "popUpContextMenu:withEvent:forView:withFont:") = Void, NSMenu, NSEvent, NSView, NSFont;
override externalInstanceMethod(#NSMenu, "popUpMenuPositioningItem:atLocation:inView:") = Bool, NSMenuItem, NSPoint, NSView;
override externalClassMethod(#NSMenu, "setMenuBarVisible:") = Void, Bool;
override externalClassMethod(#NSMenu, "menuBarVisible") = Bool;
override externalInstanceMethod(#NSMenu, "supermenu") = NSMenu;
override externalInstanceMethod(#NSMenu, "setSupermenu:") = Void, NSMenu;
override externalInstanceMethod(#NSMenu, "insertItem:atIndex:") = Void, NSMenuItem, CLong;
override externalInstanceMethod(#NSMenu, "addItem:") = Void, NSMenuItem;
override externalInstanceMethod(#NSMenu, "insertItemWithTitle:action:keyEquivalent:atIndex:") = NSMenuItem, NSString, SelectorHandle, NSString, CLong;
override externalInstanceMethod(#NSMenu, "addItemWithTitle:action:keyEquivalent:") = NSMenuItem, NSString, SelectorHandle, NSString;
override externalInstanceMethod(#NSMenu, "removeItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSMenu, "removeItem:") = Void, NSMenuItem;
override externalInstanceMethod(#NSMenu, "setSubmenu:forItem:") = Void, NSMenu, NSMenuItem;
override externalInstanceMethod(#NSMenu, "removeAllItems") = Void;
override externalInstanceMethod(#NSMenu, "itemArray") = NSArray;
override externalInstanceMethod(#NSMenu, "numberOfItems") = CLong;
override externalInstanceMethod(#NSMenu, "itemAtIndex:") = NSMenuItem, CLong;
override externalInstanceMethod(#NSMenu, "indexOfItem:") = CLong, NSMenuItem;
override externalInstanceMethod(#NSMenu, "indexOfItemWithTitle:") = CLong, NSString;
override externalInstanceMethod(#NSMenu, "indexOfItemWithTag:") = CLong, CLong;
override externalInstanceMethod(#NSMenu, "indexOfItemWithRepresentedObject:") = CLong, Id;
override externalInstanceMethod(#NSMenu, "indexOfItemWithSubmenu:") = CLong, NSMenu;
override externalInstanceMethod(#NSMenu, "indexOfItemWithTarget:andAction:") = CLong, Id, SelectorHandle;
override externalInstanceMethod(#NSMenu, "itemWithTitle:") = NSMenuItem, NSString;
override externalInstanceMethod(#NSMenu, "itemWithTag:") = NSMenuItem, CLong;
override externalInstanceMethod(#NSMenu, "setAutoenablesItems:") = Void, Bool;
override externalInstanceMethod(#NSMenu, "autoenablesItems") = Bool;
override externalInstanceMethod(#NSMenu, "update") = Void;
override externalInstanceMethod(#NSMenu, "performKeyEquivalent:") = Bool, NSEvent;
override externalInstanceMethod(#NSMenu, "itemChanged:") = Void, NSMenuItem;
override externalInstanceMethod(#NSMenu, "performActionForItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSMenu, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSMenu, "delegate") = Id;
override externalInstanceMethod(#NSMenu, "menuBarHeight") = Double;
override externalInstanceMethod(#NSMenu, "cancelTracking") = Void;
override externalInstanceMethod(#NSMenu, "cancelTrackingWithoutAnimation") = Void;
override externalInstanceMethod(#NSMenu, "highlightedItem") = NSMenuItem;
override externalInstanceMethod(#NSMenu, "minimumWidth") = Double;
override externalInstanceMethod(#NSMenu, "setMinimumWidth:") = Void, Double;
override externalInstanceMethod(#NSMenu, "size") = NSSize;
override externalInstanceMethod(#NSMenu, "font") = NSFont;
override externalInstanceMethod(#NSMenu, "setFont:") = Void, NSFont;
override externalInstanceMethod(#NSMenu, "allowsContextMenuPlugIns") = Bool;
override externalInstanceMethod(#NSMenu, "setAllowsContextMenuPlugIns:") = Void, Bool;
override externalInstanceMethod(#NSMenu, "setShowsStateColumn:") = Void, Bool;
override externalInstanceMethod(#NSMenu, "showsStateColumn") = Bool;
override externalClassMethod(#NSMenu, "menuZone") = Pointer[NSZone];
override externalInstanceMethod(#NSMenu, "setMenuChangedMessagesEnabled:") = Void, Bool;
override externalInstanceMethod(#NSMenu, "menuChangedMessagesEnabled") = Bool;
override externalInstanceMethod(#NSMenu, "helpRequested:") = Void, NSEvent;
override externalInstanceMethod(#NSMenu, "isTornOff") = Bool;
override externalInstanceMethod(#NSMenu, "submenuAction:") = Void, Id;
override externalInstanceMethod(#NSMenu, "propertiesToUpdate") = CULong;
override externalInstanceMethod(#NSMenu, "setMenuRepresentation:") = Void, Id;
override externalInstanceMethod(#NSMenu, "menuRepresentation") = Id;
override externalInstanceMethod(#NSMenu, "setContextMenuRepresentation:") = Void, Id;
override externalInstanceMethod(#NSMenu, "contextMenuRepresentation") = Id;
override externalInstanceMethod(#NSMenu, "setTearOffMenuRepresentation:") = Void, Id;
override externalInstanceMethod(#NSMenu, "tearOffMenuRepresentation") = Id;
override externalClassMethod(#NSMenu, "setMenuZone:") = Void, Pointer[NSZone];
override externalInstanceMethod(#NSMenu, "attachedMenu") = NSMenu;
override externalInstanceMethod(#NSMenu, "isAttached") = Bool;
override externalInstanceMethod(#NSMenu, "sizeToFit") = Void;
override externalInstanceMethod(#NSMenu, "locationForSubmenu:") = NSPoint, NSMenu;

record NSMenuItem = externalClass(NSObject);
override externalInstanceMethod(#NSMenuItem, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSMenuItem, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSMenuItem, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSMenuItem, "action") = SelectorHandle;
override externalInstanceMethod(#NSMenuItem, "tag") = CLong;
override externalClassMethod(#NSMenuItem, "setUsesUserKeyEquivalents:") = Void, Bool;
override externalClassMethod(#NSMenuItem, "usesUserKeyEquivalents") = Bool;
override externalClassMethod(#NSMenuItem, "separatorItem") = NSMenuItem;
override externalInstanceMethod(#NSMenuItem, "initWithTitle:action:keyEquivalent:") = Id, NSString, SelectorHandle, NSString;
override externalInstanceMethod(#NSMenuItem, "setMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSMenuItem, "menu") = NSMenu;
override externalInstanceMethod(#NSMenuItem, "hasSubmenu") = Bool;
override externalInstanceMethod(#NSMenuItem, "setSubmenu:") = Void, NSMenu;
override externalInstanceMethod(#NSMenuItem, "submenu") = NSMenu;
override externalInstanceMethod(#NSMenuItem, "parentItem") = NSMenuItem;
override externalInstanceMethod(#NSMenuItem, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSMenuItem, "title") = NSString;
override externalInstanceMethod(#NSMenuItem, "setAttributedTitle:") = Void, NSAttributedString;
override externalInstanceMethod(#NSMenuItem, "attributedTitle") = NSAttributedString;
override externalInstanceMethod(#NSMenuItem, "isSeparatorItem") = Bool;
override externalInstanceMethod(#NSMenuItem, "setKeyEquivalent:") = Void, NSString;
override externalInstanceMethod(#NSMenuItem, "keyEquivalent") = NSString;
override externalInstanceMethod(#NSMenuItem, "setKeyEquivalentModifierMask:") = Void, CULong;
override externalInstanceMethod(#NSMenuItem, "keyEquivalentModifierMask") = CULong;
override externalInstanceMethod(#NSMenuItem, "userKeyEquivalent") = NSString;
override externalInstanceMethod(#NSMenuItem, "setTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSMenuItem, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSMenuItem, "image") = NSImage;
override externalInstanceMethod(#NSMenuItem, "setState:") = Void, CLong;
override externalInstanceMethod(#NSMenuItem, "state") = CLong;
override externalInstanceMethod(#NSMenuItem, "setOnStateImage:") = Void, NSImage;
override externalInstanceMethod(#NSMenuItem, "onStateImage") = NSImage;
override externalInstanceMethod(#NSMenuItem, "setOffStateImage:") = Void, NSImage;
override externalInstanceMethod(#NSMenuItem, "offStateImage") = NSImage;
override externalInstanceMethod(#NSMenuItem, "setMixedStateImage:") = Void, NSImage;
override externalInstanceMethod(#NSMenuItem, "mixedStateImage") = NSImage;
override externalInstanceMethod(#NSMenuItem, "setEnabled:") = Void, Bool;
override externalInstanceMethod(#NSMenuItem, "isEnabled") = Bool;
override externalInstanceMethod(#NSMenuItem, "setAlternate:") = Void, Bool;
override externalInstanceMethod(#NSMenuItem, "isAlternate") = Bool;
override externalInstanceMethod(#NSMenuItem, "setIndentationLevel:") = Void, CLong;
override externalInstanceMethod(#NSMenuItem, "indentationLevel") = CLong;
override externalInstanceMethod(#NSMenuItem, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSMenuItem, "target") = Id;
override externalInstanceMethod(#NSMenuItem, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSMenuItem, "action") = SelectorHandle;
override externalInstanceMethod(#NSMenuItem, "setTag:") = Void, CLong;
override externalInstanceMethod(#NSMenuItem, "tag") = CLong;
override externalInstanceMethod(#NSMenuItem, "setRepresentedObject:") = Void, Id;
override externalInstanceMethod(#NSMenuItem, "representedObject") = Id;
override externalInstanceMethod(#NSMenuItem, "setView:") = Void, NSView;
override externalInstanceMethod(#NSMenuItem, "view") = NSView;
override externalInstanceMethod(#NSMenuItem, "isHighlighted") = Bool;
override externalInstanceMethod(#NSMenuItem, "setHidden:") = Void, Bool;
override externalInstanceMethod(#NSMenuItem, "isHidden") = Bool;
override externalInstanceMethod(#NSMenuItem, "isHiddenOrHasHiddenAncestor") = Bool;
override externalInstanceMethod(#NSMenuItem, "setToolTip:") = Void, NSString;
override externalInstanceMethod(#NSMenuItem, "toolTip") = NSString;
override externalInstanceMethod(#NSMenuItem, "setMnemonicLocation:") = Void, CULong;
override externalInstanceMethod(#NSMenuItem, "mnemonicLocation") = CULong;
override externalInstanceMethod(#NSMenuItem, "mnemonic") = NSString;

record NSMenuItemCell = externalClass(NSButtonCell);
override externalInstanceMethod(#NSMenuItemCell, "setMenuItem:") = Void, NSMenuItem;
override externalInstanceMethod(#NSMenuItemCell, "menuItem") = NSMenuItem;
override externalInstanceMethod(#NSMenuItemCell, "setNeedsSizing:") = Void, Bool;
override externalInstanceMethod(#NSMenuItemCell, "needsSizing") = Bool;
override externalInstanceMethod(#NSMenuItemCell, "calcSize") = Void;
override externalInstanceMethod(#NSMenuItemCell, "setNeedsDisplay:") = Void, Bool;
override externalInstanceMethod(#NSMenuItemCell, "needsDisplay") = Bool;
override externalInstanceMethod(#NSMenuItemCell, "stateImageWidth") = Double;
override externalInstanceMethod(#NSMenuItemCell, "imageWidth") = Double;
override externalInstanceMethod(#NSMenuItemCell, "titleWidth") = Double;
override externalInstanceMethod(#NSMenuItemCell, "keyEquivalentWidth") = Double;
override externalInstanceMethod(#NSMenuItemCell, "stateImageRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSMenuItemCell, "titleRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSMenuItemCell, "keyEquivalentRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSMenuItemCell, "drawSeparatorItemWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSMenuItemCell, "drawStateImageWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSMenuItemCell, "drawImageWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSMenuItemCell, "drawTitleWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSMenuItemCell, "drawKeyEquivalentWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSMenuItemCell, "drawBorderAndBackgroundWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSMenuItemCell, "tag") = CLong;

record NSMovie = externalClass(NSObject);
override externalInstanceMethod(#NSMovie, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSMovie, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSMovie, "initWithMovie:") = Id, QTMovie;
override externalInstanceMethod(#NSMovie, "QTMovie") = QTMovie;

override externalInstanceMethod(#NSMutableAttributedString, "readFromURL:options:documentAttributes:error:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override externalInstanceMethod(#NSMutableAttributedString, "readFromData:options:documentAttributes:error:") = Bool, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override externalInstanceMethod(#NSMutableAttributedString, "readFromURL:options:documentAttributes:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary];
override externalInstanceMethod(#NSMutableAttributedString, "readFromData:options:documentAttributes:") = Bool, NSData, NSDictionary, Pointer[NSDictionary];
override externalInstanceMethod(#NSMutableAttributedString, "superscriptRange:") = Void, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "subscriptRange:") = Void, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "unscriptRange:") = Void, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "applyFontTraits:range:") = Void, CULong, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "setAlignment:range:") = Void, CULong, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "setBaseWritingDirection:range:") = Void, CLong, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "fixAttributesInRange:") = Void, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "fixFontAttributeInRange:") = Void, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "fixParagraphStyleAttributeInRange:") = Void, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "fixAttachmentAttributeInRange:") = Void, NSRange;
override externalInstanceMethod(#NSMutableAttributedString, "updateAttachmentsFromPath:") = Void, NSString;

record NSMutableParagraphStyle = externalClass(NSParagraphStyle);
override externalInstanceMethod(#NSMutableParagraphStyle, "setLineSpacing:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setParagraphSpacing:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setAlignment:") = Void, CULong;
override externalInstanceMethod(#NSMutableParagraphStyle, "setFirstLineHeadIndent:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setHeadIndent:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setTailIndent:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setLineBreakMode:") = Void, CULong;
override externalInstanceMethod(#NSMutableParagraphStyle, "setMinimumLineHeight:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setMaximumLineHeight:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "addTabStop:") = Void, NSTextTab;
override externalInstanceMethod(#NSMutableParagraphStyle, "removeTabStop:") = Void, NSTextTab;
override externalInstanceMethod(#NSMutableParagraphStyle, "setTabStops:") = Void, NSArray;
override externalInstanceMethod(#NSMutableParagraphStyle, "setParagraphStyle:") = Void, NSParagraphStyle;
override externalInstanceMethod(#NSMutableParagraphStyle, "setBaseWritingDirection:") = Void, CLong;
override externalInstanceMethod(#NSMutableParagraphStyle, "setLineHeightMultiple:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setParagraphSpacingBefore:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setDefaultTabInterval:") = Void, Double;
override externalInstanceMethod(#NSMutableParagraphStyle, "setTextBlocks:") = Void, NSArray;
override externalInstanceMethod(#NSMutableParagraphStyle, "setTextLists:") = Void, NSArray;
override externalInstanceMethod(#NSMutableParagraphStyle, "setHyphenationFactor:") = Void, Float;
override externalInstanceMethod(#NSMutableParagraphStyle, "setTighteningFactorForTruncation:") = Void, Float;
override externalInstanceMethod(#NSMutableParagraphStyle, "setHeaderLevel:") = Void, CLong;

record NSNib = externalClass(NSObject);
override externalInstanceMethod(#NSNib, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSNib, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSNib, "initWithContentsOfURL:") = Id, NSURL;
override externalInstanceMethod(#NSNib, "initWithNibNamed:bundle:") = Id, NSString, NSBundle;
override externalInstanceMethod(#NSNib, "instantiateNibWithExternalNameTable:") = Bool, NSDictionary;
override externalInstanceMethod(#NSNib, "instantiateNibWithOwner:topLevelObjects:") = Bool, Id, Pointer[NSArray];

override externalInstanceMethod(#NSObject, "accessibilityAttributeNames") = NSArray;
override externalInstanceMethod(#NSObject, "accessibilityAttributeValue:") = Id, NSString;
override externalInstanceMethod(#NSObject, "accessibilityIsAttributeSettable:") = Bool, NSString;
override externalInstanceMethod(#NSObject, "accessibilitySetValue:forAttribute:") = Void, Id, NSString;
override externalInstanceMethod(#NSObject, "accessibilityParameterizedAttributeNames") = NSArray;
override externalInstanceMethod(#NSObject, "accessibilityAttributeValue:forParameter:") = Id, NSString, Id;
override externalInstanceMethod(#NSObject, "accessibilityActionNames") = NSArray;
override externalInstanceMethod(#NSObject, "accessibilityActionDescription:") = NSString, NSString;
override externalInstanceMethod(#NSObject, "accessibilityPerformAction:") = Void, NSString;
override externalInstanceMethod(#NSObject, "accessibilityIsIgnored") = Bool;
override externalInstanceMethod(#NSObject, "accessibilityHitTest:") = Id, NSPoint;
override externalInstanceMethod(#NSObject, "accessibilityFocusedUIElement") = Id;
override externalInstanceMethod(#NSObject, "accessibilityIndexOfChild:") = CULong, Id;
override externalInstanceMethod(#NSObject, "accessibilityArrayAttributeCount:") = CULong, NSString;
override externalInstanceMethod(#NSObject, "accessibilityArrayAttributeValues:index:maxCount:") = NSArray, NSString, CULong, CULong;
override externalInstanceMethod(#NSObject, "accessibilitySetOverrideValue:forAttribute:") = Bool, Id, NSString;
override externalInstanceMethod(#NSObject, "view:stringForToolTip:point:userData:") = NSString, NSView, CLong, NSPoint, RawPointer;
override externalInstanceMethod(#NSObject, "writeSelectionToPasteboard:types:") = Bool, NSPasteboard, NSArray;
override externalInstanceMethod(#NSObject, "readSelectionFromPasteboard:") = Bool, NSPasteboard;
override externalInstanceMethod(#NSObject, "controlTextDidBeginEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "controlTextDidEndEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "controlTextDidChange:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "fontManager:willIncludeFont:") = Bool, Id, NSString;
override externalInstanceMethod(#NSObject, "changeFont:") = Void, Id;
override externalInstanceMethod(#NSObject, "validModesForFontPanel:") = CULong, NSFontPanel;
override externalInstanceMethod(#NSObject, "validateMenuItem:") = Bool, NSMenuItem;
override externalInstanceMethod(#NSObject, "pasteboard:provideDataForType:") = Void, NSPasteboard, NSString;
override externalInstanceMethod(#NSObject, "pasteboardChangedOwner:") = Void, NSPasteboard;
override externalInstanceMethod(#NSObject, "draggingEntered:") = CULong, Id;
override externalInstanceMethod(#NSObject, "draggingUpdated:") = CULong, Id;
override externalInstanceMethod(#NSObject, "draggingExited:") = Void, Id;
override externalInstanceMethod(#NSObject, "prepareForDragOperation:") = Bool, Id;
override externalInstanceMethod(#NSObject, "performDragOperation:") = Bool, Id;
override externalInstanceMethod(#NSObject, "concludeDragOperation:") = Void, Id;
override externalInstanceMethod(#NSObject, "draggingEnded:") = Void, Id;
override externalInstanceMethod(#NSObject, "wantsPeriodicDraggingUpdates") = Bool;
override externalInstanceMethod(#NSObject, "draggingSourceOperationMaskForLocal:") = CULong, Bool;
override externalInstanceMethod(#NSObject, "namesOfPromisedFilesDroppedAtDestination:") = NSArray, NSURL;
override externalInstanceMethod(#NSObject, "draggedImage:beganAt:") = Void, NSImage, NSPoint;
override externalInstanceMethod(#NSObject, "draggedImage:endedAt:operation:") = Void, NSImage, NSPoint, CULong;
override externalInstanceMethod(#NSObject, "draggedImage:movedTo:") = Void, NSImage, NSPoint;
override externalInstanceMethod(#NSObject, "ignoreModifierKeysWhileDragging") = Bool;
override externalInstanceMethod(#NSObject, "draggedImage:endedAt:deposited:") = Void, NSImage, NSPoint, Bool;
override externalInstanceMethod(#NSObject, "changeColor:") = Void, Id;
override externalInstanceMethod(#NSObject, "awakeFromNib") = Void;
override externalInstanceMethod(#NSObject, "panel:isValidFilename:") = Bool, Id, NSString;
override externalInstanceMethod(#NSObject, "panel:directoryDidChange:") = Void, Id, NSString;
override externalInstanceMethod(#NSObject, "panel:compareFilename:with:caseSensitive:") = CLong, Id, NSString, NSString, Bool;
override externalInstanceMethod(#NSObject, "panel:shouldShowFilename:") = Bool, Id, NSString;
override externalInstanceMethod(#NSObject, "tableView:writeRows:toPasteboard:") = Bool, NSTableView, NSArray, NSPasteboard;
override externalInstanceMethod(#NSObject, "outlineViewSelectionDidChange:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "outlineViewColumnDidMove:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "outlineViewColumnDidResize:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "outlineViewSelectionIsChanging:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "outlineViewItemWillExpand:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "outlineViewItemDidExpand:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "outlineViewItemWillCollapse:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "outlineViewItemDidCollapse:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "application:delegateHandlesKey:") = Bool, NSApplication, NSString;
override externalInstanceMethod(#NSObject, "validateToolbarItem:") = Bool, NSToolbarItem;
override externalClassMethod(#NSObject, "exposeBinding:") = Void, NSString;
override externalInstanceMethod(#NSObject, "exposedBindings") = NSArray;
override externalInstanceMethod(#NSObject, "valueClassForBinding:") = Id, NSString;
override externalInstanceMethod(#NSObject, "bind:toObject:withKeyPath:options:") = Void, NSString, Id, NSString, NSDictionary;
override externalInstanceMethod(#NSObject, "unbind:") = Void, NSString;
override externalInstanceMethod(#NSObject, "infoForBinding:") = NSDictionary, NSString;
override externalInstanceMethod(#NSObject, "optionDescriptionsForBinding:") = NSArray, NSString;
override externalClassMethod(#NSObject, "setDefaultPlaceholder:forMarker:withBinding:") = Void, Id, Id, NSString;
override externalClassMethod(#NSObject, "defaultPlaceholderForMarker:withBinding:") = Id, Id, NSString;
override externalInstanceMethod(#NSObject, "objectDidBeginEditing:") = Void, Id;
override externalInstanceMethod(#NSObject, "objectDidEndEditing:") = Void, Id;
override externalInstanceMethod(#NSObject, "discardEditing") = Void;
override externalInstanceMethod(#NSObject, "commitEditing") = Bool;
override externalInstanceMethod(#NSObject, "commitEditingWithDelegate:didCommitSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSObject, "setLocalizedKey:") = Void, NSString;
override externalInstanceMethod(#NSObject, "localizedKey") = NSString;
override externalInstanceMethod(#NSObject, "setKey:") = Void, NSString;
override externalInstanceMethod(#NSObject, "key") = NSString;
override externalInstanceMethod(#NSObject, "setValue:") = Void, Id;
override externalInstanceMethod(#NSObject, "value") = Id;
override externalInstanceMethod(#NSObject, "isExplicitlyIncluded") = Bool;

record NSObjectController = externalClass(NSController);
override externalInstanceMethod(#NSObjectController, "initWithContent:") = Id, Id;
override externalInstanceMethod(#NSObjectController, "setContent:") = Void, Id;
override externalInstanceMethod(#NSObjectController, "content") = Id;
override externalInstanceMethod(#NSObjectController, "selection") = Id;
override externalInstanceMethod(#NSObjectController, "selectedObjects") = NSArray;
override externalInstanceMethod(#NSObjectController, "setAutomaticallyPreparesContent:") = Void, Bool;
override externalInstanceMethod(#NSObjectController, "automaticallyPreparesContent") = Bool;
override externalInstanceMethod(#NSObjectController, "prepareContent") = Void;
override externalInstanceMethod(#NSObjectController, "setObjectClass:") = Void, Id;
override externalInstanceMethod(#NSObjectController, "objectClass") = Id;
override externalInstanceMethod(#NSObjectController, "newObject") = Id;
override externalInstanceMethod(#NSObjectController, "addObject:") = Void, Id;
override externalInstanceMethod(#NSObjectController, "removeObject:") = Void, Id;
override externalInstanceMethod(#NSObjectController, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSObjectController, "isEditable") = Bool;
override externalInstanceMethod(#NSObjectController, "add:") = Void, Id;
override externalInstanceMethod(#NSObjectController, "canAdd") = Bool;
override externalInstanceMethod(#NSObjectController, "remove:") = Void, Id;
override externalInstanceMethod(#NSObjectController, "canRemove") = Bool;
override externalInstanceMethod(#NSObjectController, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSObjectController, "managedObjectContext") = NSManagedObjectContext;
override externalInstanceMethod(#NSObjectController, "setManagedObjectContext:") = Void, NSManagedObjectContext;
override externalInstanceMethod(#NSObjectController, "entityName") = NSString;
override externalInstanceMethod(#NSObjectController, "setEntityName:") = Void, NSString;
override externalInstanceMethod(#NSObjectController, "fetchPredicate") = NSPredicate;
override externalInstanceMethod(#NSObjectController, "setFetchPredicate:") = Void, NSPredicate;
override externalInstanceMethod(#NSObjectController, "fetchWithRequest:merge:error:") = Bool, NSFetchRequest, Bool, Pointer[NSError];
override externalInstanceMethod(#NSObjectController, "fetch:") = Void, Id;
override externalInstanceMethod(#NSObjectController, "setUsesLazyFetching:") = Void, Bool;
override externalInstanceMethod(#NSObjectController, "usesLazyFetching") = Bool;
override externalInstanceMethod(#NSObjectController, "defaultFetchRequest") = NSFetchRequest;

record NSOpenGLContext = externalClass(NSObject);
override externalInstanceMethod(#NSOpenGLContext, "initWithFormat:shareContext:") = Id, NSOpenGLPixelFormat, NSOpenGLContext;
override externalInstanceMethod(#NSOpenGLContext, "initWithCGLContextObj:") = Id, RawPointer;
override externalInstanceMethod(#NSOpenGLContext, "setView:") = Void, NSView;
override externalInstanceMethod(#NSOpenGLContext, "view") = NSView;
override externalInstanceMethod(#NSOpenGLContext, "setFullScreen") = Void;
override externalInstanceMethod(#NSOpenGLContext, "setOffScreen:width:height:rowbytes:") = Void, RawPointer, Int, Int, Int;
override externalInstanceMethod(#NSOpenGLContext, "clearDrawable") = Void;
override externalInstanceMethod(#NSOpenGLContext, "update") = Void;
override externalInstanceMethod(#NSOpenGLContext, "flushBuffer") = Void;
override externalInstanceMethod(#NSOpenGLContext, "makeCurrentContext") = Void;
override externalClassMethod(#NSOpenGLContext, "clearCurrentContext") = Void;
override externalClassMethod(#NSOpenGLContext, "currentContext") = NSOpenGLContext;
override externalInstanceMethod(#NSOpenGLContext, "copyAttributesFromContext:withMask:") = Void, NSOpenGLContext, UInt;
override externalInstanceMethod(#NSOpenGLContext, "setValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
override externalInstanceMethod(#NSOpenGLContext, "getValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
override externalInstanceMethod(#NSOpenGLContext, "setCurrentVirtualScreen:") = Void, Int;
override externalInstanceMethod(#NSOpenGLContext, "currentVirtualScreen") = Int;
override externalInstanceMethod(#NSOpenGLContext, "createTexture:fromView:internalFormat:") = Void, UInt, NSView, UInt;
override externalInstanceMethod(#NSOpenGLContext, "CGLContextObj") = RawPointer;
override externalInstanceMethod(#NSOpenGLContext, "setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:") = Void, NSOpenGLPixelBuffer, UInt, Int, Int;
override externalInstanceMethod(#NSOpenGLContext, "pixelBuffer") = NSOpenGLPixelBuffer;
override externalInstanceMethod(#NSOpenGLContext, "pixelBufferCubeMapFace") = UInt;
override externalInstanceMethod(#NSOpenGLContext, "pixelBufferMipMapLevel") = Int;
override externalInstanceMethod(#NSOpenGLContext, "setTextureImageToPixelBuffer:colorBuffer:") = Void, NSOpenGLPixelBuffer, UInt;

record NSOpenGLLayer = externalClass(CAOpenGLLayer);
override externalInstanceMethod(#NSOpenGLLayer, "openGLPixelFormatForDisplayMask:") = NSOpenGLPixelFormat, UInt;
override externalInstanceMethod(#NSOpenGLLayer, "openGLContextForPixelFormat:") = NSOpenGLContext, NSOpenGLPixelFormat;
override externalInstanceMethod(#NSOpenGLLayer, "canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
override externalInstanceMethod(#NSOpenGLLayer, "drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Void, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
override externalInstanceMethod(#NSOpenGLLayer, "view") = NSView;
override externalInstanceMethod(#NSOpenGLLayer, "setView:") = Void, NSView;
override externalInstanceMethod(#NSOpenGLLayer, "openGLPixelFormat") = NSOpenGLPixelFormat;
override externalInstanceMethod(#NSOpenGLLayer, "setOpenGLPixelFormat:") = Void, NSOpenGLPixelFormat;
override externalInstanceMethod(#NSOpenGLLayer, "openGLContext") = NSOpenGLContext;
override externalInstanceMethod(#NSOpenGLLayer, "setOpenGLContext:") = Void, NSOpenGLContext;

record NSOpenGLPixelBuffer = externalClass(NSObject);
override externalInstanceMethod(#NSOpenGLPixelBuffer, "initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:") = Id, UInt, UInt, Int, Int, Int;
override externalInstanceMethod(#NSOpenGLPixelBuffer, "initWithCGLPBufferObj:") = Id, RawPointer;
override externalInstanceMethod(#NSOpenGLPixelBuffer, "CGLPBufferObj") = RawPointer;
override externalInstanceMethod(#NSOpenGLPixelBuffer, "pixelsWide") = Int;
override externalInstanceMethod(#NSOpenGLPixelBuffer, "pixelsHigh") = Int;
override externalInstanceMethod(#NSOpenGLPixelBuffer, "textureTarget") = UInt;
override externalInstanceMethod(#NSOpenGLPixelBuffer, "textureInternalFormat") = UInt;
override externalInstanceMethod(#NSOpenGLPixelBuffer, "textureMaxMipMapLevel") = Int;

record NSOpenGLPixelFormat = externalClass(NSObject);
override externalInstanceMethod(#NSOpenGLPixelFormat, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSOpenGLPixelFormat, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSOpenGLPixelFormat, "initWithAttributes:") = Id, Pointer[UInt];
override externalInstanceMethod(#NSOpenGLPixelFormat, "initWithData:") = Id, NSData;
override externalInstanceMethod(#NSOpenGLPixelFormat, "initWithCGLPixelFormatObj:") = Id, RawPointer;
override externalInstanceMethod(#NSOpenGLPixelFormat, "attributes") = NSData;
override externalInstanceMethod(#NSOpenGLPixelFormat, "setAttributes:") = Void, NSData;
override externalInstanceMethod(#NSOpenGLPixelFormat, "getValues:forAttribute:forVirtualScreen:") = Void, Pointer[Int], UInt, Int;
override externalInstanceMethod(#NSOpenGLPixelFormat, "numberOfVirtualScreens") = Int;
override externalInstanceMethod(#NSOpenGLPixelFormat, "CGLPixelFormatObj") = RawPointer;

record NSOpenGLView = externalClass(NSView);
override externalClassMethod(#NSOpenGLView, "defaultPixelFormat") = NSOpenGLPixelFormat;
override externalInstanceMethod(#NSOpenGLView, "initWithFrame:pixelFormat:") = Id, NSRect, NSOpenGLPixelFormat;
override externalInstanceMethod(#NSOpenGLView, "setOpenGLContext:") = Void, NSOpenGLContext;
override externalInstanceMethod(#NSOpenGLView, "openGLContext") = NSOpenGLContext;
override externalInstanceMethod(#NSOpenGLView, "clearGLContext") = Void;
override externalInstanceMethod(#NSOpenGLView, "update") = Void;
override externalInstanceMethod(#NSOpenGLView, "reshape") = Void;
override externalInstanceMethod(#NSOpenGLView, "setPixelFormat:") = Void, NSOpenGLPixelFormat;
override externalInstanceMethod(#NSOpenGLView, "pixelFormat") = NSOpenGLPixelFormat;
override externalInstanceMethod(#NSOpenGLView, "prepareOpenGL") = Void;

record NSOpenPanel = externalClass(NSSavePanel);
override externalClassMethod(#NSOpenPanel, "openPanel") = NSOpenPanel;
override externalInstanceMethod(#NSOpenPanel, "URLs") = NSArray;
override externalInstanceMethod(#NSOpenPanel, "resolvesAliases") = Bool;
override externalInstanceMethod(#NSOpenPanel, "setResolvesAliases:") = Void, Bool;
override externalInstanceMethod(#NSOpenPanel, "canChooseDirectories") = Bool;
override externalInstanceMethod(#NSOpenPanel, "setCanChooseDirectories:") = Void, Bool;
override externalInstanceMethod(#NSOpenPanel, "allowsMultipleSelection") = Bool;
override externalInstanceMethod(#NSOpenPanel, "setAllowsMultipleSelection:") = Void, Bool;
override externalInstanceMethod(#NSOpenPanel, "canChooseFiles") = Bool;
override externalInstanceMethod(#NSOpenPanel, "setCanChooseFiles:") = Void, Bool;
override externalInstanceMethod(#NSOpenPanel, "filenames") = NSArray;
override externalInstanceMethod(#NSOpenPanel, "beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSOpenPanel, "beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSOpenPanel, "runModalForDirectory:file:types:") = CLong, NSString, NSString, NSArray;
override externalInstanceMethod(#NSOpenPanel, "runModalForTypes:") = CLong, NSArray;

record NSOutlineView = externalClass(NSTableView);
override externalInstanceMethod(#NSOutlineView, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSOutlineView, "delegate") = Id;
override externalInstanceMethod(#NSOutlineView, "setDataSource:") = Void, Id;
override externalInstanceMethod(#NSOutlineView, "dataSource") = Id;
override externalInstanceMethod(#NSOutlineView, "setOutlineTableColumn:") = Void, NSTableColumn;
override externalInstanceMethod(#NSOutlineView, "outlineTableColumn") = NSTableColumn;
override externalInstanceMethod(#NSOutlineView, "isExpandable:") = Bool, Id;
override externalInstanceMethod(#NSOutlineView, "expandItem:expandChildren:") = Void, Id, Bool;
override externalInstanceMethod(#NSOutlineView, "expandItem:") = Void, Id;
override externalInstanceMethod(#NSOutlineView, "collapseItem:collapseChildren:") = Void, Id, Bool;
override externalInstanceMethod(#NSOutlineView, "collapseItem:") = Void, Id;
override externalInstanceMethod(#NSOutlineView, "reloadItem:reloadChildren:") = Void, Id, Bool;
override externalInstanceMethod(#NSOutlineView, "reloadItem:") = Void, Id;
override externalInstanceMethod(#NSOutlineView, "parentForItem:") = Id, Id;
override externalInstanceMethod(#NSOutlineView, "itemAtRow:") = Id, CLong;
override externalInstanceMethod(#NSOutlineView, "rowForItem:") = CLong, Id;
override externalInstanceMethod(#NSOutlineView, "levelForItem:") = CLong, Id;
override externalInstanceMethod(#NSOutlineView, "levelForRow:") = CLong, CLong;
override externalInstanceMethod(#NSOutlineView, "isItemExpanded:") = Bool, Id;
override externalInstanceMethod(#NSOutlineView, "setIndentationPerLevel:") = Void, Double;
override externalInstanceMethod(#NSOutlineView, "indentationPerLevel") = Double;
override externalInstanceMethod(#NSOutlineView, "setIndentationMarkerFollowsCell:") = Void, Bool;
override externalInstanceMethod(#NSOutlineView, "indentationMarkerFollowsCell") = Bool;
override externalInstanceMethod(#NSOutlineView, "setAutoresizesOutlineColumn:") = Void, Bool;
override externalInstanceMethod(#NSOutlineView, "autoresizesOutlineColumn") = Bool;
override externalInstanceMethod(#NSOutlineView, "frameOfOutlineCellAtRow:") = NSRect, CLong;
override externalInstanceMethod(#NSOutlineView, "setDropItem:dropChildIndex:") = Void, Id, CLong;
override externalInstanceMethod(#NSOutlineView, "shouldCollapseAutoExpandedItemsForDeposited:") = Bool, Bool;
override externalInstanceMethod(#NSOutlineView, "autosaveExpandedItems") = Bool;
override externalInstanceMethod(#NSOutlineView, "setAutosaveExpandedItems:") = Void, Bool;

record NSPDFImageRep = externalClass(NSImageRep);
override externalClassMethod(#NSPDFImageRep, "imageRepWithData:") = Id, NSData;
override externalInstanceMethod(#NSPDFImageRep, "initWithData:") = Id, NSData;
override externalInstanceMethod(#NSPDFImageRep, "PDFRepresentation") = NSData;
override externalInstanceMethod(#NSPDFImageRep, "bounds") = NSRect;
override externalInstanceMethod(#NSPDFImageRep, "setCurrentPage:") = Void, CLong;
override externalInstanceMethod(#NSPDFImageRep, "currentPage") = CLong;
override externalInstanceMethod(#NSPDFImageRep, "pageCount") = CLong;

record NSPICTImageRep = externalClass(NSImageRep);
override externalClassMethod(#NSPICTImageRep, "imageRepWithData:") = Id, NSData;
override externalInstanceMethod(#NSPICTImageRep, "initWithData:") = Id, NSData;
override externalInstanceMethod(#NSPICTImageRep, "PICTRepresentation") = NSData;
override externalInstanceMethod(#NSPICTImageRep, "boundingBox") = NSRect;

record NSPageLayout = externalClass(NSObject);
override externalClassMethod(#NSPageLayout, "pageLayout") = NSPageLayout;
override externalInstanceMethod(#NSPageLayout, "addAccessoryController:") = Void, NSViewController;
override externalInstanceMethod(#NSPageLayout, "removeAccessoryController:") = Void, NSViewController;
override externalInstanceMethod(#NSPageLayout, "accessoryControllers") = NSArray;
override externalInstanceMethod(#NSPageLayout, "beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:") = Void, NSPrintInfo, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSPageLayout, "runModalWithPrintInfo:") = CLong, NSPrintInfo;
override externalInstanceMethod(#NSPageLayout, "runModal") = CLong;
override externalInstanceMethod(#NSPageLayout, "printInfo") = NSPrintInfo;
override externalInstanceMethod(#NSPageLayout, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSPageLayout, "accessoryView") = NSView;
override externalInstanceMethod(#NSPageLayout, "readPrintInfo") = Void;
override externalInstanceMethod(#NSPageLayout, "writePrintInfo") = Void;

record NSPanel = externalClass(NSWindow);
override externalInstanceMethod(#NSPanel, "isFloatingPanel") = Bool;
override externalInstanceMethod(#NSPanel, "setFloatingPanel:") = Void, Bool;
override externalInstanceMethod(#NSPanel, "becomesKeyOnlyIfNeeded") = Bool;
override externalInstanceMethod(#NSPanel, "setBecomesKeyOnlyIfNeeded:") = Void, Bool;
override externalInstanceMethod(#NSPanel, "worksWhenModal") = Bool;
override externalInstanceMethod(#NSPanel, "setWorksWhenModal:") = Void, Bool;

record NSParagraphStyle = externalClass(NSObject);
override externalInstanceMethod(#NSParagraphStyle, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSParagraphStyle, "mutableCopyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSParagraphStyle, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSParagraphStyle, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSParagraphStyle, "defaultParagraphStyle") = NSParagraphStyle;
override externalClassMethod(#NSParagraphStyle, "defaultWritingDirectionForLanguage:") = CLong, NSString;
override externalInstanceMethod(#NSParagraphStyle, "lineSpacing") = Double;
override externalInstanceMethod(#NSParagraphStyle, "paragraphSpacing") = Double;
override externalInstanceMethod(#NSParagraphStyle, "alignment") = CULong;
override externalInstanceMethod(#NSParagraphStyle, "headIndent") = Double;
override externalInstanceMethod(#NSParagraphStyle, "tailIndent") = Double;
override externalInstanceMethod(#NSParagraphStyle, "firstLineHeadIndent") = Double;
override externalInstanceMethod(#NSParagraphStyle, "tabStops") = NSArray;
override externalInstanceMethod(#NSParagraphStyle, "minimumLineHeight") = Double;
override externalInstanceMethod(#NSParagraphStyle, "maximumLineHeight") = Double;
override externalInstanceMethod(#NSParagraphStyle, "lineBreakMode") = CULong;
override externalInstanceMethod(#NSParagraphStyle, "baseWritingDirection") = CLong;
override externalInstanceMethod(#NSParagraphStyle, "lineHeightMultiple") = Double;
override externalInstanceMethod(#NSParagraphStyle, "paragraphSpacingBefore") = Double;
override externalInstanceMethod(#NSParagraphStyle, "defaultTabInterval") = Double;
override externalInstanceMethod(#NSParagraphStyle, "textBlocks") = NSArray;
override externalInstanceMethod(#NSParagraphStyle, "textLists") = NSArray;
override externalInstanceMethod(#NSParagraphStyle, "hyphenationFactor") = Float;
override externalInstanceMethod(#NSParagraphStyle, "tighteningFactorForTruncation") = Float;
override externalInstanceMethod(#NSParagraphStyle, "headerLevel") = CLong;

record NSPasteboard = externalClass(NSObject);
override externalClassMethod(#NSPasteboard, "generalPasteboard") = NSPasteboard;
override externalClassMethod(#NSPasteboard, "pasteboardWithName:") = NSPasteboard, NSString;
override externalClassMethod(#NSPasteboard, "pasteboardWithUniqueName") = NSPasteboard;
override externalInstanceMethod(#NSPasteboard, "name") = NSString;
override externalInstanceMethod(#NSPasteboard, "changeCount") = CLong;
override externalInstanceMethod(#NSPasteboard, "releaseGlobally") = Void;
override externalInstanceMethod(#NSPasteboard, "clearContents") = CLong;
override externalInstanceMethod(#NSPasteboard, "writeObjects:") = Bool, NSArray;
override externalInstanceMethod(#NSPasteboard, "readObjectsForClasses:options:") = NSArray, NSArray, NSDictionary;
override externalInstanceMethod(#NSPasteboard, "pasteboardItems") = NSArray;
override externalInstanceMethod(#NSPasteboard, "indexOfPasteboardItem:") = CULong, NSPasteboardItem;
override externalInstanceMethod(#NSPasteboard, "canReadItemWithDataConformingToTypes:") = Bool, NSArray;
override externalInstanceMethod(#NSPasteboard, "canReadObjectForClasses:options:") = Bool, NSArray, NSDictionary;
override externalInstanceMethod(#NSPasteboard, "declareTypes:owner:") = CLong, NSArray, Id;
override externalInstanceMethod(#NSPasteboard, "addTypes:owner:") = CLong, NSArray, Id;
override externalInstanceMethod(#NSPasteboard, "types") = NSArray;
override externalInstanceMethod(#NSPasteboard, "availableTypeFromArray:") = NSString, NSArray;
override externalInstanceMethod(#NSPasteboard, "setData:forType:") = Bool, NSData, NSString;
override externalInstanceMethod(#NSPasteboard, "setPropertyList:forType:") = Bool, Id, NSString;
override externalInstanceMethod(#NSPasteboard, "setString:forType:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSPasteboard, "dataForType:") = NSData, NSString;
override externalInstanceMethod(#NSPasteboard, "propertyListForType:") = Id, NSString;
override externalInstanceMethod(#NSPasteboard, "stringForType:") = NSString, NSString;
override externalClassMethod(#NSPasteboard, "typesFilterableTo:") = NSArray, NSString;
override externalClassMethod(#NSPasteboard, "pasteboardByFilteringFile:") = NSPasteboard, NSString;
override externalClassMethod(#NSPasteboard, "pasteboardByFilteringData:ofType:") = NSPasteboard, NSData, NSString;
override externalClassMethod(#NSPasteboard, "pasteboardByFilteringTypesInPasteboard:") = NSPasteboard, NSPasteboard;
override externalInstanceMethod(#NSPasteboard, "writeFileContents:") = Bool, NSString;
override externalInstanceMethod(#NSPasteboard, "readFileContentsType:toFile:") = NSString, NSString, NSString;
override externalInstanceMethod(#NSPasteboard, "writeFileWrapper:") = Bool, NSFileWrapper;
override externalInstanceMethod(#NSPasteboard, "readFileWrapper") = NSFileWrapper;

record NSPasteboardItem = externalClass(NSObject);
override externalInstanceMethod(#NSPasteboardItem, "writableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalInstanceMethod(#NSPasteboardItem, "writingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSPasteboardItem, "pasteboardPropertyListForType:") = Id, NSString;
override externalClassMethod(#NSPasteboardItem, "readableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalClassMethod(#NSPasteboardItem, "readingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSPasteboardItem, "initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
override externalInstanceMethod(#NSPasteboardItem, "types") = NSArray;
override externalInstanceMethod(#NSPasteboardItem, "availableTypeFromArray:") = NSString, NSArray;
override externalInstanceMethod(#NSPasteboardItem, "setDataProvider:forTypes:") = Bool, Id, NSArray;
override externalInstanceMethod(#NSPasteboardItem, "setData:forType:") = Bool, NSData, NSString;
override externalInstanceMethod(#NSPasteboardItem, "setString:forType:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSPasteboardItem, "setPropertyList:forType:") = Bool, Id, NSString;
override externalInstanceMethod(#NSPasteboardItem, "dataForType:") = NSData, NSString;
override externalInstanceMethod(#NSPasteboardItem, "stringForType:") = NSString, NSString;
override externalInstanceMethod(#NSPasteboardItem, "propertyListForType:") = Id, NSString;

record NSPathCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSPathCell, "panel:shouldEnableURL:") = Bool, Id, NSURL;
override externalInstanceMethod(#NSPathCell, "panel:validateURL:error:") = Bool, Id, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSPathCell, "panel:didChangeToDirectoryURL:") = Void, Id, NSURL;
override externalInstanceMethod(#NSPathCell, "panel:userEnteredFilename:confirmed:") = NSString, Id, NSString, Bool;
override externalInstanceMethod(#NSPathCell, "panel:willExpand:") = Void, Id, Bool;
override externalInstanceMethod(#NSPathCell, "panelSelectionDidChange:") = Void, Id;
override externalInstanceMethod(#NSPathCell, "pathStyle") = CLong;
override externalInstanceMethod(#NSPathCell, "setPathStyle:") = Void, CLong;
override externalInstanceMethod(#NSPathCell, "URL") = NSURL;
override externalInstanceMethod(#NSPathCell, "setURL:") = Void, NSURL;
override externalInstanceMethod(#NSPathCell, "setObjectValue:") = Void, Id;
override externalInstanceMethod(#NSPathCell, "allowedTypes") = NSArray;
override externalInstanceMethod(#NSPathCell, "setAllowedTypes:") = Void, NSArray;
override externalInstanceMethod(#NSPathCell, "delegate") = Id;
override externalInstanceMethod(#NSPathCell, "setDelegate:") = Void, Id;
override externalClassMethod(#NSPathCell, "pathComponentCellClass") = Id;
override externalInstanceMethod(#NSPathCell, "pathComponentCells") = NSArray;
override externalInstanceMethod(#NSPathCell, "setPathComponentCells:") = Void, NSArray;
override externalInstanceMethod(#NSPathCell, "rectOfPathComponentCell:withFrame:inView:") = NSRect, NSPathComponentCell, NSRect, NSView;
override externalInstanceMethod(#NSPathCell, "pathComponentCellAtPoint:withFrame:inView:") = NSPathComponentCell, NSPoint, NSRect, NSView;
override externalInstanceMethod(#NSPathCell, "clickedPathComponentCell") = NSPathComponentCell;
override externalInstanceMethod(#NSPathCell, "mouseEntered:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
override externalInstanceMethod(#NSPathCell, "mouseExited:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
override externalInstanceMethod(#NSPathCell, "doubleAction") = SelectorHandle;
override externalInstanceMethod(#NSPathCell, "setDoubleAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSPathCell, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSPathCell, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSPathCell, "setPlaceholderString:") = Void, NSString;
override externalInstanceMethod(#NSPathCell, "placeholderString") = NSString;
override externalInstanceMethod(#NSPathCell, "setPlaceholderAttributedString:") = Void, NSAttributedString;
override externalInstanceMethod(#NSPathCell, "placeholderAttributedString") = NSAttributedString;
override externalInstanceMethod(#NSPathCell, "setControlSize:") = Void, CULong;

record NSPathComponentCell = externalClass(NSTextFieldCell);
override externalInstanceMethod(#NSPathComponentCell, "image") = NSImage;
override externalInstanceMethod(#NSPathComponentCell, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSPathComponentCell, "URL") = NSURL;
override externalInstanceMethod(#NSPathComponentCell, "setURL:") = Void, NSURL;

record NSPathControl = externalClass(NSControl);
override externalInstanceMethod(#NSPathControl, "URL") = NSURL;
override externalInstanceMethod(#NSPathControl, "setURL:") = Void, NSURL;
override externalInstanceMethod(#NSPathControl, "doubleAction") = SelectorHandle;
override externalInstanceMethod(#NSPathControl, "setDoubleAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSPathControl, "pathStyle") = CLong;
override externalInstanceMethod(#NSPathControl, "setPathStyle:") = Void, CLong;
override externalInstanceMethod(#NSPathControl, "clickedPathComponentCell") = NSPathComponentCell;
override externalInstanceMethod(#NSPathControl, "pathComponentCells") = NSArray;
override externalInstanceMethod(#NSPathControl, "setPathComponentCells:") = Void, NSArray;
override externalInstanceMethod(#NSPathControl, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSPathControl, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSPathControl, "delegate") = Id;
override externalInstanceMethod(#NSPathControl, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSPathControl, "setDraggingSourceOperationMask:forLocal:") = Void, CULong, Bool;
override externalInstanceMethod(#NSPathControl, "setMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSPathControl, "menu") = NSMenu;

record NSPersistentDocument = externalClass(NSDocument);
override externalInstanceMethod(#NSPersistentDocument, "managedObjectContext") = NSManagedObjectContext;
override externalInstanceMethod(#NSPersistentDocument, "setManagedObjectContext:") = Void, NSManagedObjectContext;
override externalInstanceMethod(#NSPersistentDocument, "managedObjectModel") = Id;
override externalInstanceMethod(#NSPersistentDocument, "configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:") = Bool, NSURL, NSString, NSString, NSDictionary, Pointer[NSError];
override externalInstanceMethod(#NSPersistentDocument, "persistentStoreTypeForFileType:") = NSString, NSString;
override externalInstanceMethod(#NSPersistentDocument, "writeToURL:ofType:forSaveOperation:originalContentsURL:error:") = Bool, NSURL, NSString, CULong, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSPersistentDocument, "readFromURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSPersistentDocument, "revertToContentsOfURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override externalInstanceMethod(#NSPersistentDocument, "configurePersistentStoreCoordinatorForURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];

record NSPopUpButton = externalClass(NSButton);
override externalInstanceMethod(#NSPopUpButton, "initWithFrame:pullsDown:") = Id, NSRect, Bool;
override externalInstanceMethod(#NSPopUpButton, "setMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSPopUpButton, "menu") = NSMenu;
override externalInstanceMethod(#NSPopUpButton, "setPullsDown:") = Void, Bool;
override externalInstanceMethod(#NSPopUpButton, "pullsDown") = Bool;
override externalInstanceMethod(#NSPopUpButton, "setAutoenablesItems:") = Void, Bool;
override externalInstanceMethod(#NSPopUpButton, "autoenablesItems") = Bool;
override externalInstanceMethod(#NSPopUpButton, "setPreferredEdge:") = Void, CULong;
override externalInstanceMethod(#NSPopUpButton, "preferredEdge") = CULong;
override externalInstanceMethod(#NSPopUpButton, "addItemWithTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButton, "addItemsWithTitles:") = Void, NSArray;
override externalInstanceMethod(#NSPopUpButton, "insertItemWithTitle:atIndex:") = Void, NSString, CLong;
override externalInstanceMethod(#NSPopUpButton, "removeItemWithTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButton, "removeItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSPopUpButton, "removeAllItems") = Void;
override externalInstanceMethod(#NSPopUpButton, "itemArray") = NSArray;
override externalInstanceMethod(#NSPopUpButton, "numberOfItems") = CLong;
override externalInstanceMethod(#NSPopUpButton, "indexOfItem:") = CLong, NSMenuItem;
override externalInstanceMethod(#NSPopUpButton, "indexOfItemWithTitle:") = CLong, NSString;
override externalInstanceMethod(#NSPopUpButton, "indexOfItemWithTag:") = CLong, CLong;
override externalInstanceMethod(#NSPopUpButton, "indexOfItemWithRepresentedObject:") = CLong, Id;
override externalInstanceMethod(#NSPopUpButton, "indexOfItemWithTarget:andAction:") = CLong, Id, SelectorHandle;
override externalInstanceMethod(#NSPopUpButton, "itemAtIndex:") = NSMenuItem, CLong;
override externalInstanceMethod(#NSPopUpButton, "itemWithTitle:") = NSMenuItem, NSString;
override externalInstanceMethod(#NSPopUpButton, "lastItem") = NSMenuItem;
override externalInstanceMethod(#NSPopUpButton, "selectItem:") = Void, NSMenuItem;
override externalInstanceMethod(#NSPopUpButton, "selectItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSPopUpButton, "selectItemWithTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButton, "selectItemWithTag:") = Bool, CLong;
override externalInstanceMethod(#NSPopUpButton, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButton, "selectedItem") = NSMenuItem;
override externalInstanceMethod(#NSPopUpButton, "indexOfSelectedItem") = CLong;
override externalInstanceMethod(#NSPopUpButton, "synchronizeTitleAndSelectedItem") = Void;
override externalInstanceMethod(#NSPopUpButton, "itemTitleAtIndex:") = NSString, CLong;
override externalInstanceMethod(#NSPopUpButton, "itemTitles") = NSArray;
override externalInstanceMethod(#NSPopUpButton, "titleOfSelectedItem") = NSString;

record NSPopUpButtonCell = externalClass(NSMenuItemCell);
override externalInstanceMethod(#NSPopUpButtonCell, "initTextCell:pullsDown:") = Id, NSString, Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "setMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSPopUpButtonCell, "menu") = NSMenu;
override externalInstanceMethod(#NSPopUpButtonCell, "setPullsDown:") = Void, Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "pullsDown") = Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "setAutoenablesItems:") = Void, Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "autoenablesItems") = Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "setPreferredEdge:") = Void, CULong;
override externalInstanceMethod(#NSPopUpButtonCell, "preferredEdge") = CULong;
override externalInstanceMethod(#NSPopUpButtonCell, "setUsesItemFromMenu:") = Void, Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "usesItemFromMenu") = Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "setAltersStateOfSelectedItem:") = Void, Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "altersStateOfSelectedItem") = Bool;
override externalInstanceMethod(#NSPopUpButtonCell, "addItemWithTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButtonCell, "addItemsWithTitles:") = Void, NSArray;
override externalInstanceMethod(#NSPopUpButtonCell, "insertItemWithTitle:atIndex:") = Void, NSString, CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "removeItemWithTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButtonCell, "removeItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "removeAllItems") = Void;
override externalInstanceMethod(#NSPopUpButtonCell, "itemArray") = NSArray;
override externalInstanceMethod(#NSPopUpButtonCell, "numberOfItems") = CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "indexOfItem:") = CLong, NSMenuItem;
override externalInstanceMethod(#NSPopUpButtonCell, "indexOfItemWithTitle:") = CLong, NSString;
override externalInstanceMethod(#NSPopUpButtonCell, "indexOfItemWithTag:") = CLong, CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "indexOfItemWithRepresentedObject:") = CLong, Id;
override externalInstanceMethod(#NSPopUpButtonCell, "indexOfItemWithTarget:andAction:") = CLong, Id, SelectorHandle;
override externalInstanceMethod(#NSPopUpButtonCell, "itemAtIndex:") = NSMenuItem, CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "itemWithTitle:") = NSMenuItem, NSString;
override externalInstanceMethod(#NSPopUpButtonCell, "lastItem") = NSMenuItem;
override externalInstanceMethod(#NSPopUpButtonCell, "selectItem:") = Void, NSMenuItem;
override externalInstanceMethod(#NSPopUpButtonCell, "selectItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "selectItemWithTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButtonCell, "selectItemWithTag:") = Bool, CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSPopUpButtonCell, "selectedItem") = NSMenuItem;
override externalInstanceMethod(#NSPopUpButtonCell, "indexOfSelectedItem") = CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "synchronizeTitleAndSelectedItem") = Void;
override externalInstanceMethod(#NSPopUpButtonCell, "itemTitleAtIndex:") = NSString, CLong;
override externalInstanceMethod(#NSPopUpButtonCell, "itemTitles") = NSArray;
override externalInstanceMethod(#NSPopUpButtonCell, "titleOfSelectedItem") = NSString;
override externalInstanceMethod(#NSPopUpButtonCell, "attachPopUpWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSPopUpButtonCell, "dismissPopUp") = Void;
override externalInstanceMethod(#NSPopUpButtonCell, "performClickWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSPopUpButtonCell, "arrowPosition") = CULong;
override externalInstanceMethod(#NSPopUpButtonCell, "setArrowPosition:") = Void, CULong;
override externalInstanceMethod(#NSPopUpButtonCell, "objectValue") = Id;
override externalInstanceMethod(#NSPopUpButtonCell, "setObjectValue:") = Void, Id;

record NSPredicateEditor = externalClass(NSRuleEditor);
override externalInstanceMethod(#NSPredicateEditor, "setRowTemplates:") = Void, NSArray;
override externalInstanceMethod(#NSPredicateEditor, "rowTemplates") = NSArray;

record NSPredicateEditorRowTemplate = externalClass(NSObject);
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "matchForPredicate:") = Double, NSPredicate;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "templateViews") = NSArray;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "setPredicate:") = Void, NSPredicate;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "predicateWithSubpredicates:") = NSPredicate, NSArray;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "displayableSubpredicatesOfPredicate:") = NSArray, NSPredicate;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "initWithLeftExpressions:rightExpressions:modifier:operators:options:") = Id, NSArray, NSArray, CULong, NSArray, CULong;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:") = Id, NSArray, CULong, CULong, NSArray, CULong;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "initWithCompoundTypes:") = Id, NSArray;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "leftExpressions") = NSArray;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "rightExpressions") = NSArray;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "rightExpressionAttributeType") = CULong;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "modifier") = CULong;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "operators") = NSArray;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "options") = CULong;
override externalInstanceMethod(#NSPredicateEditorRowTemplate, "compoundTypes") = NSArray;
override externalClassMethod(#NSPredicateEditorRowTemplate, "templatesWithAttributeKeyPaths:inEntityDescription:") = NSArray, NSArray, NSEntityDescription;

record NSPrintInfo = externalClass(NSObject);
override externalInstanceMethod(#NSPrintInfo, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSPrintInfo, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSPrintInfo, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSPrintInfo, "setSharedPrintInfo:") = Void, NSPrintInfo;
override externalClassMethod(#NSPrintInfo, "sharedPrintInfo") = NSPrintInfo;
override externalInstanceMethod(#NSPrintInfo, "initWithDictionary:") = Id, NSDictionary;
override externalInstanceMethod(#NSPrintInfo, "dictionary") = NSMutableDictionary;
override externalInstanceMethod(#NSPrintInfo, "setPaperName:") = Void, NSString;
override externalInstanceMethod(#NSPrintInfo, "setPaperSize:") = Void, NSSize;
override externalInstanceMethod(#NSPrintInfo, "setOrientation:") = Void, CULong;
override externalInstanceMethod(#NSPrintInfo, "setScalingFactor:") = Void, Double;
override externalInstanceMethod(#NSPrintInfo, "paperName") = NSString;
override externalInstanceMethod(#NSPrintInfo, "paperSize") = NSSize;
override externalInstanceMethod(#NSPrintInfo, "orientation") = CULong;
override externalInstanceMethod(#NSPrintInfo, "scalingFactor") = Double;
override externalInstanceMethod(#NSPrintInfo, "setLeftMargin:") = Void, Double;
override externalInstanceMethod(#NSPrintInfo, "setRightMargin:") = Void, Double;
override externalInstanceMethod(#NSPrintInfo, "setTopMargin:") = Void, Double;
override externalInstanceMethod(#NSPrintInfo, "setBottomMargin:") = Void, Double;
override externalInstanceMethod(#NSPrintInfo, "leftMargin") = Double;
override externalInstanceMethod(#NSPrintInfo, "rightMargin") = Double;
override externalInstanceMethod(#NSPrintInfo, "topMargin") = Double;
override externalInstanceMethod(#NSPrintInfo, "bottomMargin") = Double;
override externalInstanceMethod(#NSPrintInfo, "setHorizontallyCentered:") = Void, Bool;
override externalInstanceMethod(#NSPrintInfo, "setVerticallyCentered:") = Void, Bool;
override externalInstanceMethod(#NSPrintInfo, "isHorizontallyCentered") = Bool;
override externalInstanceMethod(#NSPrintInfo, "isVerticallyCentered") = Bool;
override externalInstanceMethod(#NSPrintInfo, "setHorizontalPagination:") = Void, CULong;
override externalInstanceMethod(#NSPrintInfo, "setVerticalPagination:") = Void, CULong;
override externalInstanceMethod(#NSPrintInfo, "horizontalPagination") = CULong;
override externalInstanceMethod(#NSPrintInfo, "verticalPagination") = CULong;
override externalInstanceMethod(#NSPrintInfo, "setJobDisposition:") = Void, NSString;
override externalInstanceMethod(#NSPrintInfo, "jobDisposition") = NSString;
override externalInstanceMethod(#NSPrintInfo, "setPrinter:") = Void, NSPrinter;
override externalInstanceMethod(#NSPrintInfo, "printer") = NSPrinter;
override externalInstanceMethod(#NSPrintInfo, "setUpPrintOperationDefaultValues") = Void;
override externalInstanceMethod(#NSPrintInfo, "imageablePageBounds") = NSRect;
override externalInstanceMethod(#NSPrintInfo, "localizedPaperName") = NSString;
override externalClassMethod(#NSPrintInfo, "defaultPrinter") = NSPrinter;
override externalInstanceMethod(#NSPrintInfo, "printSettings") = NSMutableDictionary;
override externalInstanceMethod(#NSPrintInfo, "PMPrintSession") = RawPointer;
override externalInstanceMethod(#NSPrintInfo, "PMPageFormat") = RawPointer;
override externalInstanceMethod(#NSPrintInfo, "PMPrintSettings") = RawPointer;
override externalInstanceMethod(#NSPrintInfo, "updateFromPMPageFormat") = Void;
override externalInstanceMethod(#NSPrintInfo, "updateFromPMPrintSettings") = Void;
override externalInstanceMethod(#NSPrintInfo, "setSelectionOnly:") = Void, Bool;
override externalInstanceMethod(#NSPrintInfo, "isSelectionOnly") = Bool;
override externalClassMethod(#NSPrintInfo, "setDefaultPrinter:") = Void, NSPrinter;
override externalClassMethod(#NSPrintInfo, "sizeForPaperName:") = NSSize, NSString;

record NSPrintOperation = externalClass(NSObject);
override externalClassMethod(#NSPrintOperation, "printOperationWithView:printInfo:") = NSPrintOperation, NSView, NSPrintInfo;
override externalClassMethod(#NSPrintOperation, "PDFOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
override externalClassMethod(#NSPrintOperation, "PDFOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
override externalClassMethod(#NSPrintOperation, "EPSOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
override externalClassMethod(#NSPrintOperation, "EPSOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
override externalClassMethod(#NSPrintOperation, "printOperationWithView:") = NSPrintOperation, NSView;
override externalClassMethod(#NSPrintOperation, "PDFOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
override externalClassMethod(#NSPrintOperation, "EPSOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
override externalClassMethod(#NSPrintOperation, "currentOperation") = NSPrintOperation;
override externalClassMethod(#NSPrintOperation, "setCurrentOperation:") = Void, NSPrintOperation;
override externalInstanceMethod(#NSPrintOperation, "isCopyingOperation") = Bool;
override externalInstanceMethod(#NSPrintOperation, "setJobTitle:") = Void, NSString;
override externalInstanceMethod(#NSPrintOperation, "jobTitle") = NSString;
override externalInstanceMethod(#NSPrintOperation, "setShowsPrintPanel:") = Void, Bool;
override externalInstanceMethod(#NSPrintOperation, "showsPrintPanel") = Bool;
override externalInstanceMethod(#NSPrintOperation, "setShowsProgressPanel:") = Void, Bool;
override externalInstanceMethod(#NSPrintOperation, "showsProgressPanel") = Bool;
override externalInstanceMethod(#NSPrintOperation, "setPrintPanel:") = Void, NSPrintPanel;
override externalInstanceMethod(#NSPrintOperation, "printPanel") = NSPrintPanel;
override externalInstanceMethod(#NSPrintOperation, "setCanSpawnSeparateThread:") = Void, Bool;
override externalInstanceMethod(#NSPrintOperation, "canSpawnSeparateThread") = Bool;
override externalInstanceMethod(#NSPrintOperation, "setPageOrder:") = Void, CLong;
override externalInstanceMethod(#NSPrintOperation, "pageOrder") = CLong;
override externalInstanceMethod(#NSPrintOperation, "runOperationModalForWindow:delegate:didRunSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSPrintOperation, "runOperation") = Bool;
override externalInstanceMethod(#NSPrintOperation, "view") = NSView;
override externalInstanceMethod(#NSPrintOperation, "printInfo") = NSPrintInfo;
override externalInstanceMethod(#NSPrintOperation, "setPrintInfo:") = Void, NSPrintInfo;
override externalInstanceMethod(#NSPrintOperation, "context") = NSGraphicsContext;
override externalInstanceMethod(#NSPrintOperation, "pageRange") = NSRange;
override externalInstanceMethod(#NSPrintOperation, "currentPage") = CLong;
override externalInstanceMethod(#NSPrintOperation, "createContext") = NSGraphicsContext;
override externalInstanceMethod(#NSPrintOperation, "destroyContext") = Void;
override externalInstanceMethod(#NSPrintOperation, "deliverResult") = Bool;
override externalInstanceMethod(#NSPrintOperation, "cleanUpOperation") = Void;
override externalInstanceMethod(#NSPrintOperation, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSPrintOperation, "accessoryView") = NSView;
override externalInstanceMethod(#NSPrintOperation, "setJobStyleHint:") = Void, NSString;
override externalInstanceMethod(#NSPrintOperation, "jobStyleHint") = NSString;
override externalInstanceMethod(#NSPrintOperation, "setShowPanels:") = Void, Bool;
override externalInstanceMethod(#NSPrintOperation, "showPanels") = Bool;

record NSPrintPanel = externalClass(NSObject);
override externalClassMethod(#NSPrintPanel, "printPanel") = NSPrintPanel;
override externalInstanceMethod(#NSPrintPanel, "addAccessoryController:") = Void, NSViewController;
override externalInstanceMethod(#NSPrintPanel, "removeAccessoryController:") = Void, NSViewController;
override externalInstanceMethod(#NSPrintPanel, "accessoryControllers") = NSArray;
override externalInstanceMethod(#NSPrintPanel, "setOptions:") = Void, CLong;
override externalInstanceMethod(#NSPrintPanel, "options") = CLong;
override externalInstanceMethod(#NSPrintPanel, "setDefaultButtonTitle:") = Void, NSString;
override externalInstanceMethod(#NSPrintPanel, "defaultButtonTitle") = NSString;
override externalInstanceMethod(#NSPrintPanel, "setHelpAnchor:") = Void, NSString;
override externalInstanceMethod(#NSPrintPanel, "helpAnchor") = NSString;
override externalInstanceMethod(#NSPrintPanel, "setJobStyleHint:") = Void, NSString;
override externalInstanceMethod(#NSPrintPanel, "jobStyleHint") = NSString;
override externalInstanceMethod(#NSPrintPanel, "beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:") = Void, NSPrintInfo, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSPrintPanel, "runModalWithPrintInfo:") = CLong, NSPrintInfo;
override externalInstanceMethod(#NSPrintPanel, "runModal") = CLong;
override externalInstanceMethod(#NSPrintPanel, "printInfo") = NSPrintInfo;
override externalInstanceMethod(#NSPrintPanel, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSPrintPanel, "accessoryView") = NSView;
override externalInstanceMethod(#NSPrintPanel, "updateFromPrintInfo") = Void;
override externalInstanceMethod(#NSPrintPanel, "finalWritePrintInfo") = Void;

record NSPrinter = externalClass(NSObject);
override externalInstanceMethod(#NSPrinter, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSPrinter, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSPrinter, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSPrinter, "printerNames") = NSArray;
override externalClassMethod(#NSPrinter, "printerTypes") = NSArray;
override externalClassMethod(#NSPrinter, "printerWithName:") = NSPrinter, NSString;
override externalClassMethod(#NSPrinter, "printerWithType:") = NSPrinter, NSString;
override externalInstanceMethod(#NSPrinter, "name") = NSString;
override externalInstanceMethod(#NSPrinter, "type") = NSString;
override externalInstanceMethod(#NSPrinter, "languageLevel") = CLong;
override externalInstanceMethod(#NSPrinter, "pageSizeForPaper:") = NSSize, NSString;
override externalInstanceMethod(#NSPrinter, "statusForTable:") = CULong, NSString;
override externalInstanceMethod(#NSPrinter, "isKey:inTable:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "booleanForKey:inTable:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "floatForKey:inTable:") = Float, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "intForKey:inTable:") = Int, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "rectForKey:inTable:") = NSRect, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "sizeForKey:inTable:") = NSSize, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "stringForKey:inTable:") = NSString, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "stringListForKey:inTable:") = NSArray, NSString, NSString;
override externalInstanceMethod(#NSPrinter, "deviceDescription") = NSDictionary;
override externalInstanceMethod(#NSPrinter, "imageRectForPaper:") = NSRect, NSString;
override externalInstanceMethod(#NSPrinter, "acceptsBinary") = Bool;
override externalInstanceMethod(#NSPrinter, "isColor") = Bool;
override externalInstanceMethod(#NSPrinter, "isFontAvailable:") = Bool, NSString;
override externalInstanceMethod(#NSPrinter, "isOutputStackInReverseOrder") = Bool;
override externalClassMethod(#NSPrinter, "printerWithName:domain:includeUnavailable:") = NSPrinter, NSString, NSString, Bool;
override externalInstanceMethod(#NSPrinter, "domain") = NSString;
override externalInstanceMethod(#NSPrinter, "host") = NSString;
override externalInstanceMethod(#NSPrinter, "note") = NSString;

record NSProgressIndicator = externalClass(NSView);
override externalInstanceMethod(#NSProgressIndicator, "isIndeterminate") = Bool;
override externalInstanceMethod(#NSProgressIndicator, "setIndeterminate:") = Void, Bool;
override externalInstanceMethod(#NSProgressIndicator, "isBezeled") = Bool;
override externalInstanceMethod(#NSProgressIndicator, "setBezeled:") = Void, Bool;
override externalInstanceMethod(#NSProgressIndicator, "controlTint") = CULong;
override externalInstanceMethod(#NSProgressIndicator, "setControlTint:") = Void, CULong;
override externalInstanceMethod(#NSProgressIndicator, "controlSize") = CULong;
override externalInstanceMethod(#NSProgressIndicator, "setControlSize:") = Void, CULong;
override externalInstanceMethod(#NSProgressIndicator, "doubleValue") = Double;
override externalInstanceMethod(#NSProgressIndicator, "setDoubleValue:") = Void, Double;
override externalInstanceMethod(#NSProgressIndicator, "incrementBy:") = Void, Double;
override externalInstanceMethod(#NSProgressIndicator, "minValue") = Double;
override externalInstanceMethod(#NSProgressIndicator, "maxValue") = Double;
override externalInstanceMethod(#NSProgressIndicator, "setMinValue:") = Void, Double;
override externalInstanceMethod(#NSProgressIndicator, "setMaxValue:") = Void, Double;
override externalInstanceMethod(#NSProgressIndicator, "usesThreadedAnimation") = Bool;
override externalInstanceMethod(#NSProgressIndicator, "setUsesThreadedAnimation:") = Void, Bool;
override externalInstanceMethod(#NSProgressIndicator, "startAnimation:") = Void, Id;
override externalInstanceMethod(#NSProgressIndicator, "stopAnimation:") = Void, Id;
override externalInstanceMethod(#NSProgressIndicator, "setStyle:") = Void, CULong;
override externalInstanceMethod(#NSProgressIndicator, "style") = CULong;
override externalInstanceMethod(#NSProgressIndicator, "sizeToFit") = Void;
override externalInstanceMethod(#NSProgressIndicator, "isDisplayedWhenStopped") = Bool;
override externalInstanceMethod(#NSProgressIndicator, "setDisplayedWhenStopped:") = Void, Bool;
override externalInstanceMethod(#NSProgressIndicator, "animationDelay") = Double;
override externalInstanceMethod(#NSProgressIndicator, "setAnimationDelay:") = Void, Double;
override externalInstanceMethod(#NSProgressIndicator, "animate:") = Void, Id;

record NSResponder = externalClass(NSObject);
override externalInstanceMethod(#NSResponder, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSResponder, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSResponder, "nextResponder") = NSResponder;
override externalInstanceMethod(#NSResponder, "setNextResponder:") = Void, NSResponder;
override externalInstanceMethod(#NSResponder, "tryToPerform:with:") = Bool, SelectorHandle, Id;
override externalInstanceMethod(#NSResponder, "performKeyEquivalent:") = Bool, NSEvent;
override externalInstanceMethod(#NSResponder, "validRequestorForSendType:returnType:") = Id, NSString, NSString;
override externalInstanceMethod(#NSResponder, "mouseDown:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "rightMouseDown:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "otherMouseDown:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "mouseUp:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "rightMouseUp:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "otherMouseUp:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "mouseMoved:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "mouseDragged:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "scrollWheel:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "rightMouseDragged:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "otherMouseDragged:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "mouseEntered:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "mouseExited:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "keyDown:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "keyUp:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "flagsChanged:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "tabletPoint:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "tabletProximity:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "cursorUpdate:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "magnifyWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "rotateWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "swipeWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "beginGestureWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "endGestureWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "touchesBeganWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "touchesMovedWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "touchesEndedWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "touchesCancelledWithEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "noResponderFor:") = Void, SelectorHandle;
override externalInstanceMethod(#NSResponder, "acceptsFirstResponder") = Bool;
override externalInstanceMethod(#NSResponder, "becomeFirstResponder") = Bool;
override externalInstanceMethod(#NSResponder, "resignFirstResponder") = Bool;
override externalInstanceMethod(#NSResponder, "interpretKeyEvents:") = Void, NSArray;
override externalInstanceMethod(#NSResponder, "flushBufferedKeyEvents") = Void;
override externalInstanceMethod(#NSResponder, "setMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSResponder, "menu") = NSMenu;
override externalInstanceMethod(#NSResponder, "showContextHelp:") = Void, Id;
override externalInstanceMethod(#NSResponder, "helpRequested:") = Void, NSEvent;
override externalInstanceMethod(#NSResponder, "shouldBeTreatedAsInkEvent:") = Bool, NSEvent;
override externalInstanceMethod(#NSResponder, "performMnemonic:") = Bool, NSString;
override externalInstanceMethod(#NSResponder, "insertText:") = Void, Id;
override externalInstanceMethod(#NSResponder, "doCommandBySelector:") = Void, SelectorHandle;
override externalInstanceMethod(#NSResponder, "moveForward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveRight:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveBackward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveLeft:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveUp:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveDown:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordForward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordBackward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToBeginningOfLine:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToEndOfLine:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToBeginningOfParagraph:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToEndOfParagraph:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToEndOfDocument:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToBeginningOfDocument:") = Void, Id;
override externalInstanceMethod(#NSResponder, "pageDown:") = Void, Id;
override externalInstanceMethod(#NSResponder, "pageUp:") = Void, Id;
override externalInstanceMethod(#NSResponder, "centerSelectionInVisibleArea:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveBackwardAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveForwardAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordForwardAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordBackwardAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveUpAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveDownAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToBeginningOfLineAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToEndOfLineAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToBeginningOfParagraphAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToEndOfParagraphAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToEndOfDocumentAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToBeginningOfDocumentAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "pageDownAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "pageUpAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveParagraphForwardAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveParagraphBackwardAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordRight:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordLeft:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveRightAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveLeftAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordRightAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveWordLeftAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToLeftEndOfLine:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToRightEndOfLine:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToLeftEndOfLineAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "moveToRightEndOfLineAndModifySelection:") = Void, Id;
override externalInstanceMethod(#NSResponder, "scrollPageUp:") = Void, Id;
override externalInstanceMethod(#NSResponder, "scrollPageDown:") = Void, Id;
override externalInstanceMethod(#NSResponder, "scrollLineUp:") = Void, Id;
override externalInstanceMethod(#NSResponder, "scrollLineDown:") = Void, Id;
override externalInstanceMethod(#NSResponder, "scrollToBeginningOfDocument:") = Void, Id;
override externalInstanceMethod(#NSResponder, "scrollToEndOfDocument:") = Void, Id;
override externalInstanceMethod(#NSResponder, "transpose:") = Void, Id;
override externalInstanceMethod(#NSResponder, "transposeWords:") = Void, Id;
override externalInstanceMethod(#NSResponder, "selectAll:") = Void, Id;
override externalInstanceMethod(#NSResponder, "selectParagraph:") = Void, Id;
override externalInstanceMethod(#NSResponder, "selectLine:") = Void, Id;
override externalInstanceMethod(#NSResponder, "selectWord:") = Void, Id;
override externalInstanceMethod(#NSResponder, "indent:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertTab:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertBacktab:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertNewline:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertParagraphSeparator:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertNewlineIgnoringFieldEditor:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertTabIgnoringFieldEditor:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertLineBreak:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertContainerBreak:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertSingleQuoteIgnoringSubstitution:") = Void, Id;
override externalInstanceMethod(#NSResponder, "insertDoubleQuoteIgnoringSubstitution:") = Void, Id;
override externalInstanceMethod(#NSResponder, "changeCaseOfLetter:") = Void, Id;
override externalInstanceMethod(#NSResponder, "uppercaseWord:") = Void, Id;
override externalInstanceMethod(#NSResponder, "lowercaseWord:") = Void, Id;
override externalInstanceMethod(#NSResponder, "capitalizeWord:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteForward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteBackward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteBackwardByDecomposingPreviousCharacter:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteWordForward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteWordBackward:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteToBeginningOfLine:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteToEndOfLine:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteToBeginningOfParagraph:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteToEndOfParagraph:") = Void, Id;
override externalInstanceMethod(#NSResponder, "yank:") = Void, Id;
override externalInstanceMethod(#NSResponder, "complete:") = Void, Id;
override externalInstanceMethod(#NSResponder, "setMark:") = Void, Id;
override externalInstanceMethod(#NSResponder, "deleteToMark:") = Void, Id;
override externalInstanceMethod(#NSResponder, "selectToMark:") = Void, Id;
override externalInstanceMethod(#NSResponder, "swapWithMark:") = Void, Id;
override externalInstanceMethod(#NSResponder, "cancelOperation:") = Void, Id;
override externalInstanceMethod(#NSResponder, "makeBaseWritingDirectionNatural:") = Void, Id;
override externalInstanceMethod(#NSResponder, "makeBaseWritingDirectionLeftToRight:") = Void, Id;
override externalInstanceMethod(#NSResponder, "makeBaseWritingDirectionRightToLeft:") = Void, Id;
override externalInstanceMethod(#NSResponder, "makeTextWritingDirectionNatural:") = Void, Id;
override externalInstanceMethod(#NSResponder, "makeTextWritingDirectionLeftToRight:") = Void, Id;
override externalInstanceMethod(#NSResponder, "makeTextWritingDirectionRightToLeft:") = Void, Id;
override externalInstanceMethod(#NSResponder, "undoManager") = NSUndoManager;
override externalInstanceMethod(#NSResponder, "presentError:modalForWindow:delegate:didPresentSelector:contextInfo:") = Void, NSError, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSResponder, "presentError:") = Bool, NSError;
override externalInstanceMethod(#NSResponder, "willPresentError:") = NSError, NSError;
override externalInstanceMethod(#NSResponder, "interfaceStyle") = CULong;
override externalInstanceMethod(#NSResponder, "setInterfaceStyle:") = Void, CULong;

record NSRuleEditor = externalClass(NSControl);
override externalInstanceMethod(#NSRuleEditor, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSRuleEditor, "delegate") = Id;
override externalInstanceMethod(#NSRuleEditor, "setFormattingStringsFilename:") = Void, NSString;
override externalInstanceMethod(#NSRuleEditor, "formattingStringsFilename") = NSString;
override externalInstanceMethod(#NSRuleEditor, "setFormattingDictionary:") = Void, NSDictionary;
override externalInstanceMethod(#NSRuleEditor, "formattingDictionary") = NSDictionary;
override externalInstanceMethod(#NSRuleEditor, "reloadCriteria") = Void;
override externalInstanceMethod(#NSRuleEditor, "setNestingMode:") = Void, CULong;
override externalInstanceMethod(#NSRuleEditor, "nestingMode") = CULong;
override externalInstanceMethod(#NSRuleEditor, "setRowHeight:") = Void, Double;
override externalInstanceMethod(#NSRuleEditor, "rowHeight") = Double;
override externalInstanceMethod(#NSRuleEditor, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSRuleEditor, "isEditable") = Bool;
override externalInstanceMethod(#NSRuleEditor, "setCanRemoveAllRows:") = Void, Bool;
override externalInstanceMethod(#NSRuleEditor, "canRemoveAllRows") = Bool;
override externalInstanceMethod(#NSRuleEditor, "predicate") = NSPredicate;
override externalInstanceMethod(#NSRuleEditor, "reloadPredicate") = Void;
override externalInstanceMethod(#NSRuleEditor, "predicateForRow:") = NSPredicate, CLong;
override externalInstanceMethod(#NSRuleEditor, "numberOfRows") = CLong;
override externalInstanceMethod(#NSRuleEditor, "subrowIndexesForRow:") = NSIndexSet, CLong;
override externalInstanceMethod(#NSRuleEditor, "criteriaForRow:") = NSArray, CLong;
override externalInstanceMethod(#NSRuleEditor, "displayValuesForRow:") = NSArray, CLong;
override externalInstanceMethod(#NSRuleEditor, "rowForDisplayValue:") = CLong, Id;
override externalInstanceMethod(#NSRuleEditor, "rowTypeForRow:") = CULong, CLong;
override externalInstanceMethod(#NSRuleEditor, "parentRowForRow:") = CLong, CLong;
override externalInstanceMethod(#NSRuleEditor, "addRow:") = Void, Id;
override externalInstanceMethod(#NSRuleEditor, "insertRowAtIndex:withType:asSubrowOfRow:animate:") = Void, CLong, CULong, CLong, Bool;
override externalInstanceMethod(#NSRuleEditor, "setCriteria:andDisplayValues:forRowAtIndex:") = Void, NSArray, NSArray, CLong;
override externalInstanceMethod(#NSRuleEditor, "removeRowAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSRuleEditor, "removeRowsAtIndexes:includeSubrows:") = Void, NSIndexSet, Bool;
override externalInstanceMethod(#NSRuleEditor, "selectedRowIndexes") = NSIndexSet;
override externalInstanceMethod(#NSRuleEditor, "selectRowIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
override externalInstanceMethod(#NSRuleEditor, "setRowClass:") = Void, Id;
override externalInstanceMethod(#NSRuleEditor, "rowClass") = Id;
override externalInstanceMethod(#NSRuleEditor, "setRowTypeKeyPath:") = Void, NSString;
override externalInstanceMethod(#NSRuleEditor, "rowTypeKeyPath") = NSString;
override externalInstanceMethod(#NSRuleEditor, "setSubrowsKeyPath:") = Void, NSString;
override externalInstanceMethod(#NSRuleEditor, "subrowsKeyPath") = NSString;
override externalInstanceMethod(#NSRuleEditor, "setCriteriaKeyPath:") = Void, NSString;
override externalInstanceMethod(#NSRuleEditor, "criteriaKeyPath") = NSString;
override externalInstanceMethod(#NSRuleEditor, "setDisplayValuesKeyPath:") = Void, NSString;
override externalInstanceMethod(#NSRuleEditor, "displayValuesKeyPath") = NSString;

record NSRulerMarker = externalClass(NSObject);
override externalInstanceMethod(#NSRulerMarker, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSRulerMarker, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSRulerMarker, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSRulerMarker, "initWithRulerView:markerLocation:image:imageOrigin:") = Id, NSRulerView, Double, NSImage, NSPoint;
override externalInstanceMethod(#NSRulerMarker, "ruler") = NSRulerView;
override externalInstanceMethod(#NSRulerMarker, "setMarkerLocation:") = Void, Double;
override externalInstanceMethod(#NSRulerMarker, "markerLocation") = Double;
override externalInstanceMethod(#NSRulerMarker, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSRulerMarker, "image") = NSImage;
override externalInstanceMethod(#NSRulerMarker, "setImageOrigin:") = Void, NSPoint;
override externalInstanceMethod(#NSRulerMarker, "imageOrigin") = NSPoint;
override externalInstanceMethod(#NSRulerMarker, "setMovable:") = Void, Bool;
override externalInstanceMethod(#NSRulerMarker, "setRemovable:") = Void, Bool;
override externalInstanceMethod(#NSRulerMarker, "isMovable") = Bool;
override externalInstanceMethod(#NSRulerMarker, "isRemovable") = Bool;
override externalInstanceMethod(#NSRulerMarker, "isDragging") = Bool;
override externalInstanceMethod(#NSRulerMarker, "setRepresentedObject:") = Void, Id;
override externalInstanceMethod(#NSRulerMarker, "representedObject") = Id;
override externalInstanceMethod(#NSRulerMarker, "imageRectInRuler") = NSRect;
override externalInstanceMethod(#NSRulerMarker, "thicknessRequiredInRuler") = Double;
override externalInstanceMethod(#NSRulerMarker, "drawRect:") = Void, NSRect;
override externalInstanceMethod(#NSRulerMarker, "trackMouse:adding:") = Bool, NSEvent, Bool;

record NSRulerView = externalClass(NSView);
override externalClassMethod(#NSRulerView, "registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:") = Void, NSString, NSString, Double, NSArray, NSArray;
override externalInstanceMethod(#NSRulerView, "initWithScrollView:orientation:") = Id, NSScrollView, CULong;
override externalInstanceMethod(#NSRulerView, "setScrollView:") = Void, NSScrollView;
override externalInstanceMethod(#NSRulerView, "scrollView") = NSScrollView;
override externalInstanceMethod(#NSRulerView, "setOrientation:") = Void, CULong;
override externalInstanceMethod(#NSRulerView, "orientation") = CULong;
override externalInstanceMethod(#NSRulerView, "baselineLocation") = Double;
override externalInstanceMethod(#NSRulerView, "requiredThickness") = Double;
override externalInstanceMethod(#NSRulerView, "setRuleThickness:") = Void, Double;
override externalInstanceMethod(#NSRulerView, "ruleThickness") = Double;
override externalInstanceMethod(#NSRulerView, "setReservedThicknessForMarkers:") = Void, Double;
override externalInstanceMethod(#NSRulerView, "reservedThicknessForMarkers") = Double;
override externalInstanceMethod(#NSRulerView, "setReservedThicknessForAccessoryView:") = Void, Double;
override externalInstanceMethod(#NSRulerView, "reservedThicknessForAccessoryView") = Double;
override externalInstanceMethod(#NSRulerView, "setMeasurementUnits:") = Void, NSString;
override externalInstanceMethod(#NSRulerView, "measurementUnits") = NSString;
override externalInstanceMethod(#NSRulerView, "setOriginOffset:") = Void, Double;
override externalInstanceMethod(#NSRulerView, "originOffset") = Double;
override externalInstanceMethod(#NSRulerView, "setClientView:") = Void, NSView;
override externalInstanceMethod(#NSRulerView, "clientView") = NSView;
override externalInstanceMethod(#NSRulerView, "setMarkers:") = Void, NSArray;
override externalInstanceMethod(#NSRulerView, "addMarker:") = Void, NSRulerMarker;
override externalInstanceMethod(#NSRulerView, "removeMarker:") = Void, NSRulerMarker;
override externalInstanceMethod(#NSRulerView, "markers") = NSArray;
override externalInstanceMethod(#NSRulerView, "trackMarker:withMouseEvent:") = Bool, NSRulerMarker, NSEvent;
override externalInstanceMethod(#NSRulerView, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSRulerView, "accessoryView") = NSView;
override externalInstanceMethod(#NSRulerView, "moveRulerlineFromLocation:toLocation:") = Void, Double, Double;
override externalInstanceMethod(#NSRulerView, "invalidateHashMarks") = Void;
override externalInstanceMethod(#NSRulerView, "drawHashMarksAndLabelsInRect:") = Void, NSRect;
override externalInstanceMethod(#NSRulerView, "drawMarkersInRect:") = Void, NSRect;
override externalInstanceMethod(#NSRulerView, "isFlipped") = Bool;

record NSRunningApplication = externalClass(NSObject);
override externalInstanceMethod(#NSRunningApplication, "hide") = Bool;
override externalInstanceMethod(#NSRunningApplication, "unhide") = Bool;
override externalInstanceMethod(#NSRunningApplication, "activateWithOptions:") = Bool, CULong;
override externalInstanceMethod(#NSRunningApplication, "terminate") = Bool;
override externalInstanceMethod(#NSRunningApplication, "forceTerminate") = Bool;
override externalClassMethod(#NSRunningApplication, "runningApplicationsWithBundleIdentifier:") = NSArray, NSString;
override externalClassMethod(#NSRunningApplication, "runningApplicationWithProcessIdentifier:") = NSRunningApplication, Int;
override externalClassMethod(#NSRunningApplication, "currentApplication") = NSRunningApplication;
override externalInstanceMethod(#NSRunningApplication, "isTerminated") = Bool;
override externalInstanceMethod(#NSRunningApplication, "isFinishedLaunching") = Bool;
override externalInstanceMethod(#NSRunningApplication, "isHidden") = Bool;
override externalInstanceMethod(#NSRunningApplication, "isActive") = Bool;
override externalInstanceMethod(#NSRunningApplication, "activationPolicy") = CLong;
override externalInstanceMethod(#NSRunningApplication, "localizedName") = NSString;
override externalInstanceMethod(#NSRunningApplication, "bundleIdentifier") = NSString;
override externalInstanceMethod(#NSRunningApplication, "bundleURL") = NSURL;
override externalInstanceMethod(#NSRunningApplication, "executableURL") = NSURL;
override externalInstanceMethod(#NSRunningApplication, "processIdentifier") = Int;
override externalInstanceMethod(#NSRunningApplication, "launchDate") = NSDate;
override externalInstanceMethod(#NSRunningApplication, "icon") = NSImage;
override externalInstanceMethod(#NSRunningApplication, "executableArchitecture") = CLong;

record NSSavePanel = externalClass(NSPanel);
override externalClassMethod(#NSSavePanel, "savePanel") = NSSavePanel;
override externalInstanceMethod(#NSSavePanel, "URL") = NSURL;
override externalInstanceMethod(#NSSavePanel, "directoryURL") = NSURL;
override externalInstanceMethod(#NSSavePanel, "setDirectoryURL:") = Void, NSURL;
override externalInstanceMethod(#NSSavePanel, "allowedFileTypes") = NSArray;
override externalInstanceMethod(#NSSavePanel, "setAllowedFileTypes:") = Void, NSArray;
override externalInstanceMethod(#NSSavePanel, "allowsOtherFileTypes") = Bool;
override externalInstanceMethod(#NSSavePanel, "setAllowsOtherFileTypes:") = Void, Bool;
override externalInstanceMethod(#NSSavePanel, "accessoryView") = NSView;
override externalInstanceMethod(#NSSavePanel, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSSavePanel, "delegate") = Id;
override externalInstanceMethod(#NSSavePanel, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSSavePanel, "isExpanded") = Bool;
override externalInstanceMethod(#NSSavePanel, "canCreateDirectories") = Bool;
override externalInstanceMethod(#NSSavePanel, "setCanCreateDirectories:") = Void, Bool;
override externalInstanceMethod(#NSSavePanel, "canSelectHiddenExtension") = Bool;
override externalInstanceMethod(#NSSavePanel, "setCanSelectHiddenExtension:") = Void, Bool;
override externalInstanceMethod(#NSSavePanel, "isExtensionHidden") = Bool;
override externalInstanceMethod(#NSSavePanel, "setExtensionHidden:") = Void, Bool;
override externalInstanceMethod(#NSSavePanel, "treatsFilePackagesAsDirectories") = Bool;
override externalInstanceMethod(#NSSavePanel, "setTreatsFilePackagesAsDirectories:") = Void, Bool;
override externalInstanceMethod(#NSSavePanel, "prompt") = NSString;
override externalInstanceMethod(#NSSavePanel, "setPrompt:") = Void, NSString;
override externalInstanceMethod(#NSSavePanel, "title") = NSString;
override externalInstanceMethod(#NSSavePanel, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSSavePanel, "nameFieldLabel") = NSString;
override externalInstanceMethod(#NSSavePanel, "setNameFieldLabel:") = Void, NSString;
override externalInstanceMethod(#NSSavePanel, "nameFieldStringValue") = NSString;
override externalInstanceMethod(#NSSavePanel, "setNameFieldStringValue:") = Void, NSString;
override externalInstanceMethod(#NSSavePanel, "message") = NSString;
override externalInstanceMethod(#NSSavePanel, "setMessage:") = Void, NSString;
override externalInstanceMethod(#NSSavePanel, "validateVisibleColumns") = Void;
override externalInstanceMethod(#NSSavePanel, "showsHiddenFiles") = Bool;
override externalInstanceMethod(#NSSavePanel, "setShowsHiddenFiles:") = Void, Bool;
override externalInstanceMethod(#NSSavePanel, "ok:") = Void, Id;
override externalInstanceMethod(#NSSavePanel, "cancel:") = Void, Id;
override externalInstanceMethod(#NSSavePanel, "beginSheetModalForWindow:completionHandler:") = Void, NSWindow, UnknownType;
override externalInstanceMethod(#NSSavePanel, "beginWithCompletionHandler:") = Void, UnknownType;
override externalInstanceMethod(#NSSavePanel, "runModal") = CLong;
override externalInstanceMethod(#NSSavePanel, "filename") = NSString;
override externalInstanceMethod(#NSSavePanel, "directory") = NSString;
override externalInstanceMethod(#NSSavePanel, "setDirectory:") = Void, NSString;
override externalInstanceMethod(#NSSavePanel, "requiredFileType") = NSString;
override externalInstanceMethod(#NSSavePanel, "setRequiredFileType:") = Void, NSString;
override externalInstanceMethod(#NSSavePanel, "beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSWindow, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSSavePanel, "runModalForDirectory:file:") = CLong, NSString, NSString;
override externalInstanceMethod(#NSSavePanel, "selectText:") = Void, Id;

record NSScreen = externalClass(NSObject);
override externalClassMethod(#NSScreen, "screens") = NSArray;
override externalClassMethod(#NSScreen, "mainScreen") = NSScreen;
override externalClassMethod(#NSScreen, "deepestScreen") = NSScreen;
override externalInstanceMethod(#NSScreen, "depth") = Int;
override externalInstanceMethod(#NSScreen, "frame") = NSRect;
override externalInstanceMethod(#NSScreen, "visibleFrame") = NSRect;
override externalInstanceMethod(#NSScreen, "deviceDescription") = NSDictionary;
override externalInstanceMethod(#NSScreen, "colorSpace") = NSColorSpace;
override externalInstanceMethod(#NSScreen, "supportedWindowDepths") = Pointer[Int];
override externalInstanceMethod(#NSScreen, "userSpaceScaleFactor") = Double;

record NSScrollView = externalClass(NSView);
override externalClassMethod(#NSScrollView, "frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
override externalClassMethod(#NSScrollView, "contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
override externalInstanceMethod(#NSScrollView, "documentVisibleRect") = NSRect;
override externalInstanceMethod(#NSScrollView, "contentSize") = NSSize;
override externalInstanceMethod(#NSScrollView, "setDocumentView:") = Void, NSView;
override externalInstanceMethod(#NSScrollView, "documentView") = Id;
override externalInstanceMethod(#NSScrollView, "setContentView:") = Void, NSClipView;
override externalInstanceMethod(#NSScrollView, "contentView") = NSClipView;
override externalInstanceMethod(#NSScrollView, "setDocumentCursor:") = Void, NSCursor;
override externalInstanceMethod(#NSScrollView, "documentCursor") = NSCursor;
override externalInstanceMethod(#NSScrollView, "setBorderType:") = Void, CULong;
override externalInstanceMethod(#NSScrollView, "borderType") = CULong;
override externalInstanceMethod(#NSScrollView, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSScrollView, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSScrollView, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "drawsBackground") = Bool;
override externalInstanceMethod(#NSScrollView, "setHasVerticalScroller:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "hasVerticalScroller") = Bool;
override externalInstanceMethod(#NSScrollView, "setHasHorizontalScroller:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "hasHorizontalScroller") = Bool;
override externalInstanceMethod(#NSScrollView, "setVerticalScroller:") = Void, NSScroller;
override externalInstanceMethod(#NSScrollView, "verticalScroller") = NSScroller;
override externalInstanceMethod(#NSScrollView, "setHorizontalScroller:") = Void, NSScroller;
override externalInstanceMethod(#NSScrollView, "horizontalScroller") = NSScroller;
override externalInstanceMethod(#NSScrollView, "autohidesScrollers") = Bool;
override externalInstanceMethod(#NSScrollView, "setAutohidesScrollers:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "setHorizontalLineScroll:") = Void, Double;
override externalInstanceMethod(#NSScrollView, "setVerticalLineScroll:") = Void, Double;
override externalInstanceMethod(#NSScrollView, "setLineScroll:") = Void, Double;
override externalInstanceMethod(#NSScrollView, "horizontalLineScroll") = Double;
override externalInstanceMethod(#NSScrollView, "verticalLineScroll") = Double;
override externalInstanceMethod(#NSScrollView, "lineScroll") = Double;
override externalInstanceMethod(#NSScrollView, "setHorizontalPageScroll:") = Void, Double;
override externalInstanceMethod(#NSScrollView, "setVerticalPageScroll:") = Void, Double;
override externalInstanceMethod(#NSScrollView, "setPageScroll:") = Void, Double;
override externalInstanceMethod(#NSScrollView, "horizontalPageScroll") = Double;
override externalInstanceMethod(#NSScrollView, "verticalPageScroll") = Double;
override externalInstanceMethod(#NSScrollView, "pageScroll") = Double;
override externalInstanceMethod(#NSScrollView, "setScrollsDynamically:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "scrollsDynamically") = Bool;
override externalInstanceMethod(#NSScrollView, "tile") = Void;
override externalInstanceMethod(#NSScrollView, "reflectScrolledClipView:") = Void, NSClipView;
override externalInstanceMethod(#NSScrollView, "scrollWheel:") = Void, NSEvent;
override externalClassMethod(#NSScrollView, "setRulerViewClass:") = Void, Id;
override externalClassMethod(#NSScrollView, "rulerViewClass") = Id;
override externalInstanceMethod(#NSScrollView, "setRulersVisible:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "rulersVisible") = Bool;
override externalInstanceMethod(#NSScrollView, "setHasHorizontalRuler:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "hasHorizontalRuler") = Bool;
override externalInstanceMethod(#NSScrollView, "setHasVerticalRuler:") = Void, Bool;
override externalInstanceMethod(#NSScrollView, "hasVerticalRuler") = Bool;
override externalInstanceMethod(#NSScrollView, "setHorizontalRulerView:") = Void, NSRulerView;
override externalInstanceMethod(#NSScrollView, "horizontalRulerView") = NSRulerView;
override externalInstanceMethod(#NSScrollView, "setVerticalRulerView:") = Void, NSRulerView;
override externalInstanceMethod(#NSScrollView, "verticalRulerView") = NSRulerView;

record NSScroller = externalClass(NSControl);
override externalClassMethod(#NSScroller, "scrollerWidth") = Double;
override externalClassMethod(#NSScroller, "scrollerWidthForControlSize:") = Double, CULong;
override externalInstanceMethod(#NSScroller, "drawParts") = Void;
override externalInstanceMethod(#NSScroller, "rectForPart:") = NSRect, CULong;
override externalInstanceMethod(#NSScroller, "checkSpaceForParts") = Void;
override externalInstanceMethod(#NSScroller, "usableParts") = CULong;
override externalInstanceMethod(#NSScroller, "setArrowsPosition:") = Void, CULong;
override externalInstanceMethod(#NSScroller, "arrowsPosition") = CULong;
override externalInstanceMethod(#NSScroller, "setControlTint:") = Void, CULong;
override externalInstanceMethod(#NSScroller, "controlTint") = CULong;
override externalInstanceMethod(#NSScroller, "setControlSize:") = Void, CULong;
override externalInstanceMethod(#NSScroller, "controlSize") = CULong;
override externalInstanceMethod(#NSScroller, "drawArrow:highlight:") = Void, CULong, Bool;
override externalInstanceMethod(#NSScroller, "drawKnob") = Void;
override externalInstanceMethod(#NSScroller, "drawKnobSlotInRect:highlight:") = Void, NSRect, Bool;
override externalInstanceMethod(#NSScroller, "highlight:") = Void, Bool;
override externalInstanceMethod(#NSScroller, "testPart:") = CULong, NSPoint;
override externalInstanceMethod(#NSScroller, "trackKnob:") = Void, NSEvent;
override externalInstanceMethod(#NSScroller, "trackScrollButtons:") = Void, NSEvent;
override externalInstanceMethod(#NSScroller, "hitPart") = CULong;
override externalInstanceMethod(#NSScroller, "knobProportion") = Double;
override externalInstanceMethod(#NSScroller, "setKnobProportion:") = Void, Double;
override externalInstanceMethod(#NSScroller, "setFloatValue:knobProportion:") = Void, Float, Double;

record NSSearchField = externalClass(NSTextField);
override externalInstanceMethod(#NSSearchField, "setRecentSearches:") = Void, NSArray;
override externalInstanceMethod(#NSSearchField, "recentSearches") = NSArray;
override externalInstanceMethod(#NSSearchField, "setRecentsAutosaveName:") = Void, NSString;
override externalInstanceMethod(#NSSearchField, "recentsAutosaveName") = NSString;

record NSSearchFieldCell = externalClass(NSTextFieldCell);
override externalInstanceMethod(#NSSearchFieldCell, "searchButtonCell") = NSButtonCell;
override externalInstanceMethod(#NSSearchFieldCell, "setSearchButtonCell:") = Void, NSButtonCell;
override externalInstanceMethod(#NSSearchFieldCell, "cancelButtonCell") = NSButtonCell;
override externalInstanceMethod(#NSSearchFieldCell, "setCancelButtonCell:") = Void, NSButtonCell;
override externalInstanceMethod(#NSSearchFieldCell, "resetSearchButtonCell") = Void;
override externalInstanceMethod(#NSSearchFieldCell, "resetCancelButtonCell") = Void;
override externalInstanceMethod(#NSSearchFieldCell, "searchTextRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSSearchFieldCell, "searchButtonRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSSearchFieldCell, "cancelButtonRectForBounds:") = NSRect, NSRect;
override externalInstanceMethod(#NSSearchFieldCell, "setSearchMenuTemplate:") = Void, NSMenu;
override externalInstanceMethod(#NSSearchFieldCell, "searchMenuTemplate") = NSMenu;
override externalInstanceMethod(#NSSearchFieldCell, "setSendsWholeSearchString:") = Void, Bool;
override externalInstanceMethod(#NSSearchFieldCell, "sendsWholeSearchString") = Bool;
override externalInstanceMethod(#NSSearchFieldCell, "setMaximumRecents:") = Void, CLong;
override externalInstanceMethod(#NSSearchFieldCell, "maximumRecents") = CLong;
override externalInstanceMethod(#NSSearchFieldCell, "setRecentSearches:") = Void, NSArray;
override externalInstanceMethod(#NSSearchFieldCell, "recentSearches") = NSArray;
override externalInstanceMethod(#NSSearchFieldCell, "setRecentsAutosaveName:") = Void, NSString;
override externalInstanceMethod(#NSSearchFieldCell, "recentsAutosaveName") = NSString;
override externalInstanceMethod(#NSSearchFieldCell, "sendsSearchStringImmediately") = Bool;
override externalInstanceMethod(#NSSearchFieldCell, "setSendsSearchStringImmediately:") = Void, Bool;

record NSSecureTextField = externalClass(NSTextField);

record NSSecureTextFieldCell = externalClass(NSTextFieldCell);
override externalInstanceMethod(#NSSecureTextFieldCell, "setEchosBullets:") = Void, Bool;
override externalInstanceMethod(#NSSecureTextFieldCell, "echosBullets") = Bool;

record NSSegmentedCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSSegmentedCell, "setSegmentCount:") = Void, CLong;
override externalInstanceMethod(#NSSegmentedCell, "segmentCount") = CLong;
override externalInstanceMethod(#NSSegmentedCell, "setSelectedSegment:") = Void, CLong;
override externalInstanceMethod(#NSSegmentedCell, "selectedSegment") = CLong;
override externalInstanceMethod(#NSSegmentedCell, "selectSegmentWithTag:") = Bool, CLong;
override externalInstanceMethod(#NSSegmentedCell, "makeNextSegmentKey") = Void;
override externalInstanceMethod(#NSSegmentedCell, "makePreviousSegmentKey") = Void;
override externalInstanceMethod(#NSSegmentedCell, "setTrackingMode:") = Void, CULong;
override externalInstanceMethod(#NSSegmentedCell, "trackingMode") = CULong;
override externalInstanceMethod(#NSSegmentedCell, "setWidth:forSegment:") = Void, Double, CLong;
override externalInstanceMethod(#NSSegmentedCell, "widthForSegment:") = Double, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setImage:forSegment:") = Void, NSImage, CLong;
override externalInstanceMethod(#NSSegmentedCell, "imageForSegment:") = NSImage, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setImageScaling:forSegment:") = Void, CULong, CLong;
override externalInstanceMethod(#NSSegmentedCell, "imageScalingForSegment:") = CULong, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setLabel:forSegment:") = Void, NSString, CLong;
override externalInstanceMethod(#NSSegmentedCell, "labelForSegment:") = NSString, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setSelected:forSegment:") = Void, Bool, CLong;
override externalInstanceMethod(#NSSegmentedCell, "isSelectedForSegment:") = Bool, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setEnabled:forSegment:") = Void, Bool, CLong;
override externalInstanceMethod(#NSSegmentedCell, "isEnabledForSegment:") = Bool, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setMenu:forSegment:") = Void, NSMenu, CLong;
override externalInstanceMethod(#NSSegmentedCell, "menuForSegment:") = NSMenu, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setToolTip:forSegment:") = Void, NSString, CLong;
override externalInstanceMethod(#NSSegmentedCell, "toolTipForSegment:") = NSString, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setTag:forSegment:") = Void, CLong, CLong;
override externalInstanceMethod(#NSSegmentedCell, "tagForSegment:") = CLong, CLong;
override externalInstanceMethod(#NSSegmentedCell, "setSegmentStyle:") = Void, CLong;
override externalInstanceMethod(#NSSegmentedCell, "segmentStyle") = CLong;
override externalInstanceMethod(#NSSegmentedCell, "drawSegment:inFrame:withView:") = Void, CLong, NSRect, NSView;
override externalInstanceMethod(#NSSegmentedCell, "interiorBackgroundStyleForSegment:") = CLong, CLong;

record NSSegmentedControl = externalClass(NSControl);
override externalInstanceMethod(#NSSegmentedControl, "setSegmentCount:") = Void, CLong;
override externalInstanceMethod(#NSSegmentedControl, "segmentCount") = CLong;
override externalInstanceMethod(#NSSegmentedControl, "setSelectedSegment:") = Void, CLong;
override externalInstanceMethod(#NSSegmentedControl, "selectedSegment") = CLong;
override externalInstanceMethod(#NSSegmentedControl, "selectSegmentWithTag:") = Bool, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setWidth:forSegment:") = Void, Double, CLong;
override externalInstanceMethod(#NSSegmentedControl, "widthForSegment:") = Double, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setImage:forSegment:") = Void, NSImage, CLong;
override externalInstanceMethod(#NSSegmentedControl, "imageForSegment:") = NSImage, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setImageScaling:forSegment:") = Void, CULong, CLong;
override externalInstanceMethod(#NSSegmentedControl, "imageScalingForSegment:") = CULong, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setLabel:forSegment:") = Void, NSString, CLong;
override externalInstanceMethod(#NSSegmentedControl, "labelForSegment:") = NSString, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setMenu:forSegment:") = Void, NSMenu, CLong;
override externalInstanceMethod(#NSSegmentedControl, "menuForSegment:") = NSMenu, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setSelected:forSegment:") = Void, Bool, CLong;
override externalInstanceMethod(#NSSegmentedControl, "isSelectedForSegment:") = Bool, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setEnabled:forSegment:") = Void, Bool, CLong;
override externalInstanceMethod(#NSSegmentedControl, "isEnabledForSegment:") = Bool, CLong;
override externalInstanceMethod(#NSSegmentedControl, "setSegmentStyle:") = Void, CLong;
override externalInstanceMethod(#NSSegmentedControl, "segmentStyle") = CLong;

record NSShadow = externalClass(NSObject);
override externalInstanceMethod(#NSShadow, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSShadow, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSShadow, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSShadow, "init") = Id;
override externalInstanceMethod(#NSShadow, "shadowOffset") = NSSize;
override externalInstanceMethod(#NSShadow, "setShadowOffset:") = Void, NSSize;
override externalInstanceMethod(#NSShadow, "shadowBlurRadius") = Double;
override externalInstanceMethod(#NSShadow, "setShadowBlurRadius:") = Void, Double;
override externalInstanceMethod(#NSShadow, "shadowColor") = NSColor;
override externalInstanceMethod(#NSShadow, "setShadowColor:") = Void, NSColor;
override externalInstanceMethod(#NSShadow, "set") = Void;

record NSSlider = externalClass(NSControl);
override externalInstanceMethod(#NSSlider, "minValue") = Double;
override externalInstanceMethod(#NSSlider, "setMinValue:") = Void, Double;
override externalInstanceMethod(#NSSlider, "maxValue") = Double;
override externalInstanceMethod(#NSSlider, "setMaxValue:") = Void, Double;
override externalInstanceMethod(#NSSlider, "setAltIncrementValue:") = Void, Double;
override externalInstanceMethod(#NSSlider, "altIncrementValue") = Double;
override externalInstanceMethod(#NSSlider, "setTitleCell:") = Void, NSCell;
override externalInstanceMethod(#NSSlider, "titleCell") = Id;
override externalInstanceMethod(#NSSlider, "setTitleColor:") = Void, NSColor;
override externalInstanceMethod(#NSSlider, "titleColor") = NSColor;
override externalInstanceMethod(#NSSlider, "setTitleFont:") = Void, NSFont;
override externalInstanceMethod(#NSSlider, "titleFont") = NSFont;
override externalInstanceMethod(#NSSlider, "title") = NSString;
override externalInstanceMethod(#NSSlider, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSSlider, "setKnobThickness:") = Void, Double;
override externalInstanceMethod(#NSSlider, "knobThickness") = Double;
override externalInstanceMethod(#NSSlider, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSSlider, "image") = NSImage;
override externalInstanceMethod(#NSSlider, "isVertical") = CLong;
override externalInstanceMethod(#NSSlider, "acceptsFirstMouse:") = Bool, NSEvent;
override externalInstanceMethod(#NSSlider, "setNumberOfTickMarks:") = Void, CLong;
override externalInstanceMethod(#NSSlider, "numberOfTickMarks") = CLong;
override externalInstanceMethod(#NSSlider, "setTickMarkPosition:") = Void, CULong;
override externalInstanceMethod(#NSSlider, "tickMarkPosition") = CULong;
override externalInstanceMethod(#NSSlider, "setAllowsTickMarkValuesOnly:") = Void, Bool;
override externalInstanceMethod(#NSSlider, "allowsTickMarkValuesOnly") = Bool;
override externalInstanceMethod(#NSSlider, "tickMarkValueAtIndex:") = Double, CLong;
override externalInstanceMethod(#NSSlider, "rectOfTickMarkAtIndex:") = NSRect, CLong;
override externalInstanceMethod(#NSSlider, "indexOfTickMarkAtPoint:") = CLong, NSPoint;
override externalInstanceMethod(#NSSlider, "closestTickMarkValueToValue:") = Double, Double;

record NSSliderCell = externalClass(NSActionCell);
override externalClassMethod(#NSSliderCell, "prefersTrackingUntilMouseUp") = Bool;
override externalInstanceMethod(#NSSliderCell, "minValue") = Double;
override externalInstanceMethod(#NSSliderCell, "setMinValue:") = Void, Double;
override externalInstanceMethod(#NSSliderCell, "maxValue") = Double;
override externalInstanceMethod(#NSSliderCell, "setMaxValue:") = Void, Double;
override externalInstanceMethod(#NSSliderCell, "setAltIncrementValue:") = Void, Double;
override externalInstanceMethod(#NSSliderCell, "altIncrementValue") = Double;
override externalInstanceMethod(#NSSliderCell, "isVertical") = CLong;
override externalInstanceMethod(#NSSliderCell, "setTitleColor:") = Void, NSColor;
override externalInstanceMethod(#NSSliderCell, "titleColor") = NSColor;
override externalInstanceMethod(#NSSliderCell, "setTitleFont:") = Void, NSFont;
override externalInstanceMethod(#NSSliderCell, "titleFont") = NSFont;
override externalInstanceMethod(#NSSliderCell, "title") = NSString;
override externalInstanceMethod(#NSSliderCell, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSSliderCell, "setTitleCell:") = Void, NSCell;
override externalInstanceMethod(#NSSliderCell, "titleCell") = Id;
override externalInstanceMethod(#NSSliderCell, "setKnobThickness:") = Void, Double;
override externalInstanceMethod(#NSSliderCell, "knobThickness") = Double;
override externalInstanceMethod(#NSSliderCell, "knobRectFlipped:") = NSRect, Bool;
override externalInstanceMethod(#NSSliderCell, "drawKnob:") = Void, NSRect;
override externalInstanceMethod(#NSSliderCell, "drawKnob") = Void;
override externalInstanceMethod(#NSSliderCell, "drawBarInside:flipped:") = Void, NSRect, Bool;
override externalInstanceMethod(#NSSliderCell, "trackRect") = NSRect;
override externalInstanceMethod(#NSSliderCell, "setSliderType:") = Void, CULong;
override externalInstanceMethod(#NSSliderCell, "sliderType") = CULong;
override externalInstanceMethod(#NSSliderCell, "setNumberOfTickMarks:") = Void, CLong;
override externalInstanceMethod(#NSSliderCell, "numberOfTickMarks") = CLong;
override externalInstanceMethod(#NSSliderCell, "setTickMarkPosition:") = Void, CULong;
override externalInstanceMethod(#NSSliderCell, "tickMarkPosition") = CULong;
override externalInstanceMethod(#NSSliderCell, "setAllowsTickMarkValuesOnly:") = Void, Bool;
override externalInstanceMethod(#NSSliderCell, "allowsTickMarkValuesOnly") = Bool;
override externalInstanceMethod(#NSSliderCell, "tickMarkValueAtIndex:") = Double, CLong;
override externalInstanceMethod(#NSSliderCell, "rectOfTickMarkAtIndex:") = NSRect, CLong;
override externalInstanceMethod(#NSSliderCell, "indexOfTickMarkAtPoint:") = CLong, NSPoint;
override externalInstanceMethod(#NSSliderCell, "closestTickMarkValueToValue:") = Double, Double;

record NSSound = externalClass(NSObject);
override externalInstanceMethod(#NSSound, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSSound, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSSound, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#NSSound, "readableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalClassMethod(#NSSound, "readingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSSound, "initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
override externalInstanceMethod(#NSSound, "writableTypesForPasteboard:") = NSArray, NSPasteboard;
override externalInstanceMethod(#NSSound, "writingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override externalInstanceMethod(#NSSound, "pasteboardPropertyListForType:") = Id, NSString;
override externalClassMethod(#NSSound, "soundNamed:") = Id, NSString;
override externalInstanceMethod(#NSSound, "initWithContentsOfURL:byReference:") = Id, NSURL, Bool;
override externalInstanceMethod(#NSSound, "initWithContentsOfFile:byReference:") = Id, NSString, Bool;
override externalInstanceMethod(#NSSound, "initWithData:") = Id, NSData;
override externalInstanceMethod(#NSSound, "setName:") = Bool, NSString;
override externalInstanceMethod(#NSSound, "name") = NSString;
override externalClassMethod(#NSSound, "canInitWithPasteboard:") = Bool, NSPasteboard;
override externalClassMethod(#NSSound, "soundUnfilteredTypes") = NSArray;
override externalInstanceMethod(#NSSound, "initWithPasteboard:") = Id, NSPasteboard;
override externalInstanceMethod(#NSSound, "writeToPasteboard:") = Void, NSPasteboard;
override externalInstanceMethod(#NSSound, "play") = Bool;
override externalInstanceMethod(#NSSound, "pause") = Bool;
override externalInstanceMethod(#NSSound, "resume") = Bool;
override externalInstanceMethod(#NSSound, "stop") = Bool;
override externalInstanceMethod(#NSSound, "isPlaying") = Bool;
override externalInstanceMethod(#NSSound, "delegate") = Id;
override externalInstanceMethod(#NSSound, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSSound, "duration") = Double;
override externalInstanceMethod(#NSSound, "setVolume:") = Void, Float;
override externalInstanceMethod(#NSSound, "volume") = Float;
override externalInstanceMethod(#NSSound, "currentTime") = Double;
override externalInstanceMethod(#NSSound, "setCurrentTime:") = Void, Double;
override externalInstanceMethod(#NSSound, "setLoops:") = Void, Bool;
override externalInstanceMethod(#NSSound, "loops") = Bool;
override externalInstanceMethod(#NSSound, "setPlaybackDeviceIdentifier:") = Void, NSString;
override externalInstanceMethod(#NSSound, "playbackDeviceIdentifier") = NSString;
override externalInstanceMethod(#NSSound, "setChannelMapping:") = Void, NSArray;
override externalInstanceMethod(#NSSound, "channelMapping") = NSArray;
override externalClassMethod(#NSSound, "soundUnfilteredFileTypes") = NSArray;
override externalClassMethod(#NSSound, "soundUnfilteredPasteboardTypes") = NSArray;

record NSSpeechRecognizer = externalClass(NSObject);
override externalInstanceMethod(#NSSpeechRecognizer, "init") = Id;
override externalInstanceMethod(#NSSpeechRecognizer, "startListening") = Void;
override externalInstanceMethod(#NSSpeechRecognizer, "stopListening") = Void;
override externalInstanceMethod(#NSSpeechRecognizer, "delegate") = Id;
override externalInstanceMethod(#NSSpeechRecognizer, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSSpeechRecognizer, "commands") = NSArray;
override externalInstanceMethod(#NSSpeechRecognizer, "setCommands:") = Void, NSArray;
override externalInstanceMethod(#NSSpeechRecognizer, "displayedCommandsTitle") = NSString;
override externalInstanceMethod(#NSSpeechRecognizer, "setDisplayedCommandsTitle:") = Void, NSString;
override externalInstanceMethod(#NSSpeechRecognizer, "listensInForegroundOnly") = Bool;
override externalInstanceMethod(#NSSpeechRecognizer, "setListensInForegroundOnly:") = Void, Bool;
override externalInstanceMethod(#NSSpeechRecognizer, "blocksOtherRecognizers") = Bool;
override externalInstanceMethod(#NSSpeechRecognizer, "setBlocksOtherRecognizers:") = Void, Bool;

record NSSpeechSynthesizer = externalClass(NSObject);
override externalInstanceMethod(#NSSpeechSynthesizer, "initWithVoice:") = Id, NSString;
override externalInstanceMethod(#NSSpeechSynthesizer, "startSpeakingString:") = Bool, NSString;
override externalInstanceMethod(#NSSpeechSynthesizer, "startSpeakingString:toURL:") = Bool, NSString, NSURL;
override externalInstanceMethod(#NSSpeechSynthesizer, "isSpeaking") = Bool;
override externalInstanceMethod(#NSSpeechSynthesizer, "stopSpeaking") = Void;
override externalInstanceMethod(#NSSpeechSynthesizer, "stopSpeakingAtBoundary:") = Void, CULong;
override externalInstanceMethod(#NSSpeechSynthesizer, "pauseSpeakingAtBoundary:") = Void, CULong;
override externalInstanceMethod(#NSSpeechSynthesizer, "continueSpeaking") = Void;
override externalInstanceMethod(#NSSpeechSynthesizer, "delegate") = Id;
override externalInstanceMethod(#NSSpeechSynthesizer, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSSpeechSynthesizer, "voice") = NSString;
override externalInstanceMethod(#NSSpeechSynthesizer, "setVoice:") = Bool, NSString;
override externalInstanceMethod(#NSSpeechSynthesizer, "rate") = Float;
override externalInstanceMethod(#NSSpeechSynthesizer, "setRate:") = Void, Float;
override externalInstanceMethod(#NSSpeechSynthesizer, "volume") = Float;
override externalInstanceMethod(#NSSpeechSynthesizer, "setVolume:") = Void, Float;
override externalInstanceMethod(#NSSpeechSynthesizer, "usesFeedbackWindow") = Bool;
override externalInstanceMethod(#NSSpeechSynthesizer, "setUsesFeedbackWindow:") = Void, Bool;
override externalInstanceMethod(#NSSpeechSynthesizer, "addSpeechDictionary:") = Void, NSDictionary;
override externalInstanceMethod(#NSSpeechSynthesizer, "phonemesFromText:") = NSString, NSString;
override externalInstanceMethod(#NSSpeechSynthesizer, "objectForProperty:error:") = Id, NSString, Pointer[NSError];
override externalInstanceMethod(#NSSpeechSynthesizer, "setObject:forProperty:error:") = Bool, Id, NSString, Pointer[NSError];
override externalClassMethod(#NSSpeechSynthesizer, "isAnyApplicationSpeaking") = Bool;
override externalClassMethod(#NSSpeechSynthesizer, "defaultVoice") = NSString;
override externalClassMethod(#NSSpeechSynthesizer, "availableVoices") = NSArray;
override externalClassMethod(#NSSpeechSynthesizer, "attributesForVoice:") = NSDictionary, NSString;

record NSSpellChecker = externalClass(NSObject);
override externalClassMethod(#NSSpellChecker, "sharedSpellChecker") = NSSpellChecker;
override externalClassMethod(#NSSpellChecker, "sharedSpellCheckerExists") = Bool;
override externalClassMethod(#NSSpellChecker, "uniqueSpellDocumentTag") = CLong;
override externalInstanceMethod(#NSSpellChecker, "checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[CLong];
override externalInstanceMethod(#NSSpellChecker, "checkSpellingOfString:startingAt:") = NSRange, NSString, CLong;
override externalInstanceMethod(#NSSpellChecker, "countWordsInString:language:") = CLong, NSString, NSString;
override externalInstanceMethod(#NSSpellChecker, "checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[NSArray];
override externalInstanceMethod(#NSSpellChecker, "checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:") = NSArray, NSString, NSRange, UInt64, NSDictionary, CLong, Pointer[NSOrthography], Pointer[CLong];
override externalInstanceMethod(#NSSpellChecker, "requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:") = CLong, NSString, NSRange, UInt64, NSDictionary, CLong, UnknownType;
override externalInstanceMethod(#NSSpellChecker, "menuForResult:string:options:atLocation:inView:") = NSMenu, NSTextCheckingResult, NSString, NSDictionary, NSPoint, NSView;
override externalInstanceMethod(#NSSpellChecker, "userQuotesArrayForLanguage:") = NSArray, NSString;
override externalInstanceMethod(#NSSpellChecker, "userReplacementsDictionary") = NSDictionary;
override externalInstanceMethod(#NSSpellChecker, "updateSpellingPanelWithMisspelledWord:") = Void, NSString;
override externalInstanceMethod(#NSSpellChecker, "updateSpellingPanelWithGrammarString:detail:") = Void, NSString, NSDictionary;
override externalInstanceMethod(#NSSpellChecker, "spellingPanel") = NSPanel;
override externalInstanceMethod(#NSSpellChecker, "accessoryView") = NSView;
override externalInstanceMethod(#NSSpellChecker, "setAccessoryView:") = Void, NSView;
override externalInstanceMethod(#NSSpellChecker, "substitutionsPanel") = NSPanel;
override externalInstanceMethod(#NSSpellChecker, "substitutionsPanelAccessoryViewController") = NSViewController;
override externalInstanceMethod(#NSSpellChecker, "setSubstitutionsPanelAccessoryViewController:") = Void, NSViewController;
override externalInstanceMethod(#NSSpellChecker, "updatePanels") = Void;
override externalInstanceMethod(#NSSpellChecker, "ignoreWord:inSpellDocumentWithTag:") = Void, NSString, CLong;
override externalInstanceMethod(#NSSpellChecker, "ignoredWordsInSpellDocumentWithTag:") = NSArray, CLong;
override externalInstanceMethod(#NSSpellChecker, "setIgnoredWords:inSpellDocumentWithTag:") = Void, NSArray, CLong;
override externalInstanceMethod(#NSSpellChecker, "guessesForWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
override externalInstanceMethod(#NSSpellChecker, "completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
override externalInstanceMethod(#NSSpellChecker, "closeSpellDocumentWithTag:") = Void, CLong;
override externalInstanceMethod(#NSSpellChecker, "availableLanguages") = NSArray;
override externalInstanceMethod(#NSSpellChecker, "userPreferredLanguages") = NSArray;
override externalInstanceMethod(#NSSpellChecker, "automaticallyIdentifiesLanguages") = Bool;
override externalInstanceMethod(#NSSpellChecker, "setAutomaticallyIdentifiesLanguages:") = Void, Bool;
override externalInstanceMethod(#NSSpellChecker, "language") = NSString;
override externalInstanceMethod(#NSSpellChecker, "setLanguage:") = Bool, NSString;
override externalInstanceMethod(#NSSpellChecker, "setWordFieldStringValue:") = Void, NSString;
override externalInstanceMethod(#NSSpellChecker, "learnWord:") = Void, NSString;
override externalInstanceMethod(#NSSpellChecker, "hasLearnedWord:") = Bool, NSString;
override externalInstanceMethod(#NSSpellChecker, "unlearnWord:") = Void, NSString;
override externalInstanceMethod(#NSSpellChecker, "guessesForWord:") = NSArray, NSString;
override externalInstanceMethod(#NSSpellChecker, "forgetWord:") = Void, NSString;

record NSSplitView = externalClass(NSView);
override externalInstanceMethod(#NSSplitView, "setVertical:") = Void, Bool;
override externalInstanceMethod(#NSSplitView, "isVertical") = Bool;
override externalInstanceMethod(#NSSplitView, "setDividerStyle:") = Void, CLong;
override externalInstanceMethod(#NSSplitView, "dividerStyle") = CLong;
override externalInstanceMethod(#NSSplitView, "setAutosaveName:") = Void, NSString;
override externalInstanceMethod(#NSSplitView, "autosaveName") = NSString;
override externalInstanceMethod(#NSSplitView, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSSplitView, "delegate") = Id;
override externalInstanceMethod(#NSSplitView, "drawDividerInRect:") = Void, NSRect;
override externalInstanceMethod(#NSSplitView, "dividerColor") = NSColor;
override externalInstanceMethod(#NSSplitView, "dividerThickness") = Double;
override externalInstanceMethod(#NSSplitView, "adjustSubviews") = Void;
override externalInstanceMethod(#NSSplitView, "isSubviewCollapsed:") = Bool, NSView;
override externalInstanceMethod(#NSSplitView, "minPossiblePositionOfDividerAtIndex:") = Double, CLong;
override externalInstanceMethod(#NSSplitView, "maxPossiblePositionOfDividerAtIndex:") = Double, CLong;
override externalInstanceMethod(#NSSplitView, "setPosition:ofDividerAtIndex:") = Void, Double, CLong;
override externalInstanceMethod(#NSSplitView, "setIsPaneSplitter:") = Void, Bool;
override externalInstanceMethod(#NSSplitView, "isPaneSplitter") = Bool;

record NSStatusBar = externalClass(NSObject);
override externalClassMethod(#NSStatusBar, "systemStatusBar") = NSStatusBar;
override externalInstanceMethod(#NSStatusBar, "statusItemWithLength:") = NSStatusItem, Double;
override externalInstanceMethod(#NSStatusBar, "removeStatusItem:") = Void, NSStatusItem;
override externalInstanceMethod(#NSStatusBar, "isVertical") = Bool;
override externalInstanceMethod(#NSStatusBar, "thickness") = Double;

record NSStatusItem = externalClass(NSObject);
override externalInstanceMethod(#NSStatusItem, "statusBar") = NSStatusBar;
override externalInstanceMethod(#NSStatusItem, "length") = Double;
override externalInstanceMethod(#NSStatusItem, "setLength:") = Void, Double;
override externalInstanceMethod(#NSStatusItem, "action") = SelectorHandle;
override externalInstanceMethod(#NSStatusItem, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSStatusItem, "doubleAction") = SelectorHandle;
override externalInstanceMethod(#NSStatusItem, "setDoubleAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSStatusItem, "target") = Id;
override externalInstanceMethod(#NSStatusItem, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSStatusItem, "title") = NSString;
override externalInstanceMethod(#NSStatusItem, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSStatusItem, "attributedTitle") = NSAttributedString;
override externalInstanceMethod(#NSStatusItem, "setAttributedTitle:") = Void, NSAttributedString;
override externalInstanceMethod(#NSStatusItem, "image") = NSImage;
override externalInstanceMethod(#NSStatusItem, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSStatusItem, "alternateImage") = NSImage;
override externalInstanceMethod(#NSStatusItem, "setAlternateImage:") = Void, NSImage;
override externalInstanceMethod(#NSStatusItem, "menu") = NSMenu;
override externalInstanceMethod(#NSStatusItem, "setMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSStatusItem, "isEnabled") = Bool;
override externalInstanceMethod(#NSStatusItem, "setEnabled:") = Void, Bool;
override externalInstanceMethod(#NSStatusItem, "toolTip") = NSString;
override externalInstanceMethod(#NSStatusItem, "setToolTip:") = Void, NSString;
override externalInstanceMethod(#NSStatusItem, "setHighlightMode:") = Void, Bool;
override externalInstanceMethod(#NSStatusItem, "highlightMode") = Bool;
override externalInstanceMethod(#NSStatusItem, "sendActionOn:") = CLong, CLong;
override externalInstanceMethod(#NSStatusItem, "popUpStatusItemMenu:") = Void, NSMenu;
override externalInstanceMethod(#NSStatusItem, "drawStatusBarBackgroundInRect:withHighlight:") = Void, NSRect, Bool;
override externalInstanceMethod(#NSStatusItem, "view") = NSView;
override externalInstanceMethod(#NSStatusItem, "setView:") = Void, NSView;

record NSStepper = externalClass(NSControl);
override externalInstanceMethod(#NSStepper, "minValue") = Double;
override externalInstanceMethod(#NSStepper, "setMinValue:") = Void, Double;
override externalInstanceMethod(#NSStepper, "maxValue") = Double;
override externalInstanceMethod(#NSStepper, "setMaxValue:") = Void, Double;
override externalInstanceMethod(#NSStepper, "increment") = Double;
override externalInstanceMethod(#NSStepper, "setIncrement:") = Void, Double;
override externalInstanceMethod(#NSStepper, "valueWraps") = Bool;
override externalInstanceMethod(#NSStepper, "setValueWraps:") = Void, Bool;
override externalInstanceMethod(#NSStepper, "autorepeat") = Bool;
override externalInstanceMethod(#NSStepper, "setAutorepeat:") = Void, Bool;

record NSStepperCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSStepperCell, "minValue") = Double;
override externalInstanceMethod(#NSStepperCell, "setMinValue:") = Void, Double;
override externalInstanceMethod(#NSStepperCell, "maxValue") = Double;
override externalInstanceMethod(#NSStepperCell, "setMaxValue:") = Void, Double;
override externalInstanceMethod(#NSStepperCell, "increment") = Double;
override externalInstanceMethod(#NSStepperCell, "setIncrement:") = Void, Double;
override externalInstanceMethod(#NSStepperCell, "valueWraps") = Bool;
override externalInstanceMethod(#NSStepperCell, "setValueWraps:") = Void, Bool;
override externalInstanceMethod(#NSStepperCell, "autorepeat") = Bool;
override externalInstanceMethod(#NSStepperCell, "setAutorepeat:") = Void, Bool;

override externalInstanceMethod(#NSString, "sizeWithAttributes:") = NSSize, NSDictionary;
override externalInstanceMethod(#NSString, "drawAtPoint:withAttributes:") = Void, NSPoint, NSDictionary;
override externalInstanceMethod(#NSString, "drawInRect:withAttributes:") = Void, NSRect, NSDictionary;
override externalInstanceMethod(#NSString, "drawWithRect:options:attributes:") = Void, NSRect, CLong, NSDictionary;
override externalInstanceMethod(#NSString, "boundingRectWithSize:options:attributes:") = NSRect, NSSize, CLong, NSDictionary;

record NSTabView = externalClass(NSView);
override externalInstanceMethod(#NSTabView, "selectTabViewItem:") = Void, NSTabViewItem;
override externalInstanceMethod(#NSTabView, "selectTabViewItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSTabView, "selectTabViewItemWithIdentifier:") = Void, Id;
override externalInstanceMethod(#NSTabView, "takeSelectedTabViewItemFromSender:") = Void, Id;
override externalInstanceMethod(#NSTabView, "selectFirstTabViewItem:") = Void, Id;
override externalInstanceMethod(#NSTabView, "selectLastTabViewItem:") = Void, Id;
override externalInstanceMethod(#NSTabView, "selectNextTabViewItem:") = Void, Id;
override externalInstanceMethod(#NSTabView, "selectPreviousTabViewItem:") = Void, Id;
override externalInstanceMethod(#NSTabView, "selectedTabViewItem") = NSTabViewItem;
override externalInstanceMethod(#NSTabView, "font") = NSFont;
override externalInstanceMethod(#NSTabView, "tabViewType") = CULong;
override externalInstanceMethod(#NSTabView, "tabViewItems") = NSArray;
override externalInstanceMethod(#NSTabView, "allowsTruncatedLabels") = Bool;
override externalInstanceMethod(#NSTabView, "minimumSize") = NSSize;
override externalInstanceMethod(#NSTabView, "drawsBackground") = Bool;
override externalInstanceMethod(#NSTabView, "controlTint") = CULong;
override externalInstanceMethod(#NSTabView, "controlSize") = CULong;
override externalInstanceMethod(#NSTabView, "setFont:") = Void, NSFont;
override externalInstanceMethod(#NSTabView, "setTabViewType:") = Void, CULong;
override externalInstanceMethod(#NSTabView, "setAllowsTruncatedLabels:") = Void, Bool;
override externalInstanceMethod(#NSTabView, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSTabView, "setControlTint:") = Void, CULong;
override externalInstanceMethod(#NSTabView, "setControlSize:") = Void, CULong;
override externalInstanceMethod(#NSTabView, "addTabViewItem:") = Void, NSTabViewItem;
override externalInstanceMethod(#NSTabView, "insertTabViewItem:atIndex:") = Void, NSTabViewItem, CLong;
override externalInstanceMethod(#NSTabView, "removeTabViewItem:") = Void, NSTabViewItem;
override externalInstanceMethod(#NSTabView, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSTabView, "delegate") = Id;
override externalInstanceMethod(#NSTabView, "tabViewItemAtPoint:") = NSTabViewItem, NSPoint;
override externalInstanceMethod(#NSTabView, "contentRect") = NSRect;
override externalInstanceMethod(#NSTabView, "numberOfTabViewItems") = CLong;
override externalInstanceMethod(#NSTabView, "indexOfTabViewItem:") = CLong, NSTabViewItem;
override externalInstanceMethod(#NSTabView, "tabViewItemAtIndex:") = NSTabViewItem, CLong;
override externalInstanceMethod(#NSTabView, "indexOfTabViewItemWithIdentifier:") = CLong, Id;

record NSTabViewItem = externalClass(NSObject);
override externalInstanceMethod(#NSTabViewItem, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTabViewItem, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTabViewItem, "initWithIdentifier:") = Id, Id;
override externalInstanceMethod(#NSTabViewItem, "identifier") = Id;
override externalInstanceMethod(#NSTabViewItem, "view") = Id;
override externalInstanceMethod(#NSTabViewItem, "initialFirstResponder") = Id;
override externalInstanceMethod(#NSTabViewItem, "label") = NSString;
override externalInstanceMethod(#NSTabViewItem, "color") = NSColor;
override externalInstanceMethod(#NSTabViewItem, "tabState") = CULong;
override externalInstanceMethod(#NSTabViewItem, "tabView") = NSTabView;
override externalInstanceMethod(#NSTabViewItem, "setIdentifier:") = Void, Id;
override externalInstanceMethod(#NSTabViewItem, "setLabel:") = Void, NSString;
override externalInstanceMethod(#NSTabViewItem, "setColor:") = Void, NSColor;
override externalInstanceMethod(#NSTabViewItem, "setView:") = Void, NSView;
override externalInstanceMethod(#NSTabViewItem, "setInitialFirstResponder:") = Void, NSView;
override externalInstanceMethod(#NSTabViewItem, "toolTip") = NSString;
override externalInstanceMethod(#NSTabViewItem, "setToolTip:") = Void, NSString;
override externalInstanceMethod(#NSTabViewItem, "drawLabel:inRect:") = Void, Bool, NSRect;
override externalInstanceMethod(#NSTabViewItem, "sizeOfLabel:") = NSSize, Bool;

record NSTableColumn = externalClass(NSObject);
override externalInstanceMethod(#NSTableColumn, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTableColumn, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTableColumn, "initWithIdentifier:") = Id, Id;
override externalInstanceMethod(#NSTableColumn, "setIdentifier:") = Void, Id;
override externalInstanceMethod(#NSTableColumn, "identifier") = Id;
override externalInstanceMethod(#NSTableColumn, "setTableView:") = Void, NSTableView;
override externalInstanceMethod(#NSTableColumn, "tableView") = NSTableView;
override externalInstanceMethod(#NSTableColumn, "setWidth:") = Void, Double;
override externalInstanceMethod(#NSTableColumn, "width") = Double;
override externalInstanceMethod(#NSTableColumn, "setMinWidth:") = Void, Double;
override externalInstanceMethod(#NSTableColumn, "minWidth") = Double;
override externalInstanceMethod(#NSTableColumn, "setMaxWidth:") = Void, Double;
override externalInstanceMethod(#NSTableColumn, "maxWidth") = Double;
override externalInstanceMethod(#NSTableColumn, "setHeaderCell:") = Void, NSCell;
override externalInstanceMethod(#NSTableColumn, "headerCell") = Id;
override externalInstanceMethod(#NSTableColumn, "setDataCell:") = Void, NSCell;
override externalInstanceMethod(#NSTableColumn, "dataCell") = Id;
override externalInstanceMethod(#NSTableColumn, "dataCellForRow:") = Id, CLong;
override externalInstanceMethod(#NSTableColumn, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSTableColumn, "isEditable") = Bool;
override externalInstanceMethod(#NSTableColumn, "sizeToFit") = Void;
override externalInstanceMethod(#NSTableColumn, "setSortDescriptorPrototype:") = Void, NSSortDescriptor;
override externalInstanceMethod(#NSTableColumn, "sortDescriptorPrototype") = NSSortDescriptor;
override externalInstanceMethod(#NSTableColumn, "setResizingMask:") = Void, CULong;
override externalInstanceMethod(#NSTableColumn, "resizingMask") = CULong;
override externalInstanceMethod(#NSTableColumn, "setHeaderToolTip:") = Void, NSString;
override externalInstanceMethod(#NSTableColumn, "headerToolTip") = NSString;
override externalInstanceMethod(#NSTableColumn, "isHidden") = Bool;
override externalInstanceMethod(#NSTableColumn, "setHidden:") = Void, Bool;
override externalInstanceMethod(#NSTableColumn, "setResizable:") = Void, Bool;
override externalInstanceMethod(#NSTableColumn, "isResizable") = Bool;

record NSTableHeaderCell = externalClass(NSTextFieldCell);
override externalInstanceMethod(#NSTableHeaderCell, "drawSortIndicatorWithFrame:inView:ascending:priority:") = Void, NSRect, NSView, Bool, CLong;
override externalInstanceMethod(#NSTableHeaderCell, "sortIndicatorRectForBounds:") = NSRect, NSRect;

record NSTableHeaderView = externalClass(NSView);
override externalInstanceMethod(#NSTableHeaderView, "setTableView:") = Void, NSTableView;
override externalInstanceMethod(#NSTableHeaderView, "tableView") = NSTableView;
override externalInstanceMethod(#NSTableHeaderView, "draggedColumn") = CLong;
override externalInstanceMethod(#NSTableHeaderView, "draggedDistance") = Double;
override externalInstanceMethod(#NSTableHeaderView, "resizedColumn") = CLong;
override externalInstanceMethod(#NSTableHeaderView, "headerRectOfColumn:") = NSRect, CLong;
override externalInstanceMethod(#NSTableHeaderView, "columnAtPoint:") = CLong, NSPoint;

record NSTableView = externalClass(NSControl);
override externalInstanceMethod(#NSTableView, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSTableView, "textView:clickedOnLink:atIndex:") = Bool, NSTextView, Id, CULong;
override externalInstanceMethod(#NSTableView, "textView:clickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
override externalInstanceMethod(#NSTableView, "textView:doubleClickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
override externalInstanceMethod(#NSTableView, "textView:draggedCell:inRect:event:atIndex:") = Void, NSTextView, Id, NSRect, NSEvent, CULong;
override externalInstanceMethod(#NSTableView, "textView:writablePasteboardTypesForCell:atIndex:") = NSArray, NSTextView, Id, CULong;
override externalInstanceMethod(#NSTableView, "textView:writeCell:atIndex:toPasteboard:type:") = Bool, NSTextView, Id, CULong, NSPasteboard, NSString;
override externalInstanceMethod(#NSTableView, "textView:willChangeSelectionFromCharacterRange:toCharacterRange:") = NSRange, NSTextView, NSRange, NSRange;
override externalInstanceMethod(#NSTableView, "textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:") = NSArray, NSTextView, NSArray, NSArray;
override externalInstanceMethod(#NSTableView, "textView:shouldChangeTextInRanges:replacementStrings:") = Bool, NSTextView, NSArray, NSArray;
override externalInstanceMethod(#NSTableView, "textView:shouldChangeTypingAttributes:toAttributes:") = NSDictionary, NSTextView, NSDictionary, NSDictionary;
override externalInstanceMethod(#NSTableView, "textViewDidChangeSelection:") = Void, NSNotification;
override externalInstanceMethod(#NSTableView, "textViewDidChangeTypingAttributes:") = Void, NSNotification;
override externalInstanceMethod(#NSTableView, "textView:willDisplayToolTip:forCharacterAtIndex:") = NSString, NSTextView, NSString, CULong;
override externalInstanceMethod(#NSTableView, "textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSTextView, NSArray, NSRange, Pointer[CLong];
override externalInstanceMethod(#NSTableView, "textView:shouldChangeTextInRange:replacementString:") = Bool, NSTextView, NSRange, NSString;
override externalInstanceMethod(#NSTableView, "textView:doCommandBySelector:") = Bool, NSTextView, SelectorHandle;
override externalInstanceMethod(#NSTableView, "textView:shouldSetSpellingState:range:") = CLong, NSTextView, CLong, NSRange;
override externalInstanceMethod(#NSTableView, "textView:menu:forEvent:atIndex:") = NSMenu, NSTextView, NSMenu, NSEvent, CULong;
override externalInstanceMethod(#NSTableView, "textView:willCheckTextInRange:options:types:") = NSDictionary, NSTextView, NSRange, NSDictionary, Pointer[UInt64];
override externalInstanceMethod(#NSTableView, "textView:didCheckTextInRange:types:options:results:orthography:wordCount:") = NSArray, NSTextView, NSRange, UInt64, NSDictionary, NSArray, NSOrthography, CLong;
override externalInstanceMethod(#NSTableView, "textView:clickedOnLink:") = Bool, NSTextView, Id;
override externalInstanceMethod(#NSTableView, "textView:clickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
override externalInstanceMethod(#NSTableView, "textView:doubleClickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
override externalInstanceMethod(#NSTableView, "textView:draggedCell:inRect:event:") = Void, NSTextView, Id, NSRect, NSEvent;
override externalInstanceMethod(#NSTableView, "undoManagerForTextView:") = NSUndoManager, NSTextView;
override externalInstanceMethod(#NSTableView, "setDataSource:") = Void, Id;
override externalInstanceMethod(#NSTableView, "dataSource") = Id;
override externalInstanceMethod(#NSTableView, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSTableView, "delegate") = Id;
override externalInstanceMethod(#NSTableView, "setHeaderView:") = Void, NSTableHeaderView;
override externalInstanceMethod(#NSTableView, "headerView") = NSTableHeaderView;
override externalInstanceMethod(#NSTableView, "setCornerView:") = Void, NSView;
override externalInstanceMethod(#NSTableView, "cornerView") = NSView;
override externalInstanceMethod(#NSTableView, "setAllowsColumnReordering:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "allowsColumnReordering") = Bool;
override externalInstanceMethod(#NSTableView, "setAllowsColumnResizing:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "allowsColumnResizing") = Bool;
override externalInstanceMethod(#NSTableView, "setColumnAutoresizingStyle:") = Void, CULong;
override externalInstanceMethod(#NSTableView, "columnAutoresizingStyle") = CULong;
override externalInstanceMethod(#NSTableView, "setGridStyleMask:") = Void, CULong;
override externalInstanceMethod(#NSTableView, "gridStyleMask") = CULong;
override externalInstanceMethod(#NSTableView, "setIntercellSpacing:") = Void, NSSize;
override externalInstanceMethod(#NSTableView, "intercellSpacing") = NSSize;
override externalInstanceMethod(#NSTableView, "setUsesAlternatingRowBackgroundColors:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "usesAlternatingRowBackgroundColors") = Bool;
override externalInstanceMethod(#NSTableView, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSTableView, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSTableView, "setGridColor:") = Void, NSColor;
override externalInstanceMethod(#NSTableView, "gridColor") = NSColor;
override externalInstanceMethod(#NSTableView, "setRowHeight:") = Void, Double;
override externalInstanceMethod(#NSTableView, "rowHeight") = Double;
override externalInstanceMethod(#NSTableView, "noteHeightOfRowsWithIndexesChanged:") = Void, NSIndexSet;
override externalInstanceMethod(#NSTableView, "tableColumns") = NSArray;
override externalInstanceMethod(#NSTableView, "numberOfColumns") = CLong;
override externalInstanceMethod(#NSTableView, "numberOfRows") = CLong;
override externalInstanceMethod(#NSTableView, "addTableColumn:") = Void, NSTableColumn;
override externalInstanceMethod(#NSTableView, "removeTableColumn:") = Void, NSTableColumn;
override externalInstanceMethod(#NSTableView, "moveColumn:toColumn:") = Void, CLong, CLong;
override externalInstanceMethod(#NSTableView, "columnWithIdentifier:") = CLong, Id;
override externalInstanceMethod(#NSTableView, "tableColumnWithIdentifier:") = NSTableColumn, Id;
override externalInstanceMethod(#NSTableView, "tile") = Void;
override externalInstanceMethod(#NSTableView, "sizeToFit") = Void;
override externalInstanceMethod(#NSTableView, "sizeLastColumnToFit") = Void;
override externalInstanceMethod(#NSTableView, "scrollRowToVisible:") = Void, CLong;
override externalInstanceMethod(#NSTableView, "scrollColumnToVisible:") = Void, CLong;
override externalInstanceMethod(#NSTableView, "reloadData") = Void;
override externalInstanceMethod(#NSTableView, "noteNumberOfRowsChanged") = Void;
override externalInstanceMethod(#NSTableView, "reloadDataForRowIndexes:columnIndexes:") = Void, NSIndexSet, NSIndexSet;
override externalInstanceMethod(#NSTableView, "editedColumn") = CLong;
override externalInstanceMethod(#NSTableView, "editedRow") = CLong;
override externalInstanceMethod(#NSTableView, "clickedColumn") = CLong;
override externalInstanceMethod(#NSTableView, "clickedRow") = CLong;
override externalInstanceMethod(#NSTableView, "setDoubleAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSTableView, "doubleAction") = SelectorHandle;
override externalInstanceMethod(#NSTableView, "setSortDescriptors:") = Void, NSArray;
override externalInstanceMethod(#NSTableView, "sortDescriptors") = NSArray;
override externalInstanceMethod(#NSTableView, "setIndicatorImage:inTableColumn:") = Void, NSImage, NSTableColumn;
override externalInstanceMethod(#NSTableView, "indicatorImageInTableColumn:") = NSImage, NSTableColumn;
override externalInstanceMethod(#NSTableView, "setHighlightedTableColumn:") = Void, NSTableColumn;
override externalInstanceMethod(#NSTableView, "highlightedTableColumn") = NSTableColumn;
override externalInstanceMethod(#NSTableView, "setVerticalMotionCanBeginDrag:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "verticalMotionCanBeginDrag") = Bool;
override externalInstanceMethod(#NSTableView, "canDragRowsWithIndexes:atPoint:") = Bool, NSIndexSet, NSPoint;
override externalInstanceMethod(#NSTableView, "dragImageForRowsWithIndexes:tableColumns:event:offset:") = NSImage, NSIndexSet, NSArray, NSEvent, NSPointPointer;
override externalInstanceMethod(#NSTableView, "setDraggingSourceOperationMask:forLocal:") = Void, CULong, Bool;
override externalInstanceMethod(#NSTableView, "setDropRow:dropOperation:") = Void, CLong, CULong;
override externalInstanceMethod(#NSTableView, "setAllowsMultipleSelection:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "allowsMultipleSelection") = Bool;
override externalInstanceMethod(#NSTableView, "setAllowsEmptySelection:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "allowsEmptySelection") = Bool;
override externalInstanceMethod(#NSTableView, "setAllowsColumnSelection:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "allowsColumnSelection") = Bool;
override externalInstanceMethod(#NSTableView, "selectAll:") = Void, Id;
override externalInstanceMethod(#NSTableView, "deselectAll:") = Void, Id;
override externalInstanceMethod(#NSTableView, "selectColumnIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
override externalInstanceMethod(#NSTableView, "selectRowIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
override externalInstanceMethod(#NSTableView, "selectedColumnIndexes") = NSIndexSet;
override externalInstanceMethod(#NSTableView, "selectedRowIndexes") = NSIndexSet;
override externalInstanceMethod(#NSTableView, "deselectColumn:") = Void, CLong;
override externalInstanceMethod(#NSTableView, "deselectRow:") = Void, CLong;
override externalInstanceMethod(#NSTableView, "selectedColumn") = CLong;
override externalInstanceMethod(#NSTableView, "selectedRow") = CLong;
override externalInstanceMethod(#NSTableView, "isColumnSelected:") = Bool, CLong;
override externalInstanceMethod(#NSTableView, "isRowSelected:") = Bool, CLong;
override externalInstanceMethod(#NSTableView, "numberOfSelectedColumns") = CLong;
override externalInstanceMethod(#NSTableView, "numberOfSelectedRows") = CLong;
override externalInstanceMethod(#NSTableView, "allowsTypeSelect") = Bool;
override externalInstanceMethod(#NSTableView, "setAllowsTypeSelect:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "selectionHighlightStyle") = CLong;
override externalInstanceMethod(#NSTableView, "setSelectionHighlightStyle:") = Void, CLong;
override externalInstanceMethod(#NSTableView, "setDraggingDestinationFeedbackStyle:") = Void, CLong;
override externalInstanceMethod(#NSTableView, "draggingDestinationFeedbackStyle") = CLong;
override externalInstanceMethod(#NSTableView, "rectOfColumn:") = NSRect, CLong;
override externalInstanceMethod(#NSTableView, "rectOfRow:") = NSRect, CLong;
override externalInstanceMethod(#NSTableView, "columnIndexesInRect:") = NSIndexSet, NSRect;
override externalInstanceMethod(#NSTableView, "rowsInRect:") = NSRange, NSRect;
override externalInstanceMethod(#NSTableView, "columnAtPoint:") = CLong, NSPoint;
override externalInstanceMethod(#NSTableView, "rowAtPoint:") = CLong, NSPoint;
override externalInstanceMethod(#NSTableView, "frameOfCellAtColumn:row:") = NSRect, CLong, CLong;
override externalInstanceMethod(#NSTableView, "preparedCellAtColumn:row:") = NSCell, CLong, CLong;
override externalInstanceMethod(#NSTableView, "textShouldBeginEditing:") = Bool, NSText;
override externalInstanceMethod(#NSTableView, "textShouldEndEditing:") = Bool, NSText;
override externalInstanceMethod(#NSTableView, "textDidBeginEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSTableView, "textDidEndEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSTableView, "textDidChange:") = Void, NSNotification;
override externalInstanceMethod(#NSTableView, "setAutosaveName:") = Void, NSString;
override externalInstanceMethod(#NSTableView, "autosaveName") = NSString;
override externalInstanceMethod(#NSTableView, "setAutosaveTableColumns:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "autosaveTableColumns") = Bool;
override externalInstanceMethod(#NSTableView, "shouldFocusCell:atColumn:row:") = Bool, NSCell, CLong, CLong;
override externalInstanceMethod(#NSTableView, "focusedColumn") = CLong;
override externalInstanceMethod(#NSTableView, "setFocusedColumn:") = Void, CLong;
override externalInstanceMethod(#NSTableView, "performClickOnCellAtColumn:row:") = Void, CLong, CLong;
override externalInstanceMethod(#NSTableView, "editColumn:row:withEvent:select:") = Void, CLong, CLong, NSEvent, Bool;
override externalInstanceMethod(#NSTableView, "drawRow:clipRect:") = Void, CLong, NSRect;
override externalInstanceMethod(#NSTableView, "highlightSelectionInClipRect:") = Void, NSRect;
override externalInstanceMethod(#NSTableView, "drawGridInClipRect:") = Void, NSRect;
override externalInstanceMethod(#NSTableView, "drawBackgroundInClipRect:") = Void, NSRect;
override externalInstanceMethod(#NSTableView, "setDrawsGrid:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "drawsGrid") = Bool;
override externalInstanceMethod(#NSTableView, "selectColumn:byExtendingSelection:") = Void, CLong, Bool;
override externalInstanceMethod(#NSTableView, "selectRow:byExtendingSelection:") = Void, CLong, Bool;
override externalInstanceMethod(#NSTableView, "selectedColumnEnumerator") = NSEnumerator;
override externalInstanceMethod(#NSTableView, "selectedRowEnumerator") = NSEnumerator;
override externalInstanceMethod(#NSTableView, "dragImageForRows:event:dragImageOffset:") = NSImage, NSArray, NSEvent, NSPointPointer;
override externalInstanceMethod(#NSTableView, "setAutoresizesAllColumnsToFit:") = Void, Bool;
override externalInstanceMethod(#NSTableView, "autoresizesAllColumnsToFit") = Bool;
override externalInstanceMethod(#NSTableView, "columnsInRect:") = NSRange, NSRect;

record NSText = externalClass(NSView);
override externalInstanceMethod(#NSText, "changeSpelling:") = Void, Id;
override externalInstanceMethod(#NSText, "ignoreSpelling:") = Void, Id;
override externalInstanceMethod(#NSText, "string") = NSString;
override externalInstanceMethod(#NSText, "setString:") = Void, NSString;
override externalInstanceMethod(#NSText, "replaceCharactersInRange:withString:") = Void, NSRange, NSString;
override externalInstanceMethod(#NSText, "replaceCharactersInRange:withRTF:") = Void, NSRange, NSData;
override externalInstanceMethod(#NSText, "replaceCharactersInRange:withRTFD:") = Void, NSRange, NSData;
override externalInstanceMethod(#NSText, "RTFFromRange:") = NSData, NSRange;
override externalInstanceMethod(#NSText, "RTFDFromRange:") = NSData, NSRange;
override externalInstanceMethod(#NSText, "writeRTFDToFile:atomically:") = Bool, NSString, Bool;
override externalInstanceMethod(#NSText, "readRTFDFromFile:") = Bool, NSString;
override externalInstanceMethod(#NSText, "delegate") = Id;
override externalInstanceMethod(#NSText, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSText, "isEditable") = Bool;
override externalInstanceMethod(#NSText, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSText, "isSelectable") = Bool;
override externalInstanceMethod(#NSText, "setSelectable:") = Void, Bool;
override externalInstanceMethod(#NSText, "isRichText") = Bool;
override externalInstanceMethod(#NSText, "setRichText:") = Void, Bool;
override externalInstanceMethod(#NSText, "importsGraphics") = Bool;
override externalInstanceMethod(#NSText, "setImportsGraphics:") = Void, Bool;
override externalInstanceMethod(#NSText, "isFieldEditor") = Bool;
override externalInstanceMethod(#NSText, "setFieldEditor:") = Void, Bool;
override externalInstanceMethod(#NSText, "usesFontPanel") = Bool;
override externalInstanceMethod(#NSText, "setUsesFontPanel:") = Void, Bool;
override externalInstanceMethod(#NSText, "drawsBackground") = Bool;
override externalInstanceMethod(#NSText, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSText, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSText, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSText, "isRulerVisible") = Bool;
override externalInstanceMethod(#NSText, "selectedRange") = NSRange;
override externalInstanceMethod(#NSText, "setSelectedRange:") = Void, NSRange;
override externalInstanceMethod(#NSText, "scrollRangeToVisible:") = Void, NSRange;
override externalInstanceMethod(#NSText, "setFont:") = Void, NSFont;
override externalInstanceMethod(#NSText, "font") = NSFont;
override externalInstanceMethod(#NSText, "setTextColor:") = Void, NSColor;
override externalInstanceMethod(#NSText, "textColor") = NSColor;
override externalInstanceMethod(#NSText, "alignment") = CULong;
override externalInstanceMethod(#NSText, "setAlignment:") = Void, CULong;
override externalInstanceMethod(#NSText, "baseWritingDirection") = CLong;
override externalInstanceMethod(#NSText, "setBaseWritingDirection:") = Void, CLong;
override externalInstanceMethod(#NSText, "setTextColor:range:") = Void, NSColor, NSRange;
override externalInstanceMethod(#NSText, "setFont:range:") = Void, NSFont, NSRange;
override externalInstanceMethod(#NSText, "maxSize") = NSSize;
override externalInstanceMethod(#NSText, "setMaxSize:") = Void, NSSize;
override externalInstanceMethod(#NSText, "minSize") = NSSize;
override externalInstanceMethod(#NSText, "setMinSize:") = Void, NSSize;
override externalInstanceMethod(#NSText, "isHorizontallyResizable") = Bool;
override externalInstanceMethod(#NSText, "setHorizontallyResizable:") = Void, Bool;
override externalInstanceMethod(#NSText, "isVerticallyResizable") = Bool;
override externalInstanceMethod(#NSText, "setVerticallyResizable:") = Void, Bool;
override externalInstanceMethod(#NSText, "sizeToFit") = Void;
override externalInstanceMethod(#NSText, "copy:") = Void, Id;
override externalInstanceMethod(#NSText, "copyFont:") = Void, Id;
override externalInstanceMethod(#NSText, "copyRuler:") = Void, Id;
override externalInstanceMethod(#NSText, "cut:") = Void, Id;
override externalInstanceMethod(#NSText, "delete:") = Void, Id;
override externalInstanceMethod(#NSText, "paste:") = Void, Id;
override externalInstanceMethod(#NSText, "pasteFont:") = Void, Id;
override externalInstanceMethod(#NSText, "pasteRuler:") = Void, Id;
override externalInstanceMethod(#NSText, "selectAll:") = Void, Id;
override externalInstanceMethod(#NSText, "changeFont:") = Void, Id;
override externalInstanceMethod(#NSText, "alignLeft:") = Void, Id;
override externalInstanceMethod(#NSText, "alignRight:") = Void, Id;
override externalInstanceMethod(#NSText, "alignCenter:") = Void, Id;
override externalInstanceMethod(#NSText, "subscript:") = Void, Id;
override externalInstanceMethod(#NSText, "superscript:") = Void, Id;
override externalInstanceMethod(#NSText, "underline:") = Void, Id;
override externalInstanceMethod(#NSText, "unscript:") = Void, Id;
override externalInstanceMethod(#NSText, "showGuessPanel:") = Void, Id;
override externalInstanceMethod(#NSText, "checkSpelling:") = Void, Id;
override externalInstanceMethod(#NSText, "toggleRuler:") = Void, Id;

record NSTextAttachment = externalClass(NSObject);
override externalInstanceMethod(#NSTextAttachment, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTextAttachment, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTextAttachment, "initWithFileWrapper:") = Id, NSFileWrapper;
override externalInstanceMethod(#NSTextAttachment, "setFileWrapper:") = Void, NSFileWrapper;
override externalInstanceMethod(#NSTextAttachment, "fileWrapper") = NSFileWrapper;
override externalInstanceMethod(#NSTextAttachment, "attachmentCell") = Id;
override externalInstanceMethod(#NSTextAttachment, "setAttachmentCell:") = Void, Id;

record NSTextAttachmentCell = externalClass(NSCell);
override externalInstanceMethod(#NSTextAttachmentCell, "drawWithFrame:inView:") = Void, NSRect, NSView;
override externalInstanceMethod(#NSTextAttachmentCell, "wantsToTrackMouse") = Bool;
override externalInstanceMethod(#NSTextAttachmentCell, "highlight:withFrame:inView:") = Void, Bool, NSRect, NSView;
override externalInstanceMethod(#NSTextAttachmentCell, "trackMouse:inRect:ofView:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, Bool;
override externalInstanceMethod(#NSTextAttachmentCell, "cellSize") = NSSize;
override externalInstanceMethod(#NSTextAttachmentCell, "cellBaselineOffset") = NSPoint;
override externalInstanceMethod(#NSTextAttachmentCell, "setAttachment:") = Void, NSTextAttachment;
override externalInstanceMethod(#NSTextAttachmentCell, "attachment") = NSTextAttachment;
override externalInstanceMethod(#NSTextAttachmentCell, "drawWithFrame:inView:characterIndex:") = Void, NSRect, NSView, CULong;
override externalInstanceMethod(#NSTextAttachmentCell, "drawWithFrame:inView:characterIndex:layoutManager:") = Void, NSRect, NSView, CULong, NSLayoutManager;
override externalInstanceMethod(#NSTextAttachmentCell, "wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:") = Bool, NSEvent, NSRect, NSView, CULong;
override externalInstanceMethod(#NSTextAttachmentCell, "trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, CULong, Bool;
override externalInstanceMethod(#NSTextAttachmentCell, "cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, NSTextContainer, NSRect, NSPoint, CULong;

record NSTextBlock = externalClass(NSObject);
override externalInstanceMethod(#NSTextBlock, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTextBlock, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTextBlock, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSTextBlock, "init") = Id;
override externalInstanceMethod(#NSTextBlock, "setValue:type:forDimension:") = Void, Double, CULong, CULong;
override externalInstanceMethod(#NSTextBlock, "valueForDimension:") = Double, CULong;
override externalInstanceMethod(#NSTextBlock, "valueTypeForDimension:") = CULong, CULong;
override externalInstanceMethod(#NSTextBlock, "setContentWidth:type:") = Void, Double, CULong;
override externalInstanceMethod(#NSTextBlock, "contentWidth") = Double;
override externalInstanceMethod(#NSTextBlock, "contentWidthValueType") = CULong;
override externalInstanceMethod(#NSTextBlock, "setWidth:type:forLayer:edge:") = Void, Double, CULong, CLong, CULong;
override externalInstanceMethod(#NSTextBlock, "setWidth:type:forLayer:") = Void, Double, CULong, CLong;
override externalInstanceMethod(#NSTextBlock, "widthForLayer:edge:") = Double, CLong, CULong;
override externalInstanceMethod(#NSTextBlock, "widthValueTypeForLayer:edge:") = CULong, CLong, CULong;
override externalInstanceMethod(#NSTextBlock, "setVerticalAlignment:") = Void, CULong;
override externalInstanceMethod(#NSTextBlock, "verticalAlignment") = CULong;
override externalInstanceMethod(#NSTextBlock, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextBlock, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSTextBlock, "setBorderColor:forEdge:") = Void, NSColor, CULong;
override externalInstanceMethod(#NSTextBlock, "setBorderColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextBlock, "borderColorForEdge:") = NSColor, CULong;
override externalInstanceMethod(#NSTextBlock, "rectForLayoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSPoint, NSRect, NSTextContainer, NSRange;
override externalInstanceMethod(#NSTextBlock, "boundsRectForContentRect:inRect:textContainer:characterRange:") = NSRect, NSRect, NSRect, NSTextContainer, NSRange;
override externalInstanceMethod(#NSTextBlock, "drawBackgroundWithFrame:inView:characterRange:layoutManager:") = Void, NSRect, NSView, NSRange, NSLayoutManager;

record NSTextContainer = externalClass(NSObject);
override externalInstanceMethod(#NSTextContainer, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTextContainer, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTextContainer, "initWithContainerSize:") = Id, NSSize;
override externalInstanceMethod(#NSTextContainer, "layoutManager") = NSLayoutManager;
override externalInstanceMethod(#NSTextContainer, "setLayoutManager:") = Void, NSLayoutManager;
override externalInstanceMethod(#NSTextContainer, "replaceLayoutManager:") = Void, NSLayoutManager;
override externalInstanceMethod(#NSTextContainer, "textView") = NSTextView;
override externalInstanceMethod(#NSTextContainer, "setTextView:") = Void, NSTextView;
override externalInstanceMethod(#NSTextContainer, "setWidthTracksTextView:") = Void, Bool;
override externalInstanceMethod(#NSTextContainer, "widthTracksTextView") = Bool;
override externalInstanceMethod(#NSTextContainer, "setHeightTracksTextView:") = Void, Bool;
override externalInstanceMethod(#NSTextContainer, "heightTracksTextView") = Bool;
override externalInstanceMethod(#NSTextContainer, "setContainerSize:") = Void, NSSize;
override externalInstanceMethod(#NSTextContainer, "containerSize") = NSSize;
override externalInstanceMethod(#NSTextContainer, "setLineFragmentPadding:") = Void, Double;
override externalInstanceMethod(#NSTextContainer, "lineFragmentPadding") = Double;
override externalInstanceMethod(#NSTextContainer, "lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:") = NSRect, NSRect, CULong, CULong, NSRectPointer;
override externalInstanceMethod(#NSTextContainer, "isSimpleRectangularTextContainer") = Bool;
override externalInstanceMethod(#NSTextContainer, "containsPoint:") = Bool, NSPoint;

record NSTextField = externalClass(NSControl);
override externalInstanceMethod(#NSTextField, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSTextField, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextField, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSTextField, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSTextField, "drawsBackground") = Bool;
override externalInstanceMethod(#NSTextField, "setTextColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextField, "textColor") = NSColor;
override externalInstanceMethod(#NSTextField, "isBordered") = Bool;
override externalInstanceMethod(#NSTextField, "setBordered:") = Void, Bool;
override externalInstanceMethod(#NSTextField, "isBezeled") = Bool;
override externalInstanceMethod(#NSTextField, "setBezeled:") = Void, Bool;
override externalInstanceMethod(#NSTextField, "isEditable") = Bool;
override externalInstanceMethod(#NSTextField, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSTextField, "isSelectable") = Bool;
override externalInstanceMethod(#NSTextField, "setSelectable:") = Void, Bool;
override externalInstanceMethod(#NSTextField, "selectText:") = Void, Id;
override externalInstanceMethod(#NSTextField, "delegate") = Id;
override externalInstanceMethod(#NSTextField, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSTextField, "textShouldBeginEditing:") = Bool, NSText;
override externalInstanceMethod(#NSTextField, "textShouldEndEditing:") = Bool, NSText;
override externalInstanceMethod(#NSTextField, "textDidBeginEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSTextField, "textDidEndEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSTextField, "textDidChange:") = Void, NSNotification;
override externalInstanceMethod(#NSTextField, "acceptsFirstResponder") = Bool;
override externalInstanceMethod(#NSTextField, "setBezelStyle:") = Void, CULong;
override externalInstanceMethod(#NSTextField, "bezelStyle") = CULong;
override externalInstanceMethod(#NSTextField, "setTitleWithMnemonic:") = Void, NSString;
override externalInstanceMethod(#NSTextField, "allowsEditingTextAttributes") = Bool;
override externalInstanceMethod(#NSTextField, "setAllowsEditingTextAttributes:") = Void, Bool;
override externalInstanceMethod(#NSTextField, "importsGraphics") = Bool;
override externalInstanceMethod(#NSTextField, "setImportsGraphics:") = Void, Bool;

record NSTextFieldCell = externalClass(NSActionCell);
override externalInstanceMethod(#NSTextFieldCell, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextFieldCell, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSTextFieldCell, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSTextFieldCell, "drawsBackground") = Bool;
override externalInstanceMethod(#NSTextFieldCell, "setTextColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextFieldCell, "textColor") = NSColor;
override externalInstanceMethod(#NSTextFieldCell, "setUpFieldEditorAttributes:") = NSText, NSText;
override externalInstanceMethod(#NSTextFieldCell, "setBezelStyle:") = Void, CULong;
override externalInstanceMethod(#NSTextFieldCell, "bezelStyle") = CULong;
override externalInstanceMethod(#NSTextFieldCell, "setPlaceholderString:") = Void, NSString;
override externalInstanceMethod(#NSTextFieldCell, "placeholderString") = NSString;
override externalInstanceMethod(#NSTextFieldCell, "setPlaceholderAttributedString:") = Void, NSAttributedString;
override externalInstanceMethod(#NSTextFieldCell, "placeholderAttributedString") = NSAttributedString;
override externalInstanceMethod(#NSTextFieldCell, "setWantsNotificationForMarkedText:") = Void, Bool;
override externalInstanceMethod(#NSTextFieldCell, "allowedInputSourceLocales") = NSArray;
override externalInstanceMethod(#NSTextFieldCell, "setAllowedInputSourceLocales:") = Void, NSArray;

record NSTextInputContext = externalClass(NSObject);
override externalClassMethod(#NSTextInputContext, "currentInputContext") = NSTextInputContext;
override externalInstanceMethod(#NSTextInputContext, "initWithClient:") = Id, Id;
override externalInstanceMethod(#NSTextInputContext, "activate") = Void;
override externalInstanceMethod(#NSTextInputContext, "deactivate") = Void;
override externalInstanceMethod(#NSTextInputContext, "handleEvent:") = Bool, NSEvent;
override externalInstanceMethod(#NSTextInputContext, "discardMarkedText") = Void;
override externalInstanceMethod(#NSTextInputContext, "invalidateCharacterCoordinates") = Void;
override externalClassMethod(#NSTextInputContext, "localizedNameForInputSource:") = NSString, NSString;
override externalInstanceMethod(#NSTextInputContext, "client") = Id;
override externalInstanceMethod(#NSTextInputContext, "acceptsGlyphInfo") = Bool;
override externalInstanceMethod(#NSTextInputContext, "setAcceptsGlyphInfo:") = Void, Bool;
override externalInstanceMethod(#NSTextInputContext, "allowedInputSourceLocales") = NSArray;
override externalInstanceMethod(#NSTextInputContext, "setAllowedInputSourceLocales:") = Void, NSArray;
override externalInstanceMethod(#NSTextInputContext, "keyboardInputSources") = NSArray;
override externalInstanceMethod(#NSTextInputContext, "selectedKeyboardInputSource") = NSString;
override externalInstanceMethod(#NSTextInputContext, "setSelectedKeyboardInputSource:") = Void, NSString;

record NSTextList = externalClass(NSObject);
override externalInstanceMethod(#NSTextList, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTextList, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTextList, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSTextList, "initWithMarkerFormat:options:") = Id, NSString, CULong;
override externalInstanceMethod(#NSTextList, "markerFormat") = NSString;
override externalInstanceMethod(#NSTextList, "listOptions") = CULong;
override externalInstanceMethod(#NSTextList, "markerForItemNumber:") = NSString, CLong;
override externalInstanceMethod(#NSTextList, "setStartingItemNumber:") = Void, CLong;
override externalInstanceMethod(#NSTextList, "startingItemNumber") = CLong;

record NSTextStorage = externalClass(NSMutableAttributedString);
override externalInstanceMethod(#NSTextStorage, "addLayoutManager:") = Void, NSLayoutManager;
override externalInstanceMethod(#NSTextStorage, "removeLayoutManager:") = Void, NSLayoutManager;
override externalInstanceMethod(#NSTextStorage, "layoutManagers") = NSArray;
override externalInstanceMethod(#NSTextStorage, "edited:range:changeInLength:") = Void, CULong, NSRange, CLong;
override externalInstanceMethod(#NSTextStorage, "processEditing") = Void;
override externalInstanceMethod(#NSTextStorage, "invalidateAttributesInRange:") = Void, NSRange;
override externalInstanceMethod(#NSTextStorage, "ensureAttributesAreFixedInRange:") = Void, NSRange;
override externalInstanceMethod(#NSTextStorage, "fixesAttributesLazily") = Bool;
override externalInstanceMethod(#NSTextStorage, "editedMask") = CULong;
override externalInstanceMethod(#NSTextStorage, "editedRange") = NSRange;
override externalInstanceMethod(#NSTextStorage, "changeInLength") = CLong;
override externalInstanceMethod(#NSTextStorage, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSTextStorage, "delegate") = Id;
override externalInstanceMethod(#NSTextStorage, "attributeRuns") = NSArray;
override externalInstanceMethod(#NSTextStorage, "setAttributeRuns:") = Void, NSArray;
override externalInstanceMethod(#NSTextStorage, "paragraphs") = NSArray;
override externalInstanceMethod(#NSTextStorage, "setParagraphs:") = Void, NSArray;
override externalInstanceMethod(#NSTextStorage, "words") = NSArray;
override externalInstanceMethod(#NSTextStorage, "setWords:") = Void, NSArray;
override externalInstanceMethod(#NSTextStorage, "characters") = NSArray;
override externalInstanceMethod(#NSTextStorage, "setCharacters:") = Void, NSArray;
override externalInstanceMethod(#NSTextStorage, "font") = NSFont;
override externalInstanceMethod(#NSTextStorage, "setFont:") = Void, NSFont;
override externalInstanceMethod(#NSTextStorage, "foregroundColor") = NSColor;
override externalInstanceMethod(#NSTextStorage, "setForegroundColor:") = Void, NSColor;

record NSTextTab = externalClass(NSObject);
override externalInstanceMethod(#NSTextTab, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSTextTab, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTextTab, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTextTab, "initWithTextAlignment:location:options:") = Id, CULong, Double, NSDictionary;
override externalInstanceMethod(#NSTextTab, "alignment") = CULong;
override externalInstanceMethod(#NSTextTab, "options") = NSDictionary;
override externalInstanceMethod(#NSTextTab, "initWithType:location:") = Id, CULong, Double;
override externalInstanceMethod(#NSTextTab, "location") = Double;
override externalInstanceMethod(#NSTextTab, "tabStopType") = CULong;

record NSTextTable = externalClass(NSTextBlock);
override externalInstanceMethod(#NSTextTable, "numberOfColumns") = CULong;
override externalInstanceMethod(#NSTextTable, "setNumberOfColumns:") = Void, CULong;
override externalInstanceMethod(#NSTextTable, "layoutAlgorithm") = CULong;
override externalInstanceMethod(#NSTextTable, "setLayoutAlgorithm:") = Void, CULong;
override externalInstanceMethod(#NSTextTable, "collapsesBorders") = Bool;
override externalInstanceMethod(#NSTextTable, "setCollapsesBorders:") = Void, Bool;
override externalInstanceMethod(#NSTextTable, "hidesEmptyCells") = Bool;
override externalInstanceMethod(#NSTextTable, "setHidesEmptyCells:") = Void, Bool;
override externalInstanceMethod(#NSTextTable, "rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSPoint, NSRect, NSTextContainer, NSRange;
override externalInstanceMethod(#NSTextTable, "boundsRectForBlock:contentRect:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSRect, NSRect, NSTextContainer, NSRange;
override externalInstanceMethod(#NSTextTable, "drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:") = Void, NSTextTableBlock, NSRect, NSView, NSRange, NSLayoutManager;

record NSTextTableBlock = externalClass(NSTextBlock);
override externalInstanceMethod(#NSTextTableBlock, "initWithTable:startingRow:rowSpan:startingColumn:columnSpan:") = Id, NSTextTable, CLong, CLong, CLong, CLong;
override externalInstanceMethod(#NSTextTableBlock, "table") = NSTextTable;
override externalInstanceMethod(#NSTextTableBlock, "startingRow") = CLong;
override externalInstanceMethod(#NSTextTableBlock, "rowSpan") = CLong;
override externalInstanceMethod(#NSTextTableBlock, "startingColumn") = CLong;
override externalInstanceMethod(#NSTextTableBlock, "columnSpan") = CLong;

record NSTextView = externalClass(NSText);
override externalInstanceMethod(#NSTextView, "insertText:") = Void, Id;
override externalInstanceMethod(#NSTextView, "doCommandBySelector:") = Void, SelectorHandle;
override externalInstanceMethod(#NSTextView, "setMarkedText:selectedRange:") = Void, Id, NSRange;
override externalInstanceMethod(#NSTextView, "unmarkText") = Void;
override externalInstanceMethod(#NSTextView, "hasMarkedText") = Bool;
override externalInstanceMethod(#NSTextView, "conversationIdentifier") = CLong;
override externalInstanceMethod(#NSTextView, "attributedSubstringFromRange:") = NSAttributedString, NSRange;
override externalInstanceMethod(#NSTextView, "markedRange") = NSRange;
override externalInstanceMethod(#NSTextView, "selectedRange") = NSRange;
override externalInstanceMethod(#NSTextView, "firstRectForCharacterRange:") = NSRect, NSRange;
override externalInstanceMethod(#NSTextView, "characterIndexForPoint:") = CULong, NSPoint;
override externalInstanceMethod(#NSTextView, "validAttributesForMarkedText") = NSArray;
override externalInstanceMethod(#NSTextView, "validateUserInterfaceItem:") = Bool, Id;
override externalInstanceMethod(#NSTextView, "insertText:replacementRange:") = Void, Id, NSRange;
override externalInstanceMethod(#NSTextView, "doCommandBySelector:") = Void, SelectorHandle;
override externalInstanceMethod(#NSTextView, "setMarkedText:selectedRange:replacementRange:") = Void, Id, NSRange, NSRange;
override externalInstanceMethod(#NSTextView, "unmarkText") = Void;
override externalInstanceMethod(#NSTextView, "selectedRange") = NSRange;
override externalInstanceMethod(#NSTextView, "markedRange") = NSRange;
override externalInstanceMethod(#NSTextView, "hasMarkedText") = Bool;
override externalInstanceMethod(#NSTextView, "attributedSubstringForProposedRange:actualRange:") = NSAttributedString, NSRange, NSRangePointer;
override externalInstanceMethod(#NSTextView, "validAttributesForMarkedText") = NSArray;
override externalInstanceMethod(#NSTextView, "firstRectForCharacterRange:actualRange:") = NSRect, NSRange, NSRangePointer;
override externalInstanceMethod(#NSTextView, "characterIndexForPoint:") = CULong, NSPoint;
override externalInstanceMethod(#NSTextView, "attributedString") = NSAttributedString;
override externalInstanceMethod(#NSTextView, "fractionOfDistanceThroughGlyphForPoint:") = Double, NSPoint;
override externalInstanceMethod(#NSTextView, "baselineDeltaForCharacterAtIndex:") = Double, CULong;
override externalInstanceMethod(#NSTextView, "windowLevel") = CLong;
override externalInstanceMethod(#NSTextView, "drawsVerticallyForCharacterAtIndex:") = Bool, CULong;
override externalInstanceMethod(#NSTextView, "initWithFrame:textContainer:") = Id, NSRect, NSTextContainer;
override externalInstanceMethod(#NSTextView, "initWithFrame:") = Id, NSRect;
override externalInstanceMethod(#NSTextView, "textContainer") = NSTextContainer;
override externalInstanceMethod(#NSTextView, "setTextContainer:") = Void, NSTextContainer;
override externalInstanceMethod(#NSTextView, "replaceTextContainer:") = Void, NSTextContainer;
override externalInstanceMethod(#NSTextView, "setTextContainerInset:") = Void, NSSize;
override externalInstanceMethod(#NSTextView, "textContainerInset") = NSSize;
override externalInstanceMethod(#NSTextView, "textContainerOrigin") = NSPoint;
override externalInstanceMethod(#NSTextView, "invalidateTextContainerOrigin") = Void;
override externalInstanceMethod(#NSTextView, "layoutManager") = NSLayoutManager;
override externalInstanceMethod(#NSTextView, "textStorage") = NSTextStorage;
override externalInstanceMethod(#NSTextView, "insertText:") = Void, Id;
override externalInstanceMethod(#NSTextView, "setConstrainedFrameSize:") = Void, NSSize;
override externalInstanceMethod(#NSTextView, "setAlignment:range:") = Void, CULong, NSRange;
override externalInstanceMethod(#NSTextView, "setBaseWritingDirection:range:") = Void, CLong, NSRange;
override externalInstanceMethod(#NSTextView, "turnOffKerning:") = Void, Id;
override externalInstanceMethod(#NSTextView, "tightenKerning:") = Void, Id;
override externalInstanceMethod(#NSTextView, "loosenKerning:") = Void, Id;
override externalInstanceMethod(#NSTextView, "useStandardKerning:") = Void, Id;
override externalInstanceMethod(#NSTextView, "turnOffLigatures:") = Void, Id;
override externalInstanceMethod(#NSTextView, "useStandardLigatures:") = Void, Id;
override externalInstanceMethod(#NSTextView, "useAllLigatures:") = Void, Id;
override externalInstanceMethod(#NSTextView, "raiseBaseline:") = Void, Id;
override externalInstanceMethod(#NSTextView, "lowerBaseline:") = Void, Id;
override externalInstanceMethod(#NSTextView, "toggleTraditionalCharacterShape:") = Void, Id;
override externalInstanceMethod(#NSTextView, "outline:") = Void, Id;
override externalInstanceMethod(#NSTextView, "performFindPanelAction:") = Void, Id;
override externalInstanceMethod(#NSTextView, "alignJustified:") = Void, Id;
override externalInstanceMethod(#NSTextView, "changeColor:") = Void, Id;
override externalInstanceMethod(#NSTextView, "changeAttributes:") = Void, Id;
override externalInstanceMethod(#NSTextView, "changeDocumentBackgroundColor:") = Void, Id;
override externalInstanceMethod(#NSTextView, "orderFrontSpacingPanel:") = Void, Id;
override externalInstanceMethod(#NSTextView, "orderFrontLinkPanel:") = Void, Id;
override externalInstanceMethod(#NSTextView, "orderFrontListPanel:") = Void, Id;
override externalInstanceMethod(#NSTextView, "orderFrontTablePanel:") = Void, Id;
override externalInstanceMethod(#NSTextView, "rulerView:didMoveMarker:") = Void, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSTextView, "rulerView:didRemoveMarker:") = Void, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSTextView, "rulerView:didAddMarker:") = Void, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSTextView, "rulerView:shouldMoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSTextView, "rulerView:shouldAddMarker:") = Bool, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSTextView, "rulerView:willMoveMarker:toLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override externalInstanceMethod(#NSTextView, "rulerView:shouldRemoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSTextView, "rulerView:willAddMarker:atLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override externalInstanceMethod(#NSTextView, "rulerView:handleMouseDown:") = Void, NSRulerView, NSEvent;
override externalInstanceMethod(#NSTextView, "setNeedsDisplayInRect:avoidAdditionalLayout:") = Void, NSRect, Bool;
override externalInstanceMethod(#NSTextView, "shouldDrawInsertionPoint") = Bool;
override externalInstanceMethod(#NSTextView, "drawInsertionPointInRect:color:turnedOn:") = Void, NSRect, NSColor, Bool;
override externalInstanceMethod(#NSTextView, "drawViewBackgroundInRect:") = Void, NSRect;
override externalInstanceMethod(#NSTextView, "updateRuler") = Void;
override externalInstanceMethod(#NSTextView, "updateFontPanel") = Void;
override externalInstanceMethod(#NSTextView, "updateDragTypeRegistration") = Void;
override externalInstanceMethod(#NSTextView, "selectionRangeForProposedRange:granularity:") = NSRange, NSRange, CULong;
override externalInstanceMethod(#NSTextView, "clickedOnLink:atIndex:") = Void, Id, CULong;
override externalInstanceMethod(#NSTextView, "startSpeaking:") = Void, Id;
override externalInstanceMethod(#NSTextView, "stopSpeaking:") = Void, Id;
override externalInstanceMethod(#NSTextView, "characterIndexForInsertionAtPoint:") = CULong, NSPoint;
override externalInstanceMethod(#NSTextView, "complete:") = Void, Id;
override externalInstanceMethod(#NSTextView, "rangeForUserCompletion") = NSRange;
override externalInstanceMethod(#NSTextView, "completionsForPartialWordRange:indexOfSelectedItem:") = NSArray, NSRange, Pointer[CLong];
override externalInstanceMethod(#NSTextView, "insertCompletion:forPartialWordRange:movement:isFinal:") = Void, NSString, NSRange, CLong, Bool;
override externalInstanceMethod(#NSTextView, "writablePasteboardTypes") = NSArray;
override externalInstanceMethod(#NSTextView, "writeSelectionToPasteboard:type:") = Bool, NSPasteboard, NSString;
override externalInstanceMethod(#NSTextView, "writeSelectionToPasteboard:types:") = Bool, NSPasteboard, NSArray;
override externalInstanceMethod(#NSTextView, "readablePasteboardTypes") = NSArray;
override externalInstanceMethod(#NSTextView, "preferredPasteboardTypeFromArray:restrictedToTypesFromArray:") = NSString, NSArray, NSArray;
override externalInstanceMethod(#NSTextView, "readSelectionFromPasteboard:type:") = Bool, NSPasteboard, NSString;
override externalInstanceMethod(#NSTextView, "readSelectionFromPasteboard:") = Bool, NSPasteboard;
override externalClassMethod(#NSTextView, "registerForServices") = Void;
override externalInstanceMethod(#NSTextView, "validRequestorForSendType:returnType:") = Id, NSString, NSString;
override externalInstanceMethod(#NSTextView, "pasteAsPlainText:") = Void, Id;
override externalInstanceMethod(#NSTextView, "pasteAsRichText:") = Void, Id;
override externalInstanceMethod(#NSTextView, "dragSelectionWithEvent:offset:slideBack:") = Bool, NSEvent, NSSize, Bool;
override externalInstanceMethod(#NSTextView, "dragImageForSelectionWithEvent:origin:") = NSImage, NSEvent, NSPointPointer;
override externalInstanceMethod(#NSTextView, "acceptableDragTypes") = NSArray;
override externalInstanceMethod(#NSTextView, "dragOperationForDraggingInfo:type:") = CULong, Id, NSString;
override externalInstanceMethod(#NSTextView, "cleanUpAfterDragOperation") = Void;
override externalInstanceMethod(#NSTextView, "selectedRanges") = NSArray;
override externalInstanceMethod(#NSTextView, "setSelectedRanges:affinity:stillSelecting:") = Void, NSArray, CULong, Bool;
override externalInstanceMethod(#NSTextView, "setSelectedRanges:") = Void, NSArray;
override externalInstanceMethod(#NSTextView, "setSelectedRange:affinity:stillSelecting:") = Void, NSRange, CULong, Bool;
override externalInstanceMethod(#NSTextView, "selectionAffinity") = CULong;
override externalInstanceMethod(#NSTextView, "selectionGranularity") = CULong;
override externalInstanceMethod(#NSTextView, "setSelectionGranularity:") = Void, CULong;
override externalInstanceMethod(#NSTextView, "setSelectedTextAttributes:") = Void, NSDictionary;
override externalInstanceMethod(#NSTextView, "selectedTextAttributes") = NSDictionary;
override externalInstanceMethod(#NSTextView, "setInsertionPointColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextView, "insertionPointColor") = NSColor;
override externalInstanceMethod(#NSTextView, "updateInsertionPointStateAndRestartTimer:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "setMarkedTextAttributes:") = Void, NSDictionary;
override externalInstanceMethod(#NSTextView, "markedTextAttributes") = NSDictionary;
override externalInstanceMethod(#NSTextView, "setLinkTextAttributes:") = Void, NSDictionary;
override externalInstanceMethod(#NSTextView, "linkTextAttributes") = NSDictionary;
override externalInstanceMethod(#NSTextView, "displaysLinkToolTips") = Bool;
override externalInstanceMethod(#NSTextView, "setDisplaysLinkToolTips:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "acceptsGlyphInfo") = Bool;
override externalInstanceMethod(#NSTextView, "setAcceptsGlyphInfo:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "setRulerVisible:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "usesRuler") = Bool;
override externalInstanceMethod(#NSTextView, "setUsesRuler:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "setContinuousSpellCheckingEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isContinuousSpellCheckingEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleContinuousSpellChecking:") = Void, Id;
override externalInstanceMethod(#NSTextView, "spellCheckerDocumentTag") = CLong;
override externalInstanceMethod(#NSTextView, "setGrammarCheckingEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isGrammarCheckingEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleGrammarChecking:") = Void, Id;
override externalInstanceMethod(#NSTextView, "setSpellingState:range:") = Void, CLong, NSRange;
override externalInstanceMethod(#NSTextView, "typingAttributes") = NSDictionary;
override externalInstanceMethod(#NSTextView, "setTypingAttributes:") = Void, NSDictionary;
override externalInstanceMethod(#NSTextView, "shouldChangeTextInRanges:replacementStrings:") = Bool, NSArray, NSArray;
override externalInstanceMethod(#NSTextView, "rangesForUserTextChange") = NSArray;
override externalInstanceMethod(#NSTextView, "rangesForUserCharacterAttributeChange") = NSArray;
override externalInstanceMethod(#NSTextView, "rangesForUserParagraphAttributeChange") = NSArray;
override externalInstanceMethod(#NSTextView, "shouldChangeTextInRange:replacementString:") = Bool, NSRange, NSString;
override externalInstanceMethod(#NSTextView, "didChangeText") = Void;
override externalInstanceMethod(#NSTextView, "rangeForUserTextChange") = NSRange;
override externalInstanceMethod(#NSTextView, "rangeForUserCharacterAttributeChange") = NSRange;
override externalInstanceMethod(#NSTextView, "rangeForUserParagraphAttributeChange") = NSRange;
override externalInstanceMethod(#NSTextView, "setUsesFindPanel:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "usesFindPanel") = Bool;
override externalInstanceMethod(#NSTextView, "setAllowsDocumentBackgroundColorChange:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "allowsDocumentBackgroundColorChange") = Bool;
override externalInstanceMethod(#NSTextView, "setDefaultParagraphStyle:") = Void, NSParagraphStyle;
override externalInstanceMethod(#NSTextView, "defaultParagraphStyle") = NSParagraphStyle;
override externalInstanceMethod(#NSTextView, "setAllowsUndo:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "allowsUndo") = Bool;
override externalInstanceMethod(#NSTextView, "breakUndoCoalescing") = Void;
override externalInstanceMethod(#NSTextView, "isCoalescingUndo") = Bool;
override externalInstanceMethod(#NSTextView, "allowsImageEditing") = Bool;
override externalInstanceMethod(#NSTextView, "setAllowsImageEditing:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "showFindIndicatorForRange:") = Void, NSRange;
override externalInstanceMethod(#NSTextView, "delegate") = Id;
override externalInstanceMethod(#NSTextView, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSTextView, "isEditable") = Bool;
override externalInstanceMethod(#NSTextView, "setEditable:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isSelectable") = Bool;
override externalInstanceMethod(#NSTextView, "setSelectable:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isRichText") = Bool;
override externalInstanceMethod(#NSTextView, "setRichText:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "importsGraphics") = Bool;
override externalInstanceMethod(#NSTextView, "setImportsGraphics:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "drawsBackground") = Bool;
override externalInstanceMethod(#NSTextView, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSTextView, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSTextView, "isFieldEditor") = Bool;
override externalInstanceMethod(#NSTextView, "setFieldEditor:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "usesFontPanel") = Bool;
override externalInstanceMethod(#NSTextView, "setUsesFontPanel:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isRulerVisible") = Bool;
override externalInstanceMethod(#NSTextView, "setSelectedRange:") = Void, NSRange;
override externalInstanceMethod(#NSTextView, "allowedInputSourceLocales") = NSArray;
override externalInstanceMethod(#NSTextView, "setAllowedInputSourceLocales:") = Void, NSArray;
override externalInstanceMethod(#NSTextView, "smartInsertDeleteEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "setSmartInsertDeleteEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "smartDeleteRangeForProposedRange:") = NSRange, NSRange;
override externalInstanceMethod(#NSTextView, "toggleSmartInsertDelete:") = Void, Id;
override externalInstanceMethod(#NSTextView, "smartInsertForString:replacingRange:beforeString:afterString:") = Void, NSString, NSRange, Pointer[NSString], Pointer[NSString];
override externalInstanceMethod(#NSTextView, "smartInsertBeforeStringForString:replacingRange:") = NSString, NSString, NSRange;
override externalInstanceMethod(#NSTextView, "smartInsertAfterStringForString:replacingRange:") = NSString, NSString, NSRange;
override externalInstanceMethod(#NSTextView, "setAutomaticQuoteSubstitutionEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isAutomaticQuoteSubstitutionEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleAutomaticQuoteSubstitution:") = Void, Id;
override externalInstanceMethod(#NSTextView, "setAutomaticLinkDetectionEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isAutomaticLinkDetectionEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleAutomaticLinkDetection:") = Void, Id;
override externalInstanceMethod(#NSTextView, "setAutomaticDataDetectionEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isAutomaticDataDetectionEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleAutomaticDataDetection:") = Void, Id;
override externalInstanceMethod(#NSTextView, "setAutomaticDashSubstitutionEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isAutomaticDashSubstitutionEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleAutomaticDashSubstitution:") = Void, Id;
override externalInstanceMethod(#NSTextView, "setAutomaticTextReplacementEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isAutomaticTextReplacementEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleAutomaticTextReplacement:") = Void, Id;
override externalInstanceMethod(#NSTextView, "setAutomaticSpellingCorrectionEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTextView, "isAutomaticSpellingCorrectionEnabled") = Bool;
override externalInstanceMethod(#NSTextView, "toggleAutomaticSpellingCorrection:") = Void, Id;
override externalInstanceMethod(#NSTextView, "enabledTextCheckingTypes") = UInt64;
override externalInstanceMethod(#NSTextView, "setEnabledTextCheckingTypes:") = Void, UInt64;
override externalInstanceMethod(#NSTextView, "checkTextInRange:types:options:") = Void, NSRange, UInt64, NSDictionary;
override externalInstanceMethod(#NSTextView, "handleTextCheckingResults:forRange:types:options:orthography:wordCount:") = Void, NSArray, NSRange, UInt64, NSDictionary, NSOrthography, CLong;
override externalInstanceMethod(#NSTextView, "orderFrontSubstitutionsPanel:") = Void, Id;
override externalInstanceMethod(#NSTextView, "checkTextInSelection:") = Void, Id;
override externalInstanceMethod(#NSTextView, "checkTextInDocument:") = Void, Id;
override externalInstanceMethod(#NSTextView, "toggleBaseWritingDirection:") = Void, Id;

record NSTokenField = externalClass(NSTextField);
override externalInstanceMethod(#NSTokenField, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSTokenField, "delegate") = Id;
override externalInstanceMethod(#NSTokenField, "setTokenStyle:") = Void, CULong;
override externalInstanceMethod(#NSTokenField, "tokenStyle") = CULong;
override externalInstanceMethod(#NSTokenField, "setCompletionDelay:") = Void, Double;
override externalInstanceMethod(#NSTokenField, "completionDelay") = Double;
override externalClassMethod(#NSTokenField, "defaultCompletionDelay") = Double;
override externalInstanceMethod(#NSTokenField, "setTokenizingCharacterSet:") = Void, NSCharacterSet;
override externalInstanceMethod(#NSTokenField, "tokenizingCharacterSet") = NSCharacterSet;
override externalClassMethod(#NSTokenField, "defaultTokenizingCharacterSet") = NSCharacterSet;

record NSTokenFieldCell = externalClass(NSTextFieldCell);
override externalInstanceMethod(#NSTokenFieldCell, "setTokenStyle:") = Void, CULong;
override externalInstanceMethod(#NSTokenFieldCell, "tokenStyle") = CULong;
override externalInstanceMethod(#NSTokenFieldCell, "setCompletionDelay:") = Void, Double;
override externalInstanceMethod(#NSTokenFieldCell, "completionDelay") = Double;
override externalClassMethod(#NSTokenFieldCell, "defaultCompletionDelay") = Double;
override externalInstanceMethod(#NSTokenFieldCell, "setTokenizingCharacterSet:") = Void, NSCharacterSet;
override externalInstanceMethod(#NSTokenFieldCell, "tokenizingCharacterSet") = NSCharacterSet;
override externalClassMethod(#NSTokenFieldCell, "defaultTokenizingCharacterSet") = NSCharacterSet;
override externalInstanceMethod(#NSTokenFieldCell, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSTokenFieldCell, "delegate") = Id;

record NSToolbar = externalClass(NSObject);
override externalInstanceMethod(#NSToolbar, "initWithIdentifier:") = Id, NSString;
override externalInstanceMethod(#NSToolbar, "insertItemWithItemIdentifier:atIndex:") = Void, NSString, CLong;
override externalInstanceMethod(#NSToolbar, "removeItemAtIndex:") = Void, CLong;
override externalInstanceMethod(#NSToolbar, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSToolbar, "delegate") = Id;
override externalInstanceMethod(#NSToolbar, "setVisible:") = Void, Bool;
override externalInstanceMethod(#NSToolbar, "isVisible") = Bool;
override externalInstanceMethod(#NSToolbar, "runCustomizationPalette:") = Void, Id;
override externalInstanceMethod(#NSToolbar, "customizationPaletteIsRunning") = Bool;
override externalInstanceMethod(#NSToolbar, "setDisplayMode:") = Void, CULong;
override externalInstanceMethod(#NSToolbar, "displayMode") = CULong;
override externalInstanceMethod(#NSToolbar, "setSelectedItemIdentifier:") = Void, NSString;
override externalInstanceMethod(#NSToolbar, "selectedItemIdentifier") = NSString;
override externalInstanceMethod(#NSToolbar, "setSizeMode:") = Void, CULong;
override externalInstanceMethod(#NSToolbar, "sizeMode") = CULong;
override externalInstanceMethod(#NSToolbar, "setShowsBaselineSeparator:") = Void, Bool;
override externalInstanceMethod(#NSToolbar, "showsBaselineSeparator") = Bool;
override externalInstanceMethod(#NSToolbar, "setAllowsUserCustomization:") = Void, Bool;
override externalInstanceMethod(#NSToolbar, "allowsUserCustomization") = Bool;
override externalInstanceMethod(#NSToolbar, "identifier") = NSString;
override externalInstanceMethod(#NSToolbar, "items") = NSArray;
override externalInstanceMethod(#NSToolbar, "visibleItems") = NSArray;
override externalInstanceMethod(#NSToolbar, "setAutosavesConfiguration:") = Void, Bool;
override externalInstanceMethod(#NSToolbar, "autosavesConfiguration") = Bool;
override externalInstanceMethod(#NSToolbar, "setConfigurationFromDictionary:") = Void, NSDictionary;
override externalInstanceMethod(#NSToolbar, "configurationDictionary") = NSDictionary;
override externalInstanceMethod(#NSToolbar, "validateVisibleItems") = Void;

record NSToolbarItem = externalClass(NSObject);
override externalInstanceMethod(#NSToolbarItem, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSToolbarItem, "action") = SelectorHandle;
override externalInstanceMethod(#NSToolbarItem, "tag") = CLong;
override externalInstanceMethod(#NSToolbarItem, "initWithItemIdentifier:") = Id, NSString;
override externalInstanceMethod(#NSToolbarItem, "itemIdentifier") = NSString;
override externalInstanceMethod(#NSToolbarItem, "toolbar") = NSToolbar;
override externalInstanceMethod(#NSToolbarItem, "setLabel:") = Void, NSString;
override externalInstanceMethod(#NSToolbarItem, "label") = NSString;
override externalInstanceMethod(#NSToolbarItem, "setPaletteLabel:") = Void, NSString;
override externalInstanceMethod(#NSToolbarItem, "paletteLabel") = NSString;
override externalInstanceMethod(#NSToolbarItem, "setToolTip:") = Void, NSString;
override externalInstanceMethod(#NSToolbarItem, "toolTip") = NSString;
override externalInstanceMethod(#NSToolbarItem, "setMenuFormRepresentation:") = Void, NSMenuItem;
override externalInstanceMethod(#NSToolbarItem, "menuFormRepresentation") = NSMenuItem;
override externalInstanceMethod(#NSToolbarItem, "setTag:") = Void, CLong;
override externalInstanceMethod(#NSToolbarItem, "tag") = CLong;
override externalInstanceMethod(#NSToolbarItem, "setTarget:") = Void, Id;
override externalInstanceMethod(#NSToolbarItem, "target") = Id;
override externalInstanceMethod(#NSToolbarItem, "setAction:") = Void, SelectorHandle;
override externalInstanceMethod(#NSToolbarItem, "action") = SelectorHandle;
override externalInstanceMethod(#NSToolbarItem, "setEnabled:") = Void, Bool;
override externalInstanceMethod(#NSToolbarItem, "isEnabled") = Bool;
override externalInstanceMethod(#NSToolbarItem, "setImage:") = Void, NSImage;
override externalInstanceMethod(#NSToolbarItem, "image") = NSImage;
override externalInstanceMethod(#NSToolbarItem, "setView:") = Void, NSView;
override externalInstanceMethod(#NSToolbarItem, "view") = NSView;
override externalInstanceMethod(#NSToolbarItem, "setMinSize:") = Void, NSSize;
override externalInstanceMethod(#NSToolbarItem, "minSize") = NSSize;
override externalInstanceMethod(#NSToolbarItem, "setMaxSize:") = Void, NSSize;
override externalInstanceMethod(#NSToolbarItem, "maxSize") = NSSize;
override externalInstanceMethod(#NSToolbarItem, "setVisibilityPriority:") = Void, CLong;
override externalInstanceMethod(#NSToolbarItem, "visibilityPriority") = CLong;
override externalInstanceMethod(#NSToolbarItem, "validate") = Void;
override externalInstanceMethod(#NSToolbarItem, "setAutovalidates:") = Void, Bool;
override externalInstanceMethod(#NSToolbarItem, "autovalidates") = Bool;
override externalInstanceMethod(#NSToolbarItem, "allowsDuplicatesInToolbar") = Bool;

record NSToolbarItemGroup = externalClass(NSToolbarItem);
override externalInstanceMethod(#NSToolbarItemGroup, "setSubitems:") = Void, NSArray;
override externalInstanceMethod(#NSToolbarItemGroup, "subitems") = NSArray;

record NSTouch = externalClass(NSObject);
override externalInstanceMethod(#NSTouch, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSTouch, "identity") = Id;
override externalInstanceMethod(#NSTouch, "phase") = CULong;
override externalInstanceMethod(#NSTouch, "normalizedPosition") = NSPoint;
override externalInstanceMethod(#NSTouch, "isResting") = Bool;
override externalInstanceMethod(#NSTouch, "device") = Id;
override externalInstanceMethod(#NSTouch, "deviceSize") = NSSize;

record NSTrackingArea = externalClass(NSObject);
override externalInstanceMethod(#NSTrackingArea, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#NSTrackingArea, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSTrackingArea, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSTrackingArea, "initWithRect:options:owner:userInfo:") = Id, NSRect, CULong, Id, NSDictionary;
override externalInstanceMethod(#NSTrackingArea, "rect") = NSRect;
override externalInstanceMethod(#NSTrackingArea, "options") = CULong;
override externalInstanceMethod(#NSTrackingArea, "owner") = Id;
override externalInstanceMethod(#NSTrackingArea, "userInfo") = NSDictionary;

record NSTreeController = externalClass(NSObjectController);
override externalInstanceMethod(#NSTreeController, "rearrangeObjects") = Void;
override externalInstanceMethod(#NSTreeController, "arrangedObjects") = Id;
override externalInstanceMethod(#NSTreeController, "setChildrenKeyPath:") = Void, NSString;
override externalInstanceMethod(#NSTreeController, "childrenKeyPath") = NSString;
override externalInstanceMethod(#NSTreeController, "setCountKeyPath:") = Void, NSString;
override externalInstanceMethod(#NSTreeController, "countKeyPath") = NSString;
override externalInstanceMethod(#NSTreeController, "setLeafKeyPath:") = Void, NSString;
override externalInstanceMethod(#NSTreeController, "leafKeyPath") = NSString;
override externalInstanceMethod(#NSTreeController, "setSortDescriptors:") = Void, NSArray;
override externalInstanceMethod(#NSTreeController, "sortDescriptors") = NSArray;
override externalInstanceMethod(#NSTreeController, "content") = Id;
override externalInstanceMethod(#NSTreeController, "setContent:") = Void, Id;
override externalInstanceMethod(#NSTreeController, "add:") = Void, Id;
override externalInstanceMethod(#NSTreeController, "remove:") = Void, Id;
override externalInstanceMethod(#NSTreeController, "addChild:") = Void, Id;
override externalInstanceMethod(#NSTreeController, "insert:") = Void, Id;
override externalInstanceMethod(#NSTreeController, "insertChild:") = Void, Id;
override externalInstanceMethod(#NSTreeController, "canInsert") = Bool;
override externalInstanceMethod(#NSTreeController, "canInsertChild") = Bool;
override externalInstanceMethod(#NSTreeController, "canAddChild") = Bool;
override externalInstanceMethod(#NSTreeController, "insertObject:atArrangedObjectIndexPath:") = Void, Id, NSIndexPath;
override externalInstanceMethod(#NSTreeController, "insertObjects:atArrangedObjectIndexPaths:") = Void, NSArray, NSArray;
override externalInstanceMethod(#NSTreeController, "removeObjectAtArrangedObjectIndexPath:") = Void, NSIndexPath;
override externalInstanceMethod(#NSTreeController, "removeObjectsAtArrangedObjectIndexPaths:") = Void, NSArray;
override externalInstanceMethod(#NSTreeController, "setAvoidsEmptySelection:") = Void, Bool;
override externalInstanceMethod(#NSTreeController, "avoidsEmptySelection") = Bool;
override externalInstanceMethod(#NSTreeController, "setPreservesSelection:") = Void, Bool;
override externalInstanceMethod(#NSTreeController, "preservesSelection") = Bool;
override externalInstanceMethod(#NSTreeController, "setSelectsInsertedObjects:") = Void, Bool;
override externalInstanceMethod(#NSTreeController, "selectsInsertedObjects") = Bool;
override externalInstanceMethod(#NSTreeController, "setAlwaysUsesMultipleValuesMarker:") = Void, Bool;
override externalInstanceMethod(#NSTreeController, "alwaysUsesMultipleValuesMarker") = Bool;
override externalInstanceMethod(#NSTreeController, "selectedObjects") = NSArray;
override externalInstanceMethod(#NSTreeController, "setSelectionIndexPaths:") = Bool, NSArray;
override externalInstanceMethod(#NSTreeController, "selectionIndexPaths") = NSArray;
override externalInstanceMethod(#NSTreeController, "setSelectionIndexPath:") = Bool, NSIndexPath;
override externalInstanceMethod(#NSTreeController, "selectionIndexPath") = NSIndexPath;
override externalInstanceMethod(#NSTreeController, "addSelectionIndexPaths:") = Bool, NSArray;
override externalInstanceMethod(#NSTreeController, "removeSelectionIndexPaths:") = Bool, NSArray;
override externalInstanceMethod(#NSTreeController, "selectedNodes") = NSArray;
override externalInstanceMethod(#NSTreeController, "moveNode:toIndexPath:") = Void, NSTreeNode, NSIndexPath;
override externalInstanceMethod(#NSTreeController, "moveNodes:toIndexPath:") = Void, NSArray, NSIndexPath;
override externalInstanceMethod(#NSTreeController, "childrenKeyPathForNode:") = NSString, NSTreeNode;
override externalInstanceMethod(#NSTreeController, "countKeyPathForNode:") = NSString, NSTreeNode;
override externalInstanceMethod(#NSTreeController, "leafKeyPathForNode:") = NSString, NSTreeNode;

record NSTreeNode = externalClass(NSObject);
override externalClassMethod(#NSTreeNode, "treeNodeWithRepresentedObject:") = Id, Id;
override externalInstanceMethod(#NSTreeNode, "initWithRepresentedObject:") = Id, Id;
override externalInstanceMethod(#NSTreeNode, "representedObject") = Id;
override externalInstanceMethod(#NSTreeNode, "indexPath") = NSIndexPath;
override externalInstanceMethod(#NSTreeNode, "isLeaf") = Bool;
override externalInstanceMethod(#NSTreeNode, "childNodes") = NSArray;
override externalInstanceMethod(#NSTreeNode, "mutableChildNodes") = NSMutableArray;
override externalInstanceMethod(#NSTreeNode, "descendantNodeAtIndexPath:") = NSTreeNode, NSIndexPath;
override externalInstanceMethod(#NSTreeNode, "parentNode") = NSTreeNode;
override externalInstanceMethod(#NSTreeNode, "sortWithSortDescriptors:recursively:") = Void, NSArray, Bool;

record NSTypesetter = externalClass(NSObject);
override externalInstanceMethod(#NSTypesetter, "usesFontLeading") = Bool;
override externalInstanceMethod(#NSTypesetter, "setUsesFontLeading:") = Void, Bool;
override externalInstanceMethod(#NSTypesetter, "typesetterBehavior") = CLong;
override externalInstanceMethod(#NSTypesetter, "setTypesetterBehavior:") = Void, CLong;
override externalInstanceMethod(#NSTypesetter, "hyphenationFactor") = Float;
override externalInstanceMethod(#NSTypesetter, "setHyphenationFactor:") = Void, Float;
override externalInstanceMethod(#NSTypesetter, "lineFragmentPadding") = Double;
override externalInstanceMethod(#NSTypesetter, "setLineFragmentPadding:") = Void, Double;
override externalInstanceMethod(#NSTypesetter, "substituteFontForFont:") = NSFont, NSFont;
override externalInstanceMethod(#NSTypesetter, "textTabForGlyphLocation:writingDirection:maxLocation:") = NSTextTab, Double, CLong, Double;
override externalInstanceMethod(#NSTypesetter, "bidiProcessingEnabled") = Bool;
override externalInstanceMethod(#NSTypesetter, "setBidiProcessingEnabled:") = Void, Bool;
override externalInstanceMethod(#NSTypesetter, "setAttributedString:") = Void, NSAttributedString;
override externalInstanceMethod(#NSTypesetter, "attributedString") = NSAttributedString;
override externalInstanceMethod(#NSTypesetter, "setParagraphGlyphRange:separatorGlyphRange:") = Void, NSRange, NSRange;
override externalInstanceMethod(#NSTypesetter, "paragraphGlyphRange") = NSRange;
override externalInstanceMethod(#NSTypesetter, "paragraphSeparatorGlyphRange") = NSRange;
override externalInstanceMethod(#NSTypesetter, "paragraphCharacterRange") = NSRange;
override externalInstanceMethod(#NSTypesetter, "paragraphSeparatorCharacterRange") = NSRange;
override externalInstanceMethod(#NSTypesetter, "layoutParagraphAtPoint:") = CULong, NSPointPointer;
override externalInstanceMethod(#NSTypesetter, "beginParagraph") = Void;
override externalInstanceMethod(#NSTypesetter, "endParagraph") = Void;
override externalInstanceMethod(#NSTypesetter, "beginLineWithGlyphAtIndex:") = Void, CULong;
override externalInstanceMethod(#NSTypesetter, "endLineWithGlyphRange:") = Void, NSRange;
override externalInstanceMethod(#NSTypesetter, "lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override externalInstanceMethod(#NSTypesetter, "paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override externalInstanceMethod(#NSTypesetter, "paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override externalInstanceMethod(#NSTypesetter, "getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:") = Void, NSRectPointer, NSRectPointer, NSRange, NSPoint;
override externalInstanceMethod(#NSTypesetter, "attributesForExtraLineFragment") = NSDictionary;
override externalInstanceMethod(#NSTypesetter, "actionForControlCharacterAtIndex:") = CULong, CULong;
override externalInstanceMethod(#NSTypesetter, "layoutManager") = NSLayoutManager;
override externalInstanceMethod(#NSTypesetter, "textContainers") = NSArray;
override externalInstanceMethod(#NSTypesetter, "currentTextContainer") = NSTextContainer;
override externalInstanceMethod(#NSTypesetter, "currentParagraphStyle") = NSParagraphStyle;
override externalInstanceMethod(#NSTypesetter, "setHardInvalidation:forGlyphRange:") = Void, Bool, NSRange;
override externalInstanceMethod(#NSTypesetter, "layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:") = Void, NSLayoutManager, CULong, CULong, Pointer[CULong];
override externalInstanceMethod(#NSTypesetter, "layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:") = NSRange, NSRange, NSLayoutManager, CULong;
override externalClassMethod(#NSTypesetter, "printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:") = NSSize, NSLayoutManager, NSRange, Pointer[CUChar], CULong;
override externalInstanceMethod(#NSTypesetter, "baselineOffsetInLayoutManager:glyphIndex:") = Double, NSLayoutManager, CULong;
override externalClassMethod(#NSTypesetter, "sharedSystemTypesetter") = Id;
override externalClassMethod(#NSTypesetter, "sharedSystemTypesetterForBehavior:") = Id, CLong;
override externalClassMethod(#NSTypesetter, "defaultTypesetterBehavior") = CLong;
override externalInstanceMethod(#NSTypesetter, "willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRectPointer, NSRange, NSRectPointer, Pointer[Double];
override externalInstanceMethod(#NSTypesetter, "shouldBreakLineByWordBeforeCharacterAtIndex:") = Bool, CULong;
override externalInstanceMethod(#NSTypesetter, "shouldBreakLineByHyphenatingBeforeCharacterAtIndex:") = Bool, CULong;
override externalInstanceMethod(#NSTypesetter, "hyphenationFactorForGlyphAtIndex:") = Float, CULong;
override externalInstanceMethod(#NSTypesetter, "hyphenCharacterForGlyphAtIndex:") = UInt, CULong;
override externalInstanceMethod(#NSTypesetter, "boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, CULong, NSTextContainer, NSRect, NSPoint, CULong;
override externalInstanceMethod(#NSTypesetter, "characterRangeForGlyphRange:actualGlyphRange:") = NSRange, NSRange, NSRangePointer;
override externalInstanceMethod(#NSTypesetter, "glyphRangeForCharacterRange:actualCharacterRange:") = NSRange, NSRange, NSRangePointer;
override externalInstanceMethod(#NSTypesetter, "getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool], Pointer[CUChar];
override externalInstanceMethod(#NSTypesetter, "getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:") = Void, NSRectPointer, NSRectPointer, NSRectPointer, CULong, NSRect, Double, Double, Double;
override externalInstanceMethod(#NSTypesetter, "setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRect, NSRange, NSRect, Double;
override externalInstanceMethod(#NSTypesetter, "substituteGlyphsInRange:withGlyphs:") = Void, NSRange, Pointer[UInt];
override externalInstanceMethod(#NSTypesetter, "insertGlyph:atGlyphIndex:characterIndex:") = Void, UInt, CULong, CULong;
override externalInstanceMethod(#NSTypesetter, "deleteGlyphsInRange:") = Void, NSRange;
override externalInstanceMethod(#NSTypesetter, "setNotShownAttribute:forGlyphRange:") = Void, Bool, NSRange;
override externalInstanceMethod(#NSTypesetter, "setDrawsOutsideLineFragment:forGlyphRange:") = Void, Bool, NSRange;
override externalInstanceMethod(#NSTypesetter, "setLocation:withAdvancements:forStartOfGlyphRange:") = Void, NSPoint, Pointer[Double], NSRange;
override externalInstanceMethod(#NSTypesetter, "setAttachmentSize:forGlyphRange:") = Void, NSSize, NSRange;
override externalInstanceMethod(#NSTypesetter, "setBidiLevels:forGlyphRange:") = Void, Pointer[CUChar], NSRange;

override externalClassMethod(#NSURL, "URLFromPasteboard:") = NSURL, NSPasteboard;
override externalInstanceMethod(#NSURL, "writeToPasteboard:") = Void, NSPasteboard;

record NSUserDefaultsController = externalClass(NSController);
override externalClassMethod(#NSUserDefaultsController, "sharedUserDefaultsController") = Id;
override externalInstanceMethod(#NSUserDefaultsController, "initWithDefaults:initialValues:") = Id, NSUserDefaults, NSDictionary;
override externalInstanceMethod(#NSUserDefaultsController, "defaults") = NSUserDefaults;
override externalInstanceMethod(#NSUserDefaultsController, "setInitialValues:") = Void, NSDictionary;
override externalInstanceMethod(#NSUserDefaultsController, "initialValues") = NSDictionary;
override externalInstanceMethod(#NSUserDefaultsController, "setAppliesImmediately:") = Void, Bool;
override externalInstanceMethod(#NSUserDefaultsController, "appliesImmediately") = Bool;
override externalInstanceMethod(#NSUserDefaultsController, "hasUnappliedChanges") = Bool;
override externalInstanceMethod(#NSUserDefaultsController, "values") = Id;
override externalInstanceMethod(#NSUserDefaultsController, "revert:") = Void, Id;
override externalInstanceMethod(#NSUserDefaultsController, "save:") = Void, Id;
override externalInstanceMethod(#NSUserDefaultsController, "revertToInitialValues:") = Void, Id;

record NSView = externalClass(NSResponder);
override externalInstanceMethod(#NSView, "animator") = Id;
override externalInstanceMethod(#NSView, "animations") = NSDictionary;
override externalInstanceMethod(#NSView, "setAnimations:") = Void, NSDictionary;
override externalInstanceMethod(#NSView, "animationForKey:") = Id, NSString;
override externalClassMethod(#NSView, "defaultAnimationForKey:") = Id, NSString;
override externalInstanceMethod(#NSView, "initWithFrame:") = Id, NSRect;
override externalInstanceMethod(#NSView, "window") = NSWindow;
override externalInstanceMethod(#NSView, "superview") = NSView;
override externalInstanceMethod(#NSView, "subviews") = NSArray;
override externalInstanceMethod(#NSView, "isDescendantOf:") = Bool, NSView;
override externalInstanceMethod(#NSView, "ancestorSharedWithView:") = NSView, NSView;
override externalInstanceMethod(#NSView, "opaqueAncestor") = NSView;
override externalInstanceMethod(#NSView, "setHidden:") = Void, Bool;
override externalInstanceMethod(#NSView, "isHidden") = Bool;
override externalInstanceMethod(#NSView, "isHiddenOrHasHiddenAncestor") = Bool;
override externalInstanceMethod(#NSView, "getRectsBeingDrawn:count:") = Void, Pointer[Pointer[NSRect]], Pointer[CLong];
override externalInstanceMethod(#NSView, "needsToDrawRect:") = Bool, NSRect;
override externalInstanceMethod(#NSView, "wantsDefaultClipping") = Bool;
override externalInstanceMethod(#NSView, "viewDidHide") = Void;
override externalInstanceMethod(#NSView, "viewDidUnhide") = Void;
override externalInstanceMethod(#NSView, "setSubviews:") = Void, NSArray;
override externalInstanceMethod(#NSView, "addSubview:") = Void, NSView;
override externalInstanceMethod(#NSView, "addSubview:positioned:relativeTo:") = Void, NSView, CLong, NSView;
override externalInstanceMethod(#NSView, "sortSubviewsUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override externalInstanceMethod(#NSView, "viewWillMoveToWindow:") = Void, NSWindow;
override externalInstanceMethod(#NSView, "viewDidMoveToWindow") = Void;
override externalInstanceMethod(#NSView, "viewWillMoveToSuperview:") = Void, NSView;
override externalInstanceMethod(#NSView, "viewDidMoveToSuperview") = Void;
override externalInstanceMethod(#NSView, "didAddSubview:") = Void, NSView;
override externalInstanceMethod(#NSView, "willRemoveSubview:") = Void, NSView;
override externalInstanceMethod(#NSView, "removeFromSuperview") = Void;
override externalInstanceMethod(#NSView, "replaceSubview:with:") = Void, NSView, NSView;
override externalInstanceMethod(#NSView, "removeFromSuperviewWithoutNeedingDisplay") = Void;
override externalInstanceMethod(#NSView, "setPostsFrameChangedNotifications:") = Void, Bool;
override externalInstanceMethod(#NSView, "postsFrameChangedNotifications") = Bool;
override externalInstanceMethod(#NSView, "resizeSubviewsWithOldSize:") = Void, NSSize;
override externalInstanceMethod(#NSView, "resizeWithOldSuperviewSize:") = Void, NSSize;
override externalInstanceMethod(#NSView, "setAutoresizesSubviews:") = Void, Bool;
override externalInstanceMethod(#NSView, "autoresizesSubviews") = Bool;
override externalInstanceMethod(#NSView, "setAutoresizingMask:") = Void, CULong;
override externalInstanceMethod(#NSView, "autoresizingMask") = CULong;
override externalInstanceMethod(#NSView, "setFrameOrigin:") = Void, NSPoint;
override externalInstanceMethod(#NSView, "setFrameSize:") = Void, NSSize;
override externalInstanceMethod(#NSView, "setFrame:") = Void, NSRect;
override externalInstanceMethod(#NSView, "frame") = NSRect;
override externalInstanceMethod(#NSView, "setFrameRotation:") = Void, Double;
override externalInstanceMethod(#NSView, "frameRotation") = Double;
override externalInstanceMethod(#NSView, "setFrameCenterRotation:") = Void, Double;
override externalInstanceMethod(#NSView, "frameCenterRotation") = Double;
override externalInstanceMethod(#NSView, "setBoundsOrigin:") = Void, NSPoint;
override externalInstanceMethod(#NSView, "setBoundsSize:") = Void, NSSize;
override externalInstanceMethod(#NSView, "setBoundsRotation:") = Void, Double;
override externalInstanceMethod(#NSView, "boundsRotation") = Double;
override externalInstanceMethod(#NSView, "translateOriginToPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSView, "scaleUnitSquareToSize:") = Void, NSSize;
override externalInstanceMethod(#NSView, "rotateByAngle:") = Void, Double;
override externalInstanceMethod(#NSView, "setBounds:") = Void, NSRect;
override externalInstanceMethod(#NSView, "bounds") = NSRect;
override externalInstanceMethod(#NSView, "isFlipped") = Bool;
override externalInstanceMethod(#NSView, "isRotatedFromBase") = Bool;
override externalInstanceMethod(#NSView, "isRotatedOrScaledFromBase") = Bool;
override externalInstanceMethod(#NSView, "isOpaque") = Bool;
override externalInstanceMethod(#NSView, "convertPoint:fromView:") = NSPoint, NSPoint, NSView;
override externalInstanceMethod(#NSView, "convertPoint:toView:") = NSPoint, NSPoint, NSView;
override externalInstanceMethod(#NSView, "convertSize:fromView:") = NSSize, NSSize, NSView;
override externalInstanceMethod(#NSView, "convertSize:toView:") = NSSize, NSSize, NSView;
override externalInstanceMethod(#NSView, "convertRect:fromView:") = NSRect, NSRect, NSView;
override externalInstanceMethod(#NSView, "convertRect:toView:") = NSRect, NSRect, NSView;
override externalInstanceMethod(#NSView, "centerScanRect:") = NSRect, NSRect;
override externalInstanceMethod(#NSView, "convertPointToBase:") = NSPoint, NSPoint;
override externalInstanceMethod(#NSView, "convertPointFromBase:") = NSPoint, NSPoint;
override externalInstanceMethod(#NSView, "convertSizeToBase:") = NSSize, NSSize;
override externalInstanceMethod(#NSView, "convertSizeFromBase:") = NSSize, NSSize;
override externalInstanceMethod(#NSView, "convertRectToBase:") = NSRect, NSRect;
override externalInstanceMethod(#NSView, "convertRectFromBase:") = NSRect, NSRect;
override externalInstanceMethod(#NSView, "canDrawConcurrently") = Bool;
override externalInstanceMethod(#NSView, "setCanDrawConcurrently:") = Void, Bool;
override externalInstanceMethod(#NSView, "canDraw") = Bool;
override externalInstanceMethod(#NSView, "setNeedsDisplay:") = Void, Bool;
override externalInstanceMethod(#NSView, "setNeedsDisplayInRect:") = Void, NSRect;
override externalInstanceMethod(#NSView, "needsDisplay") = Bool;
override externalInstanceMethod(#NSView, "lockFocus") = Void;
override externalInstanceMethod(#NSView, "unlockFocus") = Void;
override externalInstanceMethod(#NSView, "lockFocusIfCanDraw") = Bool;
override externalInstanceMethod(#NSView, "lockFocusIfCanDrawInContext:") = Bool, NSGraphicsContext;
override externalClassMethod(#NSView, "focusView") = NSView;
override externalInstanceMethod(#NSView, "visibleRect") = NSRect;
override externalInstanceMethod(#NSView, "display") = Void;
override externalInstanceMethod(#NSView, "displayIfNeeded") = Void;
override externalInstanceMethod(#NSView, "displayIfNeededIgnoringOpacity") = Void;
override externalInstanceMethod(#NSView, "displayRect:") = Void, NSRect;
override externalInstanceMethod(#NSView, "displayIfNeededInRect:") = Void, NSRect;
override externalInstanceMethod(#NSView, "displayRectIgnoringOpacity:") = Void, NSRect;
override externalInstanceMethod(#NSView, "displayIfNeededInRectIgnoringOpacity:") = Void, NSRect;
override externalInstanceMethod(#NSView, "drawRect:") = Void, NSRect;
override externalInstanceMethod(#NSView, "displayRectIgnoringOpacity:inContext:") = Void, NSRect, NSGraphicsContext;
override externalInstanceMethod(#NSView, "bitmapImageRepForCachingDisplayInRect:") = NSBitmapImageRep, NSRect;
override externalInstanceMethod(#NSView, "cacheDisplayInRect:toBitmapImageRep:") = Void, NSRect, NSBitmapImageRep;
override externalInstanceMethod(#NSView, "viewWillDraw") = Void;
override externalInstanceMethod(#NSView, "gState") = CLong;
override externalInstanceMethod(#NSView, "allocateGState") = Void;
override externalInstanceMethod(#NSView, "releaseGState") = Void;
override externalInstanceMethod(#NSView, "setUpGState") = Void;
override externalInstanceMethod(#NSView, "renewGState") = Void;
override externalInstanceMethod(#NSView, "scrollPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSView, "scrollRectToVisible:") = Bool, NSRect;
override externalInstanceMethod(#NSView, "autoscroll:") = Bool, NSEvent;
override externalInstanceMethod(#NSView, "adjustScroll:") = NSRect, NSRect;
override externalInstanceMethod(#NSView, "scrollRect:by:") = Void, NSRect, NSSize;
override externalInstanceMethod(#NSView, "translateRectsNeedingDisplayInRect:by:") = Void, NSRect, NSSize;
override externalInstanceMethod(#NSView, "hitTest:") = NSView, NSPoint;
override externalInstanceMethod(#NSView, "mouse:inRect:") = Bool, NSPoint, NSRect;
override externalInstanceMethod(#NSView, "viewWithTag:") = Id, CLong;
override externalInstanceMethod(#NSView, "tag") = CLong;
override externalInstanceMethod(#NSView, "performKeyEquivalent:") = Bool, NSEvent;
override externalInstanceMethod(#NSView, "acceptsFirstMouse:") = Bool, NSEvent;
override externalInstanceMethod(#NSView, "shouldDelayWindowOrderingForEvent:") = Bool, NSEvent;
override externalInstanceMethod(#NSView, "needsPanelToBecomeKey") = Bool;
override externalInstanceMethod(#NSView, "mouseDownCanMoveWindow") = Bool;
override externalInstanceMethod(#NSView, "setAcceptsTouchEvents:") = Void, Bool;
override externalInstanceMethod(#NSView, "acceptsTouchEvents") = Bool;
override externalInstanceMethod(#NSView, "setWantsRestingTouches:") = Void, Bool;
override externalInstanceMethod(#NSView, "wantsRestingTouches") = Bool;
override externalInstanceMethod(#NSView, "addCursorRect:cursor:") = Void, NSRect, NSCursor;
override externalInstanceMethod(#NSView, "removeCursorRect:cursor:") = Void, NSRect, NSCursor;
override externalInstanceMethod(#NSView, "discardCursorRects") = Void;
override externalInstanceMethod(#NSView, "resetCursorRects") = Void;
override externalInstanceMethod(#NSView, "addTrackingRect:owner:userData:assumeInside:") = CLong, NSRect, Id, RawPointer, Bool;
override externalInstanceMethod(#NSView, "removeTrackingRect:") = Void, CLong;
override externalInstanceMethod(#NSView, "makeBackingLayer") = CALayer;
override externalInstanceMethod(#NSView, "layerContentsRedrawPolicy") = CLong;
override externalInstanceMethod(#NSView, "setLayerContentsRedrawPolicy:") = Void, CLong;
override externalInstanceMethod(#NSView, "layerContentsPlacement") = CLong;
override externalInstanceMethod(#NSView, "setLayerContentsPlacement:") = Void, CLong;
override externalInstanceMethod(#NSView, "setWantsLayer:") = Void, Bool;
override externalInstanceMethod(#NSView, "wantsLayer") = Bool;
override externalInstanceMethod(#NSView, "setLayer:") = Void, CALayer;
override externalInstanceMethod(#NSView, "layer") = CALayer;
override externalInstanceMethod(#NSView, "setAlphaValue:") = Void, Double;
override externalInstanceMethod(#NSView, "alphaValue") = Double;
override externalInstanceMethod(#NSView, "setBackgroundFilters:") = Void, NSArray;
override externalInstanceMethod(#NSView, "backgroundFilters") = NSArray;
override externalInstanceMethod(#NSView, "setCompositingFilter:") = Void, CIFilter;
override externalInstanceMethod(#NSView, "compositingFilter") = CIFilter;
override externalInstanceMethod(#NSView, "setContentFilters:") = Void, NSArray;
override externalInstanceMethod(#NSView, "contentFilters") = NSArray;
override externalInstanceMethod(#NSView, "setShadow:") = Void, NSShadow;
override externalInstanceMethod(#NSView, "shadow") = NSShadow;
override externalInstanceMethod(#NSView, "addTrackingArea:") = Void, NSTrackingArea;
override externalInstanceMethod(#NSView, "removeTrackingArea:") = Void, NSTrackingArea;
override externalInstanceMethod(#NSView, "trackingAreas") = NSArray;
override externalInstanceMethod(#NSView, "updateTrackingAreas") = Void;
override externalInstanceMethod(#NSView, "shouldDrawColor") = Bool;
override externalInstanceMethod(#NSView, "setPostsBoundsChangedNotifications:") = Void, Bool;
override externalInstanceMethod(#NSView, "postsBoundsChangedNotifications") = Bool;
override externalInstanceMethod(#NSView, "enclosingScrollView") = NSScrollView;
override externalInstanceMethod(#NSView, "menuForEvent:") = NSMenu, NSEvent;
override externalClassMethod(#NSView, "defaultMenu") = NSMenu;
override externalInstanceMethod(#NSView, "setToolTip:") = Void, NSString;
override externalInstanceMethod(#NSView, "toolTip") = NSString;
override externalInstanceMethod(#NSView, "addToolTipRect:owner:userData:") = CLong, NSRect, Id, RawPointer;
override externalInstanceMethod(#NSView, "removeToolTip:") = Void, CLong;
override externalInstanceMethod(#NSView, "removeAllToolTips") = Void;
override externalInstanceMethod(#NSView, "viewWillStartLiveResize") = Void;
override externalInstanceMethod(#NSView, "viewDidEndLiveResize") = Void;
override externalInstanceMethod(#NSView, "inLiveResize") = Bool;
override externalInstanceMethod(#NSView, "preservesContentDuringLiveResize") = Bool;
override externalInstanceMethod(#NSView, "rectPreservedDuringLiveResize") = NSRect;
override externalInstanceMethod(#NSView, "getRectsExposedDuringLiveResize:count:") = Void, Pointer[NSRect], Pointer[CLong];
override externalInstanceMethod(#NSView, "inputContext") = NSTextInputContext;
override externalInstanceMethod(#NSView, "performMnemonic:") = Bool, NSString;
override externalInstanceMethod(#NSView, "setNextKeyView:") = Void, NSView;
override externalInstanceMethod(#NSView, "nextKeyView") = NSView;
override externalInstanceMethod(#NSView, "previousKeyView") = NSView;
override externalInstanceMethod(#NSView, "nextValidKeyView") = NSView;
override externalInstanceMethod(#NSView, "previousValidKeyView") = NSView;
override externalInstanceMethod(#NSView, "canBecomeKeyView") = Bool;
override externalInstanceMethod(#NSView, "setKeyboardFocusRingNeedsDisplayInRect:") = Void, NSRect;
override externalInstanceMethod(#NSView, "setFocusRingType:") = Void, CULong;
override externalInstanceMethod(#NSView, "focusRingType") = CULong;
override externalClassMethod(#NSView, "defaultFocusRingType") = CULong;
override externalInstanceMethod(#NSView, "writeEPSInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
override externalInstanceMethod(#NSView, "dataWithEPSInsideRect:") = NSData, NSRect;
override externalInstanceMethod(#NSView, "writePDFInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
override externalInstanceMethod(#NSView, "dataWithPDFInsideRect:") = NSData, NSRect;
override externalInstanceMethod(#NSView, "print:") = Void, Id;
override externalInstanceMethod(#NSView, "knowsPageRange:") = Bool, NSRangePointer;
override externalInstanceMethod(#NSView, "heightAdjustLimit") = Double;
override externalInstanceMethod(#NSView, "widthAdjustLimit") = Double;
override externalInstanceMethod(#NSView, "adjustPageWidthNew:left:right:limit:") = Void, Pointer[Double], Double, Double, Double;
override externalInstanceMethod(#NSView, "adjustPageHeightNew:top:bottom:limit:") = Void, Pointer[Double], Double, Double, Double;
override externalInstanceMethod(#NSView, "rectForPage:") = NSRect, CLong;
override externalInstanceMethod(#NSView, "locationOfPrintRect:") = NSPoint, NSRect;
override externalInstanceMethod(#NSView, "drawPageBorderWithSize:") = Void, NSSize;
override externalInstanceMethod(#NSView, "pageHeader") = NSAttributedString;
override externalInstanceMethod(#NSView, "pageFooter") = NSAttributedString;
override externalInstanceMethod(#NSView, "drawSheetBorderWithSize:") = Void, NSSize;
override externalInstanceMethod(#NSView, "printJobTitle") = NSString;
override externalInstanceMethod(#NSView, "beginDocument") = Void;
override externalInstanceMethod(#NSView, "endDocument") = Void;
override externalInstanceMethod(#NSView, "beginPageInRect:atPlacement:") = Void, NSRect, NSPoint;
override externalInstanceMethod(#NSView, "endPage") = Void;
override externalInstanceMethod(#NSView, "dragImage:at:offset:event:pasteboard:source:slideBack:") = Void, NSImage, NSPoint, NSSize, NSEvent, NSPasteboard, Id, Bool;
override externalInstanceMethod(#NSView, "registeredDraggedTypes") = NSArray;
override externalInstanceMethod(#NSView, "registerForDraggedTypes:") = Void, NSArray;
override externalInstanceMethod(#NSView, "unregisterDraggedTypes") = Void;
override externalInstanceMethod(#NSView, "dragFile:fromRect:slideBack:event:") = Bool, NSString, NSRect, Bool, NSEvent;
override externalInstanceMethod(#NSView, "dragPromisedFilesOfTypes:fromRect:source:slideBack:event:") = Bool, NSArray, NSRect, Id, Bool, NSEvent;
override externalInstanceMethod(#NSView, "enterFullScreenMode:withOptions:") = Bool, NSScreen, NSDictionary;
override externalInstanceMethod(#NSView, "exitFullScreenModeWithOptions:") = Void, NSDictionary;
override externalInstanceMethod(#NSView, "isInFullScreenMode") = Bool;
override externalInstanceMethod(#NSView, "showDefinitionForAttributedString:atPoint:") = Void, NSAttributedString, NSPoint;
override externalInstanceMethod(#NSView, "showDefinitionForAttributedString:range:options:baselineOriginProvider:") = Void, NSAttributedString, NSRange, NSDictionary, UnknownType;
override externalInstanceMethod(#NSView, "reflectScrolledClipView:") = Void, NSClipView;
override externalInstanceMethod(#NSView, "scrollClipView:toPoint:") = Void, NSClipView, NSPoint;
override externalInstanceMethod(#NSView, "enclosingMenuItem") = NSMenuItem;
override externalInstanceMethod(#NSView, "rulerView:shouldMoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSView, "rulerView:willMoveMarker:toLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override externalInstanceMethod(#NSView, "rulerView:didMoveMarker:") = Void, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSView, "rulerView:shouldRemoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSView, "rulerView:didRemoveMarker:") = Void, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSView, "rulerView:shouldAddMarker:") = Bool, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSView, "rulerView:willAddMarker:atLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override externalInstanceMethod(#NSView, "rulerView:didAddMarker:") = Void, NSRulerView, NSRulerMarker;
override externalInstanceMethod(#NSView, "rulerView:handleMouseDown:") = Void, NSRulerView, NSEvent;
override externalInstanceMethod(#NSView, "rulerView:willSetClientView:") = Void, NSRulerView, NSView;

record NSViewAnimation = externalClass(NSAnimation);
override externalInstanceMethod(#NSViewAnimation, "initWithViewAnimations:") = Id, NSArray;
override externalInstanceMethod(#NSViewAnimation, "viewAnimations") = NSArray;
override externalInstanceMethod(#NSViewAnimation, "setViewAnimations:") = Void, NSArray;

record NSViewController = externalClass(NSResponder);
override externalInstanceMethod(#NSViewController, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSViewController, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSViewController, "initWithNibName:bundle:") = Id, NSString, NSBundle;
override externalInstanceMethod(#NSViewController, "setRepresentedObject:") = Void, Id;
override externalInstanceMethod(#NSViewController, "representedObject") = Id;
override externalInstanceMethod(#NSViewController, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSViewController, "title") = NSString;
override externalInstanceMethod(#NSViewController, "view") = NSView;
override externalInstanceMethod(#NSViewController, "loadView") = Void;
override externalInstanceMethod(#NSViewController, "nibName") = NSString;
override externalInstanceMethod(#NSViewController, "nibBundle") = NSBundle;
override externalInstanceMethod(#NSViewController, "setView:") = Void, NSView;
override externalInstanceMethod(#NSViewController, "commitEditingWithDelegate:didCommitSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override externalInstanceMethod(#NSViewController, "commitEditing") = Bool;
override externalInstanceMethod(#NSViewController, "discardEditing") = Void;

record NSWindow = externalClass(NSResponder);
override externalInstanceMethod(#NSWindow, "animator") = Id;
override externalInstanceMethod(#NSWindow, "animations") = NSDictionary;
override externalInstanceMethod(#NSWindow, "setAnimations:") = Void, NSDictionary;
override externalInstanceMethod(#NSWindow, "animationForKey:") = Id, NSString;
override externalClassMethod(#NSWindow, "defaultAnimationForKey:") = Id, NSString;
override externalInstanceMethod(#NSWindow, "validateUserInterfaceItem:") = Bool, Id;
override externalClassMethod(#NSWindow, "frameRectForContentRect:styleMask:") = NSRect, NSRect, CULong;
override externalClassMethod(#NSWindow, "contentRectForFrameRect:styleMask:") = NSRect, NSRect, CULong;
override externalClassMethod(#NSWindow, "minFrameWidthWithTitle:styleMask:") = Double, NSString, CULong;
override externalClassMethod(#NSWindow, "defaultDepthLimit") = Int;
override externalInstanceMethod(#NSWindow, "frameRectForContentRect:") = NSRect, NSRect;
override externalInstanceMethod(#NSWindow, "contentRectForFrameRect:") = NSRect, NSRect;
override externalInstanceMethod(#NSWindow, "initWithContentRect:styleMask:backing:defer:") = Id, NSRect, CULong, CULong, Bool;
override externalInstanceMethod(#NSWindow, "initWithContentRect:styleMask:backing:defer:screen:") = Id, NSRect, CULong, CULong, Bool, NSScreen;
override externalInstanceMethod(#NSWindow, "title") = NSString;
override externalInstanceMethod(#NSWindow, "setTitle:") = Void, NSString;
override externalInstanceMethod(#NSWindow, "setRepresentedURL:") = Void, NSURL;
override externalInstanceMethod(#NSWindow, "representedURL") = NSURL;
override externalInstanceMethod(#NSWindow, "representedFilename") = NSString;
override externalInstanceMethod(#NSWindow, "setRepresentedFilename:") = Void, NSString;
override externalInstanceMethod(#NSWindow, "setTitleWithRepresentedFilename:") = Void, NSString;
override externalInstanceMethod(#NSWindow, "setExcludedFromWindowsMenu:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isExcludedFromWindowsMenu") = Bool;
override externalInstanceMethod(#NSWindow, "setContentView:") = Void, NSView;
override externalInstanceMethod(#NSWindow, "contentView") = Id;
override externalInstanceMethod(#NSWindow, "setDelegate:") = Void, Id;
override externalInstanceMethod(#NSWindow, "delegate") = Id;
override externalInstanceMethod(#NSWindow, "windowNumber") = CLong;
override externalInstanceMethod(#NSWindow, "styleMask") = CULong;
override externalInstanceMethod(#NSWindow, "setStyleMask:") = Void, CULong;
override externalInstanceMethod(#NSWindow, "fieldEditor:forObject:") = NSText, Bool, Id;
override externalInstanceMethod(#NSWindow, "endEditingFor:") = Void, Id;
override externalInstanceMethod(#NSWindow, "constrainFrameRect:toScreen:") = NSRect, NSRect, NSScreen;
override externalInstanceMethod(#NSWindow, "setFrame:display:") = Void, NSRect, Bool;
override externalInstanceMethod(#NSWindow, "setContentSize:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "setFrameOrigin:") = Void, NSPoint;
override externalInstanceMethod(#NSWindow, "setFrameTopLeftPoint:") = Void, NSPoint;
override externalInstanceMethod(#NSWindow, "cascadeTopLeftFromPoint:") = NSPoint, NSPoint;
override externalInstanceMethod(#NSWindow, "frame") = NSRect;
override externalInstanceMethod(#NSWindow, "animationResizeTime:") = Double, NSRect;
override externalInstanceMethod(#NSWindow, "setFrame:display:animate:") = Void, NSRect, Bool, Bool;
override externalInstanceMethod(#NSWindow, "inLiveResize") = Bool;
override externalInstanceMethod(#NSWindow, "setShowsResizeIndicator:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "showsResizeIndicator") = Bool;
override externalInstanceMethod(#NSWindow, "setResizeIncrements:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "resizeIncrements") = NSSize;
override externalInstanceMethod(#NSWindow, "setAspectRatio:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "aspectRatio") = NSSize;
override externalInstanceMethod(#NSWindow, "setContentResizeIncrements:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "contentResizeIncrements") = NSSize;
override externalInstanceMethod(#NSWindow, "setContentAspectRatio:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "contentAspectRatio") = NSSize;
override externalInstanceMethod(#NSWindow, "useOptimizedDrawing:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "disableFlushWindow") = Void;
override externalInstanceMethod(#NSWindow, "enableFlushWindow") = Void;
override externalInstanceMethod(#NSWindow, "isFlushWindowDisabled") = Bool;
override externalInstanceMethod(#NSWindow, "flushWindow") = Void;
override externalInstanceMethod(#NSWindow, "flushWindowIfNeeded") = Void;
override externalInstanceMethod(#NSWindow, "setViewsNeedDisplay:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "viewsNeedDisplay") = Bool;
override externalInstanceMethod(#NSWindow, "displayIfNeeded") = Void;
override externalInstanceMethod(#NSWindow, "display") = Void;
override externalInstanceMethod(#NSWindow, "setAutodisplay:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isAutodisplay") = Bool;
override externalInstanceMethod(#NSWindow, "preservesContentDuringLiveResize") = Bool;
override externalInstanceMethod(#NSWindow, "setPreservesContentDuringLiveResize:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "update") = Void;
override externalInstanceMethod(#NSWindow, "makeFirstResponder:") = Bool, NSResponder;
override externalInstanceMethod(#NSWindow, "firstResponder") = NSResponder;
override externalInstanceMethod(#NSWindow, "resizeFlags") = CLong;
override externalInstanceMethod(#NSWindow, "keyDown:") = Void, NSEvent;
override externalInstanceMethod(#NSWindow, "close") = Void;
override externalInstanceMethod(#NSWindow, "setReleasedWhenClosed:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isReleasedWhenClosed") = Bool;
override externalInstanceMethod(#NSWindow, "miniaturize:") = Void, Id;
override externalInstanceMethod(#NSWindow, "deminiaturize:") = Void, Id;
override externalInstanceMethod(#NSWindow, "isZoomed") = Bool;
override externalInstanceMethod(#NSWindow, "zoom:") = Void, Id;
override externalInstanceMethod(#NSWindow, "isMiniaturized") = Bool;
override externalInstanceMethod(#NSWindow, "tryToPerform:with:") = Bool, SelectorHandle, Id;
override externalInstanceMethod(#NSWindow, "validRequestorForSendType:returnType:") = Id, NSString, NSString;
override externalInstanceMethod(#NSWindow, "setBackgroundColor:") = Void, NSColor;
override externalInstanceMethod(#NSWindow, "backgroundColor") = NSColor;
override externalInstanceMethod(#NSWindow, "setContentBorderThickness:forEdge:") = Void, Double, CULong;
override externalInstanceMethod(#NSWindow, "contentBorderThicknessForEdge:") = Double, CULong;
override externalInstanceMethod(#NSWindow, "setAutorecalculatesContentBorderThickness:forEdge:") = Void, Bool, CULong;
override externalInstanceMethod(#NSWindow, "autorecalculatesContentBorderThicknessForEdge:") = Bool, CULong;
override externalInstanceMethod(#NSWindow, "setMovable:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isMovable") = Bool;
override externalInstanceMethod(#NSWindow, "setMovableByWindowBackground:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isMovableByWindowBackground") = Bool;
override externalInstanceMethod(#NSWindow, "setHidesOnDeactivate:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "hidesOnDeactivate") = Bool;
override externalInstanceMethod(#NSWindow, "setCanHide:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "canHide") = Bool;
override externalInstanceMethod(#NSWindow, "center") = Void;
override externalInstanceMethod(#NSWindow, "makeKeyAndOrderFront:") = Void, Id;
override externalInstanceMethod(#NSWindow, "orderFront:") = Void, Id;
override externalInstanceMethod(#NSWindow, "orderBack:") = Void, Id;
override externalInstanceMethod(#NSWindow, "orderOut:") = Void, Id;
override externalInstanceMethod(#NSWindow, "orderWindow:relativeTo:") = Void, CLong, CLong;
override externalInstanceMethod(#NSWindow, "orderFrontRegardless") = Void;
override externalInstanceMethod(#NSWindow, "setMiniwindowImage:") = Void, NSImage;
override externalInstanceMethod(#NSWindow, "setMiniwindowTitle:") = Void, NSString;
override externalInstanceMethod(#NSWindow, "miniwindowImage") = NSImage;
override externalInstanceMethod(#NSWindow, "miniwindowTitle") = NSString;
override externalInstanceMethod(#NSWindow, "dockTile") = NSDockTile;
override externalInstanceMethod(#NSWindow, "setDocumentEdited:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isDocumentEdited") = Bool;
override externalInstanceMethod(#NSWindow, "isVisible") = Bool;
override externalInstanceMethod(#NSWindow, "isKeyWindow") = Bool;
override externalInstanceMethod(#NSWindow, "isMainWindow") = Bool;
override externalInstanceMethod(#NSWindow, "canBecomeKeyWindow") = Bool;
override externalInstanceMethod(#NSWindow, "canBecomeMainWindow") = Bool;
override externalInstanceMethod(#NSWindow, "makeKeyWindow") = Void;
override externalInstanceMethod(#NSWindow, "makeMainWindow") = Void;
override externalInstanceMethod(#NSWindow, "becomeKeyWindow") = Void;
override externalInstanceMethod(#NSWindow, "resignKeyWindow") = Void;
override externalInstanceMethod(#NSWindow, "becomeMainWindow") = Void;
override externalInstanceMethod(#NSWindow, "resignMainWindow") = Void;
override externalInstanceMethod(#NSWindow, "worksWhenModal") = Bool;
override externalInstanceMethod(#NSWindow, "preventsApplicationTerminationWhenModal") = Bool;
override externalInstanceMethod(#NSWindow, "setPreventsApplicationTerminationWhenModal:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "convertBaseToScreen:") = NSPoint, NSPoint;
override externalInstanceMethod(#NSWindow, "convertScreenToBase:") = NSPoint, NSPoint;
override externalInstanceMethod(#NSWindow, "performClose:") = Void, Id;
override externalInstanceMethod(#NSWindow, "performMiniaturize:") = Void, Id;
override externalInstanceMethod(#NSWindow, "performZoom:") = Void, Id;
override externalInstanceMethod(#NSWindow, "gState") = CLong;
override externalInstanceMethod(#NSWindow, "setOneShot:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isOneShot") = Bool;
override externalInstanceMethod(#NSWindow, "dataWithEPSInsideRect:") = NSData, NSRect;
override externalInstanceMethod(#NSWindow, "dataWithPDFInsideRect:") = NSData, NSRect;
override externalInstanceMethod(#NSWindow, "print:") = Void, Id;
override externalInstanceMethod(#NSWindow, "disableCursorRects") = Void;
override externalInstanceMethod(#NSWindow, "enableCursorRects") = Void;
override externalInstanceMethod(#NSWindow, "discardCursorRects") = Void;
override externalInstanceMethod(#NSWindow, "areCursorRectsEnabled") = Bool;
override externalInstanceMethod(#NSWindow, "invalidateCursorRectsForView:") = Void, NSView;
override externalInstanceMethod(#NSWindow, "resetCursorRects") = Void;
override externalInstanceMethod(#NSWindow, "setAllowsToolTipsWhenApplicationIsInactive:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "allowsToolTipsWhenApplicationIsInactive") = Bool;
override externalInstanceMethod(#NSWindow, "setBackingType:") = Void, CULong;
override externalInstanceMethod(#NSWindow, "backingType") = CULong;
override externalInstanceMethod(#NSWindow, "setLevel:") = Void, CLong;
override externalInstanceMethod(#NSWindow, "level") = CLong;
override externalInstanceMethod(#NSWindow, "setDepthLimit:") = Void, Int;
override externalInstanceMethod(#NSWindow, "depthLimit") = Int;
override externalInstanceMethod(#NSWindow, "setDynamicDepthLimit:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "hasDynamicDepthLimit") = Bool;
override externalInstanceMethod(#NSWindow, "screen") = NSScreen;
override externalInstanceMethod(#NSWindow, "deepestScreen") = NSScreen;
override externalInstanceMethod(#NSWindow, "canStoreColor") = Bool;
override externalInstanceMethod(#NSWindow, "setHasShadow:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "hasShadow") = Bool;
override externalInstanceMethod(#NSWindow, "invalidateShadow") = Void;
override externalInstanceMethod(#NSWindow, "setAlphaValue:") = Void, Double;
override externalInstanceMethod(#NSWindow, "alphaValue") = Double;
override externalInstanceMethod(#NSWindow, "setOpaque:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isOpaque") = Bool;
override externalInstanceMethod(#NSWindow, "setSharingType:") = Void, CULong;
override externalInstanceMethod(#NSWindow, "sharingType") = CULong;
override externalInstanceMethod(#NSWindow, "setPreferredBackingLocation:") = Void, CULong;
override externalInstanceMethod(#NSWindow, "preferredBackingLocation") = CULong;
override externalInstanceMethod(#NSWindow, "backingLocation") = CULong;
override externalInstanceMethod(#NSWindow, "allowsConcurrentViewDrawing") = Bool;
override externalInstanceMethod(#NSWindow, "setAllowsConcurrentViewDrawing:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "displaysWhenScreenProfileChanges") = Bool;
override externalInstanceMethod(#NSWindow, "setDisplaysWhenScreenProfileChanges:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "disableScreenUpdatesUntilFlush") = Void;
override externalInstanceMethod(#NSWindow, "canBecomeVisibleWithoutLogin") = Bool;
override externalInstanceMethod(#NSWindow, "setCanBecomeVisibleWithoutLogin:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "setCollectionBehavior:") = Void, CULong;
override externalInstanceMethod(#NSWindow, "collectionBehavior") = CULong;
override externalInstanceMethod(#NSWindow, "canBeVisibleOnAllSpaces") = Bool;
override externalInstanceMethod(#NSWindow, "setCanBeVisibleOnAllSpaces:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "isOnActiveSpace") = Bool;
override externalInstanceMethod(#NSWindow, "stringWithSavedFrame") = NSString;
override externalInstanceMethod(#NSWindow, "setFrameFromString:") = Void, NSString;
override externalInstanceMethod(#NSWindow, "saveFrameUsingName:") = Void, NSString;
override externalInstanceMethod(#NSWindow, "setFrameUsingName:force:") = Bool, NSString, Bool;
override externalInstanceMethod(#NSWindow, "setFrameUsingName:") = Bool, NSString;
override externalInstanceMethod(#NSWindow, "setFrameAutosaveName:") = Bool, NSString;
override externalInstanceMethod(#NSWindow, "frameAutosaveName") = NSString;
override externalClassMethod(#NSWindow, "removeFrameUsingName:") = Void, NSString;
override externalInstanceMethod(#NSWindow, "cacheImageInRect:") = Void, NSRect;
override externalInstanceMethod(#NSWindow, "restoreCachedImage") = Void;
override externalInstanceMethod(#NSWindow, "discardCachedImage") = Void;
override externalInstanceMethod(#NSWindow, "minSize") = NSSize;
override externalInstanceMethod(#NSWindow, "maxSize") = NSSize;
override externalInstanceMethod(#NSWindow, "setMinSize:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "setMaxSize:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "contentMinSize") = NSSize;
override externalInstanceMethod(#NSWindow, "contentMaxSize") = NSSize;
override externalInstanceMethod(#NSWindow, "setContentMinSize:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "setContentMaxSize:") = Void, NSSize;
override externalInstanceMethod(#NSWindow, "nextEventMatchingMask:") = NSEvent, CULong;
override externalInstanceMethod(#NSWindow, "nextEventMatchingMask:untilDate:inMode:dequeue:") = NSEvent, CULong, NSDate, NSString, Bool;
override externalInstanceMethod(#NSWindow, "discardEventsMatchingMask:beforeEvent:") = Void, CULong, NSEvent;
override externalInstanceMethod(#NSWindow, "postEvent:atStart:") = Void, NSEvent, Bool;
override externalInstanceMethod(#NSWindow, "currentEvent") = NSEvent;
override externalInstanceMethod(#NSWindow, "setAcceptsMouseMovedEvents:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "acceptsMouseMovedEvents") = Bool;
override externalInstanceMethod(#NSWindow, "setIgnoresMouseEvents:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "ignoresMouseEvents") = Bool;
override externalInstanceMethod(#NSWindow, "deviceDescription") = NSDictionary;
override externalInstanceMethod(#NSWindow, "sendEvent:") = Void, NSEvent;
override externalInstanceMethod(#NSWindow, "mouseLocationOutsideOfEventStream") = NSPoint;
override externalClassMethod(#NSWindow, "menuChanged:") = Void, NSMenu;
override externalInstanceMethod(#NSWindow, "windowController") = Id;
override externalInstanceMethod(#NSWindow, "setWindowController:") = Void, NSWindowController;
override externalInstanceMethod(#NSWindow, "isSheet") = Bool;
override externalInstanceMethod(#NSWindow, "attachedSheet") = NSWindow;
override externalClassMethod(#NSWindow, "standardWindowButton:forStyleMask:") = NSButton, CULong, CULong;
override externalInstanceMethod(#NSWindow, "standardWindowButton:") = NSButton, CULong;
override externalInstanceMethod(#NSWindow, "addChildWindow:ordered:") = Void, NSWindow, CLong;
override externalInstanceMethod(#NSWindow, "removeChildWindow:") = Void, NSWindow;
override externalInstanceMethod(#NSWindow, "childWindows") = NSArray;
override externalInstanceMethod(#NSWindow, "parentWindow") = NSWindow;
override externalInstanceMethod(#NSWindow, "setParentWindow:") = Void, NSWindow;
override externalInstanceMethod(#NSWindow, "graphicsContext") = NSGraphicsContext;
override externalInstanceMethod(#NSWindow, "userSpaceScaleFactor") = Double;
override externalInstanceMethod(#NSWindow, "setColorSpace:") = Void, NSColorSpace;
override externalInstanceMethod(#NSWindow, "colorSpace") = NSColorSpace;
override externalClassMethod(#NSWindow, "windowNumbersWithOptions:") = NSArray, CULong;
override externalClassMethod(#NSWindow, "windowNumberAtPoint:belowWindowWithWindowNumber:") = CLong, NSPoint, CLong;
override externalInstanceMethod(#NSWindow, "setInitialFirstResponder:") = Void, NSView;
override externalInstanceMethod(#NSWindow, "initialFirstResponder") = NSView;
override externalInstanceMethod(#NSWindow, "selectNextKeyView:") = Void, Id;
override externalInstanceMethod(#NSWindow, "selectPreviousKeyView:") = Void, Id;
override externalInstanceMethod(#NSWindow, "selectKeyViewFollowingView:") = Void, NSView;
override externalInstanceMethod(#NSWindow, "selectKeyViewPrecedingView:") = Void, NSView;
override externalInstanceMethod(#NSWindow, "keyViewSelectionDirection") = CULong;
override externalInstanceMethod(#NSWindow, "setDefaultButtonCell:") = Void, NSButtonCell;
override externalInstanceMethod(#NSWindow, "defaultButtonCell") = NSButtonCell;
override externalInstanceMethod(#NSWindow, "disableKeyEquivalentForDefaultButtonCell") = Void;
override externalInstanceMethod(#NSWindow, "enableKeyEquivalentForDefaultButtonCell") = Void;
override externalInstanceMethod(#NSWindow, "setAutorecalculatesKeyViewLoop:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "autorecalculatesKeyViewLoop") = Bool;
override externalInstanceMethod(#NSWindow, "recalculateKeyViewLoop") = Void;
override externalInstanceMethod(#NSWindow, "setToolbar:") = Void, NSToolbar;
override externalInstanceMethod(#NSWindow, "toolbar") = NSToolbar;
override externalInstanceMethod(#NSWindow, "toggleToolbarShown:") = Void, Id;
override externalInstanceMethod(#NSWindow, "runToolbarCustomizationPalette:") = Void, Id;
override externalInstanceMethod(#NSWindow, "setShowsToolbarButton:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "showsToolbarButton") = Bool;
override externalInstanceMethod(#NSWindow, "dragImage:at:offset:event:pasteboard:source:slideBack:") = Void, NSImage, NSPoint, NSSize, NSEvent, NSPasteboard, Id, Bool;
override externalInstanceMethod(#NSWindow, "registerForDraggedTypes:") = Void, NSArray;
override externalInstanceMethod(#NSWindow, "unregisterDraggedTypes") = Void;
override externalInstanceMethod(#NSWindow, "initWithWindowRef:") = NSWindow, RawPointer;
override externalInstanceMethod(#NSWindow, "windowRef") = RawPointer;
override externalInstanceMethod(#NSWindow, "drawers") = NSArray;
override externalInstanceMethod(#NSWindow, "hasCloseBox") = Bool;
override externalInstanceMethod(#NSWindow, "hasTitleBar") = Bool;
override externalInstanceMethod(#NSWindow, "isFloatingPanel") = Bool;
override externalInstanceMethod(#NSWindow, "isMiniaturizable") = Bool;
override externalInstanceMethod(#NSWindow, "isModalPanel") = Bool;
override externalInstanceMethod(#NSWindow, "isResizable") = Bool;
override externalInstanceMethod(#NSWindow, "isZoomable") = Bool;
override externalInstanceMethod(#NSWindow, "orderedIndex") = CLong;
override externalInstanceMethod(#NSWindow, "setIsMiniaturized:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "setIsVisible:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "setIsZoomed:") = Void, Bool;
override externalInstanceMethod(#NSWindow, "setOrderedIndex:") = Void, CLong;
override externalInstanceMethod(#NSWindow, "handleCloseScriptCommand:") = Id, NSCloseCommand;
override externalInstanceMethod(#NSWindow, "handlePrintScriptCommand:") = Id, NSScriptCommand;
override externalInstanceMethod(#NSWindow, "handleSaveScriptCommand:") = Id, NSScriptCommand;

record NSWindowController = externalClass(NSResponder);
override externalInstanceMethod(#NSWindowController, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#NSWindowController, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#NSWindowController, "initWithWindow:") = Id, NSWindow;
override externalInstanceMethod(#NSWindowController, "initWithWindowNibName:") = Id, NSString;
override externalInstanceMethod(#NSWindowController, "initWithWindowNibName:owner:") = Id, NSString, Id;
override externalInstanceMethod(#NSWindowController, "initWithWindowNibPath:owner:") = Id, NSString, Id;
override externalInstanceMethod(#NSWindowController, "windowNibName") = NSString;
override externalInstanceMethod(#NSWindowController, "windowNibPath") = NSString;
override externalInstanceMethod(#NSWindowController, "owner") = Id;
override externalInstanceMethod(#NSWindowController, "setWindowFrameAutosaveName:") = Void, NSString;
override externalInstanceMethod(#NSWindowController, "windowFrameAutosaveName") = NSString;
override externalInstanceMethod(#NSWindowController, "setShouldCascadeWindows:") = Void, Bool;
override externalInstanceMethod(#NSWindowController, "shouldCascadeWindows") = Bool;
override externalInstanceMethod(#NSWindowController, "document") = Id;
override externalInstanceMethod(#NSWindowController, "setDocument:") = Void, NSDocument;
override externalInstanceMethod(#NSWindowController, "setDocumentEdited:") = Void, Bool;
override externalInstanceMethod(#NSWindowController, "setShouldCloseDocument:") = Void, Bool;
override externalInstanceMethod(#NSWindowController, "shouldCloseDocument") = Bool;
override externalInstanceMethod(#NSWindowController, "setWindow:") = Void, NSWindow;
override externalInstanceMethod(#NSWindowController, "window") = NSWindow;
override externalInstanceMethod(#NSWindowController, "synchronizeWindowTitleWithDocumentName") = Void;
override externalInstanceMethod(#NSWindowController, "windowTitleForDocumentDisplayName:") = NSString, NSString;
override externalInstanceMethod(#NSWindowController, "close") = Void;
override externalInstanceMethod(#NSWindowController, "showWindow:") = Void, Id;
override externalInstanceMethod(#NSWindowController, "isWindowLoaded") = Bool;
override externalInstanceMethod(#NSWindowController, "windowWillLoad") = Void;
override externalInstanceMethod(#NSWindowController, "windowDidLoad") = Void;
override externalInstanceMethod(#NSWindowController, "loadWindow") = Void;

record NSWorkspace = externalClass(NSObject);
override externalClassMethod(#NSWorkspace, "sharedWorkspace") = NSWorkspace;
override externalInstanceMethod(#NSWorkspace, "notificationCenter") = NSNotificationCenter;
override externalInstanceMethod(#NSWorkspace, "openFile:") = Bool, NSString;
override externalInstanceMethod(#NSWorkspace, "openFile:withApplication:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "openFile:withApplication:andDeactivate:") = Bool, NSString, NSString, Bool;
override externalInstanceMethod(#NSWorkspace, "openFile:fromImage:at:inView:") = Bool, NSString, NSImage, NSPoint, NSView;
override externalInstanceMethod(#NSWorkspace, "openURL:") = Bool, NSURL;
override externalInstanceMethod(#NSWorkspace, "launchApplication:") = Bool, NSString;
override externalInstanceMethod(#NSWorkspace, "launchApplicationAtURL:options:configuration:error:") = NSRunningApplication, NSURL, CULong, NSDictionary, Pointer[NSError];
override externalInstanceMethod(#NSWorkspace, "launchApplication:showIcon:autolaunch:") = Bool, NSString, Bool, Bool;
override externalInstanceMethod(#NSWorkspace, "fullPathForApplication:") = NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "selectFile:inFileViewerRootedAtPath:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "activateFileViewerSelectingURLs:") = Void, NSArray;
override externalInstanceMethod(#NSWorkspace, "showSearchResultsForQueryString:") = Bool, NSString;
override externalInstanceMethod(#NSWorkspace, "noteFileSystemChanged:") = Void, NSString;
override externalInstanceMethod(#NSWorkspace, "getInfoForFile:application:type:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
override externalInstanceMethod(#NSWorkspace, "isFilePackageAtPath:") = Bool, NSString;
override externalInstanceMethod(#NSWorkspace, "iconForFile:") = NSImage, NSString;
override externalInstanceMethod(#NSWorkspace, "iconForFiles:") = NSImage, NSArray;
override externalInstanceMethod(#NSWorkspace, "iconForFileType:") = NSImage, NSString;
override externalInstanceMethod(#NSWorkspace, "setIcon:forFile:options:") = Bool, NSImage, NSString, CULong;
override externalInstanceMethod(#NSWorkspace, "fileLabels") = NSArray;
override externalInstanceMethod(#NSWorkspace, "fileLabelColors") = NSArray;
override externalInstanceMethod(#NSWorkspace, "recycleURLs:completionHandler:") = Void, NSArray, UnknownType;
override externalInstanceMethod(#NSWorkspace, "duplicateURLs:completionHandler:") = Void, NSArray, UnknownType;
override externalInstanceMethod(#NSWorkspace, "getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:") = Bool, NSString, Pointer[Bool], Pointer[Bool], Pointer[Bool], Pointer[NSString], Pointer[NSString];
override externalInstanceMethod(#NSWorkspace, "performFileOperation:source:destination:files:tag:") = Bool, NSString, NSString, NSString, NSArray, Pointer[CLong];
override externalInstanceMethod(#NSWorkspace, "unmountAndEjectDeviceAtPath:") = Bool, NSString;
override externalInstanceMethod(#NSWorkspace, "unmountAndEjectDeviceAtURL:error:") = Bool, NSURL, Pointer[NSError];
override externalInstanceMethod(#NSWorkspace, "extendPowerOffBy:") = CLong, CLong;
override externalInstanceMethod(#NSWorkspace, "hideOtherApplications") = Void;
override externalInstanceMethod(#NSWorkspace, "mountedLocalVolumePaths") = NSArray;
override externalInstanceMethod(#NSWorkspace, "mountedRemovableMedia") = NSArray;
override externalInstanceMethod(#NSWorkspace, "URLForApplicationWithBundleIdentifier:") = NSURL, NSString;
override externalInstanceMethod(#NSWorkspace, "URLForApplicationToOpenURL:") = NSURL, NSURL;
override externalInstanceMethod(#NSWorkspace, "absolutePathForAppBundleWithIdentifier:") = NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:") = Bool, NSString, CULong, NSAppleEventDescriptor, Pointer[NSNumber];
override externalInstanceMethod(#NSWorkspace, "openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:") = Bool, NSArray, NSString, CULong, NSAppleEventDescriptor, Pointer[NSArray];
override externalInstanceMethod(#NSWorkspace, "launchedApplications") = NSArray;
override externalInstanceMethod(#NSWorkspace, "activeApplication") = NSDictionary;
override externalInstanceMethod(#NSWorkspace, "typeOfFile:error:") = NSString, NSString, Pointer[NSError];
override externalInstanceMethod(#NSWorkspace, "localizedDescriptionForType:") = NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "preferredFilenameExtensionForType:") = NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "filenameExtension:isValidForType:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "type:conformsToType:") = Bool, NSString, NSString;
override externalInstanceMethod(#NSWorkspace, "setDesktopImageURL:forScreen:options:error:") = Bool, NSURL, NSScreen, NSDictionary, Pointer[NSError];
override externalInstanceMethod(#NSWorkspace, "desktopImageURLForScreen:") = NSURL, NSScreen;
override externalInstanceMethod(#NSWorkspace, "desktopImageOptionsForScreen:") = NSDictionary, NSScreen;
override externalInstanceMethod(#NSWorkspace, "openTempFile:") = Bool, NSString;
override externalInstanceMethod(#NSWorkspace, "findApplications") = Void;
override externalInstanceMethod(#NSWorkspace, "noteUserDefaultsChanged") = Void;
override externalInstanceMethod(#NSWorkspace, "slideImage:from:to:") = Void, NSImage, NSPoint, NSPoint;
override externalInstanceMethod(#NSWorkspace, "checkForRemovableMedia") = Void;
override externalInstanceMethod(#NSWorkspace, "noteFileSystemChanged") = Void;
override externalInstanceMethod(#NSWorkspace, "fileSystemChanged") = Bool;
override externalInstanceMethod(#NSWorkspace, "userDefaultsChanged") = Bool;
override externalInstanceMethod(#NSWorkspace, "mountNewRemovableMedia") = NSArray;
override externalInstanceMethod(#NSWorkspace, "runningApplications") = NSArray;


alias NSTextReadInapplicableDocumentTypeError = 65806;
alias NSTextWriteInapplicableDocumentTypeError = 66062;
alias NSTextReadWriteErrorMinimum = 65792;
alias NSTextReadWriteErrorMaximum = 66303;
alias NSServiceApplicationNotFoundError = 66560;
alias NSServiceApplicationLaunchFailedError = 66561;
alias NSServiceRequestTimedOutError = 66562;
alias NSServiceInvalidPasteboardDataError = 66563;
alias NSServiceMalformedServiceDictionaryError = 66564;
alias NSServiceMiscellaneousError = 66800;
alias NSServiceErrorMinimum = 66560;
alias NSServiceErrorMaximum = 66817;

alias NSCompositeClear = 0;
alias NSCompositeCopy = 1;
alias NSCompositeSourceOver = 2;
alias NSCompositeSourceIn = 3;
alias NSCompositeSourceOut = 4;
alias NSCompositeSourceAtop = 5;
alias NSCompositeDestinationOver = 6;
alias NSCompositeDestinationIn = 7;
alias NSCompositeDestinationOut = 8;
alias NSCompositeDestinationAtop = 9;
alias NSCompositeXOR = 10;
alias NSCompositePlusDarker = 11;
alias NSCompositeHighlight = 12;
alias NSCompositePlusLighter = 13;

alias NSCompositingOperation = CULong;

alias NSBackingStoreRetained = 0;
alias NSBackingStoreNonretained = 1;
alias NSBackingStoreBuffered = 2;

alias NSBackingStoreType = CULong;

alias NSWindowAbove = 1;
alias NSWindowBelow = 4294967295;
alias NSWindowOut = 0;

alias NSWindowOrderingMode = CLong;

alias NSFocusRingOnly = 0;
alias NSFocusRingBelow = 1;
alias NSFocusRingAbove = 2;

alias NSFocusRingPlacement = CULong;

alias NSFocusRingTypeDefault = 0;
alias NSFocusRingTypeNone = 1;
alias NSFocusRingTypeExterior = 2;

alias NSFocusRingType = CULong;

alias NSColorRenderingIntentDefault = 0;
alias NSColorRenderingIntentAbsoluteColorimetric = 1;
alias NSColorRenderingIntentRelativeColorimetric = 2;
alias NSColorRenderingIntentPerceptual = 3;
alias NSColorRenderingIntentSaturation = 4;

alias NSColorRenderingIntent = CLong;

external NSCalibratedWhiteColorSpace : NSString;

external NSCalibratedRGBColorSpace : NSString;

external NSDeviceWhiteColorSpace : NSString;

external NSDeviceRGBColorSpace : NSString;

external NSDeviceCMYKColorSpace : NSString;

external NSNamedColorSpace : NSString;

external NSPatternColorSpace : NSString;

external NSCustomColorSpace : NSString;

external NSCalibratedBlackColorSpace : NSString;

external NSDeviceBlackColorSpace : NSString;

alias NSWindowDepthTwentyfourBitRGB = 520;
alias NSWindowDepthSixtyfourBitRGB = 528;
alias NSWindowDepthOnehundredtwentyeightBitRGB = 544;

alias NSWindowDepth = Int;

external NSBestDepth(
    colorSpace : NSString,
    bps : CLong,
    bpp : CLong,
    planar : Bool,
    exactMatch : Pointer[Bool]) : Int;

external NSPlanarFromDepth(
    depth : Int) : Bool;

external NSColorSpaceFromDepth(
    depth : Int) : NSString;

external NSBitsPerSampleFromDepth(
    depth : Int) : CLong;

external NSBitsPerPixelFromDepth(
    depth : Int) : CLong;

external NSNumberOfColorComponents(
    colorSpaceName : NSString) : CLong;

external NSAvailableWindowDepths() : Pointer[Int];

external NSWhite : Double;

external NSLightGray : Double;

external NSDarkGray : Double;

external NSBlack : Double;

external NSDeviceResolution : NSString;

external NSDeviceColorSpaceName : NSString;

external NSDeviceBitsPerSample : NSString;

external NSDeviceIsScreen : NSString;

external NSDeviceIsPrinter : NSString;

external NSDeviceSize : NSString;

external NSRectFill(
    aRect : NSRect);

external NSRectFillList(
    rects : Pointer[NSRect],
    count : CLong);

external NSRectFillListWithGrays(
    rects : Pointer[NSRect],
    grays : Pointer[Double],
    num : CLong);

external NSRectFillListWithColors(
    rects : Pointer[NSRect],
    colors : Pointer[NSColor],
    num : CLong);

external NSRectFillUsingOperation(
    aRect : NSRect,
    op : CULong);

external NSRectFillListUsingOperation(
    rects : Pointer[NSRect],
    count : CLong,
    op : CULong);

external NSRectFillListWithColorsUsingOperation(
    rects : Pointer[NSRect],
    colors : Pointer[NSColor],
    num : CLong,
    op : CULong);

external NSFrameRect(
    aRect : NSRect);

external NSFrameRectWithWidth(
    aRect : NSRect,
    frameWidth : Double);

external NSFrameRectWithWidthUsingOperation(
    aRect : NSRect,
    frameWidth : Double,
    op : CULong);

external NSRectClip(
    aRect : NSRect);

external NSRectClipList(
    rects : Pointer[NSRect],
    count : CLong);

external NSDrawTiledRects(
    boundsRect : NSRect,
    clipRect : NSRect,
    sides : Pointer[CULong],
    grays : Pointer[Double],
    count : CLong) : NSRect;

external NSDrawGrayBezel(
    aRect : NSRect,
    clipRect : NSRect);

external NSDrawGroove(
    aRect : NSRect,
    clipRect : NSRect);

external NSDrawWhiteBezel(
    aRect : NSRect,
    clipRect : NSRect);

external NSDrawButton(
    aRect : NSRect,
    clipRect : NSRect);

external NSEraseRect(
    aRect : NSRect);

external NSReadPixel(
    passedPoint : NSPoint) : NSColor;

external NSDrawBitmap(
    rect : NSRect,
    width : CLong,
    height : CLong,
    bps : CLong,
    spp : CLong,
    bpp : CLong,
    bpr : CLong,
    isPlanar : Bool,
    hasAlpha : Bool,
    colorSpaceName : NSString,
    data : Pointer[Pointer[CUChar]]);

external NSCopyBits(
    srcGState : CLong,
    srcRect : NSRect,
    destPoint : NSPoint);

external NSHighlightRect(
    aRect : NSRect);

external NSBeep();

external NSGetWindowServerMemory(
    context : CLong,
    virtualMemory : Pointer[CLong],
    windowBackingMemory : Pointer[CLong],
    windowDumpString : Pointer[NSString]) : CLong;

external NSDrawColorTiledRects(
    boundsRect : NSRect,
    clipRect : NSRect,
    sides : Pointer[CULong],
    colors : Pointer[NSColor],
    count : CLong) : NSRect;

external NSDrawDarkBezel(
    aRect : NSRect,
    clipRect : NSRect);

external NSDrawLightBezel(
    aRect : NSRect,
    clipRect : NSRect);

external NSDottedFrameRect(
    aRect : NSRect);

external NSDrawWindowBackground(
    aRect : NSRect);

external NSSetFocusRingStyle(
    placement : CULong);

external NSDisableScreenUpdates();

external NSEnableScreenUpdates();

alias NSAnimationEffectDisappearingItemDefault = 0;
alias NSAnimationEffectPoof = 10;

alias NSAnimationEffect = CULong;

external NSShowAnimationEffect(
    animationEffect : CULong,
    centerLocation : NSPoint,
    size : NSSize,
    animationDelegate : Id,
    didEndSelector : SelectorHandle,
    contextInfo : RawPointer);

external NSCountWindows(
    count : Pointer[CLong]);

external NSWindowList(
    size : CLong,
    list : Pointer[CLong]);

external NSCountWindowsForContext(
    context : CLong,
    count : Pointer[CLong]);

external NSWindowListForContext(
    context : CLong,
    size : CLong,
    list : Pointer[CLong]);

external NSGraphicsContextDestinationAttributeName : NSString;

external NSGraphicsContextRepresentationFormatAttributeName : NSString;

external NSGraphicsContextPSFormat : NSString;

external NSGraphicsContextPDFFormat : NSString;

alias NSImageInterpolationDefault = 0;
alias NSImageInterpolationNone = 1;
alias NSImageInterpolationLow = 2;
alias NSImageInterpolationMedium = 4;
alias NSImageInterpolationHigh = 3;

alias NSImageInterpolation = CULong;

external NSTextLineTooLongException : NSString;

external NSTextNoSelectionException : NSString;

external NSWordTablesWriteException : NSString;

external NSWordTablesReadException : NSString;

external NSTextReadException : NSString;

external NSTextWriteException : NSString;

external NSPasteboardCommunicationException : NSString;

external NSPrintingCommunicationException : NSString;

external NSAbortModalException : NSString;

external NSAbortPrintingException : NSString;

external NSIllegalSelectorException : NSString;

external NSAppKitVirtualMemoryException : NSString;

external NSBadRTFDirectiveException : NSString;

external NSBadRTFFontTableException : NSString;

external NSBadRTFStyleSheetException : NSString;

external NSTypedStreamVersionException : NSString;

external NSTIFFException : NSString;

external NSPrintPackageException : NSString;

external NSBadRTFColorTableException : NSString;

external NSDraggingException : NSString;

external NSColorListIOException : NSString;

external NSColorListNotEditableException : NSString;

external NSBadBitmapParametersException : NSString;

external NSWindowServerCommunicationException : NSString;

external NSFontUnavailableException : NSString;

external NSPPDIncludeNotFoundException : NSString;

external NSPPDParseException : NSString;

external NSPPDIncludeStackOverflowException : NSString;

external NSPPDIncludeStackUnderflowException : NSString;

external NSRTFPropertyStackOverflowException : NSString;

external NSAppKitIgnoredException : NSString;

external NSBadComparisonException : NSString;

external NSImageCacheException : NSString;

external NSNibLoadingException : NSString;

external NSBrowserIllegalDelegateException : NSString;

external NSAccessibilityException : NSString;

external NSAccessibilityRoleDescription(
    role : NSString,
    subrole : NSString) : NSString;

external NSAccessibilityRoleDescriptionForUIElement(
    element : Id) : NSString;

external NSAccessibilityActionDescription(
    action : NSString) : NSString;

external NSAccessibilityRaiseBadArgumentException(
    element : Id,
    attribute : NSString,
    value : Id);

external NSAccessibilityUnignoredAncestor(
    element : Id) : Id;

external NSAccessibilityUnignoredDescendant(
    element : Id) : Id;

external NSAccessibilityUnignoredChildren(
    originalChildren : NSArray) : NSArray;

external NSAccessibilityUnignoredChildrenForOnlyChild(
    originalChild : Id) : NSArray;

external NSAccessibilityPostNotification(
    element : Id,
    notification : NSString);

external NSAccessibilityErrorCodeExceptionInfo : NSString;

external NSAccessibilityRoleAttribute : NSString;

external NSAccessibilityRoleDescriptionAttribute : NSString;

external NSAccessibilitySubroleAttribute : NSString;

external NSAccessibilityHelpAttribute : NSString;

external NSAccessibilityValueAttribute : NSString;

external NSAccessibilityMinValueAttribute : NSString;

external NSAccessibilityMaxValueAttribute : NSString;

external NSAccessibilityEnabledAttribute : NSString;

external NSAccessibilityFocusedAttribute : NSString;

external NSAccessibilityParentAttribute : NSString;

external NSAccessibilityChildrenAttribute : NSString;

external NSAccessibilityWindowAttribute : NSString;

external NSAccessibilityTopLevelUIElementAttribute : NSString;

external NSAccessibilitySelectedChildrenAttribute : NSString;

external NSAccessibilityVisibleChildrenAttribute : NSString;

external NSAccessibilityPositionAttribute : NSString;

external NSAccessibilitySizeAttribute : NSString;

external NSAccessibilityContentsAttribute : NSString;

external NSAccessibilityTitleAttribute : NSString;

external NSAccessibilityDescriptionAttribute : NSString;

external NSAccessibilityShownMenuAttribute : NSString;

external NSAccessibilityValueDescriptionAttribute : NSString;

external NSAccessibilityPreviousContentsAttribute : NSString;

external NSAccessibilityNextContentsAttribute : NSString;

external NSAccessibilityHeaderAttribute : NSString;

external NSAccessibilityEditedAttribute : NSString;

external NSAccessibilityTabsAttribute : NSString;

external NSAccessibilityHorizontalScrollBarAttribute : NSString;

external NSAccessibilityVerticalScrollBarAttribute : NSString;

external NSAccessibilityOverflowButtonAttribute : NSString;

external NSAccessibilityIncrementButtonAttribute : NSString;

external NSAccessibilityDecrementButtonAttribute : NSString;

external NSAccessibilityFilenameAttribute : NSString;

external NSAccessibilityExpandedAttribute : NSString;

external NSAccessibilitySelectedAttribute : NSString;

external NSAccessibilitySplittersAttribute : NSString;

external NSAccessibilityDocumentAttribute : NSString;

external NSAccessibilityURLAttribute : NSString;

external NSAccessibilityIndexAttribute : NSString;

external NSAccessibilityRowCountAttribute : NSString;

external NSAccessibilityColumnCountAttribute : NSString;

external NSAccessibilityOrderedByRowAttribute : NSString;

external NSAccessibilityWarningValueAttribute : NSString;

external NSAccessibilityCriticalValueAttribute : NSString;

external NSAccessibilityPlaceholderValueAttribute : NSString;

external NSAccessibilityTitleUIElementAttribute : NSString;

external NSAccessibilityServesAsTitleForUIElementsAttribute : NSString;

external NSAccessibilityLinkedUIElementsAttribute : NSString;

external NSAccessibilitySelectedTextAttribute : NSString;

external NSAccessibilitySelectedTextRangeAttribute : NSString;

external NSAccessibilityNumberOfCharactersAttribute : NSString;

external NSAccessibilityVisibleCharacterRangeAttribute : NSString;

external NSAccessibilitySharedTextUIElementsAttribute : NSString;

external NSAccessibilitySharedCharacterRangeAttribute : NSString;

external NSAccessibilityInsertionPointLineNumberAttribute : NSString;

external NSAccessibilitySelectedTextRangesAttribute : NSString;

external NSAccessibilityLineForIndexParameterizedAttribute : NSString;

external NSAccessibilityRangeForLineParameterizedAttribute : NSString;

external NSAccessibilityStringForRangeParameterizedAttribute : NSString;

external NSAccessibilityRangeForPositionParameterizedAttribute : NSString;

external NSAccessibilityRangeForIndexParameterizedAttribute : NSString;

external NSAccessibilityBoundsForRangeParameterizedAttribute : NSString;

external NSAccessibilityRTFForRangeParameterizedAttribute : NSString;

external NSAccessibilityStyleRangeForIndexParameterizedAttribute : NSString;

external NSAccessibilityAttributedStringForRangeParameterizedAttribute : NSString;

external NSAccessibilityFontTextAttribute : NSString;

external NSAccessibilityForegroundColorTextAttribute : NSString;

external NSAccessibilityBackgroundColorTextAttribute : NSString;

external NSAccessibilityUnderlineColorTextAttribute : NSString;

external NSAccessibilityStrikethroughColorTextAttribute : NSString;

external NSAccessibilityUnderlineTextAttribute : NSString;

external NSAccessibilitySuperscriptTextAttribute : NSString;

external NSAccessibilityStrikethroughTextAttribute : NSString;

external NSAccessibilityShadowTextAttribute : NSString;

external NSAccessibilityAttachmentTextAttribute : NSString;

external NSAccessibilityLinkTextAttribute : NSString;

external NSAccessibilityMisspelledTextAttribute : NSString;

external NSAccessibilityFontNameKey : NSString;

external NSAccessibilityFontFamilyKey : NSString;

external NSAccessibilityVisibleNameKey : NSString;

external NSAccessibilityFontSizeKey : NSString;

external NSAccessibilityMainAttribute : NSString;

external NSAccessibilityMinimizedAttribute : NSString;

external NSAccessibilityCloseButtonAttribute : NSString;

external NSAccessibilityZoomButtonAttribute : NSString;

external NSAccessibilityMinimizeButtonAttribute : NSString;

external NSAccessibilityToolbarButtonAttribute : NSString;

external NSAccessibilityProxyAttribute : NSString;

external NSAccessibilityGrowAreaAttribute : NSString;

external NSAccessibilityModalAttribute : NSString;

external NSAccessibilityDefaultButtonAttribute : NSString;

external NSAccessibilityCancelButtonAttribute : NSString;

external NSAccessibilityMenuBarAttribute : NSString;

external NSAccessibilityWindowsAttribute : NSString;

external NSAccessibilityFrontmostAttribute : NSString;

external NSAccessibilityHiddenAttribute : NSString;

external NSAccessibilityMainWindowAttribute : NSString;

external NSAccessibilityFocusedWindowAttribute : NSString;

external NSAccessibilityFocusedUIElementAttribute : NSString;

external NSAccessibilityOrientationAttribute : NSString;

external NSAccessibilityVerticalOrientationValue : NSString;

external NSAccessibilityHorizontalOrientationValue : NSString;

external NSAccessibilityUnknownOrientationValue : NSString;

external NSAccessibilityColumnTitlesAttribute : NSString;

external NSAccessibilitySearchButtonAttribute : NSString;

external NSAccessibilitySearchMenuAttribute : NSString;

external NSAccessibilityClearButtonAttribute : NSString;

external NSAccessibilityRowsAttribute : NSString;

external NSAccessibilityVisibleRowsAttribute : NSString;

external NSAccessibilitySelectedRowsAttribute : NSString;

external NSAccessibilityColumnsAttribute : NSString;

external NSAccessibilityVisibleColumnsAttribute : NSString;

external NSAccessibilitySelectedColumnsAttribute : NSString;

external NSAccessibilitySortDirectionAttribute : NSString;

external NSAccessibilitySelectedCellsAttribute : NSString;

external NSAccessibilityVisibleCellsAttribute : NSString;

external NSAccessibilityRowHeaderUIElementsAttribute : NSString;

external NSAccessibilityColumnHeaderUIElementsAttribute : NSString;

external NSAccessibilityCellForColumnAndRowParameterizedAttribute : NSString;

external NSAccessibilityRowIndexRangeAttribute : NSString;

external NSAccessibilityColumnIndexRangeAttribute : NSString;

external NSAccessibilityHorizontalUnitsAttribute : NSString;

external NSAccessibilityVerticalUnitsAttribute : NSString;

external NSAccessibilityHorizontalUnitDescriptionAttribute : NSString;

external NSAccessibilityVerticalUnitDescriptionAttribute : NSString;

external NSAccessibilityLayoutPointForScreenPointParameterizedAttribute : NSString;

external NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute : NSString;

external NSAccessibilityScreenPointForLayoutPointParameterizedAttribute : NSString;

external NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute : NSString;

external NSAccessibilityHandlesAttribute : NSString;

external NSAccessibilityAscendingSortDirectionValue : NSString;

external NSAccessibilityDescendingSortDirectionValue : NSString;

external NSAccessibilityUnknownSortDirectionValue : NSString;

external NSAccessibilityDisclosingAttribute : NSString;

external NSAccessibilityDisclosedRowsAttribute : NSString;

external NSAccessibilityDisclosedByRowAttribute : NSString;

external NSAccessibilityDisclosureLevelAttribute : NSString;

external NSAccessibilityAllowedValuesAttribute : NSString;

external NSAccessibilityLabelUIElementsAttribute : NSString;

external NSAccessibilityLabelValueAttribute : NSString;

external NSAccessibilityMatteHoleAttribute : NSString;

external NSAccessibilityMatteContentUIElementAttribute : NSString;

external NSAccessibilityMarkerUIElementsAttribute : NSString;

external NSAccessibilityMarkerValuesAttribute : NSString;

external NSAccessibilityMarkerGroupUIElementAttribute : NSString;

external NSAccessibilityUnitsAttribute : NSString;

external NSAccessibilityUnitDescriptionAttribute : NSString;

external NSAccessibilityMarkerTypeAttribute : NSString;

external NSAccessibilityMarkerTypeDescriptionAttribute : NSString;

external NSAccessibilityLeftTabStopMarkerTypeValue : NSString;

external NSAccessibilityRightTabStopMarkerTypeValue : NSString;

external NSAccessibilityCenterTabStopMarkerTypeValue : NSString;

external NSAccessibilityDecimalTabStopMarkerTypeValue : NSString;

external NSAccessibilityHeadIndentMarkerTypeValue : NSString;

external NSAccessibilityTailIndentMarkerTypeValue : NSString;

external NSAccessibilityFirstLineIndentMarkerTypeValue : NSString;

external NSAccessibilityUnknownMarkerTypeValue : NSString;

external NSAccessibilityInchesUnitValue : NSString;

external NSAccessibilityCentimetersUnitValue : NSString;

external NSAccessibilityPointsUnitValue : NSString;

external NSAccessibilityPicasUnitValue : NSString;

external NSAccessibilityUnknownUnitValue : NSString;

external NSAccessibilityPressAction : NSString;

external NSAccessibilityIncrementAction : NSString;

external NSAccessibilityDecrementAction : NSString;

external NSAccessibilityConfirmAction : NSString;

external NSAccessibilityPickAction : NSString;

external NSAccessibilityCancelAction : NSString;

external NSAccessibilityRaiseAction : NSString;

external NSAccessibilityShowMenuAction : NSString;

external NSAccessibilityDeleteAction : NSString;

external NSAccessibilityMainWindowChangedNotification : NSString;

external NSAccessibilityFocusedWindowChangedNotification : NSString;

external NSAccessibilityFocusedUIElementChangedNotification : NSString;

external NSAccessibilityApplicationActivatedNotification : NSString;

external NSAccessibilityApplicationDeactivatedNotification : NSString;

external NSAccessibilityApplicationHiddenNotification : NSString;

external NSAccessibilityApplicationShownNotification : NSString;

external NSAccessibilityWindowCreatedNotification : NSString;

external NSAccessibilityWindowMovedNotification : NSString;

external NSAccessibilityWindowResizedNotification : NSString;

external NSAccessibilityWindowMiniaturizedNotification : NSString;

external NSAccessibilityWindowDeminiaturizedNotification : NSString;

external NSAccessibilityDrawerCreatedNotification : NSString;

external NSAccessibilitySheetCreatedNotification : NSString;

external NSAccessibilityUIElementDestroyedNotification : NSString;

external NSAccessibilityValueChangedNotification : NSString;

external NSAccessibilityTitleChangedNotification : NSString;

external NSAccessibilityResizedNotification : NSString;

external NSAccessibilityMovedNotification : NSString;

external NSAccessibilityCreatedNotification : NSString;

external NSAccessibilityHelpTagCreatedNotification : NSString;

external NSAccessibilitySelectedTextChangedNotification : NSString;

external NSAccessibilityRowCountChangedNotification : NSString;

external NSAccessibilitySelectedChildrenChangedNotification : NSString;

external NSAccessibilitySelectedRowsChangedNotification : NSString;

external NSAccessibilitySelectedColumnsChangedNotification : NSString;

external NSAccessibilityRowExpandedNotification : NSString;

external NSAccessibilityRowCollapsedNotification : NSString;

external NSAccessibilitySelectedCellsChangedNotification : NSString;

external NSAccessibilityUnitsChangedNotification : NSString;

external NSAccessibilitySelectedChildrenMovedNotification : NSString;

external NSAccessibilityUnknownRole : NSString;

external NSAccessibilityButtonRole : NSString;

external NSAccessibilityRadioButtonRole : NSString;

external NSAccessibilityCheckBoxRole : NSString;

external NSAccessibilitySliderRole : NSString;

external NSAccessibilityTabGroupRole : NSString;

external NSAccessibilityTextFieldRole : NSString;

external NSAccessibilityStaticTextRole : NSString;

external NSAccessibilityTextAreaRole : NSString;

external NSAccessibilityScrollAreaRole : NSString;

external NSAccessibilityPopUpButtonRole : NSString;

external NSAccessibilityMenuButtonRole : NSString;

external NSAccessibilityTableRole : NSString;

external NSAccessibilityApplicationRole : NSString;

external NSAccessibilityGroupRole : NSString;

external NSAccessibilityRadioGroupRole : NSString;

external NSAccessibilityListRole : NSString;

external NSAccessibilityScrollBarRole : NSString;

external NSAccessibilityValueIndicatorRole : NSString;

external NSAccessibilityImageRole : NSString;

external NSAccessibilityMenuBarRole : NSString;

external NSAccessibilityMenuRole : NSString;

external NSAccessibilityMenuItemRole : NSString;

external NSAccessibilityColumnRole : NSString;

external NSAccessibilityRowRole : NSString;

external NSAccessibilityToolbarRole : NSString;

external NSAccessibilityBusyIndicatorRole : NSString;

external NSAccessibilityProgressIndicatorRole : NSString;

external NSAccessibilityWindowRole : NSString;

external NSAccessibilityDrawerRole : NSString;

external NSAccessibilitySystemWideRole : NSString;

external NSAccessibilityOutlineRole : NSString;

external NSAccessibilityIncrementorRole : NSString;

external NSAccessibilityBrowserRole : NSString;

external NSAccessibilityComboBoxRole : NSString;

external NSAccessibilitySplitGroupRole : NSString;

external NSAccessibilitySplitterRole : NSString;

external NSAccessibilityColorWellRole : NSString;

external NSAccessibilityGrowAreaRole : NSString;

external NSAccessibilitySheetRole : NSString;

external NSAccessibilityHelpTagRole : NSString;

external NSAccessibilityMatteRole : NSString;

external NSAccessibilityRulerRole : NSString;

external NSAccessibilityRulerMarkerRole : NSString;

external NSAccessibilityLinkRole : NSString;

external NSAccessibilityDisclosureTriangleRole : NSString;

external NSAccessibilityGridRole : NSString;

external NSAccessibilityRelevanceIndicatorRole : NSString;

external NSAccessibilityLevelIndicatorRole : NSString;

external NSAccessibilityCellRole : NSString;

external NSAccessibilityLayoutAreaRole : NSString;

external NSAccessibilityLayoutItemRole : NSString;

external NSAccessibilityHandleRole : NSString;

external NSAccessibilityUnknownSubrole : NSString;

external NSAccessibilityCloseButtonSubrole : NSString;

external NSAccessibilityZoomButtonSubrole : NSString;

external NSAccessibilityMinimizeButtonSubrole : NSString;

external NSAccessibilityToolbarButtonSubrole : NSString;

external NSAccessibilityTableRowSubrole : NSString;

external NSAccessibilityOutlineRowSubrole : NSString;

external NSAccessibilitySecureTextFieldSubrole : NSString;

external NSAccessibilityStandardWindowSubrole : NSString;

external NSAccessibilityDialogSubrole : NSString;

external NSAccessibilitySystemDialogSubrole : NSString;

external NSAccessibilityFloatingWindowSubrole : NSString;

external NSAccessibilitySystemFloatingWindowSubrole : NSString;

external NSAccessibilityIncrementArrowSubrole : NSString;

external NSAccessibilityDecrementArrowSubrole : NSString;

external NSAccessibilityIncrementPageSubrole : NSString;

external NSAccessibilityDecrementPageSubrole : NSString;

external NSAccessibilitySearchFieldSubrole : NSString;

external NSAccessibilityTextAttachmentSubrole : NSString;

external NSAccessibilityTextLinkSubrole : NSString;

external NSAccessibilityTimelineSubrole : NSString;

external NSAccessibilitySortButtonSubrole : NSString;

external NSAccessibilityRatingIndicatorSubrole : NSString;

external NSAccessibilityContentListSubrole : NSString;

external NSAccessibilityDefinitionListSubrole : NSString;

external NSAccessibilitySortButtonRole : NSString;

external NSAccessibilityHorizontialUnitsAttribute : NSString;

external NSAccessibilityHorizontialUnitDescriptionAttribute : NSString;

alias NSAnimationEaseInOut = 0;
alias NSAnimationEaseIn = 1;
alias NSAnimationEaseOut = 2;
alias NSAnimationLinear = 3;

alias NSAnimationCurve = CULong;

alias NSAnimationBlocking = 0;
alias NSAnimationNonblocking = 1;
alias NSAnimationNonblockingThreaded = 2;

alias NSAnimationBlockingMode = CULong;

alias NSAnimationProgress = Float;

external NSAnimationProgressMarkNotification : NSString;

external NSAnimationProgressMark : NSString;

external NSViewAnimationTargetKey : NSString;

external NSViewAnimationStartFrameKey : NSString;

external NSViewAnimationEndFrameKey : NSString;

external NSViewAnimationEffectKey : NSString;

external NSViewAnimationFadeInEffect : NSString;

external NSViewAnimationFadeOutEffect : NSString;

external NSAnimationTriggerOrderIn : NSString;

external NSAnimationTriggerOrderOut : NSString;

alias NSViewNotSizable = 0;
alias NSViewMinXMargin = 1;
alias NSViewWidthSizable = 2;
alias NSViewMaxXMargin = 4;
alias NSViewMinYMargin = 8;
alias NSViewHeightSizable = 16;
alias NSViewMaxYMargin = 32;

alias NSNoBorder = 0;
alias NSLineBorder = 1;
alias NSBezelBorder = 2;
alias NSGrooveBorder = 3;

alias NSBorderType = CULong;

alias NSViewLayerContentsRedrawNever = 0;
alias NSViewLayerContentsRedrawOnSetNeedsDisplay = 1;
alias NSViewLayerContentsRedrawDuringViewResize = 2;
alias NSViewLayerContentsRedrawBeforeViewResize = 3;

alias NSViewLayerContentsRedrawPolicy = CLong;

alias NSViewLayerContentsPlacementScaleAxesIndependently = 0;
alias NSViewLayerContentsPlacementScaleProportionallyToFit = 1;
alias NSViewLayerContentsPlacementScaleProportionallyToFill = 2;
alias NSViewLayerContentsPlacementCenter = 3;
alias NSViewLayerContentsPlacementTop = 4;
alias NSViewLayerContentsPlacementTopRight = 5;
alias NSViewLayerContentsPlacementRight = 6;
alias NSViewLayerContentsPlacementBottomRight = 7;
alias NSViewLayerContentsPlacementBottom = 8;
alias NSViewLayerContentsPlacementBottomLeft = 9;
alias NSViewLayerContentsPlacementLeft = 10;
alias NSViewLayerContentsPlacementTopLeft = 11;

alias NSViewLayerContentsPlacement = CLong;

record Struct___VFlags (
    aboutToResize : UInt,
    retainCountOverMax : UInt,
    retainCount : UInt,
    interfaceStyle1 : UInt,
    specialArchiving : UInt,
    needsDisplayForBounds : UInt,
    interfaceStyle0 : UInt,
    removingWithoutInvalidation : UInt,
    needsBoundsChangeNote : UInt,
    boundsChangeNotesSuspended : UInt,
    focusChangeNotesSuspended : UInt,
    needsFrameChangeNote : UInt,
    frameChangeNotesSuspended : UInt,
    noVerticalAutosizing : UInt,
    newGState : UInt,
    validGState : UInt,
    needsDisplay : UInt,
    wantsGState : UInt,
    autoresizeSubviews : UInt,
    autosizing : UInt,
    rotatedOrScaledFromBase : UInt,
    rotatedFromBase : UInt,
);

alias _VFlags = Struct___VFlags;

alias NSTrackingRectTag = CLong;

alias NSToolTipTag = CLong;

external NSFullScreenModeAllScreens : NSString;

external NSFullScreenModeSetting : NSString;

external NSFullScreenModeWindowLevel : NSString;

external NSFullScreenModeApplicationPresentationOptions : NSString;

external NSDefinitionPresentationTypeKey : NSString;

external NSDefinitionPresentationTypeOverlay : NSString;

external NSDefinitionPresentationTypeDictionaryApplication : NSString;

external NSViewFrameDidChangeNotification : NSString;

external NSViewFocusDidChangeNotification : NSString;

external NSViewBoundsDidChangeNotification : NSString;

external NSViewGlobalFrameDidChangeNotification : NSString;

external NSViewDidUpdateTrackingAreasNotification : NSString;

alias NSEnterCharacter = 3;
alias NSBackspaceCharacter = 8;
alias NSTabCharacter = 9;
alias NSNewlineCharacter = 10;
alias NSFormFeedCharacter = 12;
alias NSCarriageReturnCharacter = 13;
alias NSBackTabCharacter = 25;
alias NSDeleteCharacter = 127;
alias NSLineSeparatorCharacter = 8232;
alias NSParagraphSeparatorCharacter = 8233;

alias NSLeftTextAlignment = 0;
alias NSRightTextAlignment = 1;
alias NSCenterTextAlignment = 2;
alias NSJustifiedTextAlignment = 3;
alias NSNaturalTextAlignment = 4;

alias NSTextAlignment = CULong;

alias NSWritingDirectionNatural = 4294967295;
alias NSWritingDirectionLeftToRight = 0;
alias NSWritingDirectionRightToLeft = 1;

alias NSWritingDirection = CLong;

alias NSTextWritingDirectionEmbedding = 0;
alias NSTextWritingDirectionOverride = 2;

alias NSIllegalTextMovement = 0;
alias NSReturnTextMovement = 16;
alias NSTabTextMovement = 17;
alias NSBacktabTextMovement = 18;
alias NSLeftTextMovement = 19;
alias NSRightTextMovement = 20;
alias NSUpTextMovement = 21;
alias NSDownTextMovement = 22;
alias NSCancelTextMovement = 23;
alias NSOtherTextMovement = 0;

external NSTextDidBeginEditingNotification : NSString;

external NSTextDidEndEditingNotification : NSString;

external NSTextDidChangeNotification : NSString;

alias NSLeftTabStopType = 0;
alias NSRightTabStopType = 1;
alias NSCenterTabStopType = 2;
alias NSDecimalTabStopType = 3;

alias NSTextTabType = CULong;

alias NSLineBreakByWordWrapping = 0;
alias NSLineBreakByCharWrapping = 1;
alias NSLineBreakByClipping = 2;
alias NSLineBreakByTruncatingHead = 3;
alias NSLineBreakByTruncatingTail = 4;
alias NSLineBreakByTruncatingMiddle = 5;

alias NSLineBreakMode = CULong;

external NSTabColumnTerminatorsAttributeName : NSString;

alias NSWorkspaceLaunchOptions = CULong;

alias NSWorkspaceLaunchAndPrint = 2;
alias NSWorkspaceLaunchInhibitingBackgroundOnly = 128;
alias NSWorkspaceLaunchWithoutAddingToRecents = 256;
alias NSWorkspaceLaunchWithoutActivation = 512;
alias NSWorkspaceLaunchAsync = 65536;
alias NSWorkspaceLaunchAllowingClassicStartup = 131072;
alias NSWorkspaceLaunchPreferringClassic = 262144;
alias NSWorkspaceLaunchNewInstance = 524288;
alias NSWorkspaceLaunchAndHide = 1048576;
alias NSWorkspaceLaunchAndHideOthers = 2097152;
alias NSWorkspaceLaunchDefault = 196608;

alias NSWorkspaceIconCreationOptions = CULong;

alias NSExcludeQuickDrawElementsIconCreationOption = 2;
alias NSExclude10_4ElementsIconCreationOption = 4;

external NSWorkspaceDesktopImageScalingKey : NSString;

external NSWorkspaceDesktopImageAllowClippingKey : NSString;

external NSWorkspaceDesktopImageFillColorKey : NSString;

external NSWorkspaceApplicationKey : NSString;

external NSWorkspaceWillLaunchApplicationNotification : NSString;

external NSWorkspaceDidLaunchApplicationNotification : NSString;

external NSWorkspaceDidTerminateApplicationNotification : NSString;

external NSWorkspaceDidHideApplicationNotification : NSString;

external NSWorkspaceDidUnhideApplicationNotification : NSString;

external NSWorkspaceDidActivateApplicationNotification : NSString;

external NSWorkspaceDidDeactivateApplicationNotification : NSString;

external NSWorkspaceVolumeLocalizedNameKey : NSString;

external NSWorkspaceVolumeURLKey : NSString;

external NSWorkspaceVolumeOldLocalizedNameKey : NSString;

external NSWorkspaceVolumeOldURLKey : NSString;

external NSWorkspaceDidMountNotification : NSString;

external NSWorkspaceDidUnmountNotification : NSString;

external NSWorkspaceWillUnmountNotification : NSString;

external NSWorkspaceDidRenameVolumeNotification : NSString;

external NSWorkspaceWillPowerOffNotification : NSString;

external NSWorkspaceWillSleepNotification : NSString;

external NSWorkspaceDidWakeNotification : NSString;

external NSWorkspaceScreensDidSleepNotification : NSString;

external NSWorkspaceScreensDidWakeNotification : NSString;

external NSWorkspaceSessionDidBecomeActiveNotification : NSString;

external NSWorkspaceSessionDidResignActiveNotification : NSString;

external NSWorkspaceDidPerformFileOperationNotification : NSString;

external NSWorkspaceDidChangeFileLabelsNotification : NSString;

external NSWorkspaceActiveSpaceDidChangeNotification : NSString;

external NSWorkspaceLaunchConfigurationAppleEvent : NSString;

external NSWorkspaceLaunchConfigurationArguments : NSString;

external NSWorkspaceLaunchConfigurationEnvironment : NSString;

external NSWorkspaceLaunchConfigurationArchitecture : NSString;

external NSWorkspaceMoveOperation : NSString;

external NSWorkspaceCopyOperation : NSString;

external NSWorkspaceLinkOperation : NSString;

external NSWorkspaceCompressOperation : NSString;

external NSWorkspaceDecompressOperation : NSString;

external NSWorkspaceEncryptOperation : NSString;

external NSWorkspaceDecryptOperation : NSString;

external NSWorkspaceDestroyOperation : NSString;

external NSWorkspaceRecycleOperation : NSString;

external NSWorkspaceDuplicateOperation : NSString;

external NSPlainFileType : NSString;

external NSDirectoryFileType : NSString;

external NSApplicationFileType : NSString;

external NSFilesystemFileType : NSString;

external NSShellCommandFileType : NSString;

alias NSApplicationActivateAllWindows = 1;
alias NSApplicationActivateIgnoringOtherApps = 2;

alias NSApplicationActivationOptions = CULong;

alias NSApplicationActivationPolicyRegular = 0;
alias NSApplicationActivationPolicyAccessory = 1;
alias NSApplicationActivationPolicyProhibited = 2;

alias NSApplicationActivationPolicy = CLong;

external NSAppKitVersionNumber : Double;

external NSModalPanelRunLoopMode : NSString;

external NSEventTrackingRunLoopMode : NSString;

alias NSRunStoppedResponse = 4294966296;
alias NSRunAbortedResponse = 4294966295;
alias NSRunContinuesResponse = 4294966294;

alias NSUpdateWindowsRunLoopOrdering = 500000;

alias NSApplicationPresentationDefault = 0;
alias NSApplicationPresentationAutoHideDock = 1;
alias NSApplicationPresentationHideDock = 2;
alias NSApplicationPresentationAutoHideMenuBar = 4;
alias NSApplicationPresentationHideMenuBar = 8;
alias NSApplicationPresentationDisableAppleMenu = 16;
alias NSApplicationPresentationDisableProcessSwitching = 32;
alias NSApplicationPresentationDisableForceQuit = 64;
alias NSApplicationPresentationDisableSessionTermination = 128;
alias NSApplicationPresentationDisableHideApplication = 256;
alias NSApplicationPresentationDisableMenuBarTransparency = 512;

alias NSApplicationPresentationOptions = CULong;

external NSApp : Id;

alias NSModalSession = OpaquePointer;

alias _NSThreadPrivate = Opaque;

alias NSTerminateCancel = 0;
alias NSTerminateNow = 1;
alias NSTerminateLater = 2;

alias NSApplicationTerminateReply = CULong;

alias NSPrintingCancelled = 0;
alias NSPrintingSuccess = 1;
alias NSPrintingFailure = 3;
alias NSPrintingReplyLater = 2;

alias NSApplicationPrintReply = CULong;

alias NSUserInterfaceLayoutDirectionLeftToRight = 0;
alias NSUserInterfaceLayoutDirectionRightToLeft = 1;

alias NSUserInterfaceLayoutDirection = CLong;

external NSApplicationMain(
    argc : Int,
    argv : Pointer[Pointer[CChar]]) : Int;

external NSApplicationLoad() : Bool;

external NSShowsServicesMenuItem(
    itemName : NSString) : Bool;

external NSSetShowsServicesMenuItem(
    itemName : NSString,
    enabled : Bool) : CLong;

external NSUpdateDynamicServices();

external NSPerformService(
    itemName : NSString,
    pboard : NSPasteboard) : Bool;

external NSRegisterServicesProvider(
    provider : Id,
    name : NSString);

external NSUnregisterServicesProvider(
    name : NSString);

external NSApplicationDidBecomeActiveNotification : NSString;

external NSApplicationDidHideNotification : NSString;

external NSApplicationDidFinishLaunchingNotification : NSString;

external NSApplicationDidResignActiveNotification : NSString;

external NSApplicationDidUnhideNotification : NSString;

external NSApplicationDidUpdateNotification : NSString;

external NSApplicationWillBecomeActiveNotification : NSString;

external NSApplicationWillHideNotification : NSString;

external NSApplicationWillFinishLaunchingNotification : NSString;

external NSApplicationWillResignActiveNotification : NSString;

external NSApplicationWillUnhideNotification : NSString;

external NSApplicationWillUpdateNotification : NSString;

external NSApplicationWillTerminateNotification : NSString;

external NSApplicationDidChangeScreenParametersNotification : NSString;

alias NSAnyType = 0;
alias NSIntType = 1;
alias NSPositiveIntType = 2;
alias NSFloatType = 3;
alias NSPositiveFloatType = 4;
alias NSDoubleType = 6;
alias NSPositiveDoubleType = 7;

alias NSNullCellType = 0;
alias NSTextCellType = 1;
alias NSImageCellType = 2;

alias NSCellType = CULong;

alias NSCellDisabled = 0;
alias NSCellState = 1;
alias NSPushInCell = 2;
alias NSCellEditable = 3;
alias NSChangeGrayCell = 4;
alias NSCellHighlighted = 5;
alias NSCellLightsByContents = 6;
alias NSCellLightsByGray = 7;
alias NSChangeBackgroundCell = 8;
alias NSCellLightsByBackground = 9;
alias NSCellIsBordered = 10;
alias NSCellHasOverlappingImage = 11;
alias NSCellHasImageHorizontal = 12;
alias NSCellHasImageOnLeftOrBottom = 13;
alias NSCellChangesContents = 14;
alias NSCellIsInsetButton = 15;
alias NSCellAllowsMixedState = 16;

alias NSCellAttribute = CULong;

alias NSNoImage = 0;
alias NSImageOnly = 1;
alias NSImageLeft = 2;
alias NSImageRight = 3;
alias NSImageBelow = 4;
alias NSImageAbove = 5;
alias NSImageOverlaps = 6;

alias NSCellImagePosition = CULong;

alias NSImageScaleProportionallyDown = 0;
alias NSImageScaleAxesIndependently = 1;
alias NSImageScaleNone = 2;
alias NSImageScaleProportionallyUpOrDown = 3;

alias NSImageScaling = CULong;

alias NSMixedState = 4294967295;
alias NSOffState = 0;
alias NSOnState = 1;

alias NSCellStateValue = CLong;

alias NSNoCellMask = 0;
alias NSContentsCellMask = 1;
alias NSPushInCellMask = 2;
alias NSChangeGrayCellMask = 4;
alias NSChangeBackgroundCellMask = 8;

alias NSDefaultControlTint = 0;
alias NSBlueControlTint = 1;
alias NSGraphiteControlTint = 6;
alias NSClearControlTint = 7;

alias NSControlTint = CULong;

alias NSRegularControlSize = 0;
alias NSSmallControlSize = 1;
alias NSMiniControlSize = 2;

alias NSControlSize = CULong;

record Struct___CFlags (
    state : UInt,
    highlighted : UInt,
    disabled : UInt,
    editable : UInt,
    type : CULong,
    vCentered : UInt,
    hCentered : UInt,
    bordered : UInt,
    bezeled : UInt,
    selectable : UInt,
    scrollable : UInt,
    continuous : UInt,
    actOnMouseDown : UInt,
    isLeaf : UInt,
    invalidObjectValue : UInt,
    invalidFont : UInt,
    lineBreakMode : CULong,
    cellReserved1 : UInt,
    singleLineMode : UInt,
    actOnMouseDragged : UInt,
    isLoaded : UInt,
    truncateLastLine : UInt,
    dontActOnMouseUp : UInt,
    isWhite : UInt,
    useUserKeyEquivalent : UInt,
    showsFirstResponder : UInt,
    focusRingType : UInt,
    wasSelectable : UInt,
    hasInvalidObject : UInt,
    allowsEditingTextAttributes : UInt,
    importsGraphics : UInt,
    alignment : CULong,
    layoutDirectionRTL : UInt,
    backgroundStyle : UInt,
    cellReserved2 : UInt,
    refusesFirstResponder : UInt,
    needsHighlightedText : UInt,
    dontAllowsUndo : UInt,
    currentlyEditing : UInt,
    allowsMixedState : UInt,
    inMixedState : UInt,
    sendsActionOnEndEditing : UInt,
    inSendAction : UInt,
    menuWasSet : UInt,
    controlTint : UInt,
    controlSize : UInt,
    branchImageDisabled : UInt,
    drawingInRevealover : UInt,
    needsHighlightedTextHint : UInt,
);

alias _CFlags = Struct___CFlags;

external NSControlTintDidChangeNotification : NSString;

alias NSCellHitNone = 0;
alias NSCellHitContentArea = 1;
alias NSCellHitEditableTextArea = 2;
alias NSCellHitTrackableArea = 4;

alias NSBackgroundStyleLight = 0;
alias NSBackgroundStyleDark = 1;
alias NSBackgroundStyleRaised = 2;
alias NSBackgroundStyleLowered = 3;

alias NSBackgroundStyle = CLong;

external NSDrawThreePartImage(
    frame : NSRect,
    startCap : NSImage,
    centerFill : NSImage,
    endCap : NSImage,
    vertical : Bool,
    op : CULong,
    alphaFraction : Double,
    flipped : Bool);

external NSDrawNinePartImage(
    frame : NSRect,
    topLeftCorner : NSImage,
    topEdgeFill : NSImage,
    topRightCorner : NSImage,
    leftEdgeFill : NSImage,
    centerFill : NSImage,
    rightEdgeFill : NSImage,
    bottomLeftCorner : NSImage,
    bottomEdgeFill : NSImage,
    bottomRightCorner : NSImage,
    op : CULong,
    alphaFraction : Double,
    flipped : Bool);

alias NSWarningAlertStyle = 0;
alias NSInformationalAlertStyle = 1;
alias NSCriticalAlertStyle = 2;

alias NSAlertStyle = CULong;

alias NSNoTitle = 0;
alias NSAboveTop = 1;
alias NSAtTop = 2;
alias NSBelowTop = 3;
alias NSAboveBottom = 4;
alias NSAtBottom = 5;
alias NSBelowBottom = 6;

alias NSTitlePosition = CULong;

alias NSBoxPrimary = 0;
alias NSBoxSecondary = 1;
alias NSBoxSeparator = 2;
alias NSBoxOldStyle = 3;
alias NSBoxCustom = 4;

alias NSBoxType = CULong;

external NSControlTextDidBeginEditingNotification : NSString;

external NSControlTextDidEndEditingNotification : NSString;

external NSControlTextDidChangeNotification : NSString;

alias NSMomentaryLightButton = 0;
alias NSPushOnPushOffButton = 1;
alias NSToggleButton = 2;
alias NSSwitchButton = 3;
alias NSRadioButton = 4;
alias NSMomentaryChangeButton = 5;
alias NSOnOffButton = 6;
alias NSMomentaryPushInButton = 7;
alias NSMomentaryPushButton = 0;
alias NSMomentaryLight = 7;

alias NSButtonType = CULong;

alias NSRoundedBezelStyle = 1;
alias NSRegularSquareBezelStyle = 2;
alias NSThickSquareBezelStyle = 3;
alias NSThickerSquareBezelStyle = 4;
alias NSDisclosureBezelStyle = 5;
alias NSShadowlessSquareBezelStyle = 6;
alias NSCircularBezelStyle = 7;
alias NSTexturedSquareBezelStyle = 8;
alias NSHelpButtonBezelStyle = 9;
alias NSSmallSquareBezelStyle = 10;
alias NSTexturedRoundedBezelStyle = 11;
alias NSRoundRectBezelStyle = 12;
alias NSRecessedBezelStyle = 13;
alias NSRoundedDisclosureBezelStyle = 14;
alias NSSmallIconButtonBezelStyle = 2;

alias NSBezelStyle = CULong;

record Struct___BCFlags (
    alternateMnemonicLocation : UInt,
    useButtonImageSource : UInt,
    reserved : UInt,
    suppressAXValueChangeNote : UInt,
    doesNotDimImage : UInt,
    inset : UInt,
    transparent : UInt,
    lastState : UInt,
    hasKeyEquivalentInsteadOfImage : UInt,
    imageSizeDiff : UInt,
    imageAndText : UInt,
    bottomOrLeft : UInt,
    horizontal : UInt,
    imageOverlaps : UInt,
    bordered : UInt,
    drawing : UInt,
    lightByGray : UInt,
    lightByBackground : UInt,
    lightByContents : UInt,
    changeGray : UInt,
    changeBackground : UInt,
    changeContents : UInt,
    pushIn : UInt,
);

alias _BCFlags = Struct___BCFlags;

record Struct___BCFlags2 (
    bezelStyle : UInt,
    showsBorderOnlyWhileMouseInside : UInt,
    mouseInside : UInt,
    bezelStyle2 : UInt,
    imageScaling : UInt,
    keyEquivalentModifierMask : UInt,
);

alias _BCFlags2 = Struct___BCFlags2;

alias NSGradientNone = 0;
alias NSGradientConcaveWeak = 1;
alias NSGradientConcaveStrong = 2;
alias NSGradientConvexWeak = 3;
alias NSGradientConvexStrong = 4;

alias NSGradientType = CULong;

alias NSGlyph = UInt;

alias NSControlGlyph = 16777215;
alias NSNullGlyph = 0;

external NSFontIdentityMatrix : Pointer[Double];

alias NSNativeShortGlyphPacking = 5;

alias NSMultibyteGlyphPacking = CULong;

alias NSFontDefaultRenderingMode = 0;
alias NSFontAntialiasedRenderingMode = 1;
alias NSFontIntegerAdvancementsRenderingMode = 2;
alias NSFontAntialiasedIntegerAdvancementsRenderingMode = 3;

alias NSFontRenderingMode = CULong;

external NSConvertGlyphsToPackedGlyphs(
    glBuf : Pointer[UInt],
    count : CLong,
    packing : CULong,
    packedGlyphs : Pointer[CChar]) : CLong;

external NSAntialiasThresholdChangedNotification : NSString;

external NSFontSetChangedNotification : NSString;

alias NSFontSymbolicTraits = UInt;

alias NSFontUnknownClass = 0;
alias NSFontOldStyleSerifsClass = 268435456;
alias NSFontTransitionalSerifsClass = 536870912;
alias NSFontModernSerifsClass = 805306368;
alias NSFontClarendonSerifsClass = 1073741824;
alias NSFontSlabSerifsClass = 1342177280;
alias NSFontFreeformSerifsClass = 1879048192;
alias NSFontSansSerifClass = 2147483648;
alias NSFontOrnamentalsClass = 2415919104;
alias NSFontScriptsClass = 2684354560;
alias NSFontSymbolicClass = 3221225472;

alias NSFontFamilyClass = UInt;

alias NSFontFamilyClassMask = 4026531840;

alias NSFontItalicTrait = 1;
alias NSFontBoldTrait = 2;
alias NSFontExpandedTrait = 32;
alias NSFontCondensedTrait = 64;
alias NSFontMonoSpaceTrait = 1024;
alias NSFontVerticalTrait = 2048;
alias NSFontUIOptimizedTrait = 4096;

external NSFontFamilyAttribute : NSString;

external NSFontNameAttribute : NSString;

external NSFontFaceAttribute : NSString;

external NSFontSizeAttribute : NSString;

external NSFontVisibleNameAttribute : NSString;

external NSFontMatrixAttribute : NSString;

external NSFontVariationAttribute : NSString;

external NSFontCharacterSetAttribute : NSString;

external NSFontCascadeListAttribute : NSString;

external NSFontTraitsAttribute : NSString;

external NSFontFixedAdvanceAttribute : NSString;

external NSFontFeatureSettingsAttribute : NSString;

external NSFontColorAttribute : NSString;

external NSFontSymbolicTrait : NSString;

external NSFontWeightTrait : NSString;

external NSFontWidthTrait : NSString;

external NSFontSlantTrait : NSString;

external NSFontVariationAxisIdentifierKey : NSString;

external NSFontVariationAxisMinimumValueKey : NSString;

external NSFontVariationAxisMaximumValueKey : NSString;

external NSFontVariationAxisDefaultValueKey : NSString;

external NSFontVariationAxisNameKey : NSString;

external NSFontFeatureTypeIdentifierKey : NSString;

external NSFontFeatureSelectorIdentifierKey : NSString;

alias NSFontTraitMask = CULong;

alias NSItalicFontMask = 1;
alias NSBoldFontMask = 2;
alias NSUnboldFontMask = 4;
alias NSNonStandardCharacterSetFontMask = 8;
alias NSNarrowFontMask = 16;
alias NSExpandedFontMask = 32;
alias NSCondensedFontMask = 64;
alias NSSmallCapsFontMask = 128;
alias NSPosterFontMask = 256;
alias NSCompressedFontMask = 512;
alias NSFixedPitchFontMask = 1024;
alias NSUnitalicFontMask = 16777216;

alias NSFontCollectionApplicationOnlyMask = 1;

alias NSNoFontChangeAction = 0;
alias NSViaPanelFontAction = 1;
alias NSAddTraitFontAction = 2;
alias NSSizeUpFontAction = 3;
alias NSSizeDownFontAction = 4;
alias NSHeavierFontAction = 5;
alias NSLighterFontAction = 6;
alias NSRemoveTraitFontAction = 7;

alias NSFontAction = CULong;

alias NSBorderlessWindowMask = 0;
alias NSTitledWindowMask = 1;
alias NSClosableWindowMask = 2;
alias NSMiniaturizableWindowMask = 4;
alias NSResizableWindowMask = 8;

alias NSTexturedBackgroundWindowMask = 256;

alias NSUnscaledWindowMask = 2048;

alias NSUnifiedTitleAndToolbarWindowMask = 4096;

alias NSDisplayWindowRunLoopOrdering = 600000;
alias NSResetCursorRectsRunLoopOrdering = 700000;

alias NSWindowSharingNone = 0;
alias NSWindowSharingReadOnly = 1;
alias NSWindowSharingReadWrite = 2;

alias NSWindowSharingType = CULong;

alias NSWindowBackingLocationDefault = 0;
alias NSWindowBackingLocationVideoMemory = 1;
alias NSWindowBackingLocationMainMemory = 2;

alias NSWindowBackingLocation = CULong;

alias NSWindowCollectionBehaviorDefault = 0;
alias NSWindowCollectionBehaviorCanJoinAllSpaces = 1;
alias NSWindowCollectionBehaviorMoveToActiveSpace = 2;

alias NSWindowCollectionBehaviorManaged = 4;
alias NSWindowCollectionBehaviorTransient = 8;
alias NSWindowCollectionBehaviorStationary = 16;

alias NSWindowCollectionBehaviorParticipatesInCycle = 32;
alias NSWindowCollectionBehaviorIgnoresCycle = 64;

alias NSWindowCollectionBehavior = CULong;

alias NSWindowNumberListAllApplications = 1;
alias NSWindowNumberListAllSpaces = 16;

alias NSWindowNumberListOptions = CULong;

alias NSDirectSelection = 0;
alias NSSelectingNext = 1;
alias NSSelectingPrevious = 2;

alias NSSelectionDirection = CULong;

alias NSWindowCloseButton = 0;
alias NSWindowMiniaturizeButton = 1;
alias NSWindowZoomButton = 2;
alias NSWindowToolbarButton = 3;
alias NSWindowDocumentIconButton = 4;

alias NSWindowButton = CULong;

external NSWindowDidBecomeKeyNotification : NSString;

external NSWindowDidBecomeMainNotification : NSString;

external NSWindowDidChangeScreenNotification : NSString;

external NSWindowDidDeminiaturizeNotification : NSString;

external NSWindowDidExposeNotification : NSString;

external NSWindowDidMiniaturizeNotification : NSString;

external NSWindowDidMoveNotification : NSString;

external NSWindowDidResignKeyNotification : NSString;

external NSWindowDidResignMainNotification : NSString;

external NSWindowDidResizeNotification : NSString;

external NSWindowDidUpdateNotification : NSString;

external NSWindowWillCloseNotification : NSString;

external NSWindowWillMiniaturizeNotification : NSString;

external NSWindowWillMoveNotification : NSString;

external NSWindowWillBeginSheetNotification : NSString;

external NSWindowDidEndSheetNotification : NSString;

external NSWindowDidChangeScreenProfileNotification : NSString;

external NSWindowWillStartLiveResizeNotification : NSString;

external NSWindowDidEndLiveResizeNotification : NSString;

external NSRunAlertPanel(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    ..) : CLong;

external NSRunInformationalAlertPanel(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    ..) : CLong;

external NSRunCriticalAlertPanel(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    ..) : CLong;

external NSRunAlertPanelRelativeToWindow(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    docWindow : NSWindow,
    ..) : CLong;

external NSRunInformationalAlertPanelRelativeToWindow(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    docWindow : NSWindow,
    ..) : CLong;

external NSRunCriticalAlertPanelRelativeToWindow(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    docWindow : NSWindow,
    ..) : CLong;

external NSBeginAlertSheet(
    title : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    docWindow : NSWindow,
    modalDelegate : Id,
    didEndSelector : SelectorHandle,
    didDismissSelector : SelectorHandle,
    contextInfo : RawPointer,
    msgFormat : NSString,
    ..);

external NSBeginInformationalAlertSheet(
    title : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    docWindow : NSWindow,
    modalDelegate : Id,
    didEndSelector : SelectorHandle,
    didDismissSelector : SelectorHandle,
    contextInfo : RawPointer,
    msgFormat : NSString,
    ..);

external NSBeginCriticalAlertSheet(
    title : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    docWindow : NSWindow,
    modalDelegate : Id,
    didEndSelector : SelectorHandle,
    didDismissSelector : SelectorHandle,
    contextInfo : RawPointer,
    msgFormat : NSString,
    ..);

external NSGetAlertPanel(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    ..) : Id;

external NSGetInformationalAlertPanel(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    ..) : Id;

external NSGetCriticalAlertPanel(
    title : NSString,
    msgFormat : NSString,
    defaultButton : NSString,
    alternateButton : NSString,
    otherButton : NSString,
    ..) : Id;

external NSReleaseAlertPanel(
    panel : Id);

alias NSAlertDefaultReturn = 1;
alias NSAlertAlternateReturn = 0;
alias NSAlertOtherReturn = 4294967295;
alias NSAlertErrorReturn = 4294967294;

alias NSOKButton = 1;
alias NSCancelButton = 0;

alias NSUtilityWindowMask = 16;
alias NSDocModalWindowMask = 64;

alias NSNonactivatingPanelMask = 128;

alias NSHUDWindowMask = 8192;

alias NSFPPreviewButton = 131;
alias NSFPRevertButton = 130;
alias NSFPSetButton = 132;
alias NSFPPreviewField = 128;
alias NSFPSizeField = 129;
alias NSFPSizeTitle = 133;
alias NSFPCurrentField = 134;

alias NSFontPanelFaceModeMask = 1;
alias NSFontPanelSizeModeMask = 2;
alias NSFontPanelCollectionModeMask = 4;
alias NSFontPanelUnderlineEffectModeMask = 256;
alias NSFontPanelStrikethroughEffectModeMask = 512;
alias NSFontPanelTextColorEffectModeMask = 1024;
alias NSFontPanelDocumentColorEffectModeMask = 2048;
alias NSFontPanelShadowEffectModeMask = 4096;
alias NSFontPanelAllEffectsModeMask = 1048320;
alias NSFontPanelStandardModesMask = 65535;
alias NSFontPanelAllModesMask = 4294967295;

alias NSRadioModeMatrix = 0;
alias NSHighlightModeMatrix = 1;
alias NSListModeMatrix = 2;
alias NSTrackModeMatrix = 3;

alias NSMatrixMode = CULong;

record Struct___MFlags (
    reservedMatrix : UInt,
    drawingContextMenuHighlightOnAllSelectedRows : UInt,
    drawingContextMenuHighlight : UInt,
    browserOptimizationsEnabled : UInt,
    needsRedrawBeforeFirstLiveResizeCache : UInt,
    tmpAllowNonVisibleCellsToBecomeFirstResponder : UInt,
    subclassIsSafeForLiveResize : UInt,
    hasCachedSubclassIsSafeForLiveResize : UInt,
    liveResizeImageCacheingEnabled : UInt,
    checkForSimpleTrackingMode : UInt,
    useSimpleTrackingMode : UInt,
    refusesFirstResponder : UInt,
    dontScroll : UInt,
    changingSelectionWithKeyboard : UInt,
    onlySetKeyCell : UInt,
    currentlySelectingCell : UInt,
    allowsIncrementalSearching : UInt,
    tabKeyTraversesCellsExplicitlySet : UInt,
    tabKeyTraversesCells : UInt,
    drawingAncestor : UInt,
    autosizeCells : UInt,
    drawsBackground : UInt,
    drawsCellBackground : UInt,
    selectionByRect : UInt,
    autoscroll : UInt,
    allowEmptySel : UInt,
    listMode : UInt,
    radioMode : UInt,
    highlightMode : UInt,
);

alias _MFlags = Struct___MFlags;

alias NSMenuPropertyItemTitle = 1;
alias NSMenuPropertyItemAttributedTitle = 2;
alias NSMenuPropertyItemKeyEquivalent = 4;
alias NSMenuPropertyItemImage = 8;
alias NSMenuPropertyItemEnabled = 16;
alias NSMenuPropertyItemAccessibilityDescription = 32;

alias NSMenuProperties = CULong;

external NSMenuWillSendActionNotification : NSString;

external NSMenuDidSendActionNotification : NSString;

external NSMenuDidAddItemNotification : NSString;

external NSMenuDidRemoveItemNotification : NSString;

external NSMenuDidChangeItemNotification : NSString;

external NSMenuDidBeginTrackingNotification : NSString;

external NSMenuDidEndTrackingNotification : NSString;

external NSPasteboardTypeString : NSString;

external NSPasteboardTypePDF : NSString;

external NSPasteboardTypeTIFF : NSString;

external NSPasteboardTypePNG : NSString;

external NSPasteboardTypeRTF : NSString;

external NSPasteboardTypeRTFD : NSString;

external NSPasteboardTypeHTML : NSString;

external NSPasteboardTypeTabularText : NSString;

external NSPasteboardTypeFont : NSString;

external NSPasteboardTypeRuler : NSString;

external NSPasteboardTypeColor : NSString;

external NSPasteboardTypeSound : NSString;

external NSPasteboardTypeMultipleTextSelection : NSString;

external NSPasteboardTypeFindPanelSearchOptions : NSString;

external NSGeneralPboard : NSString;

external NSFontPboard : NSString;

external NSRulerPboard : NSString;

external NSFindPboard : NSString;

external NSDragPboard : NSString;

external NSPasteboardURLReadingFileURLsOnlyKey : NSString;

external NSPasteboardURLReadingContentsConformToTypesKey : NSString;

alias NSPasteboardWritingPromised = 512;

alias NSPasteboardWritingOptions = CULong;

alias NSPasteboardReadingAsData = 0;
alias NSPasteboardReadingAsString = 1;
alias NSPasteboardReadingAsPropertyList = 2;
alias NSPasteboardReadingAsKeyedArchive = 4;

alias NSPasteboardReadingOptions = CULong;

external NSStringPboardType : NSString;

external NSFilenamesPboardType : NSString;

external NSTIFFPboardType : NSString;

external NSRTFPboardType : NSString;

external NSTabularTextPboardType : NSString;

external NSFontPboardType : NSString;

external NSRulerPboardType : NSString;

external NSColorPboardType : NSString;

external NSRTFDPboardType : NSString;

external NSHTMLPboardType : NSString;

external NSURLPboardType : NSString;

external NSPDFPboardType : NSString;

external NSMultipleTextSelectionPboardType : NSString;

external NSPostScriptPboardType : NSString;

external NSVCardPboardType : NSString;

external NSInkTextPboardType : NSString;

external NSFilesPromisePboardType : NSString;

external NSFileContentsPboardType : NSString;

external NSCreateFilenamePboardType(
    fileType : NSString) : NSString;

external NSCreateFileContentsPboardType(
    fileType : NSString) : NSString;

external NSGetFileType(
    pboardType : NSString) : NSString;

external NSGetFileTypes(
    pboardTypes : NSArray) : NSArray;

external NSPICTPboardType : NSString;

external NSSystemColorsDidChangeNotification : NSString;

alias NSUnknownColorSpaceModel = 4294967295;
alias NSGrayColorSpaceModel = 0;
alias NSRGBColorSpaceModel = 1;
alias NSCMYKColorSpaceModel = 2;
alias NSLABColorSpaceModel = 3;
alias NSDeviceNColorSpaceModel = 4;
alias NSIndexedColorSpaceModel = 5;
alias NSPatternColorSpaceModel = 6;

alias NSColorSpaceModel = CLong;

alias NSImageRepMatchesDevice = 0;

external NSImageRepRegistryDidChangeNotification : NSString;

alias NSTIFFCompressionNone = 1;
alias NSTIFFCompressionCCITTFAX3 = 3;
alias NSTIFFCompressionCCITTFAX4 = 4;
alias NSTIFFCompressionLZW = 5;
alias NSTIFFCompressionJPEG = 6;
alias NSTIFFCompressionNEXT = 32766;
alias NSTIFFCompressionPackBits = 32773;
alias NSTIFFCompressionOldJPEG = 32865;

alias NSTIFFCompression = CULong;

alias NSTIFFFileType = 0;
alias NSBMPFileType = 1;
alias NSGIFFileType = 2;
alias NSJPEGFileType = 3;
alias NSPNGFileType = 4;
alias NSJPEG2000FileType = 5;

alias NSBitmapImageFileType = CULong;

alias NSImageRepLoadStatusUnknownType = 4294967295;
alias NSImageRepLoadStatusReadingHeader = 4294967294;
alias NSImageRepLoadStatusWillNeedAllData = 4294967293;
alias NSImageRepLoadStatusInvalidData = 4294967292;
alias NSImageRepLoadStatusUnexpectedEOF = 4294967291;
alias NSImageRepLoadStatusCompleted = 4294967290;

alias NSImageRepLoadStatus = CLong;

alias NSAlphaFirstBitmapFormat = 1;
alias NSAlphaNonpremultipliedBitmapFormat = 2;
alias NSFloatingPointSamplesBitmapFormat = 4;

alias NSBitmapFormat = CULong;

external NSImageCompressionMethod : NSString;

external NSImageCompressionFactor : NSString;

external NSImageDitherTransparency : NSString;

external NSImageRGBColorTable : NSString;

external NSImageInterlaced : NSString;

external NSImageColorSyncProfileData : NSString;

external NSImageFrameCount : NSString;

external NSImageCurrentFrame : NSString;

external NSImageCurrentFrameDuration : NSString;

external NSImageLoopCount : NSString;

external NSImageGamma : NSString;

external NSImageProgressive : NSString;

external NSImageEXIFData : NSString;

external NSImageFallbackBackgroundColor : NSString;

alias NSDragOperation = CULong;

alias NSDragOperationNone = 0;
alias NSDragOperationCopy = 1;
alias NSDragOperationLink = 2;
alias NSDragOperationGeneric = 4;
alias NSDragOperationPrivate = 8;
alias NSDragOperationAll_Obsolete = 15;
alias NSDragOperationMove = 16;
alias NSDragOperationDelete = 32;
alias NSDragOperationEvery = 18446744073709551615;

record Struct___Brflags (
    firstVisibleCalculationDisabled : UInt,
    prefersAllColumnUserResizing : UInt,
    usesSmallScrollers : UInt,
    usesSmallSizeTitleFont : UInt,
    actionNeedsToBeSent : UInt,
    acceptsFirstMouse : UInt,
    refusesFirstResponder : UInt,
    disableCompositing : UInt,
    delegateSelectsCellsByRow : UInt,
    allowsIncrementalSearching : UInt,
    time : UInt,
    hasHorizontalScroller : UInt,
    prohibitEmptySel : UInt,
    sendActionOnArrowKeys : UInt,
    dontDrawTitles : UInt,
    acceptArrowKeys : UInt,
    delegateValidatesColumns : UInt,
    delegateDoesNotCreateRowsInMatrix : UInt,
    delegateSelectsCellsByString : UInt,
    delegateSetsTitles : UInt,
    delegateImplementsWillDisplayCell : UInt,
    separateColumns : UInt,
    titleFromPrevious : UInt,
    isTitled : UInt,
    reuseColumns : UInt,
    allowsBranchSelection : UInt,
    allowsMultipleSelection : UInt,
);

alias _Brflags = Struct___Brflags;

alias NSBrowserNoColumnResizing = 0;
alias NSBrowserAutoColumnResizing = 1;
alias NSBrowserUserColumnResizing = 2;

alias NSBrowserColumnResizingType = CULong;

alias NSBrowserDropOn = 0;
alias NSBrowserDropAbove = 1;

alias NSBrowserDropOperation = CULong;

external NSBrowserColumnConfigurationDidChangeNotification : NSString;

external NSColorListDidChangeNotification : NSString;

alias NSColorPanelMode = CLong;

alias NSNoModeColorPanel = 4294967295;
alias NSGrayModeColorPanel = 0;
alias NSRGBModeColorPanel = 1;
alias NSCMYKModeColorPanel = 2;
alias NSHSBModeColorPanel = 3;
alias NSCustomPaletteModeColorPanel = 4;
alias NSColorListModeColorPanel = 5;
alias NSWheelModeColorPanel = 6;
alias NSCrayonModeColorPanel = 7;

alias NSColorPanelGrayModeMask = 1;
alias NSColorPanelRGBModeMask = 2;
alias NSColorPanelCMYKModeMask = 4;
alias NSColorPanelHSBModeMask = 8;
alias NSColorPanelCustomPaletteModeMask = 16;
alias NSColorPanelColorListModeMask = 32;
alias NSColorPanelWheelModeMask = 64;
alias NSColorPanelCrayonModeMask = 128;
alias NSColorPanelAllModesMask = 65535;

external NSColorPanelColorDidChangeNotification : NSString;

alias NSChangeDone = 0;
alias NSChangeUndone = 1;
alias NSChangeCleared = 2;
alias NSChangeRedone = 5;
alias NSChangeReadOtherContents = 3;
alias NSChangeAutosaved = 4;

alias NSDocumentChangeType = CULong;

alias NSSaveOperation = 0;
alias NSSaveAsOperation = 1;
alias NSSaveToOperation = 2;
alias NSAutosaveOperation = 3;

alias NSSaveOperationType = CULong;

alias NSTouchPhaseBegan = 1;
alias NSTouchPhaseMoved = 2;
alias NSTouchPhaseStationary = 4;
alias NSTouchPhaseEnded = 8;
alias NSTouchPhaseCancelled = 16;
alias NSTouchPhaseTouching = 7;
alias NSTouchPhaseAny = 18446744073709551615;

alias NSTouchPhase = CULong;

alias NSLeftMouseDown = 1;
alias NSLeftMouseUp = 2;
alias NSRightMouseDown = 3;
alias NSRightMouseUp = 4;
alias NSMouseMoved = 5;
alias NSLeftMouseDragged = 6;
alias NSRightMouseDragged = 7;
alias NSMouseEntered = 8;
alias NSMouseExited = 9;
alias NSKeyDown = 10;
alias NSKeyUp = 11;
alias NSFlagsChanged = 12;
alias NSAppKitDefined = 13;
alias NSSystemDefined = 14;
alias NSApplicationDefined = 15;
alias NSPeriodic = 16;
alias NSCursorUpdate = 17;
alias NSScrollWheel = 22;
alias NSTabletPoint = 23;
alias NSTabletProximity = 24;
alias NSOtherMouseDown = 25;
alias NSOtherMouseUp = 26;
alias NSOtherMouseDragged = 27;
alias NSEventTypeGesture = 29;
alias NSEventTypeMagnify = 30;
alias NSEventTypeSwipe = 31;
alias NSEventTypeRotate = 18;
alias NSEventTypeBeginGesture = 19;
alias NSEventTypeEndGesture = 20;

alias NSEventType = CULong;

alias NSEventMask = UInt64;

alias NSLeftMouseDownMask = 2;
alias NSLeftMouseUpMask = 4;
alias NSRightMouseDownMask = 8;
alias NSRightMouseUpMask = 16;
alias NSMouseMovedMask = 32;
alias NSLeftMouseDraggedMask = 64;
alias NSRightMouseDraggedMask = 128;
alias NSMouseEnteredMask = 256;
alias NSMouseExitedMask = 512;
alias NSKeyDownMask = 1024;
alias NSKeyUpMask = 2048;
alias NSFlagsChangedMask = 4096;
alias NSAppKitDefinedMask = 8192;
alias NSSystemDefinedMask = 16384;
alias NSApplicationDefinedMask = 32768;
alias NSPeriodicMask = 65536;
alias NSCursorUpdateMask = 131072;
alias NSScrollWheelMask = 4194304;
alias NSTabletPointMask = 8388608;
alias NSTabletProximityMask = 16777216;
alias NSOtherMouseDownMask = 33554432;
alias NSOtherMouseUpMask = 67108864;
alias NSOtherMouseDraggedMask = 134217728;
alias NSEventMaskGesture = 536870912;
alias NSEventMaskMagnify = 1073741824;
alias NSEventMaskSwipe = 2147483648;
alias NSEventMaskRotate = 262144;
alias NSEventMaskBeginGesture = 524288;
alias NSEventMaskEndGesture = 1048576;
alias NSAnyEventMask = 18446744073709551615;

alias NSAlphaShiftKeyMask = 65536;
alias NSShiftKeyMask = 131072;
alias NSControlKeyMask = 262144;
alias NSAlternateKeyMask = 524288;
alias NSCommandKeyMask = 1048576;
alias NSNumericPadKeyMask = 2097152;
alias NSHelpKeyMask = 4194304;
alias NSFunctionKeyMask = 8388608;
alias NSDeviceIndependentModifierFlagsMask = 4294901760;

alias NSUnknownPointingDevice = 0;
alias NSPenPointingDevice = 1;
alias NSCursorPointingDevice = 2;
alias NSEraserPointingDevice = 3;

alias NSPointingDeviceType = CULong;

alias NSPenTipMask = 1;
alias NSPenLowerSideMask = 2;
alias NSPenUpperSideMask = 4;

alias NSUpArrowFunctionKey = 63232;
alias NSDownArrowFunctionKey = 63233;
alias NSLeftArrowFunctionKey = 63234;
alias NSRightArrowFunctionKey = 63235;
alias NSF1FunctionKey = 63236;
alias NSF2FunctionKey = 63237;
alias NSF3FunctionKey = 63238;
alias NSF4FunctionKey = 63239;
alias NSF5FunctionKey = 63240;
alias NSF6FunctionKey = 63241;
alias NSF7FunctionKey = 63242;
alias NSF8FunctionKey = 63243;
alias NSF9FunctionKey = 63244;
alias NSF10FunctionKey = 63245;
alias NSF11FunctionKey = 63246;
alias NSF12FunctionKey = 63247;
alias NSF13FunctionKey = 63248;
alias NSF14FunctionKey = 63249;
alias NSF15FunctionKey = 63250;
alias NSF16FunctionKey = 63251;
alias NSF17FunctionKey = 63252;
alias NSF18FunctionKey = 63253;
alias NSF19FunctionKey = 63254;
alias NSF20FunctionKey = 63255;
alias NSF21FunctionKey = 63256;
alias NSF22FunctionKey = 63257;
alias NSF23FunctionKey = 63258;
alias NSF24FunctionKey = 63259;
alias NSF25FunctionKey = 63260;
alias NSF26FunctionKey = 63261;
alias NSF27FunctionKey = 63262;
alias NSF28FunctionKey = 63263;
alias NSF29FunctionKey = 63264;
alias NSF30FunctionKey = 63265;
alias NSF31FunctionKey = 63266;
alias NSF32FunctionKey = 63267;
alias NSF33FunctionKey = 63268;
alias NSF34FunctionKey = 63269;
alias NSF35FunctionKey = 63270;
alias NSInsertFunctionKey = 63271;
alias NSDeleteFunctionKey = 63272;
alias NSHomeFunctionKey = 63273;
alias NSBeginFunctionKey = 63274;
alias NSEndFunctionKey = 63275;
alias NSPageUpFunctionKey = 63276;
alias NSPageDownFunctionKey = 63277;
alias NSPrintScreenFunctionKey = 63278;
alias NSScrollLockFunctionKey = 63279;
alias NSPauseFunctionKey = 63280;
alias NSSysReqFunctionKey = 63281;
alias NSBreakFunctionKey = 63282;
alias NSResetFunctionKey = 63283;
alias NSStopFunctionKey = 63284;
alias NSMenuFunctionKey = 63285;
alias NSUserFunctionKey = 63286;
alias NSSystemFunctionKey = 63287;
alias NSPrintFunctionKey = 63288;
alias NSClearLineFunctionKey = 63289;
alias NSClearDisplayFunctionKey = 63290;
alias NSInsertLineFunctionKey = 63291;
alias NSDeleteLineFunctionKey = 63292;
alias NSInsertCharFunctionKey = 63293;
alias NSDeleteCharFunctionKey = 63294;
alias NSPrevFunctionKey = 63295;
alias NSNextFunctionKey = 63296;
alias NSSelectFunctionKey = 63297;
alias NSExecuteFunctionKey = 63298;
alias NSUndoFunctionKey = 63299;
alias NSRedoFunctionKey = 63300;
alias NSFindFunctionKey = 63301;
alias NSHelpFunctionKey = 63302;
alias NSModeSwitchFunctionKey = 63303;

alias NSWindowExposedEventType = 0;
alias NSApplicationActivatedEventType = 1;
alias NSApplicationDeactivatedEventType = 2;
alias NSWindowMovedEventType = 4;
alias NSScreenChangedEventType = 8;
alias NSAWTEventType = 16;

alias NSPowerOffEventType = 1;

alias NSMouseEventSubtype = 0;
alias NSTabletPointEventSubtype = 1;
alias NSTabletProximityEventSubtype = 2;
alias NSTouchEventSubtype = 3;

alias NSFileWrapperReadingImmediate = 1;
alias NSFileWrapperReadingWithoutMapping = 2;

alias NSFileWrapperReadingOptions = CULong;

alias NSFileWrapperWritingAtomic = 1;
alias NSFileWrapperWritingWithNameUpdating = 2;

alias NSFileWrapperWritingOptions = CULong;

external NSContextHelpModeDidActivateNotification : NSString;

external NSContextHelpModeDidDeactivateNotification : NSString;

alias NSGradientDrawingOptions = CULong;

alias NSGradientDrawsBeforeStartingLocation = 1;
alias NSGradientDrawsAfterEndingLocation = 2;

alias NSImageLoadStatusCompleted = 0;
alias NSImageLoadStatusCancelled = 1;
alias NSImageLoadStatusInvalidData = 2;
alias NSImageLoadStatusUnexpectedEOF = 3;
alias NSImageLoadStatusReadError = 4;

alias NSImageLoadStatus = CULong;

alias NSImageCacheDefault = 0;
alias NSImageCacheAlways = 1;
alias NSImageCacheBySize = 2;
alias NSImageCacheNever = 3;

alias NSImageCacheMode = CULong;

external NSImageHintCTM : NSString;

external NSImageHintInterpolation : NSString;

external NSImageNameQuickLookTemplate : NSString;

external NSImageNameBluetoothTemplate : NSString;

external NSImageNameIChatTheaterTemplate : NSString;

external NSImageNameSlideshowTemplate : NSString;

external NSImageNameActionTemplate : NSString;

external NSImageNameSmartBadgeTemplate : NSString;

external NSImageNameIconViewTemplate : NSString;

external NSImageNameListViewTemplate : NSString;

external NSImageNameColumnViewTemplate : NSString;

external NSImageNameFlowViewTemplate : NSString;

external NSImageNamePathTemplate : NSString;

external NSImageNameInvalidDataFreestandingTemplate : NSString;

external NSImageNameLockLockedTemplate : NSString;

external NSImageNameLockUnlockedTemplate : NSString;

external NSImageNameGoRightTemplate : NSString;

external NSImageNameGoLeftTemplate : NSString;

external NSImageNameRightFacingTriangleTemplate : NSString;

external NSImageNameLeftFacingTriangleTemplate : NSString;

external NSImageNameAddTemplate : NSString;

external NSImageNameRemoveTemplate : NSString;

external NSImageNameRevealFreestandingTemplate : NSString;

external NSImageNameFollowLinkFreestandingTemplate : NSString;

external NSImageNameEnterFullScreenTemplate : NSString;

external NSImageNameExitFullScreenTemplate : NSString;

external NSImageNameStopProgressTemplate : NSString;

external NSImageNameStopProgressFreestandingTemplate : NSString;

external NSImageNameRefreshTemplate : NSString;

external NSImageNameRefreshFreestandingTemplate : NSString;

external NSImageNameBonjour : NSString;

external NSImageNameComputer : NSString;

external NSImageNameFolderBurnable : NSString;

external NSImageNameFolderSmart : NSString;

external NSImageNameFolder : NSString;

external NSImageNameNetwork : NSString;

external NSImageNameDotMac : NSString;

external NSImageNameMobileMe : NSString;

external NSImageNameMultipleDocuments : NSString;

external NSImageNameUserAccounts : NSString;

external NSImageNamePreferencesGeneral : NSString;

external NSImageNameAdvanced : NSString;

external NSImageNameInfo : NSString;

external NSImageNameFontPanel : NSString;

external NSImageNameColorPanel : NSString;

external NSImageNameUser : NSString;

external NSImageNameUserGroup : NSString;

external NSImageNameEveryone : NSString;

external NSImageNameUserGuest : NSString;

external NSImageNameMenuOnStateTemplate : NSString;

external NSImageNameMenuMixedStateTemplate : NSString;

external NSImageNameApplicationIcon : NSString;

external NSImageNameTrashEmpty : NSString;

external NSImageNameTrashFull : NSString;

external NSImageNameHomeTemplate : NSString;

external NSImageNameBookmarksTemplate : NSString;

external NSImageNameCaution : NSString;

external NSImageNameStatusAvailable : NSString;

external NSImageNameStatusPartiallyAvailable : NSString;

external NSImageNameStatusUnavailable : NSString;

external NSImageNameStatusNone : NSString;

alias NSImageAlignCenter = 0;
alias NSImageAlignTop = 1;
alias NSImageAlignTopLeft = 2;
alias NSImageAlignTopRight = 3;
alias NSImageAlignLeft = 4;
alias NSImageAlignBottom = 5;
alias NSImageAlignBottomLeft = 6;
alias NSImageAlignBottomRight = 7;
alias NSImageAlignRight = 8;

alias NSImageAlignment = CULong;

alias NSImageFrameNone = 0;
alias NSImageFramePhoto = 1;
alias NSImageFrameGrayBezel = 2;
alias NSImageFrameGroove = 3;
alias NSImageFrameButton = 4;

alias NSImageFrameStyle = CULong;

external NSNibOwner : NSString;

external NSNibTopLevelObjects : NSString;

alias NSPrinterTableOK = 0;
alias NSPrinterTableNotFound = 1;
alias NSPrinterTableError = 2;

alias NSPrinterTableStatus = CULong;

external NSVoiceName : NSString;

external NSVoiceIdentifier : NSString;

external NSVoiceAge : NSString;

external NSVoiceGender : NSString;

external NSVoiceDemoText : NSString;

external NSVoiceLocaleIdentifier : NSString;

external NSVoiceSupportedCharacters : NSString;

external NSVoiceIndividuallySpokenCharacters : NSString;

external NSVoiceGenderNeuter : NSString;

external NSVoiceGenderMale : NSString;

external NSVoiceGenderFemale : NSString;

external NSVoiceLanguage : NSString;

alias NSSpeechImmediateBoundary = 0;
alias NSSpeechWordBoundary = 1;
alias NSSpeechSentenceBoundary = 2;

alias NSSpeechBoundary = CULong;

external NSSpeechStatusProperty : NSString;

external NSSpeechErrorsProperty : NSString;

external NSSpeechInputModeProperty : NSString;

external NSSpeechCharacterModeProperty : NSString;

external NSSpeechNumberModeProperty : NSString;

external NSSpeechRateProperty : NSString;

external NSSpeechPitchBaseProperty : NSString;

external NSSpeechPitchModProperty : NSString;

external NSSpeechVolumeProperty : NSString;

external NSSpeechSynthesizerInfoProperty : NSString;

external NSSpeechRecentSyncProperty : NSString;

external NSSpeechPhonemeSymbolsProperty : NSString;

external NSSpeechCurrentVoiceProperty : NSString;

external NSSpeechCommandDelimiterProperty : NSString;

external NSSpeechResetProperty : NSString;

external NSSpeechOutputToFileURLProperty : NSString;

external NSSpeechModeText : NSString;

external NSSpeechModePhoneme : NSString;

external NSSpeechModeNormal : NSString;

external NSSpeechModeLiteral : NSString;

external NSSpeechStatusOutputBusy : NSString;

external NSSpeechStatusOutputPaused : NSString;

external NSSpeechStatusNumberOfCharactersLeft : NSString;

external NSSpeechStatusPhonemeCode : NSString;

external NSSpeechErrorCount : NSString;

external NSSpeechErrorOldestCode : NSString;

external NSSpeechErrorOldestCharacterOffset : NSString;

external NSSpeechErrorNewestCode : NSString;

external NSSpeechErrorNewestCharacterOffset : NSString;

external NSSpeechSynthesizerInfoIdentifier : NSString;

external NSSpeechSynthesizerInfoVersion : NSString;

external NSSpeechPhonemeInfoOpcode : NSString;

external NSSpeechPhonemeInfoSymbol : NSString;

external NSSpeechPhonemeInfoExample : NSString;

external NSSpeechPhonemeInfoHiliteStart : NSString;

external NSSpeechPhonemeInfoHiliteEnd : NSString;

external NSSpeechCommandPrefix : NSString;

external NSSpeechCommandSuffix : NSString;

external NSSpeechDictionaryLocaleIdentifier : NSString;

external NSSpeechDictionaryModificationDate : NSString;

external NSSpeechDictionaryPronunciations : NSString;

external NSSpeechDictionaryAbbreviations : NSString;

external NSSpeechDictionaryEntrySpelling : NSString;

external NSSpeechDictionaryEntryPhonemes : NSString;

alias NSSplitViewDividerStyleThick = 1;
alias NSSplitViewDividerStyleThin = 2;
alias NSSplitViewDividerStylePaneSplitter = 3;

alias NSSplitViewDividerStyle = CLong;

external NSSplitViewWillResizeSubviewsNotification : NSString;

external NSSplitViewDidResizeSubviewsNotification : NSString;

alias NSFileHandlingPanelCancelButton = 0;
alias NSFileHandlingPanelOKButton = 1;

record Struct___SPFlags (
    saveMode : UInt,
    isExpanded : UInt,
    allowsOtherFileTypes : UInt,
    canCreateDirectories : UInt,
    canSelectedHiddenExtension : UInt,
    inConfigureForDirectory : UInt,
    delegate_shouldShowFilename : UInt,
    delegate_compareFilename : UInt,
    delegate_shouldEnableURL : UInt,
    delegate_validateURL : UInt,
    delegate_didChangeToDirectoryURL : UInt,
    changingFrameSize : UInt,
    movingAccessoryView : UInt,
    userAccessoryViewFrameChange : UInt,
    reserved : UInt,
);

alias _SPFlags = Struct___SPFlags;

external NSPopUpButtonWillPopUpNotification : NSString;

alias NSPortraitOrientation = 0;
alias NSLandscapeOrientation = 1;

alias NSPrintingOrientation = CULong;

alias NSAutoPagination = 0;
alias NSFitPagination = 1;
alias NSClipPagination = 2;

alias NSPrintingPaginationMode = CULong;

external NSPrintSpoolJob : NSString;

external NSPrintPreviewJob : NSString;

external NSPrintSaveJob : NSString;

external NSPrintCancelJob : NSString;

external NSPrintPaperName : NSString;

external NSPrintPaperSize : NSString;

external NSPrintOrientation : NSString;

external NSPrintScalingFactor : NSString;

external NSPrintLeftMargin : NSString;

external NSPrintRightMargin : NSString;

external NSPrintTopMargin : NSString;

external NSPrintBottomMargin : NSString;

external NSPrintHorizontallyCentered : NSString;

external NSPrintVerticallyCentered : NSString;

external NSPrintHorizontalPagination : NSString;

external NSPrintVerticalPagination : NSString;

external NSPrintPrinter : NSString;

external NSPrintCopies : NSString;

external NSPrintAllPages : NSString;

external NSPrintFirstPage : NSString;

external NSPrintLastPage : NSString;

external NSPrintMustCollate : NSString;

external NSPrintReversePageOrder : NSString;

external NSPrintJobDisposition : NSString;

external NSPrintPagesAcross : NSString;

external NSPrintPagesDown : NSString;

external NSPrintTime : NSString;

external NSPrintDetailedErrorReporting : NSString;

external NSPrintFaxNumber : NSString;

external NSPrintPrinterName : NSString;

external NSPrintSelectionOnly : NSString;

external NSPrintJobSavingURL : NSString;

external NSPrintJobSavingFileNameExtensionHidden : NSString;

external NSPrintHeaderAndFooter : NSString;

external NSPrintFormName : NSString;

external NSPrintJobFeatures : NSString;

external NSPrintManualFeed : NSString;

external NSPrintPagesPerSheet : NSString;

external NSPrintPaperFeed : NSString;

external NSPrintSavePath : NSString;

alias NSDescendingPageOrder = 4294967295;
alias NSSpecialPageOrder = 0;
alias NSAscendingPageOrder = 1;
alias NSUnknownPageOrder = 2;

alias NSPrintingPageOrder = CLong;

external NSPrintOperationExistsException : NSString;

alias NSPrintPanelShowsCopies = 1;
alias NSPrintPanelShowsPageRange = 2;
alias NSPrintPanelShowsPaperSize = 4;
alias NSPrintPanelShowsOrientation = 8;
alias NSPrintPanelShowsScaling = 16;
alias NSPrintPanelShowsPrintSelection = 32;
alias NSPrintPanelShowsPageSetupAccessory = 256;
alias NSPrintPanelShowsPreview = 131072;

alias NSPrintPanelOptions = CLong;

external NSPrintPhotoJobStyleHint : NSString;

external NSPrintAllPresetsJobStyleHint : NSString;

external NSPrintNoPresetsJobStyleHint : NSString;

external NSPrintPanelAccessorySummaryItemNameKey : NSString;

external NSPrintPanelAccessorySummaryItemDescriptionKey : NSString;

alias NSScreenAuxiliaryOpaque = Opaque;

external NSScreenColorSpaceDidChangeNotification : NSString;

record Struct___SFlags (
    RESERVED : UInt,
    autoforwardsScrollWheelEvents : UInt,
    autohidesScrollers : UInt,
    hasCustomLineBorderColor : UInt,
    focusRingNeedsRedisplay : UInt,
    skipRemoveSuperviewCheck : UInt,
    doesNotDrawBackground : UInt,
    needsTile : UInt,
    hasVerticalRuler : UInt,
    hasHorizontalRuler : UInt,
    showRulers : UInt,
    oldRulerInstalled : UInt,
    borderType : CULong,
    noDynamicScrolling : UInt,
    hScrollerStatus : UInt,
    vScrollerStatus : UInt,
    hScrollerRequired : UInt,
    vScrollerRequired : UInt,
);

alias _SFlags = Struct___SFlags;

alias NSScrollerArrowsMaxEnd = 0;
alias NSScrollerArrowsMinEnd = 1;
alias NSScrollerArrowsDefaultSetting = 0;
alias NSScrollerArrowsNone = 2;

alias NSScrollArrowPosition = CULong;

alias NSNoScrollerParts = 0;
alias NSOnlyScrollerArrows = 1;
alias NSAllScrollerParts = 2;

alias NSUsableScrollerParts = CULong;

alias NSScrollerNoPart = 0;
alias NSScrollerDecrementPage = 1;
alias NSScrollerKnob = 2;
alias NSScrollerIncrementPage = 3;
alias NSScrollerDecrementLine = 4;
alias NSScrollerIncrementLine = 5;
alias NSScrollerKnobSlot = 6;

alias NSScrollerPart = CULong;

alias NSScrollerIncrementArrow = 0;
alias NSScrollerDecrementArrow = 1;

alias NSScrollerArrow = CULong;

alias NSSegmentStyleAutomatic = 0;
alias NSSegmentStyleRounded = 1;
alias NSSegmentStyleTexturedRounded = 2;
alias NSSegmentStyleRoundRect = 3;
alias NSSegmentStyleTexturedSquare = 4;
alias NSSegmentStyleCapsule = 5;
alias NSSegmentStyleSmallSquare = 6;

alias NSSegmentStyle = CLong;

alias NSSegmentSwitchTrackingSelectOne = 0;
alias NSSegmentSwitchTrackingSelectAny = 1;
alias NSSegmentSwitchTrackingMomentary = 2;

alias NSSegmentSwitchTracking = CULong;

alias NSTickMarkBelow = 0;
alias NSTickMarkAbove = 1;
alias NSTickMarkLeft = 1;
alias NSTickMarkRight = 0;

alias NSTickMarkPosition = CULong;

alias NSLinearSlider = 0;
alias NSCircularSlider = 1;

alias NSSliderType = CULong;

alias NSTextFieldSquareBezel = 0;
alias NSTextFieldRoundedBezel = 1;

alias NSTextFieldBezelStyle = CULong;

alias NSLineSweepLeft = 0;
alias NSLineSweepRight = 1;
alias NSLineSweepDown = 2;
alias NSLineSweepUp = 3;

alias NSLineSweepDirection = CULong;

alias NSLineDoesntMove = 0;
alias NSLineMovesLeft = 1;
alias NSLineMovesRight = 2;
alias NSLineMovesDown = 3;
alias NSLineMovesUp = 4;

alias NSLineMovementDirection = CULong;

alias NSDefaultTokenStyle = 0;
alias NSPlainTextTokenStyle = 1;
alias NSRoundedTokenStyle = 2;

alias NSTokenStyle = CULong;

alias NSTrackingMouseEnteredAndExited = 1;
alias NSTrackingMouseMoved = 2;
alias NSTrackingCursorUpdate = 4;

alias NSTrackingActiveWhenFirstResponder = 16;
alias NSTrackingActiveInKeyWindow = 32;
alias NSTrackingActiveInActiveApp = 64;
alias NSTrackingActiveAlways = 128;

alias NSTrackingAssumeInside = 256;
alias NSTrackingInVisibleRect = 512;
alias NSTrackingEnabledDuringMouseDrag = 1024;

alias NSTrackingAreaOptions = CULong;

external NSComboBoxWillPopUpNotification : NSString;

external NSComboBoxWillDismissNotification : NSString;

external NSComboBoxSelectionDidChangeNotification : NSString;

external NSComboBoxSelectionIsChangingNotification : NSString;

external NSFontAttributeName : NSString;

external NSParagraphStyleAttributeName : NSString;

external NSForegroundColorAttributeName : NSString;

external NSUnderlineStyleAttributeName : NSString;

external NSSuperscriptAttributeName : NSString;

external NSBackgroundColorAttributeName : NSString;

external NSAttachmentAttributeName : NSString;

external NSLigatureAttributeName : NSString;

external NSBaselineOffsetAttributeName : NSString;

external NSKernAttributeName : NSString;

external NSLinkAttributeName : NSString;

external NSStrokeWidthAttributeName : NSString;

external NSStrokeColorAttributeName : NSString;

external NSUnderlineColorAttributeName : NSString;

external NSStrikethroughStyleAttributeName : NSString;

external NSStrikethroughColorAttributeName : NSString;

external NSShadowAttributeName : NSString;

external NSObliquenessAttributeName : NSString;

external NSExpansionAttributeName : NSString;

external NSCursorAttributeName : NSString;

external NSToolTipAttributeName : NSString;

external NSCharacterShapeAttributeName : NSString;

external NSGlyphInfoAttributeName : NSString;

external NSWritingDirectionAttributeName : NSString;

external NSMarkedClauseSegmentAttributeName : NSString;

alias NSUnderlineStyleNone = 0;
alias NSUnderlineStyleSingle = 1;
alias NSUnderlineStyleThick = 2;
alias NSUnderlineStyleDouble = 9;

alias NSUnderlinePatternSolid = 0;
alias NSUnderlinePatternDot = 256;
alias NSUnderlinePatternDash = 512;
alias NSUnderlinePatternDashDot = 768;
alias NSUnderlinePatternDashDotDot = 1024;

external NSUnderlineByWordMask : CULong;

external NSSpellingStateAttributeName : NSString;

alias NSSpellingStateSpellingFlag = 1;
alias NSSpellingStateGrammarFlag = 2;

external NSPlainTextDocumentType : NSString;

external NSRTFTextDocumentType : NSString;

external NSRTFDTextDocumentType : NSString;

external NSMacSimpleTextDocumentType : NSString;

external NSHTMLTextDocumentType : NSString;

external NSDocFormatTextDocumentType : NSString;

external NSWordMLTextDocumentType : NSString;

external NSWebArchiveTextDocumentType : NSString;

external NSOfficeOpenXMLTextDocumentType : NSString;

external NSOpenDocumentTextDocumentType : NSString;

external NSPaperSizeDocumentAttribute : NSString;

external NSLeftMarginDocumentAttribute : NSString;

external NSRightMarginDocumentAttribute : NSString;

external NSTopMarginDocumentAttribute : NSString;

external NSBottomMarginDocumentAttribute : NSString;

external NSViewSizeDocumentAttribute : NSString;

external NSViewZoomDocumentAttribute : NSString;

external NSViewModeDocumentAttribute : NSString;

external NSDocumentTypeDocumentAttribute : NSString;

external NSReadOnlyDocumentAttribute : NSString;

external NSConvertedDocumentAttribute : NSString;

external NSCocoaVersionDocumentAttribute : NSString;

external NSBackgroundColorDocumentAttribute : NSString;

external NSHyphenationFactorDocumentAttribute : NSString;

external NSDefaultTabIntervalDocumentAttribute : NSString;

external NSCharacterEncodingDocumentAttribute : NSString;

external NSFileTypeDocumentAttribute : NSString;

external NSTitleDocumentAttribute : NSString;

external NSCompanyDocumentAttribute : NSString;

external NSCopyrightDocumentAttribute : NSString;

external NSSubjectDocumentAttribute : NSString;

external NSAuthorDocumentAttribute : NSString;

external NSKeywordsDocumentAttribute : NSString;

external NSCommentDocumentAttribute : NSString;

external NSEditorDocumentAttribute : NSString;

external NSCreationTimeDocumentAttribute : NSString;

external NSModificationTimeDocumentAttribute : NSString;

external NSManagerDocumentAttribute : NSString;

external NSCategoryDocumentAttribute : NSString;

external NSExcludedElementsDocumentAttribute : NSString;

external NSTextEncodingNameDocumentAttribute : NSString;

external NSPrefixSpacesDocumentAttribute : NSString;

external NSDocumentTypeDocumentOption : NSString;

external NSDefaultAttributesDocumentOption : NSString;

external NSCharacterEncodingDocumentOption : NSString;

external NSTextEncodingNameDocumentOption : NSString;

external NSBaseURLDocumentOption : NSString;

external NSTimeoutDocumentOption : NSString;

external NSWebPreferencesDocumentOption : NSString;

external NSWebResourceLoadDelegateDocumentOption : NSString;

external NSTextSizeMultiplierDocumentOption : NSString;

external NSFileTypeDocumentOption : NSString;

alias NSNoUnderlineStyle = 0;
alias NSSingleUnderlineStyle = 1;

external NSUnderlineStrikethroughMask : CULong;

alias NSAttachmentCharacter = 65532;

alias NSSelectByCharacter = 0;
alias NSSelectByWord = 1;
alias NSSelectByParagraph = 2;

alias NSSelectionGranularity = CULong;

alias NSSelectionAffinityUpstream = 0;
alias NSSelectionAffinityDownstream = 1;

alias NSSelectionAffinity = CULong;

alias NSFindPanelActionShowFindPanel = 1;
alias NSFindPanelActionNext = 2;
alias NSFindPanelActionPrevious = 3;
alias NSFindPanelActionReplaceAll = 4;
alias NSFindPanelActionReplace = 5;
alias NSFindPanelActionReplaceAndFind = 6;
alias NSFindPanelActionSetFindString = 7;
alias NSFindPanelActionReplaceAllInSelection = 8;
alias NSFindPanelActionSelectAll = 9;
alias NSFindPanelActionSelectAllInSelection = 10;

alias NSFindPanelAction = CULong;

external NSFindPanelSearchOptionsPboardType : NSString;

external NSFindPanelCaseInsensitiveSearch : NSString;

external NSFindPanelSubstringMatch : NSString;

alias NSFindPanelSubstringMatchTypeContains = 0;
alias NSFindPanelSubstringMatchTypeStartsWith = 1;
alias NSFindPanelSubstringMatchTypeFullWord = 2;
alias NSFindPanelSubstringMatchTypeEndsWith = 3;

alias NSFindPanelSubstringMatchType = CULong;

external NSAllRomanInputSourcesLocaleIdentifier : NSString;

external NSTextViewWillChangeNotifyingTextViewNotification : NSString;

external NSTextViewDidChangeSelectionNotification : NSString;

external NSTextViewDidChangeTypingAttributesNotification : NSString;

record Struct___TvFlags (
    refusesFirstResponder : UInt,
    movedPostingDisableCount : UInt,
    selectionPostingDisableCount : UInt,
    dataSourceSetObjectValue : UInt,
    oldAutoresizesAllColumnsToFit : UInt,
    delegateSelectionShouldChangeInTableView : UInt,
    delegateShouldSelectTableColumn : UInt,
    delegateShouldSelectRow : UInt,
    delegateShouldEditTableColumn : UInt,
    delegateWillDisplayCell : UInt,
    compareWidthWithSuperview : UInt,
    changingLayout : UInt,
    selectionType : UInt,
    allowsColumnSelection : UInt,
    allowsMultipleSelection : UInt,
    allowsEmptySelection : UInt,
    oldDrawsGridFlag : UInt,
    allowsColumnResizing : UInt,
    allowsColumnReordering : UInt,
);

alias _TvFlags = Struct___TvFlags;

alias NSTableViewDropOn = 0;
alias NSTableViewDropAbove = 1;

alias NSTableViewDropOperation = CULong;

external NSTableViewSelectionDidChangeNotification : NSString;

external NSTableViewColumnDidMoveNotification : NSString;

external NSTableViewColumnDidResizeNotification : NSString;

external NSTableViewSelectionIsChangingNotification : NSString;

record Struct___OvFlags (
    _reserved : UInt,
    dontRedisplayOnFrameChange : UInt,
    flashingOutlineCell : UInt,
    flashingEntireRow : UInt,
    delegateShouldAutoExpandItem : UInt,
    delegateAutoCollapseItem : UInt,
    delegateAutoExpandItem : UInt,
    delegateShouldShowOutlineCellForItem : UInt,
    dataSourceDraggedImageMovedTo : UInt,
    dataSourceDraggingEndedAt : UInt,
    reloadingData : UInt,
    validDataSourceMethods : UInt,
    numberOfRowsDataExpandEntered : UInt,
    delayRowEntryFreeDisabled : UInt,
    delegateHeightOfRowByItem : UInt,
    _unused : UInt,
    autoExpandFlashState : UInt,
    selectionAdjustmentDisabled : UInt,
    removeChildInProgress : UInt,
    delegateWillDisplayOutlineCell : UInt,
    enableExpandNotifications : UInt,
    autoSaveExpandItems : UInt,
    autoresizesOutlineColumn : UInt,
    delegateShouldExpandItem : UInt,
    delegateShouldCollapseItem : UInt,
    delegateSelectionShouldChangeInOutlineView : UInt,
    delegateShouldSelectTableColumn : UInt,
    delegateShouldSelectItem : UInt,
    delegateShouldEditTableColumn : UInt,
    delegateWillDisplayCell : UInt,
);

alias _OVFlags = Struct___OvFlags;

alias NSOutlineViewDropOnItemIndex = 4294967295;

external NSOutlineViewSelectionDidChangeNotification : NSString;

external NSOutlineViewColumnDidMoveNotification : NSString;

external NSOutlineViewColumnDidResizeNotification : NSString;

external NSOutlineViewSelectionIsChangingNotification : NSString;

external NSOutlineViewItemWillExpandNotification : NSString;

external NSOutlineViewItemDidExpandNotification : NSString;

external NSOutlineViewItemWillCollapseNotification : NSString;

external NSOutlineViewItemDidCollapseNotification : NSString;

alias NSShowControlGlyphs = 1;
alias NSShowInvisibleGlyphs = 2;
alias NSWantsBidiLevels = 4;

alias NSGlyphAttributeSoft = 0;
alias NSGlyphAttributeElastic = 1;
alias NSGlyphAttributeBidiLevel = 2;
alias NSGlyphAttributeInscribe = 5;

alias NSGlyphInscribeBase = 0;
alias NSGlyphInscribeBelow = 1;
alias NSGlyphInscribeAbove = 2;
alias NSGlyphInscribeOverstrike = 3;
alias NSGlyphInscribeOverBelow = 4;

alias NSGlyphInscription = CULong;

alias NSTypesetterLatestBehavior = 4294967295;
alias NSTypesetterOriginalBehavior = 0;
alias NSTypesetterBehavior_10_2_WithCompatibility = 1;
alias NSTypesetterBehavior_10_2 = 2;
alias NSTypesetterBehavior_10_3 = 3;
alias NSTypesetterBehavior_10_4 = 4;

alias NSTypesetterBehavior = CLong;

alias NSTextStorageEditedAttributes = 1;
alias NSTextStorageEditedCharacters = 2;

external NSTextStorageWillProcessEditingNotification : NSString;

external NSTextStorageDidProcessEditingNotification : NSString;

alias NSStringDrawingTruncatesLastVisibleLine = 32;
alias NSStringDrawingUsesLineFragmentOrigin = 1;
alias NSStringDrawingUsesFontLeading = 2;
alias NSStringDrawingDisableScreenFontSubstitution = 4;
alias NSStringDrawingUsesDeviceMetrics = 8;
alias NSStringDrawingOneShot = 16;

alias NSStringDrawingOptions = CLong;

alias NSHorizontalRuler = 0;
alias NSVerticalRuler = 1;

alias NSRulerOrientation = CULong;

alias NSNoInterfaceStyle = 0;
alias NSNextStepInterfaceStyle = 1;
alias NSWindows95InterfaceStyle = 2;
alias NSMacintoshInterfaceStyle = 3;

alias NSInterfaceStyle = CULong;

external NSInterfaceStyleForKey(
    key : NSString,
    responder : NSResponder) : CULong;

external NSInterfaceStyleDefault : NSString;

alias _NSProgressIndicatorThreadInfo = Opaque;

alias NSProgressIndicatorPreferredThickness = 14;
alias NSProgressIndicatorPreferredSmallThickness = 10;
alias NSProgressIndicatorPreferredLargeThickness = 18;
alias NSProgressIndicatorPreferredAquaThickness = 12;

alias NSProgressIndicatorThickness = CULong;

alias NSProgressIndicatorBarStyle = 0;
alias NSProgressIndicatorSpinningStyle = 1;

alias NSProgressIndicatorStyle = CULong;

alias NSTopTabsBezelBorder = 0;
alias NSLeftTabsBezelBorder = 1;
alias NSBottomTabsBezelBorder = 2;
alias NSRightTabsBezelBorder = 3;
alias NSNoTabsBezelBorder = 4;
alias NSNoTabsLineBorder = 5;
alias NSNoTabsNoBorder = 6;

alias NSTabViewType = CULong;

alias NSSelectedTab = 0;
alias NSBackgroundTab = 1;
alias NSPressedTab = 2;

alias NSTabState = CULong;

alias NSPopUpNoArrow = 0;
alias NSPopUpArrowAtCenter = 1;
alias NSPopUpArrowAtBottom = 2;

alias NSPopUpArrowPosition = CULong;

external NSPopUpButtonCellWillPopUpNotification : NSString;

alias NSButtLineCapStyle = 0;
alias NSRoundLineCapStyle = 1;
alias NSSquareLineCapStyle = 2;

alias NSLineCapStyle = CULong;

alias NSMiterLineJoinStyle = 0;
alias NSRoundLineJoinStyle = 1;
alias NSBevelLineJoinStyle = 2;

alias NSLineJoinStyle = CULong;

alias NSNonZeroWindingRule = 0;
alias NSEvenOddWindingRule = 1;

alias NSWindingRule = CULong;

alias NSMoveToBezierPathElement = 0;
alias NSLineToBezierPathElement = 1;
alias NSCurveToBezierPathElement = 2;
alias NSClosePathBezierPathElement = 3;

alias NSBezierPathElement = CULong;

external NSSoundPboardType : NSString;

alias NSDrawerClosedState = 0;
alias NSDrawerOpeningState = 1;
alias NSDrawerOpenState = 2;
alias NSDrawerClosingState = 3;

alias NSDrawerState = CULong;

external NSDrawerWillOpenNotification : NSString;

external NSDrawerDidOpenNotification : NSString;

external NSDrawerWillCloseNotification : NSString;

external NSDrawerDidCloseNotification : NSString;

alias NSOpenGLGOFormatCacheSize = 501;
alias NSOpenGLGOClearFormatCache = 502;
alias NSOpenGLGORetainRenderers = 503;
alias NSOpenGLGOResetLibrary = 504;

alias NSOpenGLGlobalOption = Int;

external NSOpenGLSetOption(
    pname : NSOpenGLGlobalOption,
    param : Int);

external NSOpenGLGetOption(
    pname : NSOpenGLGlobalOption,
    param : Pointer[Int]);

external NSOpenGLGetVersion(
    major : Pointer[Int],
    minor : Pointer[Int]);

alias NSOpenGLPFAAllRenderers = 1;
alias NSOpenGLPFADoubleBuffer = 5;
alias NSOpenGLPFAStereo = 6;
alias NSOpenGLPFAAuxBuffers = 7;
alias NSOpenGLPFAColorSize = 8;
alias NSOpenGLPFAAlphaSize = 11;
alias NSOpenGLPFADepthSize = 12;
alias NSOpenGLPFAStencilSize = 13;
alias NSOpenGLPFAAccumSize = 14;
alias NSOpenGLPFAMinimumPolicy = 51;
alias NSOpenGLPFAMaximumPolicy = 52;
alias NSOpenGLPFAOffScreen = 53;
alias NSOpenGLPFAFullScreen = 54;
alias NSOpenGLPFASampleBuffers = 55;
alias NSOpenGLPFASamples = 56;
alias NSOpenGLPFAAuxDepthStencil = 57;
alias NSOpenGLPFAColorFloat = 58;
alias NSOpenGLPFAMultisample = 59;
alias NSOpenGLPFASupersample = 60;
alias NSOpenGLPFASampleAlpha = 61;
alias NSOpenGLPFARendererID = 70;
alias NSOpenGLPFASingleRenderer = 71;
alias NSOpenGLPFANoRecovery = 72;
alias NSOpenGLPFAAccelerated = 73;
alias NSOpenGLPFAClosestPolicy = 74;
alias NSOpenGLPFARobust = 75;
alias NSOpenGLPFABackingStore = 76;
alias NSOpenGLPFAMPSafe = 78;
alias NSOpenGLPFAWindow = 80;
alias NSOpenGLPFAMultiScreen = 81;
alias NSOpenGLPFACompliant = 83;
alias NSOpenGLPFAScreenMask = 84;
alias NSOpenGLPFAPixelBuffer = 90;
alias NSOpenGLPFARemotePixelBuffer = 91;
alias NSOpenGLPFAAllowOfflineRenderers = 96;
alias NSOpenGLPFAAcceleratedCompute = 97;
alias NSOpenGLPFAVirtualScreenCount = 128;

alias NSOpenGLPixelFormatAttribute = UInt;

alias NSOpenGLPixelFormatAuxiliary = Opaque;

alias NSOpenGLCPSwapRectangle = 200;
alias NSOpenGLCPSwapRectangleEnable = 201;
alias NSOpenGLCPRasterizationEnable = 221;
alias NSOpenGLCPSwapInterval = 222;
alias NSOpenGLCPSurfaceOrder = 235;
alias NSOpenGLCPSurfaceOpacity = 236;
alias NSOpenGLCPStateValidation = 301;

alias NSOpenGLContextParameter = Int;

alias NSOpenGLContextAuxiliary = Opaque;

alias NSToolbarDisplayModeDefault = 0;
alias NSToolbarDisplayModeIconAndLabel = 1;
alias NSToolbarDisplayModeIconOnly = 2;
alias NSToolbarDisplayModeLabelOnly = 3;

alias NSToolbarDisplayMode = CULong;

alias NSToolbarSizeModeDefault = 0;
alias NSToolbarSizeModeRegular = 1;
alias NSToolbarSizeModeSmall = 2;

alias NSToolbarSizeMode = CULong;

external NSToolbarWillAddItemNotification : NSString;

external NSToolbarDidRemoveItemNotification : NSString;

external NSToolbarSeparatorItemIdentifier : NSString;

external NSToolbarSpaceItemIdentifier : NSString;

external NSToolbarFlexibleSpaceItemIdentifier : NSString;

external NSToolbarShowColorsItemIdentifier : NSString;

external NSToolbarShowFontsItemIdentifier : NSString;

external NSToolbarCustomizeToolbarItemIdentifier : NSString;

external NSToolbarPrintItemIdentifier : NSString;

alias NSIdentityMappingCharacterCollection = 0;
alias NSAdobeCNS1CharacterCollection = 1;
alias NSAdobeGB1CharacterCollection = 2;
alias NSAdobeJapan1CharacterCollection = 3;
alias NSAdobeJapan2CharacterCollection = 4;
alias NSAdobeKorea1CharacterCollection = 5;

alias NSCharacterCollection = CULong;

alias NSTypesetterZeroAdvancementAction = 1;
alias NSTypesetterWhitespaceAction = 2;
alias NSTypesetterHorizontalTabAction = 4;
alias NSTypesetterLineBreakAction = 8;
alias NSTypesetterParagraphBreakAction = 16;
alias NSTypesetterContainerBreakAction = 32;

alias NSTypesetterControlCharacterAction = CULong;

external NSMultipleValuesMarker : Id;

external NSNoSelectionMarker : Id;

external NSNotApplicableMarker : Id;

external NSIsControllerMarker(
    object : Id) : Bool;

external NSObservedObjectKey : NSString;

external NSObservedKeyPathKey : NSString;

external NSOptionsKey : NSString;

external NSAlignmentBinding : NSString;

external NSAlternateImageBinding : NSString;

external NSAlternateTitleBinding : NSString;

external NSAnimateBinding : NSString;

external NSAnimationDelayBinding : NSString;

external NSArgumentBinding : NSString;

external NSAttributedStringBinding : NSString;

external NSContentArrayBinding : NSString;

external NSContentArrayForMultipleSelectionBinding : NSString;

external NSContentBinding : NSString;

external NSContentDictionaryBinding : NSString;

external NSContentHeightBinding : NSString;

external NSContentObjectBinding : NSString;

external NSContentObjectsBinding : NSString;

external NSContentSetBinding : NSString;

external NSContentValuesBinding : NSString;

external NSContentWidthBinding : NSString;

external NSCriticalValueBinding : NSString;

external NSDataBinding : NSString;

external NSDisplayPatternTitleBinding : NSString;

external NSDisplayPatternValueBinding : NSString;

external NSDocumentEditedBinding : NSString;

external NSDoubleClickArgumentBinding : NSString;

external NSDoubleClickTargetBinding : NSString;

external NSEditableBinding : NSString;

external NSEnabledBinding : NSString;

external NSExcludedKeysBinding : NSString;

external NSFilterPredicateBinding : NSString;

external NSFontBinding : NSString;

external NSFontBoldBinding : NSString;

external NSFontFamilyNameBinding : NSString;

external NSFontItalicBinding : NSString;

external NSFontNameBinding : NSString;

external NSFontSizeBinding : NSString;

external NSHeaderTitleBinding : NSString;

external NSHiddenBinding : NSString;

external NSImageBinding : NSString;

external NSIncludedKeysBinding : NSString;

external NSInitialKeyBinding : NSString;

external NSInitialValueBinding : NSString;

external NSIsIndeterminateBinding : NSString;

external NSLabelBinding : NSString;

external NSLocalizedKeyDictionaryBinding : NSString;

external NSManagedObjectContextBinding : NSString;

external NSMaximumRecentsBinding : NSString;

external NSMaxValueBinding : NSString;

external NSMaxWidthBinding : NSString;

external NSMinValueBinding : NSString;

external NSMinWidthBinding : NSString;

external NSMixedStateImageBinding : NSString;

external NSOffStateImageBinding : NSString;

external NSOnStateImageBinding : NSString;

external NSPredicateBinding : NSString;

external NSRecentSearchesBinding : NSString;

external NSRepresentedFilenameBinding : NSString;

external NSRowHeightBinding : NSString;

external NSSelectedIdentifierBinding : NSString;

external NSSelectedIndexBinding : NSString;

external NSSelectedLabelBinding : NSString;

external NSSelectedObjectBinding : NSString;

external NSSelectedObjectsBinding : NSString;

external NSSelectedTagBinding : NSString;

external NSSelectedValueBinding : NSString;

external NSSelectedValuesBinding : NSString;

external NSSelectionIndexesBinding : NSString;

external NSSelectionIndexPathsBinding : NSString;

external NSSortDescriptorsBinding : NSString;

external NSTargetBinding : NSString;

external NSTextColorBinding : NSString;

external NSTitleBinding : NSString;

external NSToolTipBinding : NSString;

external NSTransparentBinding : NSString;

external NSValueBinding : NSString;

external NSValuePathBinding : NSString;

external NSValueURLBinding : NSString;

external NSVisibleBinding : NSString;

external NSWarningValueBinding : NSString;

external NSWidthBinding : NSString;

external NSAllowsEditingMultipleValuesSelectionBindingOption : NSString;

external NSAllowsNullArgumentBindingOption : NSString;

external NSAlwaysPresentsApplicationModalAlertsBindingOption : NSString;

external NSConditionallySetsEditableBindingOption : NSString;

external NSConditionallySetsEnabledBindingOption : NSString;

external NSConditionallySetsHiddenBindingOption : NSString;

external NSContinuouslyUpdatesValueBindingOption : NSString;

external NSCreatesSortDescriptorBindingOption : NSString;

external NSDeletesObjectsOnRemoveBindingsOption : NSString;

external NSDisplayNameBindingOption : NSString;

external NSDisplayPatternBindingOption : NSString;

external NSContentPlacementTagBindingOption : NSString;

external NSHandlesContentAsCompoundValueBindingOption : NSString;

external NSInsertsNullPlaceholderBindingOption : NSString;

external NSInvokesSeparatelyWithArrayObjectsBindingOption : NSString;

external NSMultipleValuesPlaceholderBindingOption : NSString;

external NSNoSelectionPlaceholderBindingOption : NSString;

external NSNotApplicablePlaceholderBindingOption : NSString;

external NSNullPlaceholderBindingOption : NSString;

external NSRaisesForNotApplicableKeysBindingOption : NSString;

external NSPredicateFormatBindingOption : NSString;

external NSSelectorNameBindingOption : NSString;

external NSSelectsAllWhenSettingContentBindingOption : NSString;

external NSValidatesImmediatelyBindingOption : NSString;

external NSValueTransformerNameBindingOption : NSString;

external NSValueTransformerBindingOption : NSString;

alias NSTextListPrependEnclosingMarker = 1;

alias NSTextBlockAbsoluteValueType = 0;
alias NSTextBlockPercentageValueType = 1;

alias NSTextBlockValueType = CULong;

alias NSTextBlockWidth = 0;
alias NSTextBlockMinimumWidth = 1;
alias NSTextBlockMaximumWidth = 2;
alias NSTextBlockHeight = 4;
alias NSTextBlockMinimumHeight = 5;
alias NSTextBlockMaximumHeight = 6;

alias NSTextBlockDimension = CULong;

alias NSTextBlockPadding = 4294967295;
alias NSTextBlockBorder = 0;
alias NSTextBlockMargin = 1;

alias NSTextBlockLayer = CLong;

alias NSTextBlockTopAlignment = 0;
alias NSTextBlockMiddleAlignment = 1;
alias NSTextBlockBottomAlignment = 2;
alias NSTextBlockBaselineAlignment = 3;

alias NSTextBlockVerticalAlignment = CULong;

alias NSTextTableAutomaticLayoutAlgorithm = 0;
alias NSTextTableFixedLayoutAlgorithm = 1;

alias NSTextTableLayoutAlgorithm = CULong;

alias NSTextFieldAndStepperDatePickerStyle = 0;
alias NSClockAndCalendarDatePickerStyle = 1;
alias NSTextFieldDatePickerStyle = 2;

alias NSDatePickerStyle = CULong;

alias NSSingleDateMode = 0;
alias NSRangeDateMode = 1;

alias NSDatePickerMode = CULong;

alias NSDatePickerElementFlags = CULong;

alias NSHourMinuteDatePickerElementFlag = 12;
alias NSHourMinuteSecondDatePickerElementFlag = 14;
alias NSTimeZoneDatePickerElementFlag = 16;
alias NSYearMonthDatePickerElementFlag = 192;
alias NSYearMonthDayDatePickerElementFlag = 224;
alias NSEraDatePickerElementFlag = 256;

alias NSRelevancyLevelIndicatorStyle = 0;
alias NSContinuousCapacityLevelIndicatorStyle = 1;
alias NSDiscreteCapacityLevelIndicatorStyle = 2;
alias NSRatingLevelIndicatorStyle = 3;

alias NSLevelIndicatorStyle = CULong;

alias NSRuleEditorNestingModeSingle = 0;
alias NSRuleEditorNestingModeList = 1;
alias NSRuleEditorNestingModeCompound = 2;
alias NSRuleEditorNestingModeSimple = 3;

alias NSRuleEditorNestingMode = CULong;

alias NSRuleEditorRowTypeSimple = 0;
alias NSRuleEditorRowTypeCompound = 1;

alias NSRuleEditorRowType = CULong;

external NSRuleEditorPredicateLeftExpression : NSString;

external NSRuleEditorPredicateRightExpression : NSString;

external NSRuleEditorPredicateComparisonModifier : NSString;

external NSRuleEditorPredicateOptions : NSString;

external NSRuleEditorPredicateOperatorType : NSString;

external NSRuleEditorPredicateCustomSelector : NSString;

external NSRuleEditorPredicateCompoundType : NSString;

external NSRuleEditorRowsDidChangeNotification : NSString;

alias NSPathStyleStandard = 0;
alias NSPathStyleNavigationBar = 1;
alias NSPathStylePopUp = 2;

alias NSPathStyle = CLong;

alias NSCollectionViewDropOperation = CLong;

alias NSCollectionViewDropOn = 0;
alias NSCollectionViewDropBefore = 1;

external NSTextInputContextKeyboardSelectionDidChangeNotification : NSString;
