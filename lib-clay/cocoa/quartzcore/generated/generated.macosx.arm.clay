// Automatically generated by clay-bindgen
// language: objective-c

import cocoa.objc.*;

import libc.*;
import cocoa.corefoundation.*;
import cocoa.applicationservices.*;
import cocoa.foundation.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


override selector("AMSymbol") = NSString;
override selector("API") = UInt;
override selector("CATransform3DValue") = CATransform3D;
override selector("HTTPBody") = NSData;
override selector("HTTPBodyStream") = NSInputStream;
override selector("HTTPMethod") = NSString;
override selector("HTTPShouldHandleCookies") = Bool;
override selector("HTTPShouldUsePipelining") = Bool;
override selector("ISOCountryCodes") = NSArray;
override selector("ISOCurrencyCodes") = NSArray;
override selector("ISOLanguageCodes") = NSArray;
override selector("MIMEType") = NSString;
override selector("PMSymbol") = NSString;
override selector("TXTRecordData") = NSData;
override selector("URL") = NSURL;
override selector("URLByAppendingPathComponent:") = NSURL, NSString;
override selector("URLByAppendingPathExtension:") = NSURL, NSString;
override selector("URLByDeletingLastPathComponent") = NSURL;
override selector("URLByDeletingPathExtension") = NSURL;
override selector("URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, UInt, NSURL, Pointer[Bool], Pointer[NSError];
override selector("URLByResolvingSymlinksInPath") = NSURL;
override selector("URLByStandardizingPath") = NSURL;
override selector("URLForAuxiliaryExecutable:") = NSURL, NSString;
override selector("URLForDirectory:inDomain:appropriateForURL:create:error:") = NSURL, UInt, UInt, NSURL, Bool, Pointer[NSError];
override selector("URLForKey:") = NSURL, NSString;
override selector("URLForResource:withExtension:") = NSURL, NSString, NSString;
override selector("URLForResource:withExtension:subdirectory:") = NSURL, NSString, NSString, NSString;
override selector("URLForResource:withExtension:subdirectory:inBundleWithURL:") = NSURL, NSString, NSString, NSString, NSURL;
override selector("URLForResource:withExtension:subdirectory:localization:") = NSURL, NSString, NSString, NSString, NSString;
override selector("URLProtocol:cachedResponseIsValid:") = Void, NSURLProtocol, NSCachedURLResponse;
override selector("URLProtocol:didCancelAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
override selector("URLProtocol:didFailWithError:") = Void, NSURLProtocol, NSError;
override selector("URLProtocol:didLoadData:") = Void, NSURLProtocol, NSData;
override selector("URLProtocol:didReceiveAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
override selector("URLProtocol:didReceiveResponse:cacheStoragePolicy:") = Void, NSURLProtocol, NSURLResponse, UInt;
override selector("URLProtocol:wasRedirectedToRequest:redirectResponse:") = Void, NSURLProtocol, NSURLRequest, NSURLResponse;
override selector("URLProtocolDidFinishLoading:") = Void, NSURLProtocol;
override selector("URLWithString:") = Id, NSString;
override selector("URLWithString:relativeToURL:") = Id, NSString, NSURL;
override selector("URLsForDirectory:inDomains:") = NSArray, UInt, UInt;
override selector("URLsForResourcesWithExtension:subdirectory:") = NSArray, NSString, NSString;
override selector("URLsForResourcesWithExtension:subdirectory:inBundleWithURL:") = NSArray, NSString, NSString, NSURL;
override selector("URLsForResourcesWithExtension:subdirectory:localization:") = NSArray, NSString, NSString, NSString;
override selector("UTF8String") = Pointer[CChar];
override selector("abbreviation") = NSString;
override selector("abbreviationDictionary") = NSDictionary;
override selector("abbreviationForDate:") = NSString, NSDate;
override selector("abortParsing") = Void;
override selector("absoluteString") = NSString;
override selector("absoluteURL") = NSURL;
override selector("acceptConnectionInBackgroundAndNotify") = Void;
override selector("acceptConnectionInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("acceptInputForMode:beforeDate:") = Void, NSString, NSDate;
override selector("accessInstanceVariablesDirectly") = Bool;
override selector("actionForKey:") = Id, NSString;
override selector("actionForLayer:forKey:") = Id, CALayer, NSString;
override selector("actions") = NSDictionary;
override selector("activeProcessorCount") = UInt;
override selector("addAnimation:forKey:") = Void, CAAnimation, NSString;
override selector("addAttribute:value:range:") = Void, NSString, Id, NSRange;
override selector("addAttributes:range:") = Void, NSDictionary, NSRange;
override selector("addCharactersInRange:") = Void, NSRange;
override selector("addCharactersInString:") = Void, NSString;
override selector("addDependency:") = Void, NSOperation;
override selector("addEntriesFromDictionary:") = Void, NSDictionary;
override selector("addExecutionBlock:") = Void, UnknownType;
override selector("addFileWithPath:") = NSString, NSString;
override selector("addFileWrapper:") = NSString, NSFileWrapper;
override selector("addIndex:") = Void, UInt;
override selector("addIndexes:") = Void, NSIndexSet;
override selector("addIndexesInRange:") = Void, NSRange;
override selector("addObject:") = Void, Id;
override selector("addObjectsFromArray:") = Void, NSArray;
override selector("addObserver:forKeyPath:options:context:") = Void, NSObject, NSString, UInt, RawPointer;
override selector("addObserver:selector:name:object:") = Void, Id, SelectorHandle, NSString, Id;
override selector("addObserver:toObjectsAtIndexes:forKeyPath:options:context:") = Void, NSObject, NSIndexSet, NSString, UInt, RawPointer;
override selector("addObserverForName:object:queue:usingBlock:") = Id, NSString, Id, NSOperationQueue, UnknownType;
override selector("addOperation:") = Void, NSOperation;
override selector("addOperationWithBlock:") = Void, UnknownType;
override selector("addOperations:waitUntilFinished:") = Void, NSArray, Bool;
override selector("addPort:forMode:") = Void, NSPort, NSString;
override selector("addRegularFileWithContents:preferredFilename:") = NSString, NSData, NSString;
override selector("addSublayer:") = Void, CALayer;
override selector("addSuiteNamed:") = Void, NSString;
override selector("addSymbolicLinkWithDestination:preferredFilename:") = NSString, NSString, NSString;
override selector("addTimeInterval:") = Id, Double;
override selector("addTimer:forMode:") = Void, NSTimer, NSString;
override selector("addToRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("addValue:forHTTPHeaderField:") = Void, NSString, NSString;
override selector("addressCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
override selector("addressComponents") = NSDictionary;
override selector("addresses") = NSArray;
override selector("affineTransform") = CGAffineTransform;
override selector("alignmentMode") = NSString;
override selector("allBundles") = NSArray;
override selector("allCredentials") = NSDictionary;
override selector("allFrameworks") = NSArray;
override selector("allHTTPHeaderFields") = NSDictionary;
override selector("allHeaderFields") = NSDictionary;
override selector("allKeys") = NSArray;
override selector("allKeysForObject:") = NSArray, Id;
override selector("allLanguages") = NSArray;
override selector("allObjects") = NSArray;
override selector("allScripts") = NSArray;
override selector("allValues") = NSArray;
override selector("alloc") = Id;
override selector("allocWithZone:") = Id, Pointer[NSZone];
override selector("allowsFloats") = Bool;
override selector("allowsKeyedCoding") = Bool;
override selector("allowsReverseTransformation") = Bool;
override selector("alphanumericCharacterSet") = Id;
override selector("alwaysShowsDecimalSeparator") = Bool;
override selector("anchorPoint") = CGPoint;
override selector("anchorPointZ") = Float;
override selector("andPredicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("animation") = Id;
override selector("animationDidStart:") = Void, CAAnimation;
override selector("animationDidStop:finished:") = Void, CAAnimation, Bool;
override selector("animationDuration") = Double;
override selector("animationForKey:") = CAAnimation, NSString;
override selector("animationKeys") = NSArray;
override selector("animationTimingFunction") = CAMediaTimingFunction;
override selector("animationWithKeyPath:") = Id, NSString;
override selector("animations") = NSArray;
override selector("anyObject") = Id;
override selector("appendAttributedString:") = Void, NSAttributedString;
override selector("appendBytes:length:") = Void, RawPointer, UInt;
override selector("appendData:") = Void, NSData;
override varargSelector("appendFormat:") = Void, NSString;
override selector("appendString:") = Void, NSString;
override selector("archiveRootObject:toFile:") = Bool, Id, NSString;
override selector("archivedDataWithRootObject:") = NSData, Id;
override selector("archiver:didEncodeObject:") = Void, NSKeyedArchiver, Id;
override selector("archiver:willEncodeObject:") = Id, NSKeyedArchiver, Id;
override selector("archiver:willReplaceObject:withObject:") = Void, NSKeyedArchiver, Id, Id;
override selector("archiverDidFinish:") = Void, NSKeyedArchiver;
override selector("archiverWillFinish:") = Void, NSKeyedArchiver;
override selector("arguments") = NSArray;
override selector("argumentsRetained") = Bool;
override selector("array") = Id;
override selector("arrayByAddingObject:") = NSArray, Id;
override selector("arrayByAddingObjectsFromArray:") = NSArray, NSArray;
override selector("arrayForKey:") = NSArray, NSString;
override selector("arrayWithArray:") = Id, NSArray;
override selector("arrayWithCapacity:") = Id, UInt;
override selector("arrayWithContentsOfFile:") = Id, NSString;
override selector("arrayWithContentsOfURL:") = Id, NSURL;
override selector("arrayWithObject:") = Id, Id;
override varargSelector("arrayWithObjects:") = Id, Id;
override selector("arrayWithObjects:count:") = Id, Pointer[Id], UInt;
override selector("ascending") = Bool;
override selector("attemptRecoveryFromError:optionIndex:") = Bool, NSError, UInt;
override selector("attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:") = Void, NSError, UInt, Id, SelectorHandle, RawPointer;
override selector("attribute:atIndex:effectiveRange:") = Id, NSString, UInt, NSRangePointer;
override selector("attribute:atIndex:longestEffectiveRange:inRange:") = Id, NSString, UInt, NSRangePointer, NSRange;
override selector("attributedStringForObjectValue:withDefaultAttributes:") = NSAttributedString, Id, NSDictionary;
override selector("attributedSubstringFromRange:") = NSAttributedString, NSRange;
override selector("attributesAtIndex:effectiveRange:") = NSDictionary, UInt, NSRangePointer;
override selector("attributesAtIndex:longestEffectiveRange:inRange:") = NSDictionary, UInt, NSRangePointer, NSRange;
override selector("attributesOfFileSystemForPath:error:") = NSDictionary, NSString, Pointer[NSError];
override selector("attributesOfItemAtPath:error:") = NSDictionary, NSString, Pointer[NSError];
override selector("authenticationMethod") = NSString;
override selector("autoContentAccessingProxy") = Id;
override selector("automaticallyNotifiesObserversForKey:") = Bool, NSString;
override selector("autorelease") = Id;
override selector("autoreverses") = Bool;
override selector("autoupdatingCurrentCalendar") = Id;
override selector("autoupdatingCurrentLocale") = Id;
override selector("availableData") = NSData;
override selector("availableLocaleIdentifiers") = NSArray;
override selector("availableStringEncodings") = Pointer[UInt];
override selector("awakeAfterUsingCoder:") = Id, NSCoder;
override selector("backgroundColor") = CGColorRef;
override selector("backgroundFilters") = NSArray;
override selector("baseURL") = NSURL;
override selector("begin") = Void;
override selector("beginContentAccess") = Bool;
override selector("beginEditing") = Void;
override selector("beginTime") = Double;
override selector("beginUndoGrouping") = Void;
override selector("biasValues") = NSArray;
override selector("bitmapRepresentation") = NSData;
override selector("blockOperationWithBlock:") = Id, UnknownType;
override selector("bookmarkDataWithContentsOfURL:error:") = NSData, NSURL, Pointer[NSError];
override selector("bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:") = NSData, UInt, NSArray, NSURL, Pointer[NSError];
override selector("boolForKey:") = Bool, NSString;
override selector("boolValue") = Bool;
override selector("borderColor") = CGColorRef;
override selector("borderWidth") = Float;
override selector("bounds") = CGRect;
override selector("broadcast") = Void;
override selector("builtInPlugInsPath") = NSString;
override selector("builtInPlugInsURL") = NSURL;
override selector("bundleForClass:") = NSBundle, Id;
override selector("bundleIdentifier") = NSString;
override selector("bundlePath") = NSString;
override selector("bundleURL") = NSURL;
override selector("bundleWithIdentifier:") = NSBundle, NSString;
override selector("bundleWithPath:") = NSBundle, NSString;
override selector("bundleWithURL:") = NSBundle, NSURL;
override selector("byValue") = Id;
override selector("bytes") = RawPointer;
override selector("cString") = Pointer[CChar];
override selector("cStringLength") = UInt;
override selector("cStringUsingEncoding:") = Pointer[CChar], UInt;
override selector("cache:willEvictObject:") = Void, NSCache, Id;
override selector("cachePolicy") = UInt;
override selector("cachedResponse") = NSCachedURLResponse;
override selector("cachedResponseForRequest:") = NSCachedURLResponse, NSURLRequest;
override selector("calculationMode") = NSString;
override selector("calendar") = NSCalendar;
override selector("calendarIdentifier") = NSString;
override selector("callStackReturnAddresses") = NSArray;
override selector("callStackSymbols") = NSArray;
override selector("canBeConvertedToEncoding:") = Bool, UInt;
override selector("canHandleRequest:") = Bool, NSURLRequest;
override selector("canInitWithRequest:") = Bool, NSURLRequest;
override selector("canRedo") = Bool;
override selector("canUndo") = Bool;
override selector("cancel") = Void;
override selector("cancelAllOperations") = Void;
override selector("cancelAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
override selector("cancelPerformSelector:target:argument:") = Void, SelectorHandle, Id, Id;
override selector("cancelPerformSelectorsWithTarget:") = Void, Id;
override selector("cancelPreviousPerformRequestsWithTarget:") = Void, Id;
override selector("cancelPreviousPerformRequestsWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
override selector("canonicalLanguageIdentifierFromString:") = NSString, NSString;
override selector("canonicalLocaleIdentifierFromString:") = NSString, NSString;
override selector("canonicalRequestForRequest:") = NSURLRequest, NSURLRequest;
override selector("capitalizedLetterCharacterSet") = Id;
override selector("capitalizedString") = NSString;
override selector("caseInsensitiveCompare:") = Int, NSString;
override selector("caseSensitive") = Bool;
override selector("certificates") = NSArray;
override selector("changeCurrentDirectoryPath:") = Bool, NSString;
override selector("changeFileAttributes:atPath:") = Bool, NSDictionary, NSString;
override selector("charValue") = CChar;
override selector("characterAtIndex:") = UShort, UInt;
override selector("characterDirectionForLanguage:") = UInt, NSString;
override selector("characterIsMember:") = Bool, UShort;
override selector("characterSetWithBitmapRepresentation:") = Id, NSData;
override selector("characterSetWithCharactersInString:") = Id, NSString;
override selector("characterSetWithContentsOfFile:") = Id, NSString;
override selector("characterSetWithRange:") = Id, NSRange;
override selector("charactersToBeSkipped") = NSCharacterSet;
override selector("checkResourceIsReachableAndReturnError:") = Bool, Pointer[NSError];
override selector("checkingTypes") = UInt64;
override selector("class") = Id;
override selector("classFallbacksForKeyedArchiver") = NSArray;
override selector("classForClassName:") = Id, NSString;
override selector("classForCoder") = Id;
override selector("classForKeyedArchiver") = Id;
override selector("classForKeyedUnarchiver") = Id;
override selector("classNameForClass:") = NSString, Id;
override selector("classNamed:") = Id, NSString;
override selector("client") = Id;
override selector("close") = Void;
override selector("closeFile") = Void;
override selector("code") = Int;
override selector("collection") = Id;
override selector("colors") = NSArray;
override selector("columnNumber") = Int;
override selector("comment") = NSString;
override selector("commentURL") = NSURL;
override selector("commit") = Void;
override selector("commonISOCurrencyCodes") = NSArray;
override selector("commonPrefixWithString:options:") = NSString, NSString, UInt;
override selector("comparator") = NSComparator;
override selector("compare:") = Int, NSNumber;
override selector("compare:options:") = Int, NSString, UInt;
override selector("compare:options:range:") = Int, NSString, UInt, NSRange;
override selector("compare:options:range:locale:") = Int, NSString, UInt, NSRange, Id;
override selector("compareObject:toObject:") = Int, Id, Id;
override selector("comparisonPredicateModifier") = UInt;
override selector("completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:") = UInt, Pointer[NSString], Bool, Pointer[NSArray], NSArray;
override selector("completionBlock") = UnknownType;
override selector("components") = NSDictionary;
override selector("components:fromDate:") = NSDateComponents, UInt, NSDate;
override selector("components:fromDate:toDate:options:") = NSDateComponents, UInt, NSDate, NSDate, UInt;
override selector("componentsFromLocaleIdentifier:") = NSDictionary, NSString;
override selector("componentsJoinedByString:") = NSString, NSString;
override selector("componentsSeparatedByCharactersInSet:") = NSArray, NSCharacterSet;
override selector("componentsSeparatedByString:") = NSArray, NSString;
override selector("componentsToDisplayForPath:") = NSArray, NSString;
override selector("compositingFilter") = Id;
override selector("compoundPredicateType") = UInt;
override selector("condition") = Int;
override selector("conformsToProtocol:") = Bool, Id;
override selector("connection:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLConnection, NSURLProtectionSpace;
override selector("connection:didCancelAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
override selector("connection:didFailWithError:") = Void, NSURLConnection, NSError;
override selector("connection:didReceiveAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
override selector("connection:didReceiveData:") = Void, NSURLConnection, NSData;
override selector("connection:didReceiveResponse:") = Void, NSURLConnection, NSURLResponse;
override selector("connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:") = Void, NSURLConnection, Int, Int, Int;
override selector("connection:needNewBodyStream:") = NSInputStream, NSURLConnection, NSURLRequest;
override selector("connection:willCacheResponse:") = NSCachedURLResponse, NSURLConnection, NSCachedURLResponse;
override selector("connection:willSendRequest:redirectResponse:") = NSURLRequest, NSURLConnection, NSURLRequest, NSURLResponse;
override selector("connectionDidFinishLoading:") = Void, NSURLConnection;
override selector("connectionShouldUseCredentialStorage:") = Bool, NSURLConnection;
override selector("connectionWithRequest:delegate:") = NSURLConnection, NSURLRequest, Id;
override selector("constantValue") = Id;
override selector("containsIndex:") = Bool, UInt;
override selector("containsIndexes:") = Bool, NSIndexSet;
override selector("containsIndexesInRange:") = Bool, NSRange;
override selector("containsObject:") = Bool, Id;
override selector("containsPoint:") = Bool, CGPoint;
override selector("containsValueForKey:") = Bool, NSString;
override selector("contents") = Id;
override selector("contentsAreFlipped") = Bool;
override selector("contentsAtPath:") = NSData, NSString;
override selector("contentsCenter") = CGRect;
override selector("contentsEqualAtPath:andPath:") = Bool, NSString, NSString;
override selector("contentsGravity") = NSString;
override selector("contentsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:") = NSArray, NSURL, NSArray, UInt, Pointer[NSError];
override selector("contentsRect") = CGRect;
override selector("contentsScale") = Float;
override selector("continueWithoutCredentialForAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
override selector("continuityValues") = NSArray;
override selector("controlCharacterSet") = Id;
override selector("convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
override selector("convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
override selector("convertRect:fromLayer:") = CGRect, CGRect, CALayer;
override selector("convertRect:toLayer:") = CGRect, CGRect, CALayer;
override selector("convertTime:fromLayer:") = Double, Double, CALayer;
override selector("convertTime:toLayer:") = Double, Double, CALayer;
override selector("cookieAcceptPolicy") = UInt;
override selector("cookieWithProperties:") = Id, NSDictionary;
override selector("cookies") = NSArray;
override selector("cookiesForURL:") = NSArray, NSURL;
override selector("cookiesWithResponseHeaderFields:forURL:") = NSArray, NSDictionary, NSURL;
override selector("copy") = Id;
override selector("copyItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("copyItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("copyWithZone:") = Id, Pointer[NSZone];
override selector("cornerRadius") = Float;
override selector("correctionCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("count") = UInt;
override selector("countByEnumeratingWithState:objects:count:") = UInt, Pointer[NSFastEnumerationState], Pointer[Id], UInt;
override selector("countForObject:") = UInt, Id;
override selector("countLimit") = UInt;
override selector("countOfIndexesInRange:") = UInt, NSRange;
override selector("createDirectoryAtPath:attributes:") = Bool, NSString, NSDictionary;
override selector("createDirectoryAtPath:withIntermediateDirectories:attributes:error:") = Bool, NSString, Bool, NSDictionary, Pointer[NSError];
override selector("createFileAtPath:contents:attributes:") = Bool, NSString, NSData, NSDictionary;
override selector("createSymbolicLinkAtPath:pathContent:") = Bool, NSString, NSString;
override selector("createSymbolicLinkAtPath:withDestinationPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("credentialForTrust:") = NSURLCredential, SecTrustRef;
override selector("credentialWithIdentity:certificates:persistence:") = NSURLCredential, SecIdentityRef, NSArray, UInt;
override selector("credentialWithUser:password:persistence:") = NSURLCredential, NSString, NSString, UInt;
override selector("credentialsForProtectionSpace:") = NSDictionary, NSURLProtectionSpace;
override selector("currencyCode") = NSString;
override selector("currencyDecimalSeparator") = NSString;
override selector("currencyGroupingSeparator") = NSString;
override selector("currencySymbol") = NSString;
override selector("currentCalendar") = Id;
override selector("currentContext") = EAGLContext;
override selector("currentDirectoryPath") = NSString;
override selector("currentDiskUsage") = UInt;
override selector("currentHandler") = NSAssertionHandler;
override selector("currentLocale") = Id;
override selector("currentMemoryUsage") = UInt;
override selector("currentMode") = NSString;
override selector("currentQueue") = Id;
override selector("currentRunLoop") = NSRunLoop;
override selector("currentThread") = NSThread;
override selector("customSelector") = SelectorHandle;
override selector("dashCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("data") = Id;
override selector("dataDetectorWithTypes:error:") = NSDataDetector, UInt64, Pointer[NSError];
override selector("dataForKey:") = NSData, NSString;
override selector("dataFromPropertyList:format:errorDescription:") = NSData, Id, UInt, Pointer[NSString];
override selector("dataFromTXTRecordDictionary:") = NSData, NSDictionary;
override selector("dataUsingEncoding:") = NSData, UInt;
override selector("dataUsingEncoding:allowLossyConversion:") = NSData, UInt, Bool;
override selector("dataWithBytes:length:") = Id, RawPointer, UInt;
override selector("dataWithBytesNoCopy:length:") = Id, RawPointer, UInt;
override selector("dataWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, UInt, Bool;
override selector("dataWithCapacity:") = Id, UInt;
override selector("dataWithContentsOfFile:") = Id, NSString;
override selector("dataWithContentsOfFile:options:error:") = Id, NSString, UInt, Pointer[NSError];
override selector("dataWithContentsOfMappedFile:") = Id, NSString;
override selector("dataWithContentsOfURL:") = Id, NSURL;
override selector("dataWithContentsOfURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
override selector("dataWithData:") = Id, NSData;
override selector("dataWithLength:") = Id, UInt;
override selector("dataWithPropertyList:format:options:error:") = NSData, Id, UInt, UInt, Pointer[NSError];
override selector("date") = Id;
override selector("dateByAddingComponents:toDate:options:") = NSDate, NSDateComponents, NSDate, UInt;
override selector("dateByAddingTimeInterval:") = Id, Double;
override selector("dateCheckingResultWithRange:date:") = NSTextCheckingResult, NSRange, NSDate;
override selector("dateCheckingResultWithRange:date:timeZone:duration:") = NSTextCheckingResult, NSRange, NSDate, NSTimeZone, Double;
override selector("dateFormat") = NSString;
override selector("dateFormatFromTemplate:options:locale:") = NSString, NSString, UInt, NSLocale;
override selector("dateFromComponents:") = NSDate, NSDateComponents;
override selector("dateFromString:") = NSDate, NSString;
override selector("dateStyle") = UInt;
override selector("dateWithTimeInterval:sinceDate:") = Id, Double, NSDate;
override selector("dateWithTimeIntervalSince1970:") = Id, Double;
override selector("dateWithTimeIntervalSinceNow:") = Id, Double;
override selector("dateWithTimeIntervalSinceReferenceDate:") = Id, Double;
override selector("day") = Int;
override selector("daylightSavingTimeOffset") = Double;
override selector("daylightSavingTimeOffsetForDate:") = Double, NSDate;
override selector("dealloc") = Void;
override selector("decimalDigitCharacterSet") = Id;
override selector("decimalNumberByAdding:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByAdding:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByDividingBy:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByDividingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByMultiplyingBy:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByMultiplyingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByMultiplyingByPowerOf10:") = NSDecimalNumber, Short;
override selector("decimalNumberByMultiplyingByPowerOf10:withBehavior:") = NSDecimalNumber, Short, Id;
override selector("decimalNumberByRaisingToPower:") = NSDecimalNumber, UInt;
override selector("decimalNumberByRaisingToPower:withBehavior:") = NSDecimalNumber, UInt, Id;
override selector("decimalNumberByRoundingAccordingToBehavior:") = NSDecimalNumber, Id;
override selector("decimalNumberBySubtracting:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberBySubtracting:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, UInt, Short, Bool, Bool, Bool, Bool;
override selector("decimalNumberWithDecimal:") = NSDecimalNumber, NSDecimal;
override selector("decimalNumberWithMantissa:exponent:isNegative:") = NSDecimalNumber, UInt64, Short, Bool;
override selector("decimalNumberWithString:") = NSDecimalNumber, NSString;
override selector("decimalNumberWithString:locale:") = NSDecimalNumber, NSString, Id;
override selector("decimalSeparator") = NSString;
override selector("decimalValue") = NSDecimal;
override selector("decodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], UInt, RawPointer;
override selector("decodeBoolForKey:") = Bool, NSString;
override selector("decodeBytesForKey:returnedLength:") = Pointer[CUChar], NSString, Pointer[UInt];
override selector("decodeBytesWithReturnedLength:") = RawPointer, Pointer[UInt];
override selector("decodeDataObject") = NSData;
override selector("decodeDoubleForKey:") = Double, NSString;
override selector("decodeFloatForKey:") = Float, NSString;
override selector("decodeInt32ForKey:") = Int, NSString;
override selector("decodeInt64ForKey:") = Int64, NSString;
override selector("decodeIntForKey:") = Int, NSString;
override selector("decodeIntegerForKey:") = Int, NSString;
override selector("decodeObject") = Id;
override selector("decodeObjectForKey:") = Id, NSString;
override selector("decodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
override varargSelector("decodeValuesOfObjCTypes:") = Void, Pointer[CChar];
override selector("decomposableCharacterSet") = Id;
override selector("decomposedStringWithCanonicalMapping") = NSString;
override selector("decomposedStringWithCompatibilityMapping") = NSString;
override selector("defaultActionForKey:") = Id, NSString;
override selector("defaultBehavior") = Id;
override selector("defaultCStringEncoding") = UInt;
override selector("defaultCenter") = Id;
override selector("defaultCredentialForProtectionSpace:") = NSURLCredential, NSURLProtectionSpace;
override selector("defaultDate") = NSDate;
override selector("defaultDecimalNumberHandler") = Id;
override selector("defaultFormatterBehavior") = UInt;
override selector("defaultManager") = NSFileManager;
override selector("defaultQueue") = Id;
override selector("defaultTimeZone") = NSTimeZone;
override selector("defaultValueForKey:") = Id, NSString;
override selector("delegate") = Id;
override selector("deleteCharactersInRange:") = Void, NSRange;
override selector("deleteCookie:") = Void, NSHTTPCookie;
override selector("dependencies") = NSArray;
override selector("dequeueNotificationsMatching:coalesceMask:") = Void, NSNotification, UInt;
override selector("description") = NSString;
override selector("descriptionInStringsFileFormat") = NSString;
override selector("descriptionWithLocale:") = NSString, Id;
override selector("descriptionWithLocale:indent:") = NSString, Id, UInt;
override selector("destinationOfSymbolicLinkAtPath:error:") = NSString, NSString, Pointer[NSError];
override selector("detachNewThreadSelector:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
override selector("developmentLocalization") = NSString;
override selector("dictionary") = Id;
override selector("dictionaryForKey:") = NSDictionary, NSString;
override selector("dictionaryFromTXTRecordData:") = NSDictionary, NSData;
override selector("dictionaryRepresentation") = NSDictionary;
override selector("dictionaryWithCapacity:") = Id, UInt;
override selector("dictionaryWithContentsOfFile:") = Id, NSString;
override selector("dictionaryWithContentsOfURL:") = Id, NSURL;
override selector("dictionaryWithDictionary:") = Id, NSDictionary;
override selector("dictionaryWithObject:forKey:") = Id, Id, Id;
override selector("dictionaryWithObjects:forKeys:") = Id, NSArray, NSArray;
override selector("dictionaryWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], UInt;
override varargSelector("dictionaryWithObjectsAndKeys:") = Id, Id;
override selector("dictionaryWithValuesForKeys:") = NSDictionary, NSArray;
override selector("didChange:valuesAtIndexes:forKey:") = Void, UInt, NSIndexSet, NSString;
override selector("didChangeValueForKey:") = Void, NSString;
override selector("didChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, UInt, NSSet;
override selector("directoryAttributes") = NSDictionary;
override selector("directoryContentsAtPath:") = NSArray, NSString;
override selector("disableActions") = Bool;
override selector("disableUndoRegistration") = Void;
override selector("discardContentIfPossible") = Void;
override selector("diskCapacity") = UInt;
override selector("display") = Void;
override selector("displayIfNeeded") = Void;
override selector("displayLayer:") = Void, CALayer;
override selector("displayLinkWithTarget:selector:") = CADisplayLink, Id, SelectorHandle;
override selector("displayNameAtPath:") = NSString, NSString;
override selector("displayNameForKey:value:") = NSString, Id, Id;
override selector("distantFuture") = Id;
override selector("distantPast") = Id;
override selector("distinguishedNames") = NSArray;
override selector("doesNotRecognizeSelector:") = Void, SelectorHandle;
override selector("doesRelativeDateFormatting") = Bool;
override selector("domain") = NSString;
override selector("dominantLanguage") = NSString;
override selector("dominantLanguageForScript:") = NSString, NSString;
override selector("dominantScript") = NSString;
override selector("doubleForKey:") = Double, NSString;
override selector("doubleValue") = Double;
override selector("drain") = Void;
override selector("drawInContext:") = Void, CGContextRef;
override selector("drawLayer:inContext:") = Void, CALayer, CGContextRef;
override selector("drawableProperties") = NSDictionary;
override selector("duration") = Double;
override selector("earlierDate:") = NSDate, NSDate;
override selector("edgeAntialiasingMask") = UInt;
override selector("editingStringForObjectValue:") = NSString, Id;
override selector("enableUndoRegistration") = Void;
override selector("encodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], UInt, RawPointer;
override selector("encodeBool:forKey:") = Void, Bool, NSString;
override selector("encodeBycopyObject:") = Void, Id;
override selector("encodeByrefObject:") = Void, Id;
override selector("encodeBytes:length:") = Void, RawPointer, UInt;
override selector("encodeBytes:length:forKey:") = Void, Pointer[CUChar], UInt, NSString;
override selector("encodeConditionalObject:") = Void, Id;
override selector("encodeConditionalObject:forKey:") = Void, Id, NSString;
override selector("encodeDataObject:") = Void, NSData;
override selector("encodeDouble:forKey:") = Void, Double, NSString;
override selector("encodeFloat:forKey:") = Void, Float, NSString;
override selector("encodeInt32:forKey:") = Void, Int, NSString;
override selector("encodeInt64:forKey:") = Void, Int64, NSString;
override selector("encodeInt:forKey:") = Void, Int, NSString;
override selector("encodeInteger:forKey:") = Void, Int, NSString;
override selector("encodeObject:") = Void, Id;
override selector("encodeObject:forKey:") = Void, Id, NSString;
override selector("encodeRootObject:") = Void, Id;
override selector("encodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
override varargSelector("encodeValuesOfObjCTypes:") = Void, Pointer[CChar];
override selector("encodeWithCoder:") = Void, NSCoder;
override selector("endContentAccess") = Void;
override selector("endEditing") = Void;
override selector("endPoint") = CGPoint;
override selector("endProgress") = Float;
override selector("endUndoGrouping") = Void;
override selector("enqueueNotification:postingStyle:") = Void, NSNotification, UInt;
override selector("enqueueNotification:postingStyle:coalesceMask:forModes:") = Void, NSNotification, UInt, UInt, NSArray;
override selector("enumerateAttribute:inRange:options:usingBlock:") = Void, NSString, NSRange, UInt, UnknownType;
override selector("enumerateAttributesInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
override selector("enumerateIndexesInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
override selector("enumerateIndexesUsingBlock:") = Void, UnknownType;
override selector("enumerateIndexesWithOptions:usingBlock:") = Void, UInt, UnknownType;
override selector("enumerateKeysAndObjectsUsingBlock:") = Void, UnknownType;
override selector("enumerateKeysAndObjectsWithOptions:usingBlock:") = Void, UInt, UnknownType;
override selector("enumerateLinesUsingBlock:") = Void, UnknownType;
override selector("enumerateMatchesInString:options:range:usingBlock:") = Void, NSString, UInt, NSRange, UnknownType;
override selector("enumerateObjectsAtIndexes:options:usingBlock:") = Void, NSIndexSet, UInt, UnknownType;
override selector("enumerateObjectsUsingBlock:") = Void, UnknownType;
override selector("enumerateObjectsWithOptions:usingBlock:") = Void, UInt, UnknownType;
override selector("enumerateSubstringsInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
override selector("enumeratorAtPath:") = NSDirectoryEnumerator, NSString;
override selector("enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:") = NSDirectoryEnumerator, NSURL, NSArray, UInt, UnknownType;
override selector("environment") = NSDictionary;
override selector("era") = Int;
override selector("eraSymbols") = NSArray;
override selector("error") = NSError;
override selector("errorWithDomain:code:userInfo:") = Id, NSString, Int, NSDictionary;
override selector("escapedPatternForString:") = NSString, NSString;
override selector("escapedTemplateForString:") = NSString, NSString;
override selector("evaluateWithObject:") = Bool, Id;
override selector("evaluateWithObject:substitutionVariables:") = Bool, Id, NSDictionary;
override selector("evictsObjectsWithDiscardedContent") = Bool;
override selector("exceptionDuringOperation:error:leftOperand:rightOperand:") = NSDecimalNumber, SelectorHandle, UInt, NSDecimalNumber, NSDecimalNumber;
override selector("exceptionWithName:reason:userInfo:") = NSException, NSString, NSString, NSDictionary;
override selector("exchangeObjectAtIndex:withObjectAtIndex:") = Void, UInt, UInt;
override selector("executableArchitectures") = NSArray;
override selector("executablePath") = NSString;
override selector("executableURL") = NSURL;
override selector("executionBlocks") = NSArray;
override selector("exit") = Void;
override selector("expectedContentLength") = Int64;
override selector("expiresDate") = NSDate;
override selector("exponentSymbol") = NSString;
override selector("expressionBlock") = UnknownType;
override selector("expressionForAggregate:") = NSExpression, NSArray;
override selector("expressionForBlock:arguments:") = NSExpression, UnknownType, NSArray;
override selector("expressionForConstantValue:") = NSExpression, Id;
override selector("expressionForEvaluatedObject") = NSExpression;
override selector("expressionForFunction:arguments:") = NSExpression, NSString, NSArray;
override selector("expressionForFunction:selectorName:arguments:") = NSExpression, NSExpression, NSString, NSArray;
override selector("expressionForIntersectSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForKeyPath:") = NSExpression, NSString;
override selector("expressionForMinusSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForSubquery:usingIteratorVariable:predicate:") = NSExpression, NSExpression, NSString, Id;
override selector("expressionForUnionSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForVariable:") = NSExpression, NSString;
override selector("expressionType") = UInt;
override selector("expressionValueWithObject:context:") = Id, Id, NSMutableDictionary;
override selector("fadeDuration") = Double;
override selector("failureResponse") = NSURLResponse;
override selector("fastestEncoding") = UInt;
override selector("fileAttributes") = NSDictionary;
override selector("fileAttributesAtPath:traverseLink:") = NSDictionary, NSString, Bool;
override selector("fileCreationDate") = NSDate;
override selector("fileDescriptor") = Int;
override selector("fileExistsAtPath:") = Bool, NSString;
override selector("fileExistsAtPath:isDirectory:") = Bool, NSString, Pointer[Bool];
override selector("fileExtensionHidden") = Bool;
override selector("fileGroupOwnerAccountID") = NSNumber;
override selector("fileGroupOwnerAccountName") = NSString;
override selector("fileHFSCreatorCode") = CULong;
override selector("fileHFSTypeCode") = CULong;
override selector("fileHandleForReading") = NSFileHandle;
override selector("fileHandleForReadingAtPath:") = Id, NSString;
override selector("fileHandleForReadingFromURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleForUpdatingAtPath:") = Id, NSString;
override selector("fileHandleForUpdatingURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleForWriting") = NSFileHandle;
override selector("fileHandleForWritingAtPath:") = Id, NSString;
override selector("fileHandleForWritingToURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleWithNullDevice") = Id;
override selector("fileHandleWithStandardError") = Id;
override selector("fileHandleWithStandardInput") = Id;
override selector("fileHandleWithStandardOutput") = Id;
override selector("fileIsAppendOnly") = Bool;
override selector("fileIsImmutable") = Bool;
override selector("fileManager:shouldCopyItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldCopyItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldLinkItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldLinkItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldMoveItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldMoveItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:") = Bool, NSFileManager, NSDictionary;
override selector("fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:movingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:movingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:removingItemAtPath:") = Bool, NSFileManager, NSError, NSString;
override selector("fileManager:shouldProceedAfterError:removingItemAtURL:") = Bool, NSFileManager, NSError, NSURL;
override selector("fileManager:shouldRemoveItemAtPath:") = Bool, NSFileManager, NSString;
override selector("fileManager:shouldRemoveItemAtURL:") = Bool, NSFileManager, NSURL;
override selector("fileManager:willProcessPath:") = Void, NSFileManager, NSString;
override selector("fileModificationDate") = NSDate;
override selector("fileOwnerAccountID") = NSNumber;
override selector("fileOwnerAccountName") = NSString;
override selector("filePathURL") = NSURL;
override selector("filePosixPermissions") = UInt;
override selector("fileReferenceURL") = NSURL;
override selector("fileSize") = UInt64;
override selector("fileSystemAttributesAtPath:") = NSDictionary, NSString;
override selector("fileSystemFileNumber") = UInt;
override selector("fileSystemNumber") = Int;
override selector("fileSystemRepresentation") = Pointer[CChar];
override selector("fileSystemRepresentationWithPath:") = Pointer[CChar], NSString;
override selector("fileType") = NSString;
override selector("fileURLWithPath:") = Id, NSString;
override selector("fileURLWithPath:isDirectory:") = Id, NSString, Bool;
override selector("fileURLWithPathComponents:") = NSURL, NSArray;
override selector("fileWrappers") = NSDictionary;
override selector("filename") = NSString;
override selector("fillColor") = CGColorRef;
override selector("fillMode") = NSString;
override selector("fillRule") = NSString;
override selector("filter") = Id;
override selector("filterUsingPredicate:") = Void, NSPredicate;
override selector("filteredArrayUsingPredicate:") = NSArray, NSPredicate;
override selector("filteredSetUsingPredicate:") = NSSet, NSPredicate;
override selector("filters") = NSArray;
override selector("finalize") = Void;
override selector("finishDecoding") = Void;
override selector("finishEncoding") = Void;
override selector("fire") = Void;
override selector("fireDate") = NSDate;
override selector("firstIndex") = UInt;
override selector("firstMatchInString:options:range:") = NSTextCheckingResult, NSString, UInt, NSRange;
override selector("firstObjectCommonWithArray:") = Id, NSArray;
override selector("firstWeekday") = UInt;
override selector("floatForKey:") = Float, NSString;
override selector("floatValue") = Float;
override selector("flush") = Void;
override selector("font") = CFTypeRef;
override selector("fontSize") = Float;
override selector("foregroundColor") = CGColorRef;
override selector("formIntersectionWithCharacterSet:") = Void, NSCharacterSet;
override selector("formUnionWithCharacterSet:") = Void, NSCharacterSet;
override selector("formatWidth") = UInt;
override selector("formatterBehavior") = UInt;
override selector("forwardInvocation:") = Void, NSInvocation;
override selector("forwardingTargetForSelector:") = Id, SelectorHandle;
override selector("fragment") = NSString;
override selector("frame") = CGRect;
override selector("frameInterval") = Int;
override selector("frameLength") = UInt;
override selector("fromValue") = Id;
override selector("function") = NSString;
override selector("functionWithControlPoints::::") = Id, Float, Float, Float, Float;
override selector("functionWithName:") = Id, NSString;
override selector("generatesCalendarDates") = Bool;
override selector("generatesDecimalNumbers") = Bool;
override selector("getArgument:atIndex:") = Void, RawPointer, Int;
override selector("getArgumentTypeAtIndex:") = Pointer[CChar], UInt;
override selector("getBuffer:length:") = Bool, Pointer[Pointer[CUChar]], Pointer[UInt];
override selector("getBytes:") = Void, RawPointer;
override selector("getBytes:length:") = Void, RawPointer, UInt;
override selector("getBytes:maxLength:usedLength:encoding:options:range:remainingRange:") = Bool, RawPointer, UInt, Pointer[UInt], UInt, UInt, NSRange, NSRangePointer;
override selector("getBytes:range:") = Void, RawPointer, NSRange;
override selector("getCFRunLoop") = CFRunLoopRef;
override selector("getCString:") = Void, Pointer[CChar];
override selector("getCString:maxLength:") = Void, Pointer[CChar], UInt;
override selector("getCString:maxLength:encoding:") = Bool, Pointer[CChar], UInt, UInt;
override selector("getCString:maxLength:range:remainingRange:") = Void, Pointer[CChar], UInt, NSRange, NSRangePointer;
override selector("getCharacters:") = Void, Pointer[UShort];
override selector("getCharacters:range:") = Void, Pointer[UShort], NSRange;
override selector("getControlPointAtIndex:values:") = Void, UInt, Pointer[Float];
override selector("getFileSystemRepresentation:maxLength:") = Bool, Pointer[CChar], UInt;
override selector("getIndexes:") = Void, Pointer[UInt];
override selector("getIndexes:maxCount:inIndexRange:") = UInt, Pointer[UInt], UInt, NSRangePointer;
override selector("getInputStream:outputStream:") = Bool, Pointer[NSInputStream], Pointer[NSOutputStream];
override selector("getLineStart:end:contentsEnd:forRange:") = Void, Pointer[UInt], Pointer[UInt], Pointer[UInt], NSRange;
override selector("getObjectValue:forString:errorDescription:") = Bool, Pointer[Id], NSString, Pointer[NSString];
override selector("getObjectValue:forString:range:error:") = Bool, Pointer[Id], NSString, Pointer[NSRange], Pointer[NSError];
override selector("getObjects:") = Void, Pointer[Id];
override selector("getObjects:andKeys:") = Void, Pointer[Id], Pointer[Id];
override selector("getObjects:range:") = Void, Pointer[Id], NSRange;
override selector("getParagraphStart:end:contentsEnd:forRange:") = Void, Pointer[UInt], Pointer[UInt], Pointer[UInt], NSRange;
override selector("getResourceValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("getReturnValue:") = Void, RawPointer;
override selector("getValue:") = Void, RawPointer;
override selector("globallyUniqueString") = NSString;
override selector("grammarCheckingResultWithRange:details:") = NSTextCheckingResult, NSRange, NSArray;
override selector("grammarDetails") = NSArray;
override selector("gregorianStartDate") = NSDate;
override selector("groupingLevel") = Int;
override selector("groupingSeparator") = NSString;
override selector("groupingSize") = UInt;
override selector("groupsByEvent") = Bool;
override varargSelector("handleFailureInFunction:file:lineNumber:description:") = Void, NSString, NSString, Int, NSString;
override varargSelector("handleFailureInMethod:object:file:lineNumber:description:") = Void, SelectorHandle, Id, NSString, Int, NSString;
override selector("handleMachMessage:") = Void, RawPointer;
override selector("handlePortMessage:") = Void, NSPortMessage;
override selector("hasBytesAvailable") = Bool;
override selector("hasMemberInPlane:") = Bool, CUChar;
override selector("hasPassword") = Bool;
override selector("hasPrefix:") = Bool, NSString;
override selector("hasSpaceAvailable") = Bool;
override selector("hasSuffix:") = Bool, NSString;
override selector("hash") = UInt;
override selector("helpAnchor") = NSString;
override selector("hitTest:") = CALayer, CGPoint;
override selector("host") = NSString;
override selector("hostName") = NSString;
override selector("hour") = Int;
override selector("identity") = SecIdentityRef;
override selector("illegalCharacterSet") = Id;
override selector("increaseLengthBy:") = Void, UInt;
override selector("indexAtPosition:") = UInt, UInt;
override selector("indexGreaterThanIndex:") = UInt, UInt;
override selector("indexGreaterThanOrEqualToIndex:") = UInt, UInt;
override selector("indexInRange:options:passingTest:") = UInt, NSRange, UInt, UnknownType;
override selector("indexLessThanIndex:") = UInt, UInt;
override selector("indexLessThanOrEqualToIndex:") = UInt, UInt;
override selector("indexOfObject:") = UInt, Id;
override selector("indexOfObject:inRange:") = UInt, Id, NSRange;
override selector("indexOfObject:inSortedRange:options:usingComparator:") = UInt, Id, NSRange, UInt, NSComparator;
override selector("indexOfObjectAtIndexes:options:passingTest:") = UInt, NSIndexSet, UInt, UnknownType;
override selector("indexOfObjectIdenticalTo:") = UInt, Id;
override selector("indexOfObjectIdenticalTo:inRange:") = UInt, Id, NSRange;
override selector("indexOfObjectPassingTest:") = UInt, UnknownType;
override selector("indexOfObjectWithOptions:passingTest:") = UInt, UInt, UnknownType;
override selector("indexPassingTest:") = UInt, UnknownType;
override selector("indexPathByAddingIndex:") = NSIndexPath, UInt;
override selector("indexPathByRemovingLastIndex") = NSIndexPath;
override selector("indexPathWithIndex:") = Id, UInt;
override selector("indexPathWithIndexes:length:") = Id, Pointer[UInt], UInt;
override selector("indexSet") = Id;
override selector("indexSetWithIndex:") = Id, UInt;
override selector("indexSetWithIndexesInRange:") = Id, NSRange;
override selector("indexWithOptions:passingTest:") = UInt, UInt, UnknownType;
override selector("indexesInRange:options:passingTest:") = NSIndexSet, NSRange, UInt, UnknownType;
override selector("indexesOfObjectsAtIndexes:options:passingTest:") = NSIndexSet, NSIndexSet, UInt, UnknownType;
override selector("indexesOfObjectsPassingTest:") = NSIndexSet, UnknownType;
override selector("indexesOfObjectsWithOptions:passingTest:") = NSIndexSet, UInt, UnknownType;
override selector("indexesPassingTest:") = NSIndexSet, UnknownType;
override selector("indexesWithOptions:passingTest:") = NSIndexSet, UInt, UnknownType;
override selector("infoDictionary") = NSDictionary;
override selector("init") = Id;
override selector("initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, UInt, NSURL, Pointer[Bool], Pointer[NSError];
override selector("initDirectoryWithFileWrappers:") = Id, NSDictionary;
override selector("initFileURLWithPath:") = Id, NSString;
override selector("initFileURLWithPath:isDirectory:") = Id, NSString, Bool;
override selector("initForReadingWithData:") = Id, NSData;
override selector("initForWritingWithMutableData:") = Id, NSMutableData;
override selector("initRegularFileWithContents:") = Id, NSData;
override selector("initSymbolicLinkWithDestination:") = Id, NSString;
override selector("initSymbolicLinkWithDestinationURL:") = Id, NSURL;
override selector("initToBuffer:capacity:") = Id, Pointer[CUChar], UInt;
override selector("initToFileAtPath:append:") = Id, NSString, Bool;
override selector("initToMemory") = Id;
override selector("initWithAPI:") = Id, UInt;
override selector("initWithAPI:sharegroup:") = Id, UInt, EAGLSharegroup;
override selector("initWithArray:") = Id, NSArray;
override selector("initWithArray:copyItems:") = Id, NSArray, Bool;
override selector("initWithAttributedString:") = Id, NSAttributedString;
override selector("initWithAuthenticationChallenge:sender:") = Id, NSURLAuthenticationChallenge, Id;
override selector("initWithBool:") = Id, Bool;
override selector("initWithBytes:length:") = Id, RawPointer, UInt;
override selector("initWithBytes:length:encoding:") = Id, RawPointer, UInt, UInt;
override selector("initWithBytes:objCType:") = Id, RawPointer, Pointer[CChar];
override selector("initWithBytesNoCopy:length:") = Id, RawPointer, UInt;
override selector("initWithBytesNoCopy:length:encoding:freeWhenDone:") = Id, RawPointer, UInt, UInt, Bool;
override selector("initWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, UInt, Bool;
override selector("initWithCString:") = Id, Pointer[CChar];
override selector("initWithCString:encoding:") = Id, Pointer[CChar], UInt;
override selector("initWithCString:length:") = Id, Pointer[CChar], UInt;
override selector("initWithCStringNoCopy:length:freeWhenDone:") = Id, Pointer[CChar], UInt, Bool;
override selector("initWithCalendarIdentifier:") = Id, NSString;
override selector("initWithCapacity:") = Id, UInt;
override selector("initWithChar:") = Id, CChar;
override selector("initWithCharacters:length:") = Id, Pointer[UShort], UInt;
override selector("initWithCharactersNoCopy:length:freeWhenDone:") = Id, Pointer[UShort], UInt, Bool;
override selector("initWithCoder:") = Id, NSCoder;
override selector("initWithCondition:") = Id, Int;
override selector("initWithContentsOfFile:") = Id, NSString;
override selector("initWithContentsOfFile:encoding:error:") = Id, NSString, UInt, Pointer[NSError];
override selector("initWithContentsOfFile:options:error:") = Id, NSString, UInt, Pointer[NSError];
override selector("initWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[UInt], Pointer[NSError];
override selector("initWithContentsOfMappedFile:") = Id, NSString;
override selector("initWithContentsOfURL:") = Id, NSURL;
override selector("initWithContentsOfURL:encoding:error:") = Id, NSURL, UInt, Pointer[NSError];
override selector("initWithContentsOfURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
override selector("initWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[UInt], Pointer[NSError];
override selector("initWithControlPoints::::") = Id, Float, Float, Float, Float;
override selector("initWithData:") = Id, NSData;
override selector("initWithData:encoding:") = Id, NSData, UInt;
override selector("initWithDecimal:") = Id, NSDecimal;
override selector("initWithDictionary:") = Id, NSDictionary;
override selector("initWithDictionary:copyItems:") = Id, NSDictionary, Bool;
override selector("initWithDomain:code:userInfo:") = Id, NSString, Int, NSDictionary;
override selector("initWithDomain:type:name:") = Id, NSString, NSString, NSString;
override selector("initWithDomain:type:name:port:") = Id, NSString, NSString, NSString, Int;
override selector("initWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
override selector("initWithDouble:") = Id, Double;
override selector("initWithExpressionType:") = Id, UInt;
override selector("initWithFileAtPath:") = Id, NSString;
override selector("initWithFileDescriptor:") = Id, Int;
override selector("initWithFileDescriptor:closeOnDealloc:") = Id, Int, Bool;
override selector("initWithFireDate:interval:target:selector:userInfo:repeats:") = Id, NSDate, Double, Id, SelectorHandle, Id, Bool;
override selector("initWithFloat:") = Id, Float;
override varargSelector("initWithFormat:") = Id, NSString;
override selector("initWithFormat:arguments:") = Id, NSString, va_list;
override varargSelector("initWithFormat:locale:") = Id, NSString, Id;
override selector("initWithFormat:locale:arguments:") = Id, NSString, Id, va_list;
override selector("initWithHost:port:protocol:realm:authenticationMethod:") = Id, NSString, Int, NSString, NSString, NSString;
override selector("initWithIdentity:certificates:persistence:") = Id, SecIdentityRef, NSArray, UInt;
override selector("initWithIndex:") = Id, UInt;
override selector("initWithIndexSet:") = Id, NSIndexSet;
override selector("initWithIndexes:length:") = Id, Pointer[UInt], UInt;
override selector("initWithIndexesInRange:") = Id, NSRange;
override selector("initWithInt:") = Id, Int;
override selector("initWithInteger:") = Id, Int;
override selector("initWithInvocation:") = Id, NSInvocation;
override selector("initWithKey:ascending:") = Id, NSString, Bool;
override selector("initWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
override selector("initWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
override selector("initWithLayer:") = Id, Id;
override selector("initWithLeftExpression:rightExpression:customSelector:") = Id, NSExpression, NSExpression, SelectorHandle;
override selector("initWithLeftExpression:rightExpression:modifier:type:options:") = Id, NSExpression, NSExpression, UInt, UInt, UInt;
override selector("initWithLength:") = Id, UInt;
override selector("initWithLocaleIdentifier:") = Id, NSString;
override selector("initWithLong:") = Id, CLong;
override selector("initWithLongLong:") = Id, Int64;
override selector("initWithMachPort:") = Id, UInt;
override selector("initWithMachPort:options:") = Id, UInt, UInt;
override selector("initWithMantissa:exponent:isNegative:") = Id, UInt64, Short, Bool;
override selector("initWithMemoryCapacity:diskCapacity:diskPath:") = Id, UInt, UInt, NSString;
override selector("initWithName:") = Id, NSString;
override selector("initWithName:data:") = Id, NSString, NSData;
override selector("initWithName:reason:userInfo:") = Id, NSString, NSString, NSDictionary;
override selector("initWithNotificationCenter:") = Id, NSNotificationCenter;
override varargSelector("initWithObjects:") = Id, Id;
override selector("initWithObjects:count:") = Id, Pointer[Id], UInt;
override selector("initWithObjects:forKeys:") = Id, NSArray, NSArray;
override selector("initWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], UInt;
override varargSelector("initWithObjectsAndKeys:") = Id, Id;
override selector("initWithPath:") = Id, NSString;
override selector("initWithPattern:options:error:") = Id, NSString, UInt, Pointer[NSError];
override selector("initWithProperties:") = Id, NSDictionary;
override selector("initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:") = Id, NSURLProtectionSpace, NSURLCredential, Int, NSURLResponse, NSError, Id;
override selector("initWithProxyHost:port:type:realm:authenticationMethod:") = Id, NSString, Int, NSString, NSString, NSString;
override selector("initWithRequest:cachedResponse:client:") = Id, NSURLRequest, NSCachedURLResponse, Id;
override selector("initWithRequest:delegate:") = Id, NSURLRequest, Id;
override selector("initWithRequest:delegate:startImmediately:") = Id, NSURLRequest, Id, Bool;
override selector("initWithResponse:data:") = Id, NSURLResponse, NSData;
override selector("initWithResponse:data:userInfo:storagePolicy:") = Id, NSURLResponse, NSData, NSDictionary, UInt;
override selector("initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, UInt, Short, Bool, Bool, Bool, Bool;
override selector("initWithScheme:host:path:") = Id, NSString, NSString, NSString;
override selector("initWithSerializedRepresentation:") = Id, NSData;
override selector("initWithSet:") = Id, NSSet;
override selector("initWithSet:copyItems:") = Id, NSSet, Bool;
override selector("initWithShort:") = Id, Short;
override selector("initWithStorageLocation:") = Id, NSURL;
override selector("initWithString:") = Id, NSString;
override selector("initWithString:attributes:") = Id, NSString, NSDictionary;
override selector("initWithString:locale:") = Id, NSString, Id;
override selector("initWithString:relativeToURL:") = Id, NSString, NSURL;
override selector("initWithTarget:selector:object:") = Id, Id, SelectorHandle, Id;
override selector("initWithTimeInterval:sinceDate:") = Id, Double, NSDate;
override selector("initWithTimeIntervalSince1970:") = Id, Double;
override selector("initWithTimeIntervalSinceNow:") = Id, Double;
override selector("initWithTimeIntervalSinceReferenceDate:") = Id, Double;
override selector("initWithTrust:") = Id, SecTrustRef;
override selector("initWithType:subpredicates:") = Id, UInt, NSArray;
override selector("initWithTypes:error:") = Id, UInt64, Pointer[NSError];
override selector("initWithURL:") = Id, NSURL;
override selector("initWithURL:MIMEType:expectedContentLength:textEncodingName:") = Id, NSURL, NSString, Int, NSString;
override selector("initWithURL:append:") = Id, NSURL, Bool;
override selector("initWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, UInt, Double;
override selector("initWithURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
override selector("initWithUTF8String:") = Id, Pointer[CChar];
override selector("initWithUnsignedChar:") = Id, CUChar;
override selector("initWithUnsignedInt:") = Id, UInt;
override selector("initWithUnsignedInteger:") = Id, UInt;
override selector("initWithUnsignedLong:") = Id, CULong;
override selector("initWithUnsignedLongLong:") = Id, UInt64;
override selector("initWithUnsignedShort:") = Id, UShort;
override selector("initWithUser:") = Id, NSString;
override selector("initWithUser:password:persistence:") = Id, NSString, NSString, UInt;
override selector("initialize") = Void;
override selector("inputStreamWithData:") = Id, NSData;
override selector("inputStreamWithFileAtPath:") = Id, NSString;
override selector("inputStreamWithURL:") = Id, NSURL;
override selector("insertAttributedString:atIndex:") = Void, NSAttributedString, UInt;
override selector("insertObject:atIndex:") = Void, Id, UInt;
override selector("insertObjects:atIndexes:") = Void, NSArray, NSIndexSet;
override selector("insertString:atIndex:") = Void, NSString, UInt;
override selector("insertSublayer:above:") = Void, CALayer, CALayer;
override selector("insertSublayer:atIndex:") = Void, CALayer, UInt;
override selector("insertSublayer:below:") = Void, CALayer, CALayer;
override selector("instanceAlphaOffset") = Float;
override selector("instanceBlueOffset") = Float;
override selector("instanceColor") = CGColorRef;
override selector("instanceCount") = Int;
override selector("instanceDelay") = Double;
override selector("instanceGreenOffset") = Float;
override selector("instanceMethodForSelector:") = IMP, SelectorHandle;
override selector("instanceMethodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
override selector("instanceRedOffset") = Float;
override selector("instanceTransform") = CATransform3D;
override selector("instancesRespondToSelector:") = Bool, SelectorHandle;
override selector("intValue") = Int;
override selector("integerForKey:") = Int, NSString;
override selector("integerValue") = Int;
override selector("internationalCurrencySymbol") = NSString;
override selector("intersectSet:") = Void, NSSet;
override selector("intersectsIndexesInRange:") = Bool, NSRange;
override selector("intersectsSet:") = Bool, NSSet;
override selector("invalidate") = Void;
override selector("invert") = Void;
override selector("invertedSet") = NSCharacterSet;
override selector("invocation") = NSInvocation;
override selector("invocationWithMethodSignature:") = NSInvocation, NSMethodSignature;
override selector("invoke") = Void;
override selector("invokeWithTarget:") = Void, Id;
override selector("isAbsolutePath") = Bool;
override selector("isAdditive") = Bool;
override selector("isAtEnd") = Bool;
override selector("isCancelled") = Bool;
override selector("isConcurrent") = Bool;
override selector("isContentDiscarded") = Bool;
override selector("isCumulative") = Bool;
override selector("isDaylightSavingTime") = Bool;
override selector("isDaylightSavingTimeForDate:") = Bool, NSDate;
override selector("isDeletableFileAtPath:") = Bool, NSString;
override selector("isDirectory") = Bool;
override selector("isDoubleSided") = Bool;
override selector("isEqual:") = Bool, Id;
override selector("isEqualToArray:") = Bool, NSArray;
override selector("isEqualToAttributedString:") = Bool, NSAttributedString;
override selector("isEqualToData:") = Bool, NSData;
override selector("isEqualToDate:") = Bool, NSDate;
override selector("isEqualToDictionary:") = Bool, NSDictionary;
override selector("isEqualToIndexSet:") = Bool, NSIndexSet;
override selector("isEqualToNumber:") = Bool, NSNumber;
override selector("isEqualToSet:") = Bool, NSSet;
override selector("isEqualToString:") = Bool, NSString;
override selector("isEqualToTimeZone:") = Bool, NSTimeZone;
override selector("isEqualToValue:") = Bool, NSValue;
override selector("isExecutableFileAtPath:") = Bool, NSString;
override selector("isExecuting") = Bool;
override selector("isFileReferenceURL") = Bool;
override selector("isFileURL") = Bool;
override selector("isFinished") = Bool;
override selector("isGeometryFlipped") = Bool;
override selector("isHTTPOnly") = Bool;
override selector("isHidden") = Bool;
override selector("isKindOfClass:") = Bool, Id;
override selector("isLenient") = Bool;
override selector("isLoaded") = Bool;
override selector("isMainThread") = Bool;
override selector("isMemberOfClass:") = Bool, Id;
override selector("isMultiThreaded") = Bool;
override selector("isOneway") = Bool;
override selector("isOpaque") = Bool;
override selector("isPartialStringValid:newEditingString:errorDescription:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
override selector("isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:") = Bool, Pointer[NSString], NSRangePointer, NSString, NSRange, Pointer[NSString];
override selector("isPartialStringValidationEnabled") = Bool;
override selector("isPaused") = Bool;
override selector("isProxy") = Bool;
override selector("isReadableFileAtPath:") = Bool, NSString;
override selector("isReady") = Bool;
override selector("isRedoing") = Bool;
override selector("isRegularFile") = Bool;
override selector("isRemovedOnCompletion") = Bool;
override selector("isSecure") = Bool;
override selector("isSessionOnly") = Bool;
override selector("isSubclassOfClass:") = Bool, Id;
override selector("isSubsetOfSet:") = Bool, NSSet;
override selector("isSupersetOfSet:") = Bool, NSCharacterSet;
override selector("isSuspended") = Bool;
override selector("isSymbolicLink") = Bool;
override selector("isUndoRegistrationEnabled") = Bool;
override selector("isUndoing") = Bool;
override selector("isValid") = Bool;
override selector("isWrapped") = Bool;
override selector("isWritableFileAtPath:") = Bool, NSString;
override selector("key") = NSString;
override selector("keyEnumerator") = NSEnumerator;
override selector("keyForFileWrapper:") = NSString, NSFileWrapper;
override selector("keyPath") = NSString;
override selector("keyPathsForValuesAffectingValueForKey:") = NSSet, NSString;
override selector("keyTimes") = NSArray;
override selector("keysOfEntriesPassingTest:") = NSSet, UnknownType;
override selector("keysOfEntriesWithOptions:passingTest:") = NSSet, UInt, UnknownType;
override selector("keysSortedByValueUsingComparator:") = NSArray, NSComparator;
override selector("keysSortedByValueUsingSelector:") = NSArray, SelectorHandle;
override selector("keysSortedByValueWithOptions:usingComparator:") = NSArray, UInt, NSComparator;
override selector("knownTimeZoneNames") = NSArray;
override selector("languageMap") = NSDictionary;
override selector("languagesForScript:") = NSArray, NSString;
override selector("lastIndex") = UInt;
override selector("lastObject") = Id;
override selector("lastPathComponent") = NSString;
override selector("laterDate:") = NSDate, NSDate;
override selector("layer") = Id;
override selector("layoutIfNeeded") = Void;
override selector("layoutSublayers") = Void;
override selector("layoutSublayersOfLayer:") = Void, CALayer;
override selector("leftExpression") = NSExpression;
override selector("length") = UInt;
override selector("lengthOfBytesUsingEncoding:") = UInt, UInt;
override selector("letterCharacterSet") = Id;
override selector("level") = UInt;
override selector("levelsOfDetail") = UInt;
override selector("levelsOfDetailBias") = UInt;
override selector("levelsOfUndo") = UInt;
override selector("limitDateForMode:") = NSDate, NSString;
override selector("lineCap") = NSString;
override selector("lineDashPattern") = NSArray;
override selector("lineDashPhase") = Float;
override selector("lineDirectionForLanguage:") = UInt, NSString;
override selector("lineJoin") = NSString;
override selector("lineNumber") = Int;
override selector("lineRangeForRange:") = NSRange, NSRange;
override selector("lineWidth") = Float;
override selector("linkCheckingResultWithRange:URL:") = NSTextCheckingResult, NSRange, NSURL;
override selector("linkItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("linkItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("load") = Bool;
override selector("loadAndReturnError:") = Bool, Pointer[NSError];
override selector("localTimeZone") = NSTimeZone;
override selector("locale") = Id;
override selector("localeIdentifier") = NSString;
override selector("localeIdentifierFromComponents:") = NSString, NSDictionary;
override selector("localeIdentifierFromWindowsLocaleCode:") = NSString, UInt;
override selector("localizations") = NSArray;
override selector("localizedCaseInsensitiveCompare:") = Int, NSString;
override selector("localizedCompare:") = Int, NSString;
override selector("localizedDescription") = NSString;
override selector("localizedFailureReason") = NSString;
override selector("localizedInfoDictionary") = NSDictionary;
override selector("localizedName:locale:") = NSString, Int, NSLocale;
override selector("localizedNameOfStringEncoding:") = NSString, UInt;
override selector("localizedRecoveryOptions") = NSArray;
override selector("localizedRecoverySuggestion") = NSString;
override selector("localizedScannerWithString:") = Id, NSString;
override selector("localizedStandardCompare:") = Int, NSString;
override selector("localizedStringForKey:value:table:") = NSString, NSString, NSString, NSString;
override selector("localizedStringForStatusCode:") = NSString, Int;
override selector("localizedStringFromDate:dateStyle:timeStyle:") = NSString, NSDate, UInt, UInt;
override selector("localizedStringFromNumber:numberStyle:") = NSString, NSNumber, UInt;
override varargSelector("localizedStringWithFormat:") = Id, NSString;
override selector("locations") = NSArray;
override selector("lock") = Void;
override selector("lockBeforeDate:") = Bool, NSDate;
override selector("lockWhenCondition:") = Void, Int;
override selector("lockWhenCondition:beforeDate:") = Bool, Int, NSDate;
override selector("longCharacterIsMember:") = Bool, CULong;
override selector("longEraSymbols") = NSArray;
override selector("longLongValue") = Int64;
override selector("longValue") = CLong;
override selector("lossyCString") = Pointer[CChar];
override selector("lowercaseLetterCharacterSet") = Id;
override selector("lowercaseString") = NSString;
override selector("machPort") = UInt;
override selector("magnificationFilter") = NSString;
override selector("main") = Void;
override selector("mainBundle") = NSBundle;
override selector("mainDocumentURL") = NSURL;
override selector("mainQueue") = Id;
override selector("mainRunLoop") = NSRunLoop;
override selector("mainThread") = NSThread;
override selector("makeObjectsPerformSelector:") = Void, SelectorHandle;
override selector("makeObjectsPerformSelector:withObject:") = Void, SelectorHandle, Id;
override selector("mask") = CALayer;
override selector("masksToBounds") = Bool;
override selector("matchesContentsOfURL:") = Bool, NSURL;
override selector("matchesInString:options:range:") = NSArray, NSString, UInt, NSRange;
override selector("maxConcurrentOperationCount") = Int;
override selector("maximum") = NSNumber;
override selector("maximumDecimalNumber") = NSDecimalNumber;
override selector("maximumFractionDigits") = UInt;
override selector("maximumIntegerDigits") = UInt;
override selector("maximumLengthOfBytesUsingEncoding:") = UInt, UInt;
override selector("maximumRangeOfUnit:") = NSRange, UInt;
override selector("maximumSignificantDigits") = UInt;
override selector("member:") = Id, Id;
override selector("memoryCapacity") = UInt;
override selector("methodForSelector:") = IMP, SelectorHandle;
override selector("methodReturnLength") = UInt;
override selector("methodReturnType") = Pointer[CChar];
override selector("methodSignature") = NSMethodSignature;
override selector("methodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
override selector("minificationFilter") = NSString;
override selector("minificationFilterBias") = Float;
override selector("minimum") = NSNumber;
override selector("minimumDaysInFirstWeek") = UInt;
override selector("minimumDecimalNumber") = NSDecimalNumber;
override selector("minimumFractionDigits") = UInt;
override selector("minimumIntegerDigits") = UInt;
override selector("minimumRangeOfUnit:") = NSRange, UInt;
override selector("minimumSignificantDigits") = UInt;
override selector("minusSet:") = Void, NSSet;
override selector("minusSign") = NSString;
override selector("minute") = Int;
override selector("miterLimit") = Float;
override selector("modelLayer") = Id;
override selector("month") = Int;
override selector("monthSymbols") = NSArray;
override selector("mountedVolumeURLsIncludingResourceValuesForKeys:options:") = NSArray, NSArray, UInt;
override selector("moveItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("moveItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("multiplier") = NSNumber;
override selector("mutableArrayValueForKey:") = NSMutableArray, NSString;
override selector("mutableArrayValueForKeyPath:") = NSMutableArray, NSString;
override selector("mutableBytes") = RawPointer;
override selector("mutableCopy") = Id;
override selector("mutableCopyWithZone:") = Id, Pointer[NSZone];
override selector("mutableSetValueForKey:") = NSMutableSet, NSString;
override selector("mutableSetValueForKeyPath:") = NSMutableSet, NSString;
override selector("mutableString") = NSMutableString;
override selector("name") = NSString;
override selector("needsDisplay") = Bool;
override selector("needsDisplayForKey:") = Bool, NSString;
override selector("needsDisplayOnBoundsChange") = Bool;
override selector("needsLayout") = Bool;
override selector("needsToBeUpdatedFromPath:") = Bool, NSString;
override selector("negativeFormat") = NSString;
override selector("negativeInfinitySymbol") = NSString;
override selector("negativePrefix") = NSString;
override selector("negativeSuffix") = NSString;
override selector("netService:didNotPublish:") = Void, NSNetService, NSDictionary;
override selector("netService:didNotResolve:") = Void, NSNetService, NSDictionary;
override selector("netService:didUpdateTXTRecordData:") = Void, NSNetService, NSData;
override selector("netServiceBrowser:didFindDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
override selector("netServiceBrowser:didFindService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
override selector("netServiceBrowser:didNotSearch:") = Void, NSNetServiceBrowser, NSDictionary;
override selector("netServiceBrowser:didRemoveDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
override selector("netServiceBrowser:didRemoveService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
override selector("netServiceBrowserDidStopSearch:") = Void, NSNetServiceBrowser;
override selector("netServiceBrowserWillSearch:") = Void, NSNetServiceBrowser;
override selector("netServiceDidPublish:") = Void, NSNetService;
override selector("netServiceDidResolveAddress:") = Void, NSNetService;
override selector("netServiceDidStop:") = Void, NSNetService;
override selector("netServiceWillPublish:") = Void, NSNetService;
override selector("netServiceWillResolve:") = Void, NSNetService;
override selector("networkServiceType") = UInt;
override selector("new") = Id;
override selector("newlineCharacterSet") = Id;
override selector("nextDaylightSavingTimeTransition") = NSDate;
override selector("nextDaylightSavingTimeTransitionAfterDate:") = NSDate, NSDate;
override selector("nextObject") = Id;
override selector("nilSymbol") = NSString;
override selector("nonBaseCharacterSet") = Id;
override selector("nonretainedObjectValue") = Id;
override selector("notANumber") = NSDecimalNumber;
override selector("notANumberSymbol") = NSString;
override selector("notPredicateWithSubpredicate:") = NSPredicate, NSPredicate;
override selector("notificationWithName:object:") = Id, NSString, Id;
override selector("notificationWithName:object:userInfo:") = Id, NSString, Id, NSDictionary;
override selector("null") = NSNull;
override selector("numberFromString:") = NSNumber, NSString;
override selector("numberOfArguments") = UInt;
override selector("numberOfCaptureGroups") = UInt;
override selector("numberOfMatchesInString:options:range:") = UInt, NSString, UInt, NSRange;
override selector("numberOfRanges") = UInt;
override selector("numberStyle") = UInt;
override selector("numberWithBool:") = NSNumber, Bool;
override selector("numberWithChar:") = NSNumber, CChar;
override selector("numberWithDouble:") = NSNumber, Double;
override selector("numberWithFloat:") = NSNumber, Float;
override selector("numberWithInt:") = NSNumber, Int;
override selector("numberWithInteger:") = NSNumber, Int;
override selector("numberWithLong:") = NSNumber, CLong;
override selector("numberWithLongLong:") = NSNumber, Int64;
override selector("numberWithShort:") = NSNumber, Short;
override selector("numberWithUnsignedChar:") = NSNumber, CUChar;
override selector("numberWithUnsignedInt:") = NSNumber, UInt;
override selector("numberWithUnsignedInteger:") = NSNumber, UInt;
override selector("numberWithUnsignedLong:") = NSNumber, CULong;
override selector("numberWithUnsignedLongLong:") = NSNumber, UInt64;
override selector("numberWithUnsignedShort:") = NSNumber, UShort;
override selector("objCType") = Pointer[CChar];
override selector("object") = Id;
override selector("objectAtIndex:") = Id, UInt;
override selector("objectEnumerator") = NSEnumerator;
override selector("objectForInfoDictionaryKey:") = Id, NSString;
override selector("objectForKey:") = Id, Id;
override selector("objectIsForcedForKey:") = Bool, NSString;
override selector("objectIsForcedForKey:inDomain:") = Bool, NSString, NSString;
override selector("objectZone") = Pointer[NSZone];
override selector("objectsAtIndexes:") = NSArray, NSIndexSet;
override selector("objectsForKeys:notFoundMarker:") = NSArray, NSArray, Id;
override selector("objectsPassingTest:") = NSSet, UnknownType;
override selector("objectsWithOptions:passingTest:") = NSSet, UInt, UnknownType;
override selector("observationInfo") = RawPointer;
override selector("observeValueForKeyPath:ofObject:change:context:") = Void, NSString, Id, NSDictionary, RawPointer;
override selector("offsetInFile") = UInt64;
override selector("one") = NSDecimalNumber;
override selector("opacity") = Float;
override selector("open") = Void;
override selector("operand") = NSExpression;
override selector("operatingSystem") = UInt;
override selector("operatingSystemName") = NSString;
override selector("operatingSystemVersionString") = NSString;
override selector("operationCount") = UInt;
override selector("operations") = NSArray;
override selector("options") = UInt;
override selector("orPredicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("ordinalityOfUnit:inUnit:forDate:") = UInt, UInt, UInt, NSDate;
override selector("orthography") = NSOrthography;
override selector("orthographyCheckingResultWithRange:orthography:") = NSTextCheckingResult, NSRange, NSOrthography;
override selector("orthographyWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
override selector("outputFormat") = UInt;
override selector("outputStreamToBuffer:capacity:") = Id, Pointer[CUChar], UInt;
override selector("outputStreamToFileAtPath:append:") = Id, NSString, Bool;
override selector("outputStreamToMemory") = Id;
override selector("outputStreamWithURL:append:") = Id, NSURL, Bool;
override selector("paddingCharacter") = NSString;
override selector("paddingPosition") = UInt;
override selector("paragraphRangeForRange:") = NSRange, NSRange;
override selector("parameterString") = NSString;
override selector("parse") = Bool;
override selector("parser:didEndElement:namespaceURI:qualifiedName:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:didEndMappingPrefix:") = Void, NSXMLParser, NSString;
override selector("parser:didStartElement:namespaceURI:qualifiedName:attributes:") = Void, NSXMLParser, NSString, NSString, NSString, NSDictionary;
override selector("parser:didStartMappingPrefix:toURI:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
override selector("parser:foundCDATA:") = Void, NSXMLParser, NSData;
override selector("parser:foundCharacters:") = Void, NSXMLParser, NSString;
override selector("parser:foundComment:") = Void, NSXMLParser, NSString;
override selector("parser:foundElementDeclarationWithName:model:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundExternalEntityDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:foundIgnorableWhitespace:") = Void, NSXMLParser, NSString;
override selector("parser:foundInternalEntityDeclarationWithName:value:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundNotationDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:foundProcessingInstructionWithTarget:data:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
override selector("parser:parseErrorOccurred:") = Void, NSXMLParser, NSError;
override selector("parser:resolveExternalEntityName:systemID:") = NSData, NSXMLParser, NSString, NSString;
override selector("parser:validationErrorOccurred:") = Void, NSXMLParser, NSError;
override selector("parserDidEndDocument:") = Void, NSXMLParser;
override selector("parserDidStartDocument:") = Void, NSXMLParser;
override selector("parserError") = NSError;
override selector("password") = NSString;
override selector("path") = NSString;
override selector("pathComponents") = NSArray;
override selector("pathContentOfSymbolicLinkAtPath:") = NSString, NSString;
override selector("pathExtension") = NSString;
override selector("pathForAuxiliaryExecutable:") = NSString, NSString;
override selector("pathForResource:ofType:") = NSString, NSString, NSString;
override selector("pathForResource:ofType:inDirectory:") = NSString, NSString, NSString, NSString;
override selector("pathForResource:ofType:inDirectory:forLocalization:") = NSString, NSString, NSString, NSString, NSString;
override selector("pathWithComponents:") = NSString, NSArray;
override selector("pathsForResourcesOfType:inDirectory:") = NSArray, NSString, NSString;
override selector("pathsForResourcesOfType:inDirectory:forLocalization:") = NSArray, NSString, NSString, NSString;
override selector("pathsMatchingExtensions:") = NSArray, NSArray;
override selector("pattern") = NSString;
override selector("perMillSymbol") = NSString;
override selector("percentSymbol") = NSString;
override selector("performSelector:") = Id, SelectorHandle;
override selector("performSelector:onThread:withObject:waitUntilDone:") = Void, SelectorHandle, NSThread, Id, Bool;
override selector("performSelector:onThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, NSThread, Id, Bool, NSArray;
override selector("performSelector:target:argument:order:modes:") = Void, SelectorHandle, Id, Id, UInt, NSArray;
override selector("performSelector:withObject:") = Id, SelectorHandle, Id;
override selector("performSelector:withObject:afterDelay:") = Void, SelectorHandle, Id, Double;
override selector("performSelector:withObject:afterDelay:inModes:") = Void, SelectorHandle, Id, Double, NSArray;
override selector("performSelector:withObject:withObject:") = Id, SelectorHandle, Id, Id;
override selector("performSelectorInBackground:withObject:") = Void, SelectorHandle, Id;
override selector("performSelectorOnMainThread:withObject:waitUntilDone:") = Void, SelectorHandle, Id, Bool;
override selector("performSelectorOnMainThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, Id, Bool, NSArray;
override selector("persistence") = UInt;
override selector("persistentDomainForName:") = NSDictionary, NSString;
override selector("persistentDomainNames") = NSArray;
override selector("phoneNumber") = NSString;
override selector("phoneNumberCheckingResultWithRange:phoneNumber:") = NSTextCheckingResult, NSRange, NSString;
override selector("physicalMemory") = UInt64;
override selector("pipe") = Id;
override selector("plusSign") = NSString;
override selector("pointerValue") = RawPointer;
override selector("port") = Id;
override selector("portList") = NSArray;
override selector("portWithMachPort:") = NSPort, UInt;
override selector("portWithMachPort:options:") = NSPort, UInt, UInt;
override selector("position") = CGPoint;
override selector("positiveFormat") = NSString;
override selector("positiveInfinitySymbol") = NSString;
override selector("positivePrefix") = NSString;
override selector("positiveSuffix") = NSString;
override selector("postNotification:") = Void, NSNotification;
override selector("postNotificationName:object:") = Void, NSString, Id;
override selector("postNotificationName:object:userInfo:") = Void, NSString, Id, NSDictionary;
override selector("precomposedStringWithCanonicalMapping") = NSString;
override selector("precomposedStringWithCompatibilityMapping") = NSString;
override selector("predicate") = NSPredicate;
override selector("predicateFormat") = NSString;
override selector("predicateOperatorType") = UInt;
override selector("predicateWithBlock:") = NSPredicate, UnknownType;
override varargSelector("predicateWithFormat:") = NSPredicate, NSString;
override selector("predicateWithFormat:argumentArray:") = NSPredicate, NSString, NSArray;
override selector("predicateWithFormat:arguments:") = NSPredicate, NSString, va_list;
override selector("predicateWithLeftExpression:rightExpression:customSelector:") = NSPredicate, NSExpression, NSExpression, SelectorHandle;
override selector("predicateWithLeftExpression:rightExpression:modifier:type:options:") = NSPredicate, NSExpression, NSExpression, UInt, UInt, UInt;
override selector("predicateWithSubstitutionVariables:") = NSPredicate, NSDictionary;
override selector("predicateWithValue:") = NSPredicate, Bool;
override selector("preferredFilename") = NSString;
override selector("preferredFrameSize") = CGSize;
override selector("preferredLanguages") = NSArray;
override selector("preferredLocalizations") = NSArray;
override selector("preferredLocalizationsFromArray:") = NSArray, NSArray;
override selector("preferredLocalizationsFromArray:forPreferences:") = NSArray, NSArray, NSArray;
override selector("preflightAndReturnError:") = Bool, Pointer[NSError];
override selector("prepareWithInvocationTarget:") = Id, Id;
override selector("presentRenderbuffer:") = Bool, UInt;
override selector("presentationLayer") = Id;
override selector("preservesDepth") = Bool;
override selector("previousFailureCount") = Int;
override selector("principalClass") = Id;
override selector("privateFrameworksPath") = NSString;
override selector("privateFrameworksURL") = NSURL;
override selector("processIdentifier") = Int;
override selector("processInfo") = NSProcessInfo;
override selector("processName") = NSString;
override selector("processorCount") = UInt;
override selector("properties") = NSDictionary;
override selector("propertyForKey:") = Id, NSString;
override selector("propertyForKey:inRequest:") = Id, NSString, NSURLRequest;
override selector("propertyList") = Id;
override selector("propertyList:isValidForFormat:") = Bool, Id, UInt;
override selector("propertyListFromData:mutabilityOption:format:errorDescription:") = Id, NSData, UInt, Pointer[UInt], Pointer[NSString];
override selector("propertyListFromStringsFileFormat") = NSDictionary;
override selector("propertyListWithData:options:format:error:") = Id, NSData, UInt, Pointer[UInt], Pointer[NSError];
override selector("propertyListWithStream:options:format:error:") = Id, NSInputStream, UInt, Pointer[UInt], Pointer[NSError];
override selector("proposedCredential") = NSURLCredential;
override selector("protectionSpace") = NSURLProtectionSpace;
override selector("protocol") = NSString;
override selector("proxyType") = NSString;
override selector("publicID") = NSString;
override selector("publish") = Void;
override selector("publishWithOptions:") = Void, UInt;
override selector("punctuationCharacterSet") = Id;
override selector("quarter") = Int;
override selector("quarterSymbols") = NSArray;
override selector("query") = NSString;
override selector("queuePriority") = Int;
override selector("quoteCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("raise") = Void;
override varargSelector("raise:format:") = Void, NSString, NSString;
override selector("raise:format:arguments:") = Void, NSString, NSString, va_list;
override selector("range") = NSRange;
override selector("rangeAtIndex:") = NSRange, UInt;
override selector("rangeOfCharacterFromSet:") = NSRange, NSCharacterSet;
override selector("rangeOfCharacterFromSet:options:") = NSRange, NSCharacterSet, UInt;
override selector("rangeOfCharacterFromSet:options:range:") = NSRange, NSCharacterSet, UInt, NSRange;
override selector("rangeOfComposedCharacterSequenceAtIndex:") = NSRange, UInt;
override selector("rangeOfComposedCharacterSequencesForRange:") = NSRange, NSRange;
override selector("rangeOfData:options:range:") = NSRange, NSData, UInt, NSRange;
override selector("rangeOfFirstMatchInString:options:range:") = NSRange, NSString, UInt, NSRange;
override selector("rangeOfString:") = NSRange, NSString;
override selector("rangeOfString:options:") = NSRange, NSString, UInt;
override selector("rangeOfString:options:range:") = NSRange, NSString, UInt, NSRange;
override selector("rangeOfString:options:range:locale:") = NSRange, NSString, UInt, NSRange, NSLocale;
override selector("rangeOfUnit:inUnit:forDate:") = NSRange, UInt, UInt, NSDate;
override selector("rangeOfUnit:startDate:interval:forDate:") = Bool, UInt, Pointer[NSDate], Pointer[Double], NSDate;
override selector("rangeValue") = NSRange;
override selector("rasterizationScale") = Float;
override selector("read:maxLength:") = Int, Pointer[CUChar], UInt;
override selector("readDataOfLength:") = NSData, UInt;
override selector("readDataToEndOfFile") = NSData;
override selector("readFromURL:options:error:") = Bool, NSURL, UInt, Pointer[NSError];
override selector("readInBackgroundAndNotify") = Void;
override selector("readInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("readToEndOfFileInBackgroundAndNotify") = Void;
override selector("readToEndOfFileInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("realm") = NSString;
override selector("reason") = NSString;
override selector("receivesCredentialSecurely") = Bool;
override selector("recoveryAttempter") = Id;
override selector("redo") = Void;
override selector("redoActionName") = NSString;
override selector("redoMenuItemTitle") = NSString;
override selector("redoMenuTitleForUndoActionName:") = NSString, NSString;
override selector("registerClass:") = Bool, Id;
override selector("registerDefaults:") = Void, NSDictionary;
override selector("registerUndoWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
override selector("regularExpression") = NSRegularExpression;
override selector("regularExpressionCheckingResultWithRanges:count:regularExpression:") = NSTextCheckingResult, NSRangePointer, UInt, NSRegularExpression;
override selector("regularExpressionWithPattern:options:error:") = NSRegularExpression, NSString, UInt, Pointer[NSError];
override selector("regularFileContents") = NSData;
override selector("relativePath") = NSString;
override selector("relativeString") = NSString;
override selector("release") = Void;
override selector("removeAllActions") = Void;
override selector("removeAllActionsWithTarget:") = Void, Id;
override selector("removeAllAnimations") = Void;
override selector("removeAllCachedResponses") = Void;
override selector("removeAllIndexes") = Void;
override selector("removeAllObjects") = Void;
override selector("removeAnimationForKey:") = Void, NSString;
override selector("removeAttribute:range:") = Void, NSString, NSRange;
override selector("removeCachedResponseForRequest:") = Void, NSURLRequest;
override selector("removeCharactersInRange:") = Void, NSRange;
override selector("removeCharactersInString:") = Void, NSString;
override selector("removeCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("removeDependency:") = Void, NSOperation;
override selector("removeFileWrapper:") = Void, NSFileWrapper;
override selector("removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("removeFromSuperlayer") = Void;
override selector("removeIndex:") = Void, UInt;
override selector("removeIndexes:") = Void, NSIndexSet;
override selector("removeIndexesInRange:") = Void, NSRange;
override selector("removeItemAtPath:error:") = Bool, NSString, Pointer[NSError];
override selector("removeItemAtURL:error:") = Bool, NSURL, Pointer[NSError];
override selector("removeLastObject") = Void;
override selector("removeObject:") = Void, Id;
override selector("removeObject:inRange:") = Void, Id, NSRange;
override selector("removeObjectAtIndex:") = Void, UInt;
override selector("removeObjectForKey:") = Void, Id;
override selector("removeObjectIdenticalTo:") = Void, Id;
override selector("removeObjectIdenticalTo:inRange:") = Void, Id, NSRange;
override selector("removeObjectsAtIndexes:") = Void, NSIndexSet;
override selector("removeObjectsForKeys:") = Void, NSArray;
override selector("removeObjectsFromIndices:numIndices:") = Void, Pointer[UInt], UInt;
override selector("removeObjectsInArray:") = Void, NSArray;
override selector("removeObjectsInRange:") = Void, NSRange;
override selector("removeObserver:") = Void, Id;
override selector("removeObserver:forKeyPath:") = Void, NSObject, NSString;
override selector("removeObserver:fromObjectsAtIndexes:forKeyPath:") = Void, NSObject, NSIndexSet, NSString;
override selector("removeObserver:name:object:") = Void, Id, NSString, Id;
override selector("removePersistentDomainForName:") = Void, NSString;
override selector("removePort:forMode:") = Void, NSPort, NSString;
override selector("removePropertyForKey:inRequest:") = Void, NSString, NSMutableURLRequest;
override selector("removeSuiteNamed:") = Void, NSString;
override selector("removeVolatileDomainForName:") = Void, NSString;
override selector("renderInContext:") = Void, CGContextRef;
override selector("renderbufferStorage:fromDrawable:") = Bool, UInt, Id;
override selector("repeatCount") = Float;
override selector("repeatDuration") = Double;
override selector("replaceBytesInRange:withBytes:") = Void, NSRange, RawPointer;
override selector("replaceBytesInRange:withBytes:length:") = Void, NSRange, RawPointer, UInt;
override selector("replaceCharactersInRange:withAttributedString:") = Void, NSRange, NSAttributedString;
override selector("replaceCharactersInRange:withString:") = Void, NSRange, NSString;
override selector("replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:") = Bool, NSURL, NSURL, NSString, UInt, Pointer[NSURL], Pointer[NSError];
override selector("replaceMatchesInString:options:range:withTemplate:") = UInt, NSMutableString, UInt, NSRange, NSString;
override selector("replaceObjectAtIndex:withObject:") = Void, UInt, Id;
override selector("replaceObjectsAtIndexes:withObjects:") = Void, NSIndexSet, NSArray;
override selector("replaceObjectsInRange:withObjectsFromArray:") = Void, NSRange, NSArray;
override selector("replaceObjectsInRange:withObjectsFromArray:range:") = Void, NSRange, NSArray, NSRange;
override selector("replaceOccurrencesOfString:withString:options:range:") = UInt, NSString, NSString, UInt, NSRange;
override selector("replaceSublayer:with:") = Void, CALayer, CALayer;
override selector("replacementCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("replacementObjectForCoder:") = Id, NSCoder;
override selector("replacementObjectForKeyedArchiver:") = Id, NSKeyedArchiver;
override selector("replacementString") = NSString;
override selector("replacementStringForResult:inString:offset:template:") = NSString, NSTextCheckingResult, NSString, Int, NSString;
override selector("request") = NSURLRequest;
override selector("requestHeaderFieldsWithCookies:") = NSDictionary, NSArray;
override selector("requestIsCacheEquivalent:toRequest:") = Bool, NSURLRequest, NSURLRequest;
override selector("requestWithURL:") = Id, NSURL;
override selector("requestWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, UInt, Double;
override selector("reservedSpaceLength") = UInt;
override selector("resetBytesInRange:") = Void, NSRange;
override selector("resetStandardUserDefaults") = Void;
override selector("resetSystemTimeZone") = Void;
override selector("resolve") = Void;
override selector("resolveClassMethod:") = Bool, SelectorHandle;
override selector("resolveInstanceMethod:") = Bool, SelectorHandle;
override selector("resolveWithTimeout:") = Void, Double;
override selector("resourcePath") = NSString;
override selector("resourceSpecifier") = NSString;
override selector("resourceURL") = NSURL;
override selector("resourceValuesForKeys:error:") = NSDictionary, NSArray, Pointer[NSError];
override selector("resourceValuesForKeys:fromBookmarkData:") = NSDictionary, NSArray, NSData;
override selector("respondsToSelector:") = Bool, SelectorHandle;
override selector("response") = NSURLResponse;
override selector("result") = Id;
override selector("resultType") = UInt64;
override selector("retain") = Id;
override selector("retainArguments") = Void;
override selector("retainCount") = UInt;
override selector("reverseObjectEnumerator") = NSEnumerator;
override selector("reverseTransformedValue:") = Id, Id;
override selector("reversedSortDescriptor") = Id;
override selector("rightExpression") = NSExpression;
override selector("rotationMode") = NSString;
override selector("roundingIncrement") = NSNumber;
override selector("roundingMode") = UInt;
override selector("run") = Void;
override selector("runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
override selector("runLoopModes") = NSArray;
override selector("runMode:beforeDate:") = Bool, NSString, NSDate;
override selector("runUntilDate:") = Void, NSDate;
override selector("scale") = Short;
override selector("scanCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
override selector("scanDecimal:") = Bool, Pointer[NSDecimal];
override selector("scanDouble:") = Bool, Pointer[Double];
override selector("scanFloat:") = Bool, Pointer[Float];
override selector("scanHexDouble:") = Bool, Pointer[Double];
override selector("scanHexFloat:") = Bool, Pointer[Float];
override selector("scanHexInt:") = Bool, Pointer[UInt];
override selector("scanHexLongLong:") = Bool, Pointer[UInt64];
override selector("scanInt:") = Bool, Pointer[Int];
override selector("scanInteger:") = Bool, Pointer[Int];
override selector("scanLocation") = UInt;
override selector("scanLongLong:") = Bool, Pointer[Int64];
override selector("scanString:intoString:") = Bool, NSString, Pointer[NSString];
override selector("scanUpToCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
override selector("scanUpToString:intoString:") = Bool, NSString, Pointer[NSString];
override selector("scannerWithString:") = Id, NSString;
override selector("scheduleInRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("scheduledTimerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
override selector("scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
override selector("scheme") = NSString;
override selector("scrollMode") = NSString;
override selector("scrollPoint:") = Void, CGPoint;
override selector("scrollRectToVisible:") = Void, CGRect;
override selector("scrollToPoint:") = Void, CGPoint;
override selector("scrollToRect:") = Void, CGRect;
override selector("searchForBrowsableDomains") = Void;
override selector("searchForRegistrationDomains") = Void;
override selector("searchForServicesOfType:inDomain:") = Void, NSString, NSString;
override selector("second") = Int;
override selector("secondaryGroupingSize") = UInt;
override selector("secondsFromGMT") = Int;
override selector("secondsFromGMTForDate:") = Int, NSDate;
override selector("seekToEndOfFile") = UInt64;
override selector("seekToFileOffset:") = Void, UInt64;
override selector("selector") = SelectorHandle;
override selector("self") = Id;
override selector("sendBeforeDate:components:from:reserved:") = Bool, NSDate, NSMutableArray, NSPort, UInt;
override selector("sendBeforeDate:msgid:components:from:reserved:") = Bool, NSDate, UInt, NSMutableArray, NSPort, UInt;
override selector("sendSynchronousRequest:returningResponse:error:") = NSData, NSURLRequest, Pointer[NSURLResponse], Pointer[NSError];
override selector("sender") = Id;
override selector("serializedRepresentation") = NSData;
override selector("serverTrust") = SecTrustRef;
override selector("set") = Id;
override selector("setAMSymbol:") = Void, NSString;
override selector("setAbbreviationDictionary:") = Void, NSDictionary;
override selector("setActionName:") = Void, NSString;
override selector("setActions:") = Void, NSDictionary;
override selector("setAdditive:") = Void, Bool;
override selector("setAffineTransform:") = Void, CGAffineTransform;
override selector("setAlignmentMode:") = Void, NSString;
override selector("setAllHTTPHeaderFields:") = Void, NSDictionary;
override selector("setAllowsFloats:") = Void, Bool;
override selector("setAlwaysShowsDecimalSeparator:") = Void, Bool;
override selector("setAnchorPoint:") = Void, CGPoint;
override selector("setAnchorPointZ:") = Void, Float;
override selector("setAnimationDuration:") = Void, Double;
override selector("setAnimationTimingFunction:") = Void, CAMediaTimingFunction;
override selector("setAnimations:") = Void, NSArray;
override selector("setArgument:atIndex:") = Void, RawPointer, Int;
override selector("setArray:") = Void, NSArray;
override selector("setAttributedString:") = Void, NSAttributedString;
override selector("setAttributes:ofItemAtPath:error:") = Bool, NSDictionary, NSString, Pointer[NSError];
override selector("setAttributes:range:") = Void, NSDictionary, NSRange;
override selector("setAutoreverses:") = Void, Bool;
override selector("setBackgroundColor:") = Void, CGColorRef;
override selector("setBackgroundFilters:") = Void, NSArray;
override selector("setBeginTime:") = Void, Double;
override selector("setBiasValues:") = Void, NSArray;
override selector("setBool:forKey:") = Void, Bool, NSString;
override selector("setBorderColor:") = Void, CGColorRef;
override selector("setBorderWidth:") = Void, Float;
override selector("setBounds:") = Void, CGRect;
override selector("setByAddingObject:") = NSSet, Id;
override selector("setByAddingObjectsFromArray:") = NSSet, NSArray;
override selector("setByAddingObjectsFromSet:") = NSSet, NSSet;
override selector("setByValue:") = Void, Id;
override selector("setCachePolicy:") = Void, UInt;
override selector("setCalculationMode:") = Void, NSString;
override selector("setCalendar:") = Void, NSCalendar;
override selector("setCaseSensitive:") = Void, Bool;
override selector("setCharactersToBeSkipped:") = Void, NSCharacterSet;
override selector("setClass:forClassName:") = Void, Id, NSString;
override selector("setClassName:forClass:") = Void, NSString, Id;
override selector("setColors:") = Void, NSArray;
override selector("setCompletionBlock:") = Void, UnknownType;
override selector("setCompositingFilter:") = Void, Id;
override selector("setContents:") = Void, Id;
override selector("setContentsCenter:") = Void, CGRect;
override selector("setContentsGravity:") = Void, NSString;
override selector("setContentsRect:") = Void, CGRect;
override selector("setContentsScale:") = Void, Float;
override selector("setContinuityValues:") = Void, NSArray;
override selector("setCookie:") = Void, NSHTTPCookie;
override selector("setCookieAcceptPolicy:") = Void, UInt;
override selector("setCookies:forURL:mainDocumentURL:") = Void, NSArray, NSURL, NSURL;
override selector("setCornerRadius:") = Void, Float;
override selector("setCountLimit:") = Void, UInt;
override selector("setCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("setCumulative:") = Void, Bool;
override selector("setCurrencyCode:") = Void, NSString;
override selector("setCurrencyDecimalSeparator:") = Void, NSString;
override selector("setCurrencyGroupingSeparator:") = Void, NSString;
override selector("setCurrencySymbol:") = Void, NSString;
override selector("setCurrentContext:") = Bool, EAGLContext;
override selector("setData:") = Void, NSData;
override selector("setDateFormat:") = Void, NSString;
override selector("setDateStyle:") = Void, UInt;
override selector("setDay:") = Void, Int;
override selector("setDecimalSeparator:") = Void, NSString;
override selector("setDefaultBehavior:") = Void, Id;
override selector("setDefaultCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("setDefaultDate:") = Void, NSDate;
override selector("setDefaultFormatterBehavior:") = Void, UInt;
override selector("setDefaultTimeZone:") = Void, NSTimeZone;
override selector("setDelegate:") = Void, Id;
override selector("setDictionary:") = Void, NSDictionary;
override selector("setDisableActions:") = Void, Bool;
override selector("setDiskCapacity:") = Void, UInt;
override selector("setDoesRelativeDateFormatting:") = Void, Bool;
override selector("setDouble:forKey:") = Void, Double, NSString;
override selector("setDoubleSided:") = Void, Bool;
override selector("setDrawableProperties:") = Void, NSDictionary;
override selector("setDuration:") = Void, Double;
override selector("setEdgeAntialiasingMask:") = Void, UInt;
override selector("setEndPoint:") = Void, CGPoint;
override selector("setEndProgress:") = Void, Float;
override selector("setEra:") = Void, Int;
override selector("setEraSymbols:") = Void, NSArray;
override selector("setEvictsObjectsWithDiscardedContent:") = Void, Bool;
override selector("setExponentSymbol:") = Void, NSString;
override selector("setFileAttributes:") = Void, NSDictionary;
override selector("setFilename:") = Void, NSString;
override selector("setFillColor:") = Void, CGColorRef;
override selector("setFillMode:") = Void, NSString;
override selector("setFillRule:") = Void, NSString;
override selector("setFilter:") = Void, Id;
override selector("setFilters:") = Void, NSArray;
override selector("setFireDate:") = Void, NSDate;
override selector("setFirstWeekday:") = Void, UInt;
override selector("setFloat:forKey:") = Void, Float, NSString;
override selector("setFont:") = Void, CFTypeRef;
override selector("setFontSize:") = Void, Float;
override selector("setForegroundColor:") = Void, CGColorRef;
override selector("setFormatWidth:") = Void, UInt;
override selector("setFormatterBehavior:") = Void, UInt;
override selector("setFrame:") = Void, CGRect;
override selector("setFrameInterval:") = Void, Int;
override selector("setFromValue:") = Void, Id;
override selector("setGeneratesCalendarDates:") = Void, Bool;
override selector("setGeneratesDecimalNumbers:") = Void, Bool;
override selector("setGeometryFlipped:") = Void, Bool;
override selector("setGregorianStartDate:") = Void, NSDate;
override selector("setGroupingSeparator:") = Void, NSString;
override selector("setGroupingSize:") = Void, UInt;
override selector("setGroupsByEvent:") = Void, Bool;
override selector("setHTTPBody:") = Void, NSData;
override selector("setHTTPBodyStream:") = Void, NSInputStream;
override selector("setHTTPMethod:") = Void, NSString;
override selector("setHTTPShouldHandleCookies:") = Void, Bool;
override selector("setHTTPShouldUsePipelining:") = Void, Bool;
override selector("setHidden:") = Void, Bool;
override selector("setHour:") = Void, Int;
override selector("setInstanceAlphaOffset:") = Void, Float;
override selector("setInstanceBlueOffset:") = Void, Float;
override selector("setInstanceColor:") = Void, CGColorRef;
override selector("setInstanceCount:") = Void, Int;
override selector("setInstanceDelay:") = Void, Double;
override selector("setInstanceGreenOffset:") = Void, Float;
override selector("setInstanceRedOffset:") = Void, Float;
override selector("setInstanceTransform:") = Void, CATransform3D;
override selector("setInteger:forKey:") = Void, Int, NSString;
override selector("setInternationalCurrencySymbol:") = Void, NSString;
override selector("setKeyPath:") = Void, NSString;
override selector("setKeyTimes:") = Void, NSArray;
override selector("setLength:") = Void, UInt;
override selector("setLenient:") = Void, Bool;
override selector("setLevelsOfDetail:") = Void, UInt;
override selector("setLevelsOfDetailBias:") = Void, UInt;
override selector("setLevelsOfUndo:") = Void, UInt;
override selector("setLineCap:") = Void, NSString;
override selector("setLineDashPattern:") = Void, NSArray;
override selector("setLineDashPhase:") = Void, Float;
override selector("setLineJoin:") = Void, NSString;
override selector("setLineWidth:") = Void, Float;
override selector("setLocale:") = Void, NSLocale;
override selector("setLocations:") = Void, NSArray;
override selector("setLongEraSymbols:") = Void, NSArray;
override selector("setMagnificationFilter:") = Void, NSString;
override selector("setMainDocumentURL:") = Void, NSURL;
override selector("setMask:") = Void, CALayer;
override selector("setMasksToBounds:") = Void, Bool;
override selector("setMaxConcurrentOperationCount:") = Void, Int;
override selector("setMaximum:") = Void, NSNumber;
override selector("setMaximumFractionDigits:") = Void, UInt;
override selector("setMaximumIntegerDigits:") = Void, UInt;
override selector("setMaximumSignificantDigits:") = Void, UInt;
override selector("setMemoryCapacity:") = Void, UInt;
override selector("setMinificationFilter:") = Void, NSString;
override selector("setMinificationFilterBias:") = Void, Float;
override selector("setMinimum:") = Void, NSNumber;
override selector("setMinimumDaysInFirstWeek:") = Void, UInt;
override selector("setMinimumFractionDigits:") = Void, UInt;
override selector("setMinimumIntegerDigits:") = Void, UInt;
override selector("setMinimumSignificantDigits:") = Void, UInt;
override selector("setMinusSign:") = Void, NSString;
override selector("setMinute:") = Void, Int;
override selector("setMiterLimit:") = Void, Float;
override selector("setMonth:") = Void, Int;
override selector("setMonthSymbols:") = Void, NSArray;
override selector("setMultiplier:") = Void, NSNumber;
override selector("setName:") = Void, NSString;
override selector("setNeedsDisplay") = Void;
override selector("setNeedsDisplayInRect:") = Void, CGRect;
override selector("setNeedsDisplayOnBoundsChange:") = Void, Bool;
override selector("setNeedsLayout") = Void;
override selector("setNegativeFormat:") = Void, NSString;
override selector("setNegativeInfinitySymbol:") = Void, NSString;
override selector("setNegativePrefix:") = Void, NSString;
override selector("setNegativeSuffix:") = Void, NSString;
override selector("setNetworkServiceType:") = Void, UInt;
override selector("setNilSymbol:") = Void, NSString;
override selector("setNilValueForKey:") = Void, NSString;
override selector("setNotANumberSymbol:") = Void, NSString;
override selector("setNumberStyle:") = Void, UInt;
override selector("setObject:forKey:") = Void, Id, Id;
override selector("setObject:forKey:cost:") = Void, Id, Id, UInt;
override selector("setObjectZone:") = Void, Pointer[NSZone];
override selector("setObservationInfo:") = Void, RawPointer;
override selector("setOpacity:") = Void, Float;
override selector("setOpaque:") = Void, Bool;
override selector("setOutputFormat:") = Void, UInt;
override selector("setPMSymbol:") = Void, NSString;
override selector("setPaddingCharacter:") = Void, NSString;
override selector("setPaddingPosition:") = Void, UInt;
override selector("setPartialStringValidationEnabled:") = Void, Bool;
override selector("setPath:") = Void, CGPathRef;
override selector("setPaused:") = Void, Bool;
override selector("setPerMillSymbol:") = Void, NSString;
override selector("setPercentSymbol:") = Void, NSString;
override selector("setPersistentDomain:forName:") = Void, NSDictionary, NSString;
override selector("setPlusSign:") = Void, NSString;
override selector("setPosition:") = Void, CGPoint;
override selector("setPositiveFormat:") = Void, NSString;
override selector("setPositiveInfinitySymbol:") = Void, NSString;
override selector("setPositivePrefix:") = Void, NSString;
override selector("setPositiveSuffix:") = Void, NSString;
override selector("setPreferredFilename:") = Void, NSString;
override selector("setPreservesDepth:") = Void, Bool;
override selector("setProcessName:") = Void, NSString;
override selector("setProperty:forKey:") = Bool, Id, NSString;
override selector("setProperty:forKey:inRequest:") = Void, Id, NSString, NSMutableURLRequest;
override selector("setQuarter:") = Void, Int;
override selector("setQuarterSymbols:") = Void, NSArray;
override selector("setQueuePriority:") = Void, Int;
override selector("setRasterizationScale:") = Void, Float;
override selector("setRemovedOnCompletion:") = Void, Bool;
override selector("setRepeatCount:") = Void, Float;
override selector("setRepeatDuration:") = Void, Double;
override selector("setResourceValue:forKey:error:") = Bool, Id, NSString, Pointer[NSError];
override selector("setResourceValues:error:") = Bool, NSDictionary, Pointer[NSError];
override selector("setReturnValue:") = Void, RawPointer;
override selector("setRotationMode:") = Void, NSString;
override selector("setRoundingIncrement:") = Void, NSNumber;
override selector("setRoundingMode:") = Void, UInt;
override selector("setRunLoopModes:") = Void, NSArray;
override selector("setScanLocation:") = Void, UInt;
override selector("setScrollMode:") = Void, NSString;
override selector("setSecond:") = Void, Int;
override selector("setSecondaryGroupingSize:") = Void, UInt;
override selector("setSelector:") = Void, SelectorHandle;
override selector("setSet:") = Void, NSSet;
override selector("setShadowColor:") = Void, CGColorRef;
override selector("setShadowOffset:") = Void, CGSize;
override selector("setShadowOpacity:") = Void, Float;
override selector("setShadowPath:") = Void, CGPathRef;
override selector("setShadowRadius:") = Void, Float;
override selector("setSharedURLCache:") = Void, NSURLCache;
override selector("setShortMonthSymbols:") = Void, NSArray;
override selector("setShortQuarterSymbols:") = Void, NSArray;
override selector("setShortStandaloneMonthSymbols:") = Void, NSArray;
override selector("setShortStandaloneQuarterSymbols:") = Void, NSArray;
override selector("setShortStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setShortWeekdaySymbols:") = Void, NSArray;
override selector("setShouldProcessNamespaces:") = Void, Bool;
override selector("setShouldRasterize:") = Void, Bool;
override selector("setShouldReportNamespacePrefixes:") = Void, Bool;
override selector("setShouldResolveExternalEntities:") = Void, Bool;
override selector("setSpeed:") = Void, Float;
override selector("setStackSize:") = Void, UInt;
override selector("setStandaloneMonthSymbols:") = Void, NSArray;
override selector("setStandaloneQuarterSymbols:") = Void, NSArray;
override selector("setStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setStartPoint:") = Void, CGPoint;
override selector("setStartProgress:") = Void, Float;
override selector("setString:") = Void, NSString;
override selector("setStrokeColor:") = Void, CGColorRef;
override selector("setStyle:") = Void, NSDictionary;
override selector("setSublayerTransform:") = Void, CATransform3D;
override selector("setSublayers:") = Void, NSArray;
override selector("setSubtype:") = Void, NSString;
override selector("setSuspended:") = Void, Bool;
override selector("setTXTRecordData:") = Bool, NSData;
override selector("setTarget:") = Void, Id;
override selector("setTensionValues:") = Void, NSArray;
override selector("setTextAttributesForNegativeInfinity:") = Void, NSDictionary;
override selector("setTextAttributesForNegativeValues:") = Void, NSDictionary;
override selector("setTextAttributesForNil:") = Void, NSDictionary;
override selector("setTextAttributesForNotANumber:") = Void, NSDictionary;
override selector("setTextAttributesForPositiveInfinity:") = Void, NSDictionary;
override selector("setTextAttributesForPositiveValues:") = Void, NSDictionary;
override selector("setTextAttributesForZero:") = Void, NSDictionary;
override selector("setThreadPriority:") = Bool, Double;
override selector("setTileSize:") = Void, CGSize;
override selector("setTimeOffset:") = Void, Double;
override selector("setTimeStyle:") = Void, UInt;
override selector("setTimeZone:") = Void, NSTimeZone;
override selector("setTimeoutInterval:") = Void, Double;
override selector("setTimingFunction:") = Void, CAMediaTimingFunction;
override selector("setTimingFunctions:") = Void, NSArray;
override selector("setToValue:") = Void, Id;
override selector("setTotalCostLimit:") = Void, UInt;
override selector("setTransform:") = Void, CATransform3D;
override selector("setTruncationMode:") = Void, NSString;
override selector("setTwoDigitStartDate:") = Void, NSDate;
override selector("setType:") = Void, NSString;
override selector("setURL:") = Void, NSURL;
override selector("setURL:forKey:") = Void, NSURL, NSString;
override selector("setUsesGroupingSeparator:") = Void, Bool;
override selector("setUsesSignificantDigits:") = Void, Bool;
override selector("setValue:forHTTPHeaderField:") = Void, NSString, NSString;
override selector("setValue:forKey:") = Void, Id, NSString;
override selector("setValue:forKeyPath:") = Void, Id, NSString;
override selector("setValue:forUndefinedKey:") = Void, Id, NSString;
override selector("setValueFunction:") = Void, CAValueFunction;
override selector("setValueTransformer:forName:") = Void, NSValueTransformer, NSString;
override selector("setValues:") = Void, NSArray;
override selector("setValuesForKeysWithDictionary:") = Void, NSDictionary;
override selector("setVersion:") = Void, Int;
override selector("setVeryShortMonthSymbols:") = Void, NSArray;
override selector("setVeryShortStandaloneMonthSymbols:") = Void, NSArray;
override selector("setVeryShortStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setVeryShortWeekdaySymbols:") = Void, NSArray;
override selector("setVolatileDomain:forName:") = Void, NSDictionary, NSString;
override selector("setWeek:") = Void, Int;
override selector("setWeekday:") = Void, Int;
override selector("setWeekdayOrdinal:") = Void, Int;
override selector("setWeekdaySymbols:") = Void, NSArray;
override selector("setWithArray:") = Id, NSArray;
override selector("setWithCapacity:") = Id, UInt;
override selector("setWithObject:") = Id, Id;
override varargSelector("setWithObjects:") = Id, Id;
override selector("setWithObjects:count:") = Id, Pointer[Id], UInt;
override selector("setWithSet:") = Id, NSSet;
override selector("setWrapped:") = Void, Bool;
override selector("setYear:") = Void, Int;
override selector("setZPosition:") = Void, Float;
override selector("setZeroSymbol:") = Void, NSString;
override selector("shadowColor") = CGColorRef;
override selector("shadowOffset") = CGSize;
override selector("shadowOpacity") = Float;
override selector("shadowPath") = CGPathRef;
override selector("shadowRadius") = Float;
override selector("sharedCredentialStorage") = NSURLCredentialStorage;
override selector("sharedFrameworksPath") = NSString;
override selector("sharedFrameworksURL") = NSURL;
override selector("sharedHTTPCookieStorage") = NSHTTPCookieStorage;
override selector("sharedSupportPath") = NSString;
override selector("sharedSupportURL") = NSURL;
override selector("sharedURLCache") = NSURLCache;
override selector("sharegroup") = EAGLSharegroup;
override selector("shiftIndexesStartingAtIndex:by:") = Void, UInt, Int;
override selector("shortMonthSymbols") = NSArray;
override selector("shortQuarterSymbols") = NSArray;
override selector("shortStandaloneMonthSymbols") = NSArray;
override selector("shortStandaloneQuarterSymbols") = NSArray;
override selector("shortStandaloneWeekdaySymbols") = NSArray;
override selector("shortValue") = Short;
override selector("shortWeekdaySymbols") = NSArray;
override selector("shouldArchiveValueForKey:") = Bool, NSString;
override selector("shouldProcessNamespaces") = Bool;
override selector("shouldRasterize") = Bool;
override selector("shouldReportNamespacePrefixes") = Bool;
override selector("shouldResolveExternalEntities") = Bool;
override selector("signal") = Void;
override selector("signatureWithObjCTypes:") = NSMethodSignature, Pointer[CChar];
override selector("skipDescendants") = Void;
override selector("skipDescendents") = Void;
override selector("sleepForTimeInterval:") = Void, Double;
override selector("sleepUntilDate:") = Void, NSDate;
override selector("smallestEncoding") = UInt;
override selector("sortDescriptorWithKey:ascending:") = Id, NSString, Bool;
override selector("sortDescriptorWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
override selector("sortDescriptorWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
override selector("sortUsingComparator:") = Void, NSComparator;
override selector("sortUsingDescriptors:") = Void, NSArray;
override selector("sortUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer;
override selector("sortUsingSelector:") = Void, SelectorHandle;
override selector("sortWithOptions:usingComparator:") = Void, UInt, NSComparator;
override selector("sortedArrayHint") = NSData;
override selector("sortedArrayUsingComparator:") = NSArray, NSComparator;
override selector("sortedArrayUsingDescriptors:") = NSArray, NSArray;
override selector("sortedArrayUsingFunction:context:") = NSArray, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer;
override selector("sortedArrayUsingFunction:context:hint:") = NSArray, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer, NSData;
override selector("sortedArrayUsingSelector:") = NSArray, SelectorHandle;
override selector("sortedArrayWithOptions:usingComparator:") = NSArray, UInt, NSComparator;
override selector("speed") = Float;
override selector("spellCheckingResultWithRange:") = NSTextCheckingResult, NSRange;
override selector("stackSize") = UInt;
override selector("standaloneMonthSymbols") = NSArray;
override selector("standaloneQuarterSymbols") = NSArray;
override selector("standaloneWeekdaySymbols") = NSArray;
override selector("standardUserDefaults") = NSUserDefaults;
override selector("standardizedURL") = NSURL;
override selector("start") = Void;
override selector("startLoading") = Void;
override selector("startMonitoring") = Void;
override selector("startPoint") = CGPoint;
override selector("startProgress") = Float;
override selector("statusCode") = Int;
override selector("stop") = Void;
override selector("stopLoading") = Void;
override selector("stopMonitoring") = Void;
override selector("storagePolicy") = UInt;
override selector("storeCachedResponse:forRequest:") = Void, NSCachedURLResponse, NSURLRequest;
override selector("stream:handleEvent:") = Void, NSStream, UInt;
override selector("streamError") = NSError;
override selector("streamStatus") = UInt;
override selector("string") = Id;
override selector("stringArrayForKey:") = NSArray, NSString;
override selector("stringByAbbreviatingWithTildeInPath") = NSString;
override selector("stringByAddingPercentEscapesUsingEncoding:") = NSString, UInt;
override varargSelector("stringByAppendingFormat:") = NSString, NSString;
override selector("stringByAppendingPathComponent:") = NSString, NSString;
override selector("stringByAppendingPathExtension:") = NSString, NSString;
override selector("stringByAppendingString:") = NSString, NSString;
override selector("stringByDeletingLastPathComponent") = NSString;
override selector("stringByDeletingPathExtension") = NSString;
override selector("stringByExpandingTildeInPath") = NSString;
override selector("stringByFoldingWithOptions:locale:") = NSString, UInt, NSLocale;
override selector("stringByPaddingToLength:withString:startingAtIndex:") = NSString, UInt, NSString, UInt;
override selector("stringByReplacingCharactersInRange:withString:") = NSString, NSRange, NSString;
override selector("stringByReplacingMatchesInString:options:range:withTemplate:") = NSString, NSString, UInt, NSRange, NSString;
override selector("stringByReplacingOccurrencesOfString:withString:") = NSString, NSString, NSString;
override selector("stringByReplacingOccurrencesOfString:withString:options:range:") = NSString, NSString, NSString, UInt, NSRange;
override selector("stringByReplacingPercentEscapesUsingEncoding:") = NSString, UInt;
override selector("stringByResolvingSymlinksInPath") = NSString;
override selector("stringByStandardizingPath") = NSString;
override selector("stringByTrimmingCharactersInSet:") = NSString, NSCharacterSet;
override selector("stringForKey:") = NSString, NSString;
override selector("stringForObjectValue:") = NSString, Id;
override selector("stringFromDate:") = NSString, NSDate;
override selector("stringFromNumber:") = NSString, NSNumber;
override selector("stringValue") = NSString;
override selector("stringWithCString:") = Id, Pointer[CChar];
override selector("stringWithCString:encoding:") = Id, Pointer[CChar], UInt;
override selector("stringWithCString:length:") = Id, Pointer[CChar], UInt;
override selector("stringWithCapacity:") = Id, UInt;
override selector("stringWithCharacters:length:") = Id, Pointer[UShort], UInt;
override selector("stringWithContentsOfFile:") = Id, NSString;
override selector("stringWithContentsOfFile:encoding:error:") = Id, NSString, UInt, Pointer[NSError];
override selector("stringWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[UInt], Pointer[NSError];
override selector("stringWithContentsOfURL:") = Id, NSURL;
override selector("stringWithContentsOfURL:encoding:error:") = Id, NSURL, UInt, Pointer[NSError];
override selector("stringWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[UInt], Pointer[NSError];
override selector("stringWithFileSystemRepresentation:length:") = NSString, Pointer[CChar], UInt;
override varargSelector("stringWithFormat:") = Id, NSString;
override selector("stringWithString:") = Id, NSString;
override selector("stringWithUTF8String:") = Id, Pointer[CChar];
override selector("stringsByAppendingPaths:") = NSArray, NSArray;
override selector("strokeColor") = CGColorRef;
override selector("style") = NSDictionary;
override selector("subarrayWithRange:") = NSArray, NSRange;
override selector("subdataWithRange:") = NSData, NSRange;
override selector("sublayerTransform") = CATransform3D;
override selector("sublayers") = NSArray;
override selector("subpathsAtPath:") = NSArray, NSString;
override selector("subpathsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("subpredicates") = NSArray;
override selector("substringFromIndex:") = NSString, UInt;
override selector("substringToIndex:") = NSString, UInt;
override selector("substringWithRange:") = NSString, NSRange;
override selector("subtype") = NSString;
override selector("suggestedFilename") = NSString;
override selector("superclass") = Id;
override selector("superlayer") = CALayer;
override selector("symbolCharacterSet") = Id;
override selector("symbolicLinkDestination") = NSString;
override selector("symbolicLinkDestinationURL") = NSURL;
override selector("synchronize") = Bool;
override selector("synchronizeFile") = Void;
override selector("systemID") = NSString;
override selector("systemLocale") = Id;
override selector("systemTimeZone") = NSTimeZone;
override selector("systemUptime") = Double;
override selector("systemVersion") = UInt;
override selector("target") = Id;
override selector("tensionValues") = NSArray;
override selector("textAttributesForNegativeInfinity") = NSDictionary;
override selector("textAttributesForNegativeValues") = NSDictionary;
override selector("textAttributesForNil") = NSDictionary;
override selector("textAttributesForNotANumber") = NSDictionary;
override selector("textAttributesForPositiveInfinity") = NSDictionary;
override selector("textAttributesForPositiveValues") = NSDictionary;
override selector("textAttributesForZero") = NSDictionary;
override selector("textEncodingName") = NSString;
override selector("threadDictionary") = NSMutableDictionary;
override selector("threadPriority") = Double;
override selector("tileSize") = CGSize;
override selector("timeInterval") = Double;
override selector("timeIntervalSince1970") = Double;
override selector("timeIntervalSinceDate:") = Double, NSDate;
override selector("timeIntervalSinceNow") = Double;
override selector("timeIntervalSinceReferenceDate") = Double;
override selector("timeOffset") = Double;
override selector("timeStyle") = UInt;
override selector("timeZone") = NSTimeZone;
override selector("timeZoneDataVersion") = NSString;
override selector("timeZoneForSecondsFromGMT:") = Id, Int;
override selector("timeZoneWithAbbreviation:") = Id, NSString;
override selector("timeZoneWithName:") = Id, NSString;
override selector("timeZoneWithName:data:") = Id, NSString, NSData;
override selector("timeoutInterval") = Double;
override selector("timerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
override selector("timerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
override selector("timestamp") = Double;
override selector("timingFunction") = CAMediaTimingFunction;
override selector("timingFunctions") = NSArray;
override selector("toValue") = Id;
override selector("totalCostLimit") = UInt;
override selector("transform") = CATransform3D;
override selector("transformedValue:") = Id, Id;
override selector("transformedValueClass") = Id;
override selector("transitInformationCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
override selector("truncateFileAtOffset:") = Void, UInt64;
override selector("truncationMode") = NSString;
override selector("tryLock") = Bool;
override selector("tryLockWhenCondition:") = Bool, Int;
override selector("twoDigitStartDate") = NSDate;
override selector("type") = NSString;
override selector("unarchiveObjectWithData:") = Id, NSData;
override selector("unarchiveObjectWithFile:") = Id, NSString;
override selector("unarchiver:cannotDecodeObjectOfClassName:originalClasses:") = Id, NSKeyedUnarchiver, NSString, NSArray;
override selector("unarchiver:didDecodeObject:") = Id, NSKeyedUnarchiver, Id;
override selector("unarchiver:willReplaceObject:withObject:") = Void, NSKeyedUnarchiver, Id, Id;
override selector("unarchiverDidFinish:") = Void, NSKeyedUnarchiver;
override selector("unarchiverWillFinish:") = Void, NSKeyedUnarchiver;
override selector("undo") = Void;
override selector("undoActionName") = NSString;
override selector("undoMenuItemTitle") = NSString;
override selector("undoMenuTitleForUndoActionName:") = NSString, NSString;
override selector("undoNestedGroup") = Void;
override selector("unionSet:") = Void, NSSet;
override selector("unload") = Bool;
override selector("unlock") = Void;
override selector("unlockWithCondition:") = Void, Int;
override selector("unregisterClass:") = Void, Id;
override selector("unscheduleFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("unsignedCharValue") = CUChar;
override selector("unsignedIntValue") = UInt;
override selector("unsignedIntegerValue") = UInt;
override selector("unsignedLongLongValue") = UInt64;
override selector("unsignedLongValue") = CULong;
override selector("unsignedShortValue") = UShort;
override selector("updateFromPath:") = Bool, NSString;
override selector("uppercaseLetterCharacterSet") = Id;
override selector("uppercaseString") = NSString;
override selector("useCredential:forAuthenticationChallenge:") = Void, NSURLCredential, NSURLAuthenticationChallenge;
override selector("user") = NSString;
override selector("userInfo") = Id;
override selector("usesGroupingSeparator") = Bool;
override selector("usesSignificantDigits") = Bool;
override selector("validateValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("validateValue:forKeyPath:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("value") = NSString;
override selector("value:withObjCType:") = NSValue, RawPointer, Pointer[CChar];
override selector("valueForHTTPHeaderField:") = NSString, NSString;
override selector("valueForKey:") = Id, NSString;
override selector("valueForKeyPath:") = Id, NSString;
override selector("valueForUndefinedKey:") = Id, NSString;
override selector("valueFunction") = CAValueFunction;
override selector("valueTransformerForName:") = NSValueTransformer, NSString;
override selector("valueTransformerNames") = NSArray;
override selector("valueWithBytes:objCType:") = NSValue, RawPointer, Pointer[CChar];
override selector("valueWithCATransform3D:") = NSValue, CATransform3D;
override selector("valueWithNonretainedObject:") = NSValue, Id;
override selector("valueWithPointer:") = NSValue, RawPointer;
override selector("valueWithRange:") = NSValue, NSRange;
override selector("values") = NSArray;
override selector("variable") = NSString;
override selector("version") = Int;
override selector("versionForClassName:") = Int, NSString;
override selector("veryShortMonthSymbols") = NSArray;
override selector("veryShortStandaloneMonthSymbols") = NSArray;
override selector("veryShortStandaloneWeekdaySymbols") = NSArray;
override selector("veryShortWeekdaySymbols") = NSArray;
override selector("visibleRect") = CGRect;
override selector("volatileDomainForName:") = NSDictionary, NSString;
override selector("volatileDomainNames") = NSArray;
override selector("wait") = Void;
override selector("waitForDataInBackgroundAndNotify") = Void;
override selector("waitForDataInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("waitUntilAllOperationsAreFinished") = Void;
override selector("waitUntilDate:") = Bool, NSDate;
override selector("waitUntilFinished") = Void;
override selector("week") = Int;
override selector("weekday") = Int;
override selector("weekdayOrdinal") = Int;
override selector("weekdaySymbols") = NSArray;
override selector("whitespaceAndNewlineCharacterSet") = Id;
override selector("whitespaceCharacterSet") = Id;
override selector("willChange:valuesAtIndexes:forKey:") = Void, UInt, NSIndexSet, NSString;
override selector("willChangeValueForKey:") = Void, NSString;
override selector("willChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, UInt, NSSet;
override selector("windowsLocaleCodeFromLocaleIdentifier:") = UInt, NSString;
override selector("write:maxLength:") = Int, Pointer[CUChar], UInt;
override selector("writeBookmarkData:toURL:options:error:") = Bool, NSData, NSURL, UInt, Pointer[NSError];
override selector("writeData:") = Void, NSData;
override selector("writePropertyList:toStream:format:options:error:") = Int, Id, NSOutputStream, UInt, UInt, Pointer[NSError];
override selector("writeToFile:atomically:") = Bool, NSString, Bool;
override selector("writeToFile:atomically:encoding:error:") = Bool, NSString, Bool, UInt, Pointer[NSError];
override selector("writeToFile:atomically:updateFilenames:") = Bool, NSString, Bool, Bool;
override selector("writeToFile:options:error:") = Bool, NSString, UInt, Pointer[NSError];
override selector("writeToURL:atomically:") = Bool, NSURL, Bool;
override selector("writeToURL:atomically:encoding:error:") = Bool, NSURL, Bool, UInt, Pointer[NSError];
override selector("writeToURL:options:error:") = Bool, NSURL, UInt, Pointer[NSError];
override selector("writeToURL:options:originalContentsURL:error:") = Bool, NSURL, UInt, NSURL, Pointer[NSError];
override selector("year") = Int;
override selector("zPosition") = Float;
override selector("zero") = NSDecimalNumber;
override selector("zeroSymbol") = NSString;
override selector("zone") = Pointer[NSZone];

record CAAnimation = externalClass(NSObject);
override externalInstanceMethod(#CAAnimation, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#CAAnimation, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#CAAnimation, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#CAAnimation, "beginTime") = Double;
override externalInstanceMethod(#CAAnimation, "setBeginTime:") = Void, Double;
override externalInstanceMethod(#CAAnimation, "duration") = Double;
override externalInstanceMethod(#CAAnimation, "setDuration:") = Void, Double;
override externalInstanceMethod(#CAAnimation, "speed") = Float;
override externalInstanceMethod(#CAAnimation, "setSpeed:") = Void, Float;
override externalInstanceMethod(#CAAnimation, "timeOffset") = Double;
override externalInstanceMethod(#CAAnimation, "setTimeOffset:") = Void, Double;
override externalInstanceMethod(#CAAnimation, "repeatCount") = Float;
override externalInstanceMethod(#CAAnimation, "setRepeatCount:") = Void, Float;
override externalInstanceMethod(#CAAnimation, "repeatDuration") = Double;
override externalInstanceMethod(#CAAnimation, "setRepeatDuration:") = Void, Double;
override externalInstanceMethod(#CAAnimation, "autoreverses") = Bool;
override externalInstanceMethod(#CAAnimation, "setAutoreverses:") = Void, Bool;
override externalInstanceMethod(#CAAnimation, "fillMode") = NSString;
override externalInstanceMethod(#CAAnimation, "setFillMode:") = Void, NSString;
override externalInstanceMethod(#CAAnimation, "runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
override externalClassMethod(#CAAnimation, "animation") = Id;
override externalClassMethod(#CAAnimation, "defaultValueForKey:") = Id, NSString;
override externalInstanceMethod(#CAAnimation, "shouldArchiveValueForKey:") = Bool, NSString;
override externalInstanceMethod(#CAAnimation, "timingFunction") = CAMediaTimingFunction;
override externalInstanceMethod(#CAAnimation, "setTimingFunction:") = Void, CAMediaTimingFunction;
override externalInstanceMethod(#CAAnimation, "delegate") = Id;
override externalInstanceMethod(#CAAnimation, "setDelegate:") = Void, Id;
override externalInstanceMethod(#CAAnimation, "isRemovedOnCompletion") = Bool;
override externalInstanceMethod(#CAAnimation, "setRemovedOnCompletion:") = Void, Bool;

record CAAnimationGroup = externalClass(CAAnimation);
override externalInstanceMethod(#CAAnimationGroup, "animations") = NSArray;
override externalInstanceMethod(#CAAnimationGroup, "setAnimations:") = Void, NSArray;

record CABasicAnimation = externalClass(CAPropertyAnimation);
override externalInstanceMethod(#CABasicAnimation, "fromValue") = Id;
override externalInstanceMethod(#CABasicAnimation, "setFromValue:") = Void, Id;
override externalInstanceMethod(#CABasicAnimation, "toValue") = Id;
override externalInstanceMethod(#CABasicAnimation, "setToValue:") = Void, Id;
override externalInstanceMethod(#CABasicAnimation, "byValue") = Id;
override externalInstanceMethod(#CABasicAnimation, "setByValue:") = Void, Id;

record CADisplayLink = externalClass(NSObject);
override externalClassMethod(#CADisplayLink, "displayLinkWithTarget:selector:") = CADisplayLink, Id, SelectorHandle;
override externalInstanceMethod(#CADisplayLink, "addToRunLoop:forMode:") = Void, NSRunLoop, NSString;
override externalInstanceMethod(#CADisplayLink, "removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
override externalInstanceMethod(#CADisplayLink, "invalidate") = Void;
override externalInstanceMethod(#CADisplayLink, "timestamp") = Double;
override externalInstanceMethod(#CADisplayLink, "duration") = Double;
override externalInstanceMethod(#CADisplayLink, "isPaused") = Bool;
override externalInstanceMethod(#CADisplayLink, "setPaused:") = Void, Bool;
override externalInstanceMethod(#CADisplayLink, "frameInterval") = Int;
override externalInstanceMethod(#CADisplayLink, "setFrameInterval:") = Void, Int;

record CAEAGLLayer = externalClass(CALayer);
override externalInstanceMethod(#CAEAGLLayer, "drawableProperties") = NSDictionary;
override externalInstanceMethod(#CAEAGLLayer, "setDrawableProperties:") = Void, NSDictionary;

record CAGradientLayer = externalClass(CALayer);
override externalInstanceMethod(#CAGradientLayer, "colors") = NSArray;
override externalInstanceMethod(#CAGradientLayer, "setColors:") = Void, NSArray;
override externalInstanceMethod(#CAGradientLayer, "locations") = NSArray;
override externalInstanceMethod(#CAGradientLayer, "setLocations:") = Void, NSArray;
override externalInstanceMethod(#CAGradientLayer, "startPoint") = CGPoint;
override externalInstanceMethod(#CAGradientLayer, "setStartPoint:") = Void, CGPoint;
override externalInstanceMethod(#CAGradientLayer, "endPoint") = CGPoint;
override externalInstanceMethod(#CAGradientLayer, "setEndPoint:") = Void, CGPoint;
override externalInstanceMethod(#CAGradientLayer, "type") = NSString;
override externalInstanceMethod(#CAGradientLayer, "setType:") = Void, NSString;

record CAKeyframeAnimation = externalClass(CAPropertyAnimation);
override externalInstanceMethod(#CAKeyframeAnimation, "values") = NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "setValues:") = Void, NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "path") = CGPathRef;
override externalInstanceMethod(#CAKeyframeAnimation, "setPath:") = Void, CGPathRef;
override externalInstanceMethod(#CAKeyframeAnimation, "keyTimes") = NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "setKeyTimes:") = Void, NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "timingFunctions") = NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "setTimingFunctions:") = Void, NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "calculationMode") = NSString;
override externalInstanceMethod(#CAKeyframeAnimation, "setCalculationMode:") = Void, NSString;
override externalInstanceMethod(#CAKeyframeAnimation, "tensionValues") = NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "setTensionValues:") = Void, NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "continuityValues") = NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "setContinuityValues:") = Void, NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "biasValues") = NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "setBiasValues:") = Void, NSArray;
override externalInstanceMethod(#CAKeyframeAnimation, "rotationMode") = NSString;
override externalInstanceMethod(#CAKeyframeAnimation, "setRotationMode:") = Void, NSString;

record CALayer = externalClass(NSObject);
override externalInstanceMethod(#CALayer, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#CALayer, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#CALayer, "beginTime") = Double;
override externalInstanceMethod(#CALayer, "setBeginTime:") = Void, Double;
override externalInstanceMethod(#CALayer, "duration") = Double;
override externalInstanceMethod(#CALayer, "setDuration:") = Void, Double;
override externalInstanceMethod(#CALayer, "speed") = Float;
override externalInstanceMethod(#CALayer, "setSpeed:") = Void, Float;
override externalInstanceMethod(#CALayer, "timeOffset") = Double;
override externalInstanceMethod(#CALayer, "setTimeOffset:") = Void, Double;
override externalInstanceMethod(#CALayer, "repeatCount") = Float;
override externalInstanceMethod(#CALayer, "setRepeatCount:") = Void, Float;
override externalInstanceMethod(#CALayer, "repeatDuration") = Double;
override externalInstanceMethod(#CALayer, "setRepeatDuration:") = Void, Double;
override externalInstanceMethod(#CALayer, "autoreverses") = Bool;
override externalInstanceMethod(#CALayer, "setAutoreverses:") = Void, Bool;
override externalInstanceMethod(#CALayer, "fillMode") = NSString;
override externalInstanceMethod(#CALayer, "setFillMode:") = Void, NSString;
override externalClassMethod(#CALayer, "layer") = Id;
override externalInstanceMethod(#CALayer, "init") = Id;
override externalInstanceMethod(#CALayer, "initWithLayer:") = Id, Id;
override externalInstanceMethod(#CALayer, "presentationLayer") = Id;
override externalInstanceMethod(#CALayer, "modelLayer") = Id;
override externalClassMethod(#CALayer, "defaultValueForKey:") = Id, NSString;
override externalClassMethod(#CALayer, "needsDisplayForKey:") = Bool, NSString;
override externalInstanceMethod(#CALayer, "shouldArchiveValueForKey:") = Bool, NSString;
override externalInstanceMethod(#CALayer, "affineTransform") = CGAffineTransform;
override externalInstanceMethod(#CALayer, "setAffineTransform:") = Void, CGAffineTransform;
override externalInstanceMethod(#CALayer, "contentsAreFlipped") = Bool;
override externalInstanceMethod(#CALayer, "removeFromSuperlayer") = Void;
override externalInstanceMethod(#CALayer, "addSublayer:") = Void, CALayer;
override externalInstanceMethod(#CALayer, "insertSublayer:atIndex:") = Void, CALayer, UInt;
override externalInstanceMethod(#CALayer, "insertSublayer:below:") = Void, CALayer, CALayer;
override externalInstanceMethod(#CALayer, "insertSublayer:above:") = Void, CALayer, CALayer;
override externalInstanceMethod(#CALayer, "replaceSublayer:with:") = Void, CALayer, CALayer;
override externalInstanceMethod(#CALayer, "convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
override externalInstanceMethod(#CALayer, "convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
override externalInstanceMethod(#CALayer, "convertRect:fromLayer:") = CGRect, CGRect, CALayer;
override externalInstanceMethod(#CALayer, "convertRect:toLayer:") = CGRect, CGRect, CALayer;
override externalInstanceMethod(#CALayer, "convertTime:fromLayer:") = Double, Double, CALayer;
override externalInstanceMethod(#CALayer, "convertTime:toLayer:") = Double, Double, CALayer;
override externalInstanceMethod(#CALayer, "hitTest:") = CALayer, CGPoint;
override externalInstanceMethod(#CALayer, "containsPoint:") = Bool, CGPoint;
override externalInstanceMethod(#CALayer, "display") = Void;
override externalInstanceMethod(#CALayer, "setNeedsDisplay") = Void;
override externalInstanceMethod(#CALayer, "setNeedsDisplayInRect:") = Void, CGRect;
override externalInstanceMethod(#CALayer, "needsDisplay") = Bool;
override externalInstanceMethod(#CALayer, "displayIfNeeded") = Void;
override externalInstanceMethod(#CALayer, "drawInContext:") = Void, CGContextRef;
override externalInstanceMethod(#CALayer, "renderInContext:") = Void, CGContextRef;
override externalInstanceMethod(#CALayer, "preferredFrameSize") = CGSize;
override externalInstanceMethod(#CALayer, "setNeedsLayout") = Void;
override externalInstanceMethod(#CALayer, "needsLayout") = Bool;
override externalInstanceMethod(#CALayer, "layoutIfNeeded") = Void;
override externalInstanceMethod(#CALayer, "layoutSublayers") = Void;
override externalClassMethod(#CALayer, "defaultActionForKey:") = Id, NSString;
override externalInstanceMethod(#CALayer, "actionForKey:") = Id, NSString;
override externalInstanceMethod(#CALayer, "addAnimation:forKey:") = Void, CAAnimation, NSString;
override externalInstanceMethod(#CALayer, "removeAllAnimations") = Void;
override externalInstanceMethod(#CALayer, "removeAnimationForKey:") = Void, NSString;
override externalInstanceMethod(#CALayer, "animationKeys") = NSArray;
override externalInstanceMethod(#CALayer, "animationForKey:") = CAAnimation, NSString;
override externalInstanceMethod(#CALayer, "bounds") = CGRect;
override externalInstanceMethod(#CALayer, "setBounds:") = Void, CGRect;
override externalInstanceMethod(#CALayer, "position") = CGPoint;
override externalInstanceMethod(#CALayer, "setPosition:") = Void, CGPoint;
override externalInstanceMethod(#CALayer, "zPosition") = Float;
override externalInstanceMethod(#CALayer, "setZPosition:") = Void, Float;
override externalInstanceMethod(#CALayer, "anchorPoint") = CGPoint;
override externalInstanceMethod(#CALayer, "setAnchorPoint:") = Void, CGPoint;
override externalInstanceMethod(#CALayer, "anchorPointZ") = Float;
override externalInstanceMethod(#CALayer, "setAnchorPointZ:") = Void, Float;
override externalInstanceMethod(#CALayer, "transform") = CATransform3D;
override externalInstanceMethod(#CALayer, "setTransform:") = Void, CATransform3D;
override externalInstanceMethod(#CALayer, "frame") = CGRect;
override externalInstanceMethod(#CALayer, "setFrame:") = Void, CGRect;
override externalInstanceMethod(#CALayer, "isHidden") = Bool;
override externalInstanceMethod(#CALayer, "setHidden:") = Void, Bool;
override externalInstanceMethod(#CALayer, "isDoubleSided") = Bool;
override externalInstanceMethod(#CALayer, "setDoubleSided:") = Void, Bool;
override externalInstanceMethod(#CALayer, "isGeometryFlipped") = Bool;
override externalInstanceMethod(#CALayer, "setGeometryFlipped:") = Void, Bool;
override externalInstanceMethod(#CALayer, "superlayer") = CALayer;
override externalInstanceMethod(#CALayer, "sublayers") = NSArray;
override externalInstanceMethod(#CALayer, "setSublayers:") = Void, NSArray;
override externalInstanceMethod(#CALayer, "sublayerTransform") = CATransform3D;
override externalInstanceMethod(#CALayer, "setSublayerTransform:") = Void, CATransform3D;
override externalInstanceMethod(#CALayer, "mask") = CALayer;
override externalInstanceMethod(#CALayer, "setMask:") = Void, CALayer;
override externalInstanceMethod(#CALayer, "masksToBounds") = Bool;
override externalInstanceMethod(#CALayer, "setMasksToBounds:") = Void, Bool;
override externalInstanceMethod(#CALayer, "contents") = Id;
override externalInstanceMethod(#CALayer, "setContents:") = Void, Id;
override externalInstanceMethod(#CALayer, "contentsRect") = CGRect;
override externalInstanceMethod(#CALayer, "setContentsRect:") = Void, CGRect;
override externalInstanceMethod(#CALayer, "contentsGravity") = NSString;
override externalInstanceMethod(#CALayer, "setContentsGravity:") = Void, NSString;
override externalInstanceMethod(#CALayer, "contentsScale") = Float;
override externalInstanceMethod(#CALayer, "setContentsScale:") = Void, Float;
override externalInstanceMethod(#CALayer, "contentsCenter") = CGRect;
override externalInstanceMethod(#CALayer, "setContentsCenter:") = Void, CGRect;
override externalInstanceMethod(#CALayer, "minificationFilter") = NSString;
override externalInstanceMethod(#CALayer, "setMinificationFilter:") = Void, NSString;
override externalInstanceMethod(#CALayer, "magnificationFilter") = NSString;
override externalInstanceMethod(#CALayer, "setMagnificationFilter:") = Void, NSString;
override externalInstanceMethod(#CALayer, "minificationFilterBias") = Float;
override externalInstanceMethod(#CALayer, "setMinificationFilterBias:") = Void, Float;
override externalInstanceMethod(#CALayer, "isOpaque") = Bool;
override externalInstanceMethod(#CALayer, "setOpaque:") = Void, Bool;
override externalInstanceMethod(#CALayer, "needsDisplayOnBoundsChange") = Bool;
override externalInstanceMethod(#CALayer, "setNeedsDisplayOnBoundsChange:") = Void, Bool;
override externalInstanceMethod(#CALayer, "edgeAntialiasingMask") = UInt;
override externalInstanceMethod(#CALayer, "setEdgeAntialiasingMask:") = Void, UInt;
override externalInstanceMethod(#CALayer, "backgroundColor") = CGColorRef;
override externalInstanceMethod(#CALayer, "setBackgroundColor:") = Void, CGColorRef;
override externalInstanceMethod(#CALayer, "cornerRadius") = Float;
override externalInstanceMethod(#CALayer, "setCornerRadius:") = Void, Float;
override externalInstanceMethod(#CALayer, "borderWidth") = Float;
override externalInstanceMethod(#CALayer, "setBorderWidth:") = Void, Float;
override externalInstanceMethod(#CALayer, "borderColor") = CGColorRef;
override externalInstanceMethod(#CALayer, "setBorderColor:") = Void, CGColorRef;
override externalInstanceMethod(#CALayer, "opacity") = Float;
override externalInstanceMethod(#CALayer, "setOpacity:") = Void, Float;
override externalInstanceMethod(#CALayer, "compositingFilter") = Id;
override externalInstanceMethod(#CALayer, "setCompositingFilter:") = Void, Id;
override externalInstanceMethod(#CALayer, "filters") = NSArray;
override externalInstanceMethod(#CALayer, "setFilters:") = Void, NSArray;
override externalInstanceMethod(#CALayer, "backgroundFilters") = NSArray;
override externalInstanceMethod(#CALayer, "setBackgroundFilters:") = Void, NSArray;
override externalInstanceMethod(#CALayer, "shouldRasterize") = Bool;
override externalInstanceMethod(#CALayer, "setShouldRasterize:") = Void, Bool;
override externalInstanceMethod(#CALayer, "rasterizationScale") = Float;
override externalInstanceMethod(#CALayer, "setRasterizationScale:") = Void, Float;
override externalInstanceMethod(#CALayer, "shadowColor") = CGColorRef;
override externalInstanceMethod(#CALayer, "setShadowColor:") = Void, CGColorRef;
override externalInstanceMethod(#CALayer, "shadowOpacity") = Float;
override externalInstanceMethod(#CALayer, "setShadowOpacity:") = Void, Float;
override externalInstanceMethod(#CALayer, "shadowOffset") = CGSize;
override externalInstanceMethod(#CALayer, "setShadowOffset:") = Void, CGSize;
override externalInstanceMethod(#CALayer, "shadowRadius") = Float;
override externalInstanceMethod(#CALayer, "setShadowRadius:") = Void, Float;
override externalInstanceMethod(#CALayer, "shadowPath") = CGPathRef;
override externalInstanceMethod(#CALayer, "setShadowPath:") = Void, CGPathRef;
override externalInstanceMethod(#CALayer, "actions") = NSDictionary;
override externalInstanceMethod(#CALayer, "setActions:") = Void, NSDictionary;
override externalInstanceMethod(#CALayer, "name") = NSString;
override externalInstanceMethod(#CALayer, "setName:") = Void, NSString;
override externalInstanceMethod(#CALayer, "delegate") = Id;
override externalInstanceMethod(#CALayer, "setDelegate:") = Void, Id;
override externalInstanceMethod(#CALayer, "style") = NSDictionary;
override externalInstanceMethod(#CALayer, "setStyle:") = Void, NSDictionary;
override externalInstanceMethod(#CALayer, "scrollPoint:") = Void, CGPoint;
override externalInstanceMethod(#CALayer, "scrollRectToVisible:") = Void, CGRect;
override externalInstanceMethod(#CALayer, "visibleRect") = CGRect;

record CAMediaTimingFunction = externalClass(NSObject);
override externalInstanceMethod(#CAMediaTimingFunction, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#CAMediaTimingFunction, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#CAMediaTimingFunction, "functionWithName:") = Id, NSString;
override externalClassMethod(#CAMediaTimingFunction, "functionWithControlPoints::::") = Id, Float, Float, Float, Float;
override externalInstanceMethod(#CAMediaTimingFunction, "initWithControlPoints::::") = Id, Float, Float, Float, Float;
override externalInstanceMethod(#CAMediaTimingFunction, "getControlPointAtIndex:values:") = Void, UInt, Pointer[Float];

record CAPropertyAnimation = externalClass(CAAnimation);
override externalClassMethod(#CAPropertyAnimation, "animationWithKeyPath:") = Id, NSString;
override externalInstanceMethod(#CAPropertyAnimation, "keyPath") = NSString;
override externalInstanceMethod(#CAPropertyAnimation, "setKeyPath:") = Void, NSString;
override externalInstanceMethod(#CAPropertyAnimation, "isAdditive") = Bool;
override externalInstanceMethod(#CAPropertyAnimation, "setAdditive:") = Void, Bool;
override externalInstanceMethod(#CAPropertyAnimation, "isCumulative") = Bool;
override externalInstanceMethod(#CAPropertyAnimation, "setCumulative:") = Void, Bool;
override externalInstanceMethod(#CAPropertyAnimation, "valueFunction") = CAValueFunction;
override externalInstanceMethod(#CAPropertyAnimation, "setValueFunction:") = Void, CAValueFunction;

record CAReplicatorLayer = externalClass(CALayer);
override externalInstanceMethod(#CAReplicatorLayer, "instanceCount") = Int;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceCount:") = Void, Int;
override externalInstanceMethod(#CAReplicatorLayer, "preservesDepth") = Bool;
override externalInstanceMethod(#CAReplicatorLayer, "setPreservesDepth:") = Void, Bool;
override externalInstanceMethod(#CAReplicatorLayer, "instanceDelay") = Double;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceDelay:") = Void, Double;
override externalInstanceMethod(#CAReplicatorLayer, "instanceTransform") = CATransform3D;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceTransform:") = Void, CATransform3D;
override externalInstanceMethod(#CAReplicatorLayer, "instanceColor") = CGColorRef;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceColor:") = Void, CGColorRef;
override externalInstanceMethod(#CAReplicatorLayer, "instanceRedOffset") = Float;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceRedOffset:") = Void, Float;
override externalInstanceMethod(#CAReplicatorLayer, "instanceGreenOffset") = Float;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceGreenOffset:") = Void, Float;
override externalInstanceMethod(#CAReplicatorLayer, "instanceBlueOffset") = Float;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceBlueOffset:") = Void, Float;
override externalInstanceMethod(#CAReplicatorLayer, "instanceAlphaOffset") = Float;
override externalInstanceMethod(#CAReplicatorLayer, "setInstanceAlphaOffset:") = Void, Float;

record CAScrollLayer = externalClass(CALayer);
override externalInstanceMethod(#CAScrollLayer, "scrollToPoint:") = Void, CGPoint;
override externalInstanceMethod(#CAScrollLayer, "scrollToRect:") = Void, CGRect;
override externalInstanceMethod(#CAScrollLayer, "scrollMode") = NSString;
override externalInstanceMethod(#CAScrollLayer, "setScrollMode:") = Void, NSString;

record CAShapeLayer = externalClass(CALayer);
override externalInstanceMethod(#CAShapeLayer, "path") = CGPathRef;
override externalInstanceMethod(#CAShapeLayer, "setPath:") = Void, CGPathRef;
override externalInstanceMethod(#CAShapeLayer, "fillColor") = CGColorRef;
override externalInstanceMethod(#CAShapeLayer, "setFillColor:") = Void, CGColorRef;
override externalInstanceMethod(#CAShapeLayer, "fillRule") = NSString;
override externalInstanceMethod(#CAShapeLayer, "setFillRule:") = Void, NSString;
override externalInstanceMethod(#CAShapeLayer, "strokeColor") = CGColorRef;
override externalInstanceMethod(#CAShapeLayer, "setStrokeColor:") = Void, CGColorRef;
override externalInstanceMethod(#CAShapeLayer, "lineWidth") = Float;
override externalInstanceMethod(#CAShapeLayer, "setLineWidth:") = Void, Float;
override externalInstanceMethod(#CAShapeLayer, "miterLimit") = Float;
override externalInstanceMethod(#CAShapeLayer, "setMiterLimit:") = Void, Float;
override externalInstanceMethod(#CAShapeLayer, "lineCap") = NSString;
override externalInstanceMethod(#CAShapeLayer, "setLineCap:") = Void, NSString;
override externalInstanceMethod(#CAShapeLayer, "lineJoin") = NSString;
override externalInstanceMethod(#CAShapeLayer, "setLineJoin:") = Void, NSString;
override externalInstanceMethod(#CAShapeLayer, "lineDashPhase") = Float;
override externalInstanceMethod(#CAShapeLayer, "setLineDashPhase:") = Void, Float;
override externalInstanceMethod(#CAShapeLayer, "lineDashPattern") = NSArray;
override externalInstanceMethod(#CAShapeLayer, "setLineDashPattern:") = Void, NSArray;

record CATextLayer = externalClass(CALayer);
override externalInstanceMethod(#CATextLayer, "string") = Id;
override externalInstanceMethod(#CATextLayer, "setString:") = Void, Id;
override externalInstanceMethod(#CATextLayer, "font") = CFTypeRef;
override externalInstanceMethod(#CATextLayer, "setFont:") = Void, CFTypeRef;
override externalInstanceMethod(#CATextLayer, "fontSize") = Float;
override externalInstanceMethod(#CATextLayer, "setFontSize:") = Void, Float;
override externalInstanceMethod(#CATextLayer, "foregroundColor") = CGColorRef;
override externalInstanceMethod(#CATextLayer, "setForegroundColor:") = Void, CGColorRef;
override externalInstanceMethod(#CATextLayer, "isWrapped") = Bool;
override externalInstanceMethod(#CATextLayer, "setWrapped:") = Void, Bool;
override externalInstanceMethod(#CATextLayer, "truncationMode") = NSString;
override externalInstanceMethod(#CATextLayer, "setTruncationMode:") = Void, NSString;
override externalInstanceMethod(#CATextLayer, "alignmentMode") = NSString;
override externalInstanceMethod(#CATextLayer, "setAlignmentMode:") = Void, NSString;

record CATiledLayer = externalClass(CALayer);
override externalClassMethod(#CATiledLayer, "fadeDuration") = Double;
override externalInstanceMethod(#CATiledLayer, "levelsOfDetail") = UInt;
override externalInstanceMethod(#CATiledLayer, "setLevelsOfDetail:") = Void, UInt;
override externalInstanceMethod(#CATiledLayer, "levelsOfDetailBias") = UInt;
override externalInstanceMethod(#CATiledLayer, "setLevelsOfDetailBias:") = Void, UInt;
override externalInstanceMethod(#CATiledLayer, "tileSize") = CGSize;
override externalInstanceMethod(#CATiledLayer, "setTileSize:") = Void, CGSize;

record CATransaction = externalClass(NSObject);
override externalClassMethod(#CATransaction, "begin") = Void;
override externalClassMethod(#CATransaction, "commit") = Void;
override externalClassMethod(#CATransaction, "flush") = Void;
override externalClassMethod(#CATransaction, "lock") = Void;
override externalClassMethod(#CATransaction, "unlock") = Void;
override externalClassMethod(#CATransaction, "animationDuration") = Double;
override externalClassMethod(#CATransaction, "setAnimationDuration:") = Void, Double;
override externalClassMethod(#CATransaction, "animationTimingFunction") = CAMediaTimingFunction;
override externalClassMethod(#CATransaction, "setAnimationTimingFunction:") = Void, CAMediaTimingFunction;
override externalClassMethod(#CATransaction, "disableActions") = Bool;
override externalClassMethod(#CATransaction, "setDisableActions:") = Void, Bool;
override externalClassMethod(#CATransaction, "completionBlock") = UnknownType;
override externalClassMethod(#CATransaction, "setCompletionBlock:") = Void, UnknownType;
override externalClassMethod(#CATransaction, "valueForKey:") = Id, NSString;
override externalClassMethod(#CATransaction, "setValue:forKey:") = Void, Id, NSString;

record CATransformLayer = externalClass(CALayer);

record CATransition = externalClass(CAAnimation);
override externalInstanceMethod(#CATransition, "type") = NSString;
override externalInstanceMethod(#CATransition, "setType:") = Void, NSString;
override externalInstanceMethod(#CATransition, "subtype") = NSString;
override externalInstanceMethod(#CATransition, "setSubtype:") = Void, NSString;
override externalInstanceMethod(#CATransition, "startProgress") = Float;
override externalInstanceMethod(#CATransition, "setStartProgress:") = Void, Float;
override externalInstanceMethod(#CATransition, "endProgress") = Float;
override externalInstanceMethod(#CATransition, "setEndProgress:") = Void, Float;
override externalInstanceMethod(#CATransition, "filter") = Id;
override externalInstanceMethod(#CATransition, "setFilter:") = Void, Id;

record CAValueFunction = externalClass(NSObject);
override externalInstanceMethod(#CAValueFunction, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#CAValueFunction, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#CAValueFunction, "functionWithName:") = Id, NSString;
override externalInstanceMethod(#CAValueFunction, "name") = NSString;

override externalInstanceMethod(#NSObject, "displayLayer:") = Void, CALayer;
override externalInstanceMethod(#NSObject, "drawLayer:inContext:") = Void, CALayer, CGContextRef;
override externalInstanceMethod(#NSObject, "layoutSublayersOfLayer:") = Void, CALayer;
override externalInstanceMethod(#NSObject, "actionForLayer:forKey:") = Id, CALayer, NSString;
override externalInstanceMethod(#NSObject, "animationDidStart:") = Void, CAAnimation;
override externalInstanceMethod(#NSObject, "animationDidStop:finished:") = Void, CAAnimation, Bool;

override externalClassMethod(#NSValue, "valueWithCATransform3D:") = NSValue, CATransform3D;
override externalInstanceMethod(#NSValue, "CATransform3DValue") = CATransform3D;


external CACurrentMediaTime() : Double;

record Struct_CATransform3D (
    m11 : Float,
    m12 : Float,
    m13 : Float,
    m14 : Float,
    m21 : Float,
    m22 : Float,
    m23 : Float,
    m24 : Float,
    m31 : Float,
    m32 : Float,
    m33 : Float,
    m34 : Float,
    m41 : Float,
    m42 : Float,
    m43 : Float,
    m44 : Float,
);

alias CATransform3D = Struct_CATransform3D;

external CATransform3DIdentity : CATransform3D;

external CATransform3DIsIdentity(
    t : CATransform3D) : Bool;

external CATransform3DEqualToTransform(
    a : CATransform3D,
    b : CATransform3D) : Bool;

external CATransform3DMakeTranslation(
    tx : Float,
    ty : Float,
    tz : Float) : CATransform3D;

external CATransform3DMakeScale(
    sx : Float,
    sy : Float,
    sz : Float) : CATransform3D;

external CATransform3DMakeRotation(
    angle : Float,
    x : Float,
    y : Float,
    z : Float) : CATransform3D;

external CATransform3DTranslate(
    t : CATransform3D,
    tx : Float,
    ty : Float,
    tz : Float) : CATransform3D;

external CATransform3DScale(
    t : CATransform3D,
    sx : Float,
    sy : Float,
    sz : Float) : CATransform3D;

external CATransform3DRotate(
    t : CATransform3D,
    angle : Float,
    x : Float,
    y : Float,
    z : Float) : CATransform3D;

external CATransform3DConcat(
    a : CATransform3D,
    b : CATransform3D) : CATransform3D;

external CATransform3DInvert(
    t : CATransform3D) : CATransform3D;

external CATransform3DMakeAffineTransform(
    m : CGAffineTransform) : CATransform3D;

external CATransform3DIsAffine(
    t : CATransform3D) : Bool;

external CATransform3DGetAffineTransform(
    t : CATransform3D) : CGAffineTransform;

external kCAFillModeForwards : NSString;

external kCAFillModeBackwards : NSString;

external kCAFillModeBoth : NSString;

external kCAFillModeRemoved : NSString;

external kCAFillModeFrozen : NSString;

alias kCALayerLeftEdge = 1;
alias kCALayerRightEdge = 2;
alias kCALayerBottomEdge = 4;
alias kCALayerTopEdge = 8;

external kCAGravityCenter : NSString;

external kCAGravityTop : NSString;

external kCAGravityBottom : NSString;

external kCAGravityLeft : NSString;

external kCAGravityRight : NSString;

external kCAGravityTopLeft : NSString;

external kCAGravityTopRight : NSString;

external kCAGravityBottomLeft : NSString;

external kCAGravityBottomRight : NSString;

external kCAGravityResize : NSString;

external kCAGravityResizeAspect : NSString;

external kCAGravityResizeAspectFill : NSString;

external kCAFilterNearest : NSString;

external kCAFilterLinear : NSString;

external kCAFilterTrilinear : NSString;

external kCAOnOrderIn : NSString;

external kCAOnOrderOut : NSString;

external kCATransition : NSString;

external kCAAnimationLinear : NSString;

external kCAAnimationDiscrete : NSString;

external kCAAnimationPaced : NSString;

external kCAAnimationCubic : NSString;

external kCAAnimationCubicPaced : NSString;

external kCAAnimationRotateAuto : NSString;

external kCAAnimationRotateAutoReverse : NSString;

external kCATransitionFade : NSString;

external kCATransitionMoveIn : NSString;

external kCATransitionPush : NSString;

external kCATransitionReveal : NSString;

external kCATransitionFromRight : NSString;

external kCATransitionFromLeft : NSString;

external kCATransitionFromTop : NSString;

external kCATransitionFromBottom : NSString;

external kCAGradientLayerAxial : NSString;

external kCAMediaTimingFunctionLinear : NSString;

external kCAMediaTimingFunctionEaseIn : NSString;

external kCAMediaTimingFunctionEaseOut : NSString;

external kCAMediaTimingFunctionEaseInEaseOut : NSString;

external kCAMediaTimingFunctionDefault : NSString;

external kCAScrollNone : NSString;

external kCAScrollVertically : NSString;

external kCAScrollHorizontally : NSString;

external kCAScrollBoth : NSString;

external kCAFillRuleNonZero : NSString;

external kCAFillRuleEvenOdd : NSString;

external kCALineJoinMiter : NSString;

external kCALineJoinRound : NSString;

external kCALineJoinBevel : NSString;

external kCALineCapButt : NSString;

external kCALineCapRound : NSString;

external kCALineCapSquare : NSString;

external kCATruncationNone : NSString;

external kCATruncationStart : NSString;

external kCATruncationEnd : NSString;

external kCATruncationMiddle : NSString;

external kCAAlignmentNatural : NSString;

external kCAAlignmentLeft : NSString;

external kCAAlignmentRight : NSString;

external kCAAlignmentCenter : NSString;

external kCAAlignmentJustified : NSString;

external kCATransactionAnimationDuration : NSString;

external kCATransactionDisableActions : NSString;

external kCATransactionAnimationTimingFunction : NSString;

external kCATransactionCompletionBlock : NSString;

external kCAValueFunctionRotateX : NSString;

external kCAValueFunctionRotateY : NSString;

external kCAValueFunctionRotateZ : NSString;

external kCAValueFunctionScale : NSString;

external kCAValueFunctionScaleX : NSString;

external kCAValueFunctionScaleY : NSString;

external kCAValueFunctionScaleZ : NSString;

external kCAValueFunctionTranslate : NSString;

external kCAValueFunctionTranslateX : NSString;

external kCAValueFunctionTranslateY : NSString;

external kCAValueFunctionTranslateZ : NSString;
