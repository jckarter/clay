// Automatically generated by clay-bindgen
// language: objective-c

import cocoa.objc.*;

import libc.*;
import cocoa.corefoundation.*;
import cocoa.applicationservices.*;
import cocoa.foundation.*;
import cocoa.quartzcore.*;
import cocoa.appkit.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


override selector("AMSymbol") = NSString;
override selector("CATransform3DValue") = CATransform3D;
override selector("CGColorSpace") = CGColorSpaceRef;
override selector("CGEvent") = CGEventRef;
override selector("CGImage") = CGImageRef;
override selector("CGImageForProposedRect:context:hints:") = CGImageRef, Pointer[NSRect], NSGraphicsContext, NSDictionary;
override selector("CGLContextObj") = RawPointer;
override selector("CGLPBufferObj") = RawPointer;
override selector("CGLPixelFormatObj") = RawPointer;
override selector("CIContext") = CIContext;
override selector("CIImage") = CIImage;
override selector("DOMDocument") = DOMDocument;
override selector("DTD") = NSXMLDTD;
override selector("DTDKind") = CULong;
override selector("DTDNodeWithXMLString:") = Id, NSString;
override selector("EPSOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
override selector("EPSOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
override selector("EPSOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
override selector("EPSRepresentation") = NSData;
override selector("HTTPBody") = NSData;
override selector("HTTPBodyStream") = NSInputStream;
override selector("HTTPMethod") = NSString;
override selector("HTTPShouldHandleCookies") = Bool;
override selector("IBeamCursor") = NSCursor;
override selector("ICCProfileData") = NSData;
override selector("ISOCountryCodes") = NSArray;
override selector("ISOCurrencyCodes") = NSArray;
override selector("ISOLanguageCodes") = NSArray;
override selector("JSObject") = JSObjectRef;
override selector("MIMEType") = NSString;
override selector("MIMETypesShownAsHTML") = NSArray;
override selector("PDFOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
override selector("PDFOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
override selector("PDFOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
override selector("PDFRepresentation") = NSData;
override selector("PICTRepresentation") = NSData;
override selector("PMPageFormat") = RawPointer;
override selector("PMPrintSession") = RawPointer;
override selector("PMPrintSettings") = RawPointer;
override selector("PMSymbol") = NSString;
override selector("QTMovie") = QTMovie;
override selector("RTFDFileWrapperFromRange:documentAttributes:") = NSFileWrapper, NSRange, NSDictionary;
override selector("RTFDFromRange:") = NSData, NSRange;
override selector("RTFDFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override selector("RTFFromRange:") = NSData, NSRange;
override selector("RTFFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override selector("TIFFRepresentation") = NSData;
override selector("TIFFRepresentationOfImageRepsInArray:") = NSData, NSArray;
override selector("TIFFRepresentationOfImageRepsInArray:usingCompression:factor:") = NSData, NSArray, CULong, Float;
override selector("TIFFRepresentationUsingCompression:factor:") = NSData, CULong, Float;
override selector("TXTRecordData") = NSData;
override selector("UIDelegate") = Id;
override selector("URI") = NSString;
override selector("URIRepresentation") = NSURL;
override selector("URL") = Id;
override selector("URL:resourceDataDidBecomeAvailable:") = Void, NSURL, NSData;
override selector("URL:resourceDidFailLoadingWithReason:") = Void, NSURL, NSString;
override selector("URLAtIndex:effectiveRange:") = NSURL, CULong, NSRangePointer;
override selector("URLByAppendingPathComponent:") = NSURL, NSString;
override selector("URLByAppendingPathExtension:") = NSURL, NSString;
override selector("URLByDeletingLastPathComponent") = NSURL;
override selector("URLByDeletingPathExtension") = NSURL;
override selector("URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, CULong, NSURL, Pointer[Bool], Pointer[NSError];
override selector("URLByResolvingSymlinksInPath") = NSURL;
override selector("URLByStandardizingPath") = NSURL;
override selector("URLForApplicationToOpenURL:") = NSURL, NSURL;
override selector("URLForApplicationWithBundleIdentifier:") = NSURL, NSString;
override selector("URLForAuxiliaryExecutable:") = NSURL, NSString;
override selector("URLForDirectory:inDomain:appropriateForURL:create:error:") = NSURL, CULong, CULong, NSURL, Bool, Pointer[NSError];
override selector("URLForImageResource:") = NSURL, NSString;
override selector("URLForKey:") = NSURL, NSString;
override selector("URLForPersistentStore:") = NSURL, NSPersistentStore;
override selector("URLForResource:withExtension:") = NSURL, NSString, NSString;
override selector("URLForResource:withExtension:subdirectory:") = NSURL, NSString, NSString, NSString;
override selector("URLForResource:withExtension:subdirectory:inBundleWithURL:") = NSURL, NSString, NSString, NSString, NSURL;
override selector("URLForResource:withExtension:subdirectory:localization:") = NSURL, NSString, NSString, NSString, NSString;
override selector("URLFromPasteboard:") = NSURL, NSPasteboard;
override selector("URLHandle:resourceDataDidBecomeAvailable:") = Void, NSURLHandle, NSData;
override selector("URLHandle:resourceDidFailLoadingWithReason:") = Void, NSURLHandle, NSString;
override selector("URLHandleClassForURL:") = Id, NSURL;
override selector("URLHandleResourceDidBeginLoading:") = Void, NSURLHandle;
override selector("URLHandleResourceDidCancelLoading:") = Void, NSURLHandle;
override selector("URLHandleResourceDidFinishLoading:") = Void, NSURLHandle;
override selector("URLHandleUsingCache:") = NSURLHandle, Bool;
override selector("URLProtocol:cachedResponseIsValid:") = Void, NSURLProtocol, NSCachedURLResponse;
override selector("URLProtocol:didCancelAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
override selector("URLProtocol:didFailWithError:") = Void, NSURLProtocol, NSError;
override selector("URLProtocol:didLoadData:") = Void, NSURLProtocol, NSData;
override selector("URLProtocol:didReceiveAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
override selector("URLProtocol:didReceiveResponse:cacheStoragePolicy:") = Void, NSURLProtocol, NSURLResponse, CULong;
override selector("URLProtocol:wasRedirectedToRequest:redirectResponse:") = Void, NSURLProtocol, NSURLRequest, NSURLResponse;
override selector("URLProtocolDidFinishLoading:") = Void, NSURLProtocol;
override selector("URLResourceDidCancelLoading:") = Void, NSURL;
override selector("URLResourceDidFinishLoading:") = Void, NSURL;
override selector("URLString") = NSString;
override selector("URLTitleFromPasteboard:") = NSString, NSPasteboard;
override selector("URLWithAttributeString:") = NSURL, NSString;
override selector("URLWithString:") = Id, NSString;
override selector("URLWithString:relativeToURL:") = Id, NSString, NSURL;
override selector("URLs") = NSArray;
override selector("URLsForDirectory:inDomains:") = NSArray, CULong, CULong;
override selector("URLsForResourcesWithExtension:subdirectory:") = NSArray, NSString, NSString;
override selector("URLsForResourcesWithExtension:subdirectory:inBundleWithURL:") = NSArray, NSString, NSString, NSURL;
override selector("URLsForResourcesWithExtension:subdirectory:localization:") = NSArray, NSString, NSString, NSString;
override selector("URLsFromRunningOpenPanel") = NSArray;
override selector("UTF8String") = Pointer[CChar];
override selector("W") = Double;
override selector("X") = Double;
override selector("XMLData") = NSData;
override selector("XMLDataWithOptions:") = NSData, CULong;
override selector("XMLString") = NSString;
override selector("XMLStringWithOptions:") = NSString, CULong;
override selector("XPath") = NSString;
override selector("Y") = Double;
override selector("Z") = Double;
override selector("aLink") = NSString;
override selector("abbr") = NSString;
override selector("abbreviation") = NSString;
override selector("abbreviationDictionary") = NSDictionary;
override selector("abbreviationForDate:") = NSString, NSDate;
override selector("abortEditing") = Bool;
override selector("abortModal") = Void;
override selector("abortParsing") = Void;
override selector("absoluteImageURL") = NSURL;
override selector("absoluteLinkURL") = NSURL;
override selector("absolutePathForAppBundleWithIdentifier:") = NSString, NSString;
override selector("absoluteString") = NSString;
override selector("absoluteURL") = NSURL;
override selector("absoluteX") = CLong;
override selector("absoluteY") = CLong;
override selector("absoluteZ") = CLong;
override selector("accept") = NSString;
override selector("acceptCharset") = NSString;
override selector("acceptConnectionInBackgroundAndNotify") = Void;
override selector("acceptConnectionInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("acceptInputForMode:beforeDate:") = Void, NSString, NSDate;
override selector("acceptNode:") = Short, DOMNode;
override selector("acceptableDragTypes") = NSArray;
override selector("acceptsArrowKeys") = Bool;
override selector("acceptsBinary") = Bool;
override selector("acceptsFirstMouse:") = Bool, NSEvent;
override selector("acceptsFirstResponder") = Bool;
override selector("acceptsGlyphInfo") = Bool;
override selector("acceptsMouseMovedEvents") = Bool;
override selector("acceptsTouchEvents") = Bool;
override selector("accessInstanceVariablesDirectly") = Bool;
override selector("accessKey") = NSString;
override selector("accessibilityActionDescription:") = NSString, NSString;
override selector("accessibilityActionNames") = NSArray;
override selector("accessibilityArrayAttributeCount:") = CULong, NSString;
override selector("accessibilityArrayAttributeValues:index:maxCount:") = NSArray, NSString, CULong, CULong;
override selector("accessibilityAttributeNames") = NSArray;
override selector("accessibilityAttributeValue:") = Id, NSString;
override selector("accessibilityAttributeValue:forParameter:") = Id, NSString, Id;
override selector("accessibilityDescription") = NSString;
override selector("accessibilityFocusedUIElement") = Id;
override selector("accessibilityHitTest:") = Id, NSPoint;
override selector("accessibilityIndexOfChild:") = CULong, Id;
override selector("accessibilityIsAttributeSettable:") = Bool, NSString;
override selector("accessibilityIsIgnored") = Bool;
override selector("accessibilityParameterizedAttributeNames") = NSArray;
override selector("accessibilityPerformAction:") = Void, NSString;
override selector("accessibilitySetOverrideValue:forAttribute:") = Bool, Id, NSString;
override selector("accessibilitySetValue:forAttribute:") = Void, Id, NSString;
override selector("accessoryControllers") = NSArray;
override selector("accessoryView") = NSView;
override selector("acquireFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]],CChar],[RawPointer]];
override selector("action") = NSString;
override selector("actionForControlCharacterAtIndex:") = CULong, CULong;
override selector("actionForKey:") = Id, NSString;
override selector("actionForLayer:forKey:") = Id, CALayer, NSString;
override selector("actions") = NSDictionary;
override selector("activate") = Void;
override selector("activate:") = Void, Bool;
override selector("activateContextHelpMode:") = Void, Id;
override selector("activateFileViewerSelectingURLs:") = Void, NSArray;
override selector("activateIgnoringOtherApps:") = Void, Bool;
override selector("activateWithOptions:") = Bool, CULong;
override selector("activationPolicy") = CLong;
override selector("activeApplication") = NSDictionary;
override selector("activeConversationChanged:toNewConversation:") = Void, Id, CLong;
override selector("activeConversationWillChange:fromOldConversation:") = Void, Id, CLong;
override selector("activeElement") = DOMElement;
override selector("activeProcessorCount") = CULong;
override selector("add:") = Void, Id;
override selector("add::") = Void, DOMHTMLElement, DOMHTMLElement;
override selector("add:before:") = Void, DOMHTMLElement, DOMHTMLElement;
override selector("add:index:") = Void, DOMHTMLOptionElement, UInt;
override selector("addAccessoryController:") = Void, NSViewController;
override selector("addAnimation:forKey:") = Void, CAAnimation, NSString;
override selector("addAttribute:") = Void, NSXMLNode;
override selector("addAttribute:value:range:") = Void, NSString, Id, NSRange;
override selector("addAttributes:range:") = Void, NSDictionary, NSRange;
override selector("addButtonWithTitle:") = NSButton, NSString;
override selector("addCacheNodes:") = Void, NSSet;
override selector("addCharactersInRange:") = Void, NSRange;
override selector("addCharactersInString:") = Void, NSString;
override selector("addChild:") = Void, NSXMLNode;
override selector("addChildWindow:ordered:") = Void, NSWindow, CLong;
override selector("addClient:") = Void, Id;
override selector("addClip") = Void;
override selector("addCollection:options:") = Bool, NSString, CLong;
override selector("addColumn") = Void;
override selector("addColumnWithCells:") = Void, NSArray;
override selector("addConnection:toRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
override selector("addCursorRect:cursor:") = Void, NSRect, NSCursor;
override selector("addDependency:") = Void, NSOperation;
override selector("addDocument:") = Void, NSDocument;
override selector("addEntriesFromDictionary:") = Void, NSDictionary;
override selector("addEntry:") = NSFormCell, NSString;
override selector("addEventListener:::") = Void, NSString, Id, Bool;
override selector("addEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
override selector("addExecutionBlock:") = Void, UnknownType;
override selector("addFileWithPath:") = NSString, NSString;
override selector("addFileWrapper:") = NSString, NSFileWrapper;
override selector("addFontDescriptors:toCollection:") = Void, NSArray, NSString;
override selector("addFontTrait:") = Void, Id;
override selector("addGlobalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
override selector("addIndex:") = Void, CULong;
override selector("addIndexes:") = Void, NSIndexSet;
override selector("addIndexesInRange:") = Void, NSRange;
override selector("addItem:") = Void, WebHistoryItem;
override selector("addItemWithObjectValue:") = Void, Id;
override selector("addItemWithTitle:") = Void, NSString;
override selector("addItemWithTitle:action:keyEquivalent:") = NSMenuItem, NSString, SelectorHandle, NSString;
override selector("addItems:") = Void, NSArray;
override selector("addItemsWithObjectValues:") = Void, NSArray;
override selector("addItemsWithTitles:") = Void, NSArray;
override selector("addLayoutManager:") = Void, NSLayoutManager;
override selector("addLocalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
override selector("addMarker:") = Void, NSRulerMarker;
override selector("addNamespace:") = Void, NSXMLNode;
override selector("addObject:") = Void, Id;
override selector("addObjects:") = Void, NSArray;
override selector("addObjectsFromArray:") = Void, NSArray;
override selector("addObserver:forKeyPath:options:context:") = Void, NSObject, NSString, CULong, RawPointer;
override selector("addObserver:selector:name:object:") = Void, Id, SelectorHandle, NSString, Id;
override selector("addObserver:selector:name:object:suspensionBehavior:") = Void, Id, SelectorHandle, NSString, NSString, CULong;
override selector("addObserver:toObjectsAtIndexes:forKeyPath:options:context:") = Void, NSObject, NSIndexSet, NSString, CULong, RawPointer;
override selector("addObserverForName:object:queue:usingBlock:") = Id, NSString, Id, NSOperationQueue, UnknownType;
override selector("addOperation:") = Void, NSOperation;
override selector("addOperationWithBlock:") = Void, UnknownType;
override selector("addOperations:waitUntilFinished:") = Void, NSArray, Bool;
override selector("addPersistentStoreWithType:configuration:URL:options:error:") = NSPersistentStore, NSString, NSString, NSURL, NSDictionary, Pointer[NSError];
override selector("addPointer:") = Void, RawPointer;
override selector("addPort:forMode:") = Void, NSPort, NSString;
override selector("addProgressMark:") = Void, Float;
override selector("addRegularFileWithContents:preferredFilename:") = NSString, NSData, NSString;
override selector("addRepresentation:") = Void, NSImageRep;
override selector("addRepresentations:") = Void, NSArray;
override selector("addRequestMode:") = Void, NSString;
override selector("addRow") = Void;
override selector("addRow:") = Void, Id;
override selector("addRowWithCells:") = Void, NSArray;
override selector("addRule:style:index:") = Int, NSString, NSString, UInt;
override selector("addRunLoop:") = Void, NSRunLoop;
override selector("addSelectedObjects:") = Bool, NSArray;
override selector("addSelectionIndexPaths:") = Bool, NSArray;
override selector("addSelectionIndexes:") = Bool, NSIndexSet;
override selector("addSpeechDictionary:") = Void, NSDictionary;
override selector("addSublayer:") = Void, CALayer;
override selector("addSubresource:") = Void, WebResource;
override selector("addSubview:") = Void, NSView;
override selector("addSubview:positioned:relativeTo:") = Void, NSView, CLong, NSView;
override selector("addSuiteNamed:") = Void, NSString;
override selector("addSymbolicLinkWithDestination:preferredFilename:") = NSString, NSString, NSString;
override selector("addTabStop:") = Void, NSTextTab;
override selector("addTabViewItem:") = Void, NSTabViewItem;
override selector("addTableColumn:") = Void, NSTableColumn;
override selector("addTemporaryAttribute:value:forCharacterRange:") = Void, NSString, Id, NSRange;
override selector("addTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
override selector("addTextContainer:") = Void, NSTextContainer;
override selector("addTimeInterval:") = Id, Double;
override selector("addTimer:forMode:") = Void, NSTimer, NSString;
override selector("addToolTipRect:owner:userData:") = CLong, NSRect, Id, RawPointer;
override selector("addTrackingArea:") = Void, NSTrackingArea;
override selector("addTrackingRect:owner:userData:assumeInside:") = CLong, NSRect, Id, RawPointer, Bool;
override selector("addTypes:owner:") = CLong, NSArray, Id;
override selector("addValue:forHTTPHeaderField:") = Void, NSString, NSString;
override selector("addWindowController:") = Void, NSWindowController;
override selector("addWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
override selector("address") = Id;
override selector("addressCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
override selector("addressComponents") = NSDictionary;
override selector("addresses") = NSArray;
override selector("adjustPageHeightNew:top:bottom:limit:") = Void, Pointer[Double], Double, Double, Double;
override selector("adjustPageWidthNew:left:right:limit:") = Void, Pointer[Double], Double, Double, Double;
override selector("adjustScroll:") = NSRect, NSRect;
override selector("adjustSubviews") = Void;
override selector("adobeRGB1998ColorSpace") = NSColorSpace;
override selector("adoptNode:") = DOMNode, DOMNode;
override selector("advancementForGlyph:") = NSSize, UInt;
override selector("aeDesc") = Pointer[AEDesc];
override selector("aeteResource:") = NSData, NSString;
override selector("affectedStores") = NSArray;
override selector("affineTransform") = CGAffineTransform;
override selector("alertShowHelp:") = Bool, NSAlert;
override selector("alertStyle") = CULong;
override selector("alertWithError:") = NSAlert, NSError;
override varargSelector("alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:") = NSAlert, NSString, NSString, NSString, NSString, NSString;
override selector("align") = NSString;
override selector("alignCenter:") = Void, Id;
override selector("alignJustified:") = Void, Id;
override selector("alignLeft:") = Void, Id;
override selector("alignRight:") = Void, Id;
override selector("alignment") = CULong;
override selector("alignmentRect") = NSRect;
override selector("alinkColor") = NSString;
override selector("allBundles") = NSArray;
override selector("allConnections") = NSArray;
override selector("allCredentials") = NSDictionary;
override selector("allFrameworks") = NSArray;
override selector("allHTTPHeaderFields") = NSDictionary;
override selector("allHeaderFields") = NSDictionary;
override selector("allKeys") = NSArray;
override selector("allKeysForObject:") = NSArray, Id;
override selector("allLanguages") = NSArray;
override selector("allObjects") = NSArray;
override selector("allScripts") = NSArray;
override selector("allValues") = NSArray;
override selector("alloc") = Id;
override selector("allocWithZone:") = Id, Pointer[NSZone];
override selector("allocateGState") = Void;
override selector("allowedFileTypes") = NSArray;
override selector("allowedInputSourceLocales") = NSArray;
override selector("allowedTypes") = NSArray;
override selector("allowsAnimatedImageLooping") = Bool;
override selector("allowsAnimatedImages") = Bool;
override selector("allowsBranchSelection") = Bool;
override selector("allowsColumnReordering") = Bool;
override selector("allowsColumnResizing") = Bool;
override selector("allowsColumnSelection") = Bool;
override selector("allowsConcurrentViewDrawing") = Bool;
override selector("allowsContextMenuPlugIns") = Bool;
override selector("allowsCutCopyPaste") = Bool;
override selector("allowsDocumentBackgroundColorChange") = Bool;
override selector("allowsDuplicatesInToolbar") = Bool;
override selector("allowsEditingTextAttributes") = Bool;
override selector("allowsEmptySelection") = Bool;
override selector("allowsFloats") = Bool;
override selector("allowsImageEditing") = Bool;
override selector("allowsKeyedCoding") = Bool;
override selector("allowsMixedState") = Bool;
override selector("allowsMultipleSelection") = Bool;
override selector("allowsNaturalLanguage") = Bool;
override selector("allowsNonContiguousLayout") = Bool;
override selector("allowsOtherFileTypes") = Bool;
override selector("allowsReverseTransformation") = Bool;
override selector("allowsScrolling") = Bool;
override selector("allowsTickMarkValuesOnly") = Bool;
override selector("allowsToolTipsWhenApplicationIsInactive") = Bool;
override selector("allowsTruncatedLabels") = Bool;
override selector("allowsTypeSelect") = Bool;
override selector("allowsUndo") = Bool;
override selector("allowsUserCustomization") = Bool;
override selector("alpha") = DOMCSSPrimitiveValue;
override selector("alphaComponent") = Double;
override selector("alphaControlAddedOrRemoved:") = Void, Id;
override selector("alphaValue") = Double;
override selector("alphanumericCharacterSet") = Id;
override selector("alt") = NSString;
override selector("altDisplayString") = NSString;
override selector("altGraphKey") = Bool;
override selector("altIncrementValue") = Double;
override selector("altKey") = Bool;
override selector("alternateImage") = NSImage;
override selector("alternateMnemonic") = NSString;
override selector("alternateMnemonicLocation") = CULong;
override selector("alternateSelectedControlColor") = NSColor;
override selector("alternateSelectedControlTextColor") = NSColor;
override selector("alternateTitle") = NSString;
override selector("altersStateOfSelectedItem") = Bool;
override selector("alwaysShowsDecimalSeparator") = Bool;
override selector("alwaysUsesMultipleValuesMarker") = Bool;
override selector("ancestorSharedWithView:") = NSView, NSView;
override selector("anchorPoint") = CGPoint;
override selector("anchorPointZ") = Double;
override selector("anchors") = DOMHTMLCollection;
override selector("andPredicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("animate:") = Void, Id;
override selector("animates") = Bool;
override selector("animation:didReachProgressMark:") = Void, NSAnimation, Float;
override selector("animation:valueForProgress:") = Float, NSAnimation, Float;
override selector("animationBlockingMode") = CULong;
override selector("animationCurve") = CULong;
override selector("animationDelay") = Double;
override selector("animationDidEnd:") = Void, NSAnimation;
override selector("animationDidStop:") = Void, NSAnimation;
override selector("animationForKey:") = Id, NSString;
override selector("animationKeys") = NSArray;
override selector("animationResizeTime:") = Double, NSRect;
override selector("animationShouldStart:") = Bool, NSAnimation;
override selector("animations") = NSDictionary;
override selector("animator") = Id;
override selector("anyObject") = Id;
override selector("appendAttributedString:") = Void, NSAttributedString;
override selector("appendBezierPath:") = Void, NSBezierPath;
override selector("appendBezierPathWithArcFromPoint:toPoint:radius:") = Void, NSPoint, NSPoint, Double;
override selector("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:") = Void, NSPoint, Double, Double, Double;
override selector("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:") = Void, NSPoint, Double, Double, Double, Bool;
override selector("appendBezierPathWithGlyph:inFont:") = Void, UInt, NSFont;
override selector("appendBezierPathWithGlyphs:count:inFont:") = Void, Pointer[UInt], CLong, NSFont;
override selector("appendBezierPathWithOvalInRect:") = Void, NSRect;
override selector("appendBezierPathWithPackedGlyphs:") = Void, Pointer[CChar];
override selector("appendBezierPathWithPoints:count:") = Void, NSPointArray, CLong;
override selector("appendBezierPathWithRect:") = Void, NSRect;
override selector("appendBezierPathWithRoundedRect:xRadius:yRadius:") = Void, NSRect, Double, Double;
override selector("appendBytes:length:") = Void, RawPointer, CULong;
override selector("appendChild:") = DOMNode, DOMNode;
override selector("appendData:") = Void, NSData;
override varargSelector("appendFormat:") = Void, NSString;
override selector("appendMedium:") = Void, NSString;
override selector("appendString:") = Void, NSString;
override selector("appendTransform:") = Void, NSAffineTransform;
override selector("appleEvent") = NSAppleEventDescriptor;
override selector("appleEventClassCode") = UInt;
override selector("appleEventCode") = UInt;
override selector("appleEventCodeForArgumentWithName:") = UInt, NSString;
override selector("appleEventCodeForKey:") = UInt, NSString;
override selector("appleEventCodeForReturnType") = UInt;
override selector("appleEventCodeForSuite:") = UInt, NSString;
override selector("appleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
override selector("appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = NSAppleEventDescriptor, UInt, UInt, NSAppleEventDescriptor, Short, Int;
override selector("applets") = DOMHTMLCollection;
override selector("application:delegateHandlesKey:") = Bool, NSApplication, NSString;
override selector("application:openFile:") = Bool, NSApplication, NSString;
override selector("application:openFileWithoutUI:") = Bool, Id, NSString;
override selector("application:openFiles:") = Void, NSApplication, NSArray;
override selector("application:openTempFile:") = Bool, NSApplication, NSString;
override selector("application:printFile:") = Bool, NSApplication, NSString;
override selector("application:printFiles:") = Void, NSApplication, NSArray;
override selector("application:printFiles:withSettings:showPrintPanels:") = CULong, NSApplication, NSArray, NSDictionary, Bool;
override selector("application:willPresentError:") = NSError, NSApplication, NSError;
override selector("applicationDidBecomeActive:") = Void, NSNotification;
override selector("applicationDidChangeScreenParameters:") = Void, NSNotification;
override selector("applicationDidFinishLaunching:") = Void, NSNotification;
override selector("applicationDidHide:") = Void, NSNotification;
override selector("applicationDidResignActive:") = Void, NSNotification;
override selector("applicationDidUnhide:") = Void, NSNotification;
override selector("applicationDidUpdate:") = Void, NSNotification;
override selector("applicationDockMenu:") = NSMenu, NSApplication;
override selector("applicationIconImage") = NSImage;
override selector("applicationNameForUserAgent") = NSString;
override selector("applicationOpenUntitledFile:") = Bool, NSApplication;
override selector("applicationShouldHandleReopen:hasVisibleWindows:") = Bool, NSApplication, Bool;
override selector("applicationShouldOpenUntitledFile:") = Bool, NSApplication;
override selector("applicationShouldTerminate:") = CULong, NSApplication;
override selector("applicationShouldTerminateAfterLastWindowClosed:") = Bool, NSApplication;
override selector("applicationWillBecomeActive:") = Void, NSNotification;
override selector("applicationWillFinishLaunching:") = Void, NSNotification;
override selector("applicationWillHide:") = Void, NSNotification;
override selector("applicationWillResignActive:") = Void, NSNotification;
override selector("applicationWillTerminate:") = Void, NSNotification;
override selector("applicationWillUnhide:") = Void, NSNotification;
override selector("applicationWillUpdate:") = Void, NSNotification;
override selector("appliesImmediately") = Bool;
override selector("applyFontTraits:range:") = Void, CULong, NSRange;
override selector("applyStyle:") = Void, DOMCSSStyleDeclaration;
override selector("archive") = NSString;
override selector("archiveRootObject:toFile:") = Bool, Id, NSString;
override selector("archivedDataWithRootObject:") = NSData, Id;
override selector("archiver:didEncodeObject:") = Void, NSKeyedArchiver, Id;
override selector("archiver:willEncodeObject:") = Id, NSKeyedArchiver, Id;
override selector("archiver:willReplaceObject:withObject:") = Void, NSKeyedArchiver, Id, Id;
override selector("archiverData") = NSMutableData;
override selector("archiverDidFinish:") = Void, NSKeyedArchiver;
override selector("archiverWillFinish:") = Void, NSKeyedArchiver;
override selector("areCursorRectsEnabled") = Bool;
override selector("arePlugInsEnabled") = Bool;
override selector("areas") = DOMHTMLCollection;
override selector("argumentNames") = NSArray;
override selector("arguments") = Id;
override selector("argumentsRetained") = Bool;
override selector("arrangeInFront:") = Void, Id;
override selector("arrangeObjects:") = NSArray, NSArray;
override selector("arrangedObjects") = Id;
override selector("array") = Id;
override selector("arrayByAddingObject:") = NSArray, Id;
override selector("arrayByAddingObjectsFromArray:") = NSArray, NSArray;
override selector("arrayForKey:") = NSArray, NSString;
override selector("arrayWithArray:") = Id, NSArray;
override selector("arrayWithCapacity:") = Id, CULong;
override selector("arrayWithContentsOfFile:") = Id, NSString;
override selector("arrayWithContentsOfURL:") = Id, NSURL;
override selector("arrayWithObject:") = Id, Id;
override varargSelector("arrayWithObjects:") = Id, Id;
override selector("arrayWithObjects:count:") = Id, Pointer[Id], CULong;
override selector("arrowCursor") = NSCursor;
override selector("arrowPosition") = CULong;
override selector("arrowsPosition") = CULong;
override selector("ascender") = Double;
override selector("ascending") = Bool;
override selector("aspectRatio") = NSSize;
override selector("assignObject:toPersistentStore:") = Void, Id, NSPersistentStore;
override selector("associateSourceInstance:withDestinationInstance:forEntityMapping:") = Void, NSManagedObject, NSManagedObject, NSEntityMapping;
override selector("attachColorList:") = Void, NSColorList;
override selector("attachPopUpWithFrame:inView:") = Void, NSRect, NSView;
override selector("attachedMenu") = NSMenu;
override selector("attachedSheet") = NSWindow;
override selector("attachment") = NSTextAttachment;
override selector("attachmentCell") = Id;
override selector("attachmentSizeForGlyphAtIndex:") = NSSize, CULong;
override selector("attemptRecoveryFromError:optionIndex:") = Bool, NSError, CULong;
override selector("attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:") = Void, NSError, CULong, Id, SelectorHandle, RawPointer;
override selector("attrChange") = UShort;
override selector("attrName") = NSString;
override selector("attribute") = NSString;
override selector("attribute:atIndex:effectiveRange:") = Id, NSString, CULong, NSRangePointer;
override selector("attribute:atIndex:longestEffectiveRange:inRange:") = Id, NSString, CULong, NSRangePointer, NSRange;
override selector("attributeDeclarationForName:elementName:") = NSXMLDTDNode, NSString, NSString;
override selector("attributeDescriptorForKeyword:") = NSAppleEventDescriptor, UInt;
override selector("attributeForLocalName:URI:") = NSXMLNode, NSString, NSString;
override selector("attributeForName:") = NSXMLNode, NSString;
override selector("attributeKeys") = NSArray;
override selector("attributeMappings") = NSArray;
override selector("attributeRuns") = NSArray;
override selector("attributeType") = CULong;
override selector("attributeValueClassName") = NSString;
override selector("attributeWithName:URI:stringValue:") = Id, NSString, NSString, NSString;
override selector("attributeWithName:stringValue:") = Id, NSString, NSString;
override selector("attributedAlternateTitle") = NSAttributedString;
override selector("attributedString") = NSAttributedString;
override selector("attributedStringForNil") = NSAttributedString;
override selector("attributedStringForNotANumber") = NSAttributedString;
override selector("attributedStringForObjectValue:withDefaultAttributes:") = NSAttributedString, Id, NSDictionary;
override selector("attributedStringForZero") = NSAttributedString;
override selector("attributedStringValue") = NSAttributedString;
override selector("attributedStringWithAttachment:") = NSAttributedString, NSTextAttachment;
override selector("attributedSubstringForProposedRange:actualRange:") = NSAttributedString, NSRange, NSRangePointer;
override selector("attributedSubstringFromRange:") = NSAttributedString, NSRange;
override selector("attributedTitle") = NSAttributedString;
override selector("attributes") = Id;
override selector("attributesAtIndex:effectiveRange:") = NSDictionary, CULong, NSRangePointer;
override selector("attributesAtIndex:longestEffectiveRange:inRange:") = NSDictionary, CULong, NSRangePointer, NSRange;
override selector("attributesByName") = NSDictionary;
override selector("attributesForExtraLineFragment") = NSDictionary;
override selector("attributesForVoice:") = NSDictionary, NSString;
override selector("attributesOfFileSystemForPath:error:") = NSDictionary, NSString, Pointer[NSError];
override selector("attributesOfItemAtPath:error:") = NSDictionary, NSString, Pointer[NSError];
override selector("authenticateComponents:withData:") = Bool, NSArray, NSData;
override selector("authenticationDataForComponents:") = NSData, NSArray;
override selector("authenticationMethod") = NSString;
override selector("autoContentAccessingProxy") = Id;
override selector("autoenablesItems") = Bool;
override selector("autofocus") = Bool;
override selector("autohidesScroller") = Bool;
override selector("autohidesScrollers") = Bool;
override selector("automaticRearrangementKeyPaths") = NSArray;
override selector("automaticallyIdentifiesLanguages") = Bool;
override selector("automaticallyNotifiesObserversForKey:") = Bool, NSString;
override selector("automaticallyPreparesContent") = Bool;
override selector("automaticallyRearrangesObjects") = Bool;
override selector("autorecalculatesContentBorderThicknessForEdge:") = Bool, CULong;
override selector("autorecalculatesKeyViewLoop") = Bool;
override selector("autorelease") = Id;
override selector("autorepeat") = Bool;
override selector("autoresizesAllColumnsToFit") = Bool;
override selector("autoresizesOutlineColumn") = Bool;
override selector("autoresizesSubviews") = Bool;
override selector("autoresizingMask") = CULong;
override selector("autoreverses") = Bool;
override selector("autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("autosaveExpandedItems") = Bool;
override selector("autosaveName") = NSString;
override selector("autosaveTableColumns") = Bool;
override selector("autosavedContentsFileURL") = NSURL;
override selector("autosaves") = Bool;
override selector("autosavesConfiguration") = Bool;
override selector("autosavingDelay") = Double;
override selector("autosavingFileType") = NSString;
override selector("autoscroll:") = Bool, NSEvent;
override selector("autosizesCells") = Bool;
override selector("autoupdatingCurrentCalendar") = Id;
override selector("autoupdatingCurrentLocale") = Id;
override selector("autovalidates") = Bool;
override selector("availableColorLists") = NSArray;
override selector("availableColorSpacesWithModel:") = NSArray, CLong;
override selector("availableData") = NSData;
override selector("availableFontFamilies") = NSArray;
override selector("availableFontNamesMatchingFontDescriptor:") = NSArray, NSFontDescriptor;
override selector("availableFontNamesWithTraits:") = NSArray, CULong;
override selector("availableFonts") = NSArray;
override selector("availableLanguages") = NSArray;
override selector("availableLocaleIdentifiers") = NSArray;
override selector("availableMembersOfFontFamily:") = NSArray, NSString;
override selector("availableResourceData") = NSData;
override selector("availableStringEncodings") = Pointer[CULong];
override selector("availableTypeFromArray:") = NSString, NSArray;
override selector("availableVoices") = NSArray;
override selector("avoidsEmptySelection") = Bool;
override selector("awakeAfterUsingCoder:") = Id, NSCoder;
override selector("awakeFromFetch") = Void;
override selector("awakeFromInsert") = Void;
override selector("awakeFromNib") = Void;
override selector("awakeFromSnapshotEvents:") = Void, CULong;
override selector("axis") = NSString;
override selector("azimuth") = NSString;
override selector("backForwardList") = WebBackForwardList;
override selector("backItem") = WebHistoryItem;
override selector("backListCount") = Int;
override selector("backListWithLimit:") = NSArray, Int;
override selector("background") = NSString;
override selector("backgroundAttachment") = NSString;
override selector("backgroundColor") = Id;
override selector("backgroundColors") = NSArray;
override selector("backgroundFilters") = NSArray;
override selector("backgroundImage") = NSString;
override selector("backgroundLayoutEnabled") = Bool;
override selector("backgroundLoadDidFailWithReason:") = Void, NSString;
override selector("backgroundPosition") = NSString;
override selector("backgroundRepeat") = NSString;
override selector("backgroundStyle") = CLong;
override selector("backingLocation") = CULong;
override selector("backingType") = CULong;
override selector("badgeLabel") = NSString;
override selector("baseSpecifier") = NSScriptObjectSpecifier;
override selector("baseURI") = NSString;
override selector("baseURL") = NSURL;
override selector("baseWritingDirection") = CLong;
override selector("baselineDeltaForCharacterAtIndex:") = Double, CULong;
override selector("baselineLocation") = Double;
override selector("baselineOffsetInLayoutManager:glyphIndex:") = Double, NSLayoutManager, CULong;
override selector("becomeFirstResponder") = Bool;
override selector("becomeKeyWindow") = Void;
override selector("becomeMainWindow") = Void;
override selector("becomesKeyOnlyIfNeeded") = Bool;
override selector("beginContentAccess") = Bool;
override selector("beginDocument") = Void;
override selector("beginEditing") = Void;
override selector("beginEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
override selector("beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, Id, SelectorHandle, RawPointer;
override selector("beginGestureWithEvent:") = Void, NSEvent;
override selector("beginGrouping") = Void;
override selector("beginLineWithGlyphAtIndex:") = Void, CULong;
override selector("beginLoadInBackground") = Void;
override selector("beginModalSessionForWindow:") = NSModalSession, NSWindow;
override selector("beginModalSessionForWindow:relativeToWindow:") = NSModalSession, NSWindow, NSWindow;
override selector("beginPageInRect:atPlacement:") = Void, NSRect, NSPoint;
override selector("beginParagraph") = Void;
override selector("beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetModalForWindow:completionHandler:") = Void, NSWindow, UnknownType;
override selector("beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:") = Void, NSPrintInfo, NSWindow, Id, SelectorHandle, RawPointer;
override selector("beginTime") = Double;
override selector("beginUndoGrouping") = Void;
override selector("beginWithCompletionHandler:") = Void, UnknownType;
override selector("bestRepresentationForDevice:") = NSImageRep, NSDictionary;
override selector("bestRepresentationForRect:context:hints:") = NSImageRep, NSRect, NSGraphicsContext, NSDictionary;
override selector("bezelStyle") = CULong;
override selector("bezierPath") = NSBezierPath;
override selector("bezierPathByFlatteningPath") = NSBezierPath;
override selector("bezierPathByReversingPath") = NSBezierPath;
override selector("bezierPathWithOvalInRect:") = NSBezierPath, NSRect;
override selector("bezierPathWithRect:") = NSBezierPath, NSRect;
override selector("bezierPathWithRoundedRect:xRadius:yRadius:") = NSBezierPath, NSRect, Double, Double;
override selector("bgColor") = NSString;
override selector("bidiProcessingEnabled") = Bool;
override selector("bind:toObject:withKeyPath:options:") = Void, NSString, Id, NSString, NSDictionary;
override selector("bitmapData") = Pointer[CUChar];
override selector("bitmapFormat") = CULong;
override selector("bitmapImageRepByConvertingToColorSpace:renderingIntent:") = NSBitmapImageRep, NSColorSpace, CLong;
override selector("bitmapImageRepByRetaggingWithColorSpace:") = NSBitmapImageRep, NSColorSpace;
override selector("bitmapImageRepForCachingDisplayInRect:") = NSBitmapImageRep, NSRect;
override selector("bitmapRepresentation") = NSData;
override selector("bitsPerPixel") = CLong;
override selector("bitsPerSample") = CLong;
override selector("blackColor") = NSColor;
override selector("blackComponent") = Double;
override selector("blendedColorWithFraction:ofColor:") = NSColor, Double, NSColor;
override selector("blockOperationWithBlock:") = Id, UnknownType;
override selector("blocksOtherRecognizers") = Bool;
override selector("blue") = DOMCSSPrimitiveValue;
override selector("blueColor") = NSColor;
override selector("blueComponent") = Double;
override selector("blur") = Void;
override selector("body") = DOMHTMLElement;
override selector("boldSystemFontOfSize:") = NSFont, Double;
override selector("bookmarkDataWithContentsOfURL:error:") = NSData, NSURL, Pointer[NSError];
override selector("bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:") = NSData, CULong, NSArray, NSURL, Pointer[NSError];
override selector("boolForKey:") = Bool, NSString;
override selector("boolValue") = Bool;
override selector("booleanForKey:inTable:") = Bool, NSString, NSString;
override selector("booleanValue") = CUChar;
override selector("border") = NSString;
override selector("borderBottom") = NSString;
override selector("borderBottomColor") = NSString;
override selector("borderBottomStyle") = NSString;
override selector("borderBottomWidth") = NSString;
override selector("borderCollapse") = NSString;
override selector("borderColor") = Id;
override selector("borderColorForEdge:") = NSColor, CULong;
override selector("borderLeft") = NSString;
override selector("borderLeftColor") = NSString;
override selector("borderLeftStyle") = NSString;
override selector("borderLeftWidth") = NSString;
override selector("borderRect") = NSRect;
override selector("borderRight") = NSString;
override selector("borderRightColor") = NSString;
override selector("borderRightStyle") = NSString;
override selector("borderRightWidth") = NSString;
override selector("borderSpacing") = NSString;
override selector("borderStyle") = NSString;
override selector("borderTop") = NSString;
override selector("borderTopColor") = NSString;
override selector("borderTopStyle") = NSString;
override selector("borderTopWidth") = NSString;
override selector("borderType") = CULong;
override selector("borderWidth") = NSString;
override selector("bottom") = Id;
override selector("bottomMargin") = Double;
override selector("boundingBox") = NSRect;
override selector("boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, CULong, NSTextContainer, NSRect, NSPoint, CULong;
override selector("boundingRectForFont") = NSRect;
override selector("boundingRectForGlyph:") = NSRect, UInt;
override selector("boundingRectForGlyphRange:inTextContainer:") = NSRect, NSRange, NSTextContainer;
override selector("boundingRectWithSize:options:") = NSRect, NSSize, CLong;
override selector("boundingRectWithSize:options:attributes:") = NSRect, NSSize, CLong, NSDictionary;
override selector("bounds") = NSRect;
override selector("boundsRectForBlock:contentRect:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSRect, NSRect, NSTextContainer, NSRange;
override selector("boundsRectForContentRect:inRect:textContainer:characterRange:") = NSRect, NSRect, NSRect, NSTextContainer, NSRange;
override selector("boundsRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
override selector("boundsRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
override selector("boundsRotation") = Double;
override selector("boxType") = CULong;
override selector("branchImage") = NSImage;
override selector("breakLock") = Void;
override selector("breakUndoCoalescing") = Void;
override selector("brightnessComponent") = Double;
override selector("broadcast") = Void;
override selector("brownColor") = NSColor;
override selector("browser:acceptDrop:atRow:column:dropOperation:") = Bool, NSBrowser, Id, CLong, CLong, CULong;
override selector("browser:canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSBrowser, NSIndexSet, CLong, NSEvent;
override selector("browser:child:ofItem:") = Id, NSBrowser, CLong, Id;
override selector("browser:createRowsForColumn:inMatrix:") = Void, NSBrowser, CLong, NSMatrix;
override selector("browser:didChangeLastColumn:toColumn:") = Void, NSBrowser, CLong, CLong;
override selector("browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSBrowser, NSIndexSet, CLong, NSEvent, NSPointPointer;
override selector("browser:headerViewControllerForItem:") = NSViewController, NSBrowser, Id;
override selector("browser:heightOfRow:inColumn:") = Double, NSBrowser, CLong, CLong;
override selector("browser:isColumnValid:") = Bool, NSBrowser, CLong;
override selector("browser:isLeafItem:") = Bool, NSBrowser, Id;
override selector("browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:") = NSArray, NSBrowser, NSURL, NSIndexSet, CLong;
override selector("browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:") = CLong, NSBrowser, CLong, CLong, CLong, NSString;
override selector("browser:numberOfChildrenOfItem:") = CLong, NSBrowser, Id;
override selector("browser:numberOfRowsInColumn:") = CLong, NSBrowser, CLong;
override selector("browser:objectValueForItem:") = Id, NSBrowser, Id;
override selector("browser:previewViewControllerForLeafItem:") = NSViewController, NSBrowser, Id;
override selector("browser:selectCellWithString:inColumn:") = Bool, NSBrowser, NSString, CLong;
override selector("browser:selectRow:inColumn:") = Bool, NSBrowser, CLong, CLong;
override selector("browser:selectionIndexesForProposedSelection:inColumn:") = NSIndexSet, NSBrowser, NSIndexSet, CLong;
override selector("browser:setObjectValue:forItem:") = Void, NSBrowser, Id, Id;
override selector("browser:shouldEditItem:") = Bool, NSBrowser, Id;
override selector("browser:shouldShowCellExpansionForRow:column:") = Bool, NSBrowser, CLong, CLong;
override selector("browser:shouldSizeColumn:forUserResize:toWidth:") = Double, NSBrowser, CLong, Bool, Double;
override selector("browser:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSBrowser, NSEvent, NSString;
override selector("browser:sizeToFitWidthOfColumn:") = Double, NSBrowser, CLong;
override selector("browser:titleOfColumn:") = NSString, NSBrowser, CLong;
override selector("browser:typeSelectStringForRow:inColumn:") = NSString, NSBrowser, CLong, CLong;
override selector("browser:validateDrop:proposedRow:column:dropOperation:") = CULong, NSBrowser, Id, Pointer[CLong], Pointer[CLong], Pointer[CULong];
override selector("browser:willDisplayCell:atRow:column:") = Void, NSBrowser, Id, CLong, CLong;
override selector("browser:writeRowsWithIndexes:inColumn:toPasteboard:") = Bool, NSBrowser, NSIndexSet, CLong, NSPasteboard;
override selector("browserColumnConfigurationDidChange:") = Void, NSNotification;
override selector("browserDidScroll:") = Void, NSBrowser;
override selector("browserWillScroll:") = Void, NSBrowser;
override selector("bubbles") = Bool;
override selector("builtInPlugInsPath") = NSString;
override selector("builtInPlugInsURL") = NSURL;
override selector("bundleForClass:") = NSBundle, Id;
override selector("bundleForSuite:") = NSBundle, NSString;
override selector("bundleIdentifier") = NSString;
override selector("bundlePath") = NSString;
override selector("bundleURL") = NSURL;
override selector("bundleWithIdentifier:") = NSBundle, NSString;
override selector("bundleWithPath:") = NSBundle, NSString;
override selector("bundleWithURL:") = NSBundle, NSURL;
override selector("button") = UShort;
override selector("buttonMask") = CULong;
override selector("buttonNumber") = CLong;
override selector("buttonToolTip") = NSString;
override selector("buttons") = NSArray;
override selector("bytes") = RawPointer;
override selector("bytesPerPlane") = CLong;
override selector("bytesPerRow") = CLong;
override selector("cString") = Pointer[CChar];
override selector("cStringLength") = CULong;
override selector("cStringUsingEncoding:") = Pointer[CChar], CULong;
override selector("cache:willEvictObject:") = Void, NSCache, Id;
override selector("cacheDepthMatchesImageDepth") = Bool;
override selector("cacheDisplayInRect:toBitmapImageRep:") = Void, NSRect, NSBitmapImageRep;
override selector("cacheImageInRect:") = Void, NSRect;
override selector("cacheMode") = CULong;
override selector("cacheModel") = CULong;
override selector("cacheNodeForObjectID:") = NSAtomicStoreCacheNode, NSManagedObjectID;
override selector("cacheNodes") = NSSet;
override selector("cachePolicy") = CULong;
override selector("cachedHandleForURL:") = NSURLHandle, NSURL;
override selector("cachedResponse") = NSCachedURLResponse;
override selector("cachedResponseForRequest:") = NSCachedURLResponse, NSURLRequest;
override selector("cachesBezierPath") = Bool;
override selector("calcDrawInfo:") = Void, NSRect;
override selector("calcSize") = Void;
override selector("calendar") = NSCalendar;
override selector("calendarDate") = Id;
override selector("calendarFormat") = NSString;
override selector("calendarIdentifier") = NSString;
override selector("callStackReturnAddresses") = NSArray;
override selector("callStackSymbols") = NSArray;
override selector("callWebScriptMethod:withArguments:") = Id, NSString, NSArray;
override selector("canAdd") = Bool;
override selector("canAddChild") = Bool;
override selector("canBeCompressedUsing:") = Bool, CULong;
override selector("canBeConvertedToEncoding:") = Bool, CULong;
override selector("canBeDisabled") = Bool;
override selector("canBeVisibleOnAllSpaces") = Bool;
override selector("canBecomeKeyView") = Bool;
override selector("canBecomeKeyWindow") = Bool;
override selector("canBecomeMainWindow") = Bool;
override selector("canBecomeVisibleWithoutLogin") = Bool;
override selector("canChooseDirectories") = Bool;
override selector("canChooseFiles") = Bool;
override selector("canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("canConcurrentlyReadDocumentsOfType:") = Bool, NSString;
override selector("canCreateDirectories") = Bool;
override selector("canDragRowsWithIndexes:atPoint:") = Bool, NSIndexSet, NSPoint;
override selector("canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSIndexSet, CLong, NSEvent;
override selector("canDraw") = Bool;
override selector("canDrawConcurrently") = Bool;
override selector("canDrawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
override selector("canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
override selector("canGoBack") = Bool;
override selector("canGoForward") = Bool;
override selector("canHandleRequest:") = Bool, NSURLRequest;
override selector("canHide") = Bool;
override selector("canInitWithData:") = Bool, NSData;
override selector("canInitWithPasteboard:") = Bool, NSPasteboard;
override selector("canInitWithRequest:") = Bool, NSURLRequest;
override selector("canInitWithURL:") = Bool, NSURL;
override selector("canInsert") = Bool;
override selector("canInsertChild") = Bool;
override selector("canMakeTextLarger") = Bool;
override selector("canMakeTextSmaller") = Bool;
override selector("canMakeTextStandardSize") = Bool;
override selector("canPrintHeadersAndFooters") = Bool;
override selector("canProvideDocumentSource") = Bool;
override selector("canReadItemWithDataConformingToTypes:") = Bool, NSArray;
override selector("canReadObjectForClasses:options:") = Bool, NSArray, NSDictionary;
override selector("canRedo") = Bool;
override selector("canRemove") = Bool;
override selector("canRemoveAllRows") = Bool;
override selector("canResumeDownloadDecodedWithEncodingMIMEType:") = Bool, NSString;
override selector("canSelectHiddenExtension") = Bool;
override selector("canSelectNext") = Bool;
override selector("canSelectPrevious") = Bool;
override selector("canShowMIMEType:") = Bool, NSString;
override selector("canShowMIMETypeAsHTML:") = Bool, NSString;
override selector("canSpawnSeparateThread") = Bool;
override selector("canStoreColor") = Bool;
override selector("canUndo") = Bool;
override selector("cancel") = Void;
override selector("cancel:") = Void, Id;
override selector("cancelAllOperations") = Void;
override selector("cancelAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
override selector("cancelBubble") = Bool;
override selector("cancelButtonCell") = NSButtonCell;
override selector("cancelButtonRectForBounds:") = NSRect, NSRect;
override selector("cancelIncrementalLoad") = Void;
override selector("cancelLoadInBackground") = Void;
override selector("cancelMigrationWithError:") = Void, NSError;
override selector("cancelOperation:") = Void, Id;
override selector("cancelPerformSelector:target:argument:") = Void, SelectorHandle, Id, Id;
override selector("cancelPerformSelectorsWithTarget:") = Void, Id;
override selector("cancelPreviousPerformRequestsWithTarget:") = Void, Id;
override selector("cancelPreviousPerformRequestsWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
override selector("cancelTracking") = Void;
override selector("cancelTrackingWithoutAnimation") = Void;
override selector("cancelUserAttentionRequest:") = Void, CLong;
override selector("cancelable") = Bool;
override selector("canonicalLanguageIdentifierFromString:") = NSString, NSString;
override selector("canonicalLocaleIdentifierFromString:") = NSString, NSString;
override selector("canonicalRequestForRequest:") = NSURLRequest, NSURLRequest;
override selector("canonicalXMLStringPreservingComments:") = NSString, Bool;
override selector("capHeight") = Double;
override selector("capabilityMask") = CULong;
override selector("capacity") = Int;
override selector("capitalizeWord:") = Void, Id;
override selector("capitalizedLetterCharacterSet") = Id;
override selector("capitalizedString") = NSString;
override selector("caption") = DOMHTMLTableCaptionElement;
override selector("captionSide") = NSString;
override selector("captureEvents") = Void;
override selector("cascadeTopLeftFromPoint:") = NSPoint, NSPoint;
override selector("caseInsensitiveCompare:") = CLong, NSString;
override selector("caseSensitive") = Bool;
override selector("catalogNameComponent") = NSString;
override selector("cell") = Id;
override selector("cellAtIndex:") = Id, CLong;
override selector("cellAtRow:column:") = Id, CLong, CLong;
override selector("cellAttribute:") = CLong, CULong;
override selector("cellBackgroundColor") = NSColor;
override selector("cellBaselineOffset") = NSPoint;
override selector("cellClass") = Id;
override selector("cellFrameAtRow:column:") = NSRect, CLong, CLong;
override selector("cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, NSTextContainer, NSRect, NSPoint, CULong;
override selector("cellIndex") = Int;
override selector("cellPadding") = NSString;
override selector("cellPrototype") = Id;
override selector("cellSize") = NSSize;
override selector("cellSizeForBounds:") = NSSize, NSRect;
override selector("cellSpacing") = NSString;
override selector("cellWithTag:") = Id, CLong;
override selector("cells") = Id;
override selector("center") = Void;
override selector("centerScanRect:") = NSRect, NSRect;
override selector("centerSelectionInVisibleArea:") = Void, Id;
override selector("certificates") = NSArray;
override selector("ch") = NSString;
override selector("chOff") = NSString;
override selector("changeAttributes:") = Void, Id;
override selector("changeCaseOfLetter:") = Void, Id;
override selector("changeColor:") = Void, Id;
override selector("changeCount") = CLong;
override selector("changeCurrentDirectoryPath:") = Bool, NSString;
override selector("changeDocumentBackgroundColor:") = Void, Id;
override selector("changeFileAttributes:atPath:") = Bool, NSDictionary, NSString;
override selector("changeFont:") = Void, Id;
override selector("changeInLength") = CLong;
override selector("changeSpelling:") = Void, Id;
override selector("changeWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
override selector("changedValues") = NSDictionary;
override selector("channelMapping") = NSArray;
override selector("charCode") = Int;
override selector("charValue") = CChar;
override selector("characterAtIndex:") = UShort, CULong;
override selector("characterCollection") = CULong;
override selector("characterDirectionForLanguage:") = CULong, NSString;
override selector("characterEncoding") = NSString;
override selector("characterIdentifier") = CULong;
override selector("characterIndexForGlyphAtIndex:") = CULong, CULong;
override selector("characterIndexForInsertionAtPoint:") = CULong, NSPoint;
override selector("characterIndexForPoint:") = CULong, NSPoint;
override selector("characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
override selector("characterIsMember:") = Bool, UShort;
override selector("characterRangeForGlyphRange:actualGlyphRange:") = NSRange, NSRange, NSRangePointer;
override selector("characterSet") = NSString;
override selector("characterSetWithBitmapRepresentation:") = Id, NSData;
override selector("characterSetWithCharactersInString:") = Id, NSString;
override selector("characterSetWithContentsOfFile:") = Id, NSString;
override selector("characterSetWithRange:") = Id, NSRange;
override selector("characters") = Id;
override selector("charactersIgnoringModifiers") = NSString;
override selector("charactersToBeSkipped") = NSCharacterSet;
override selector("charset") = NSString;
override selector("checkForRemovableMedia") = Void;
override selector("checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[NSArray];
override selector("checkResourceIsReachableAndReturnError:") = Bool, Pointer[NSError];
override selector("checkSpaceForParts") = Void;
override selector("checkSpelling:") = Void, Id;
override selector("checkSpellingOfString:startingAt:") = NSRange, NSString, CLong;
override selector("checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[CLong];
override selector("checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:") = NSArray, NSString, NSRange, UInt64, NSDictionary, CLong, Pointer[NSOrthography], Pointer[CLong];
override selector("checkTextInDocument:") = Void, Id;
override selector("checkTextInRange:types:options:") = Void, NSRange, UInt64, NSDictionary;
override selector("checkTextInSelection:") = Void, Id;
override selector("checked") = Bool;
override selector("childAtIndex:") = NSXMLNode, CULong;
override selector("childCount") = CULong;
override selector("childElementCount") = UInt;
override selector("childFrames") = NSArray;
override selector("childNodes") = Id;
override selector("childSpecifier") = NSScriptObjectSpecifier;
override selector("childWindows") = NSArray;
override selector("children") = Id;
override selector("childrenKeyPath") = NSString;
override selector("childrenKeyPathForNode:") = NSString, NSTreeNode;
override selector("chooseFilename:") = Void, NSString;
override selector("chooseFilenames:") = Void, NSArray;
override selector("cite") = NSString;
override selector("class") = Id;
override selector("classCode") = UInt;
override selector("classDescription") = NSClassDescription;
override selector("classDescriptionForClass:") = Id, Id;
override selector("classDescriptionForKey:") = NSScriptClassDescription, NSString;
override selector("classDescriptionWithAppleEventCode:") = NSScriptClassDescription, UInt;
override selector("classDescriptionsInSuite:") = NSDictionary, NSString;
override selector("classFallbacksForKeyedArchiver") = NSArray;
override selector("classForArchiver") = Id;
override selector("classForClassName:") = Id, NSString;
override selector("classForCoder") = Id;
override selector("classForKeyedArchiver") = Id;
override selector("classForKeyedUnarchiver") = Id;
override selector("classForPortCoder") = Id;
override selector("className") = NSString;
override selector("classNameDecodedForArchiveClassName:") = NSString, NSString;
override selector("classNameEncodedForTrueClassName:") = NSString, NSString;
override selector("classNameForClass:") = NSString, Id;
override selector("classNamed:") = Id, NSString;
override selector("cleanUpAfterDragOperation") = Void;
override selector("cleanUpOperation") = Void;
override selector("clear") = NSString;
override selector("clearColor") = NSColor;
override selector("clearContents") = CLong;
override selector("clearCurrentContext") = Void;
override selector("clearDrawable") = Void;
override selector("clearGLContext") = Void;
override selector("clearRecentDocuments:") = Void, Id;
override selector("clearStartAnimation") = Void;
override selector("clearStopAnimation") = Void;
override selector("clearsFilterPredicateOnInsertion") = Bool;
override selector("click") = Void;
override selector("clickCount") = CLong;
override selector("clickedColumn") = CLong;
override selector("clickedOnLink:atIndex:") = Void, Id, CULong;
override selector("clickedPathComponentCell") = NSPathComponentCell;
override selector("clickedRow") = CLong;
override selector("client") = Id;
override selector("clientHeight") = Int;
override selector("clientLeft") = Int;
override selector("clientTop") = Int;
override selector("clientView") = NSView;
override selector("clientWidth") = Int;
override selector("clientX") = Int;
override selector("clientY") = Int;
override selector("clip") = NSString;
override selector("clipRect:") = Void, NSRect;
override selector("cloneContents") = DOMDocumentFragment;
override selector("cloneNode:") = DOMNode, Bool;
override selector("cloneRange") = DOMRange;
override selector("close") = Void;
override selector("close:") = Void, Id;
override selector("closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("closeFile") = Void;
override selector("closePath") = Void;
override selector("closeSpellDocumentWithTag:") = Void, CLong;
override selector("closedHandCursor") = NSCursor;
override selector("closestTickMarkValueToValue:") = Double, Double;
override selector("code") = CLong;
override selector("codeBase") = NSString;
override selector("codeType") = NSString;
override selector("coerceToDescriptorType:") = NSAppleEventDescriptor, UInt;
override selector("coerceValue:forKey:") = Id, Id, NSString;
override selector("coerceValue:toClass:") = Id, Id, Id;
override selector("colSpan") = Int;
override selector("collapse:") = Void, Bool;
override selector("collapseItem:") = Void, Id;
override selector("collapseItem:collapseChildren:") = Void, Id, Bool;
override selector("collapsed") = Bool;
override selector("collapsesBorders") = Bool;
override selector("collectExhaustively") = Void;
override selector("collectIfNeeded") = Void;
override selector("collection") = Id;
override selector("collectionBehavior") = CULong;
override selector("collectionNames") = NSArray;
override selector("collectionView") = NSCollectionView;
override selector("collectionView:acceptDrop:index:dropOperation:") = Bool, NSCollectionView, Id, CLong, CLong;
override selector("collectionView:canDragItemsAtIndexes:withEvent:") = Bool, NSCollectionView, NSIndexSet, NSEvent;
override selector("collectionView:draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSCollectionView, NSIndexSet, NSEvent, NSPointPointer;
override selector("collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:") = NSArray, NSCollectionView, NSURL, NSIndexSet;
override selector("collectionView:validateDrop:proposedIndex:dropOperation:") = CULong, NSCollectionView, Id, Pointer[CLong], Pointer[CLong];
override selector("collectionView:writeItemsAtIndexes:toPasteboard:") = Bool, NSCollectionView, NSIndexSet, NSPasteboard;
override selector("color") = Id;
override selector("colorAtX:y:") = NSColor, CLong, CLong;
override selector("colorForControlTint:") = NSColor, CULong;
override selector("colorFromPasteboard:") = NSColor, NSPasteboard;
override selector("colorListNamed:") = NSColorList, NSString;
override selector("colorNameComponent") = NSString;
override selector("colorPanel") = NSColorPanel;
override selector("colorRenderingIntent") = CLong;
override selector("colorSpace") = NSColorSpace;
override selector("colorSpaceModel") = CLong;
override selector("colorSpaceName") = NSString;
override selector("colorSyncProfile") = RawPointer;
override selector("colorUsingColorSpace:") = NSColor, NSColorSpace;
override selector("colorUsingColorSpaceName:") = NSColor, NSString;
override selector("colorUsingColorSpaceName:device:") = NSColor, NSString, NSDictionary;
override selector("colorWithAlphaComponent:") = NSColor, Double;
override selector("colorWithCGColor:") = CIColor, CGColorRef;
override selector("colorWithCIColor:") = NSColor, CIColor;
override selector("colorWithCalibratedHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithCalibratedRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithCalibratedWhite:alpha:") = NSColor, Double, Double;
override selector("colorWithCatalogName:colorName:") = NSColor, NSString, NSString;
override selector("colorWithColorSpace:components:count:") = NSColor, NSColorSpace, Pointer[Double], CLong;
override selector("colorWithDeviceCyan:magenta:yellow:black:alpha:") = NSColor, Double, Double, Double, Double, Double;
override selector("colorWithDeviceHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithDeviceRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
override selector("colorWithDeviceWhite:alpha:") = NSColor, Double, Double;
override selector("colorWithKey:") = NSColor, NSString;
override selector("colorWithPatternImage:") = NSColor, NSImage;
override selector("colorWithRed:green:blue:") = CIColor, Double, Double, Double;
override selector("colorWithRed:green:blue:alpha:") = CIColor, Double, Double, Double, Double;
override selector("colorWithString:") = CIColor, NSString;
override selector("colorizeByMappingGray:toColor:blackMapping:whiteMapping:") = Void, Double, NSColor, NSColor, NSColor;
override selector("cols") = NSString;
override selector("columnAtPoint:") = CLong, NSPoint;
override selector("columnAutoresizingStyle") = CULong;
override selector("columnContentWidthForColumnWidth:") = Double, Double;
override selector("columnIndexesInRect:") = NSIndexSet, NSRect;
override selector("columnNumber") = CLong;
override selector("columnOfMatrix:") = CLong, NSMatrix;
override selector("columnResizingType") = CULong;
override selector("columnSpan") = CLong;
override selector("columnWidthForColumnContentWidth:") = Double, Double;
override selector("columnWithIdentifier:") = CLong, Id;
override selector("columnsAutosaveName") = NSString;
override selector("columnsInRect:") = NSRange, NSRect;
override selector("comboBox:completedString:") = NSString, NSComboBox, NSString;
override selector("comboBox:indexOfItemWithStringValue:") = CULong, NSComboBox, NSString;
override selector("comboBox:objectValueForItemAtIndex:") = Id, NSComboBox, CLong;
override selector("comboBoxCell:completedString:") = NSString, NSComboBoxCell, NSString;
override selector("comboBoxCell:indexOfItemWithStringValue:") = CULong, NSComboBoxCell, NSString;
override selector("comboBoxCell:objectValueForItemAtIndex:") = Id, NSComboBoxCell, CLong;
override selector("comboBoxSelectionDidChange:") = Void, NSNotification;
override selector("comboBoxSelectionIsChanging:") = Void, NSNotification;
override selector("comboBoxWillDismiss:") = Void, NSNotification;
override selector("comboBoxWillPopUp:") = Void, NSNotification;
override selector("commandClassName") = NSString;
override selector("commandDescription") = NSScriptCommandDescription;
override selector("commandDescriptionWithAppleEventClass:andAppleEventCode:") = NSScriptCommandDescription, UInt, UInt;
override selector("commandDescriptionsInSuite:") = NSDictionary, NSString;
override selector("commandName") = NSString;
override selector("commands") = NSArray;
override selector("comment") = NSString;
override selector("commentURL") = NSURL;
override selector("commentWithStringValue:") = Id, NSString;
override selector("commitEditing") = Bool;
override selector("commitEditingWithDelegate:didCommitSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("committedValuesForKeys:") = NSDictionary, NSArray;
override selector("commonAncestorContainer") = DOMNode;
override selector("commonISOCurrencyCodes") = NSArray;
override selector("commonPrefixWithString:options:") = NSString, NSString, CULong;
override selector("compact") = Bool;
override selector("comparator") = NSComparator;
override selector("compare:") = CLong, NSNumber;
override selector("compare:options:") = CLong, NSString, CULong;
override selector("compare:options:range:") = CLong, NSString, CULong, NSRange;
override selector("compare:options:range:locale:") = CLong, NSString, CULong, NSRange, Id;
override selector("compareBoundaryPoints::") = Short, UShort, DOMRange;
override selector("compareBoundaryPoints:sourceRange:") = Short, UShort, DOMRange;
override selector("compareDocumentPosition:") = UShort, DOMNode;
override selector("compareNode:") = Short, DOMNode;
override selector("compareObject:toObject:") = CLong, Id, Id;
override selector("comparePoint:offset:") = Short, DOMNode, Int;
override selector("comparisonPredicateModifier") = CULong;
override selector("compatMode") = NSString;
override selector("compileAndReturnError:") = Bool, Pointer[NSDictionary];
override selector("complete") = Bool;
override selector("complete:") = Void, Id;
override selector("completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:") = CULong, Pointer[NSString], Bool, Pointer[NSArray], NSArray;
override selector("completedString:") = NSString, NSString;
override selector("completes") = Bool;
override selector("completionBlock") = UnknownType;
override selector("completionDelay") = Double;
override selector("completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
override selector("completionsForPartialWordRange:indexOfSelectedItem:") = NSArray, NSRange, Pointer[CLong];
override selector("components") = NSArray;
override selector("components:fromDate:") = NSDateComponents, CULong, NSDate;
override selector("components:fromDate:toDate:options:") = NSDateComponents, CULong, NSDate, NSDate, CULong;
override selector("componentsFromLocaleIdentifier:") = NSDictionary, NSString;
override selector("componentsJoinedByString:") = NSString, NSString;
override selector("componentsSeparatedByCharactersInSet:") = NSArray, NSCharacterSet;
override selector("componentsSeparatedByString:") = NSArray, NSString;
override selector("componentsToDisplayForPath:") = NSArray, NSString;
override selector("compositeToPoint:fromRect:operation:") = Void, NSPoint, NSRect, CULong;
override selector("compositeToPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
override selector("compositeToPoint:operation:") = Void, NSPoint, CULong;
override selector("compositeToPoint:operation:fraction:") = Void, NSPoint, CULong, Double;
override selector("compositingFilter") = Id;
override selector("compositingOperation") = CULong;
override selector("compoundPredicateType") = CULong;
override selector("compoundTypes") = NSArray;
override selector("computedStyleForElement:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
override selector("concat") = Void;
override selector("concludeDragOperation:") = Void, Id;
override selector("condition") = CLong;
override selector("configurationDictionary") = NSDictionary;
override selector("configurationName") = NSString;
override selector("configurations") = NSArray;
override selector("configureAsServer") = Void;
override selector("configurePersistentStoreCoordinatorForURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:") = Bool, NSURL, NSString, NSString, NSDictionary, Pointer[NSError];
override selector("confinementRectForMenu:onScreen:") = NSRect, NSMenu, NSScreen;
override selector("conformsToProtocol:") = Bool, Id;
override selector("connection") = NSConnection;
override selector("connection:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLConnection, NSURLProtectionSpace;
override selector("connection:didCancelAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
override selector("connection:didFailWithError:") = Void, NSURLConnection, NSError;
override selector("connection:didReceiveAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
override selector("connection:didReceiveData:") = Void, NSURLConnection, NSData;
override selector("connection:didReceiveResponse:") = Void, NSURLConnection, NSURLResponse;
override selector("connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:") = Void, NSURLConnection, CLong, CLong, CLong;
override selector("connection:handleRequest:") = Bool, NSConnection, NSDistantObjectRequest;
override selector("connection:needNewBodyStream:") = NSInputStream, NSURLConnection, NSURLRequest;
override selector("connection:shouldMakeNewConnection:") = Bool, NSConnection, NSConnection;
override selector("connection:willCacheResponse:") = NSCachedURLResponse, NSURLConnection, NSCachedURLResponse;
override selector("connection:willSendRequest:redirectResponse:") = NSURLRequest, NSURLConnection, NSURLRequest, NSURLResponse;
override selector("connectionDidFinishLoading:") = Void, NSURLConnection;
override selector("connectionForProxy") = NSConnection;
override selector("connectionShouldUseCredentialStorage:") = Bool, NSURLConnection;
override selector("connectionWithReceivePort:sendPort:") = Id, NSPort, NSPort;
override selector("connectionWithRegisteredName:host:") = Id, NSString, NSString;
override selector("connectionWithRegisteredName:host:usingNameServer:") = Id, NSString, NSString, NSPortNameServer;
override selector("connectionWithRequest:delegate:") = NSURLConnection, NSURLRequest, Id;
override selector("constantValue") = Id;
override selector("constrainFrameRect:toScreen:") = NSRect, NSRect, NSScreen;
override selector("constrainScrollPoint:") = NSPoint, NSPoint;
override selector("containerClassDescription") = NSScriptClassDescription;
override selector("containerIsObjectBeingTested") = Bool;
override selector("containerIsRangeContainerObject") = Bool;
override selector("containerSize") = NSSize;
override selector("containerSpecifier") = NSScriptObjectSpecifier;
override selector("contains:") = Bool, DOMElement;
override selector("containsAttachments") = Bool;
override selector("containsIndex:") = Bool, CULong;
override selector("containsIndexes:") = Bool, NSIndexSet;
override selector("containsIndexesInRange:") = Bool, NSRange;
override selector("containsItem:") = Bool, WebHistoryItem;
override selector("containsObject:") = Bool, Id;
override selector("containsPoint:") = Bool, NSPoint;
override selector("containsValueForKey:") = Bool, NSString;
override selector("content") = Id;
override selector("contentAspectRatio") = NSSize;
override selector("contentBorderThicknessForEdge:") = Double, CULong;
override selector("contentDocument") = DOMDocument;
override selector("contentEditable") = NSString;
override selector("contentFilters") = NSArray;
override selector("contentFrame") = WebFrame;
override selector("contentMaxSize") = NSSize;
override selector("contentMinSize") = NSSize;
override selector("contentRect") = NSRect;
override selector("contentRectForFrameRect:") = NSRect, NSRect;
override selector("contentRectForFrameRect:styleMask:") = NSRect, NSRect, CULong;
override selector("contentResizeIncrements") = NSSize;
override selector("contentSize") = NSSize;
override selector("contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
override selector("contentView") = Id;
override selector("contentViewMargins") = NSSize;
override selector("contentWidth") = Double;
override selector("contentWidthValueType") = CULong;
override selector("contentWindow") = DOMAbstractView;
override selector("contents") = Id;
override selector("contentsAreFlipped") = Bool;
override selector("contentsAtPath:") = NSData, NSString;
override selector("contentsCenter") = CGRect;
override selector("contentsEqualAtPath:andPath:") = Bool, NSString, NSString;
override selector("contentsGravity") = NSString;
override selector("contentsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:") = NSArray, NSURL, NSArray, CULong, Pointer[NSError];
override selector("contentsRect") = CGRect;
override selector("context") = NSGraphicsContext;
override selector("contextExpression") = NSExpression;
override selector("contextHelpForKey:") = NSAttributedString, NSString;
override selector("contextHelpForObject:") = NSAttributedString, Id;
override selector("contextMenuRepresentation") = Id;
override selector("contextShouldIgnoreUnmodeledPropertyChanges") = Bool;
override selector("contextualMenuCursor") = NSCursor;
override selector("continueSpeaking") = Void;
override selector("continueTracking:at:inView:") = Bool, NSPoint, NSPoint, NSView;
override selector("continueWithoutCredentialForAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
override selector("control:didFailToFormatString:errorDescription:") = Bool, NSControl, NSString, NSString;
override selector("control:didFailToValidatePartialString:errorDescription:") = Void, NSControl, NSString, NSString;
override selector("control:isValidObject:") = Bool, NSControl, Id;
override selector("control:textShouldBeginEditing:") = Bool, NSControl, NSText;
override selector("control:textShouldEndEditing:") = Bool, NSControl, NSText;
override selector("control:textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSControl, NSTextView, NSArray, NSRange, Pointer[CLong];
override selector("control:textView:doCommandBySelector:") = Bool, NSControl, NSTextView, SelectorHandle;
override selector("controlAlternatingRowBackgroundColors") = NSArray;
override selector("controlBackgroundColor") = NSColor;
override selector("controlCharacterSet") = Id;
override selector("controlColor") = NSColor;
override selector("controlContentFontOfSize:") = NSFont, Double;
override selector("controlDarkShadowColor") = NSColor;
override selector("controlHighlightColor") = NSColor;
override selector("controlLightHighlightColor") = NSColor;
override selector("controlPointBounds") = NSRect;
override selector("controlShadowColor") = NSColor;
override selector("controlSize") = CULong;
override selector("controlTextColor") = NSColor;
override selector("controlTextDidBeginEditing:") = Void, NSNotification;
override selector("controlTextDidChange:") = Void, NSNotification;
override selector("controlTextDidEndEditing:") = Void, NSNotification;
override selector("controlTint") = CULong;
override selector("controlView") = NSView;
override selector("conversation") = Id;
override selector("conversationIdentifier") = CLong;
override selector("convertAttributes:") = NSDictionary, NSDictionary;
override selector("convertBaseToScreen:") = NSPoint, NSPoint;
override selector("convertFont:") = NSFont, NSFont;
override selector("convertFont:toFace:") = NSFont, NSFont, NSString;
override selector("convertFont:toFamily:") = NSFont, NSFont, NSString;
override selector("convertFont:toHaveTrait:") = NSFont, NSFont, CULong;
override selector("convertFont:toNotHaveTrait:") = NSFont, NSFont, CULong;
override selector("convertFont:toSize:") = NSFont, NSFont, Double;
override selector("convertFontTraits:") = CULong, CULong;
override selector("convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
override selector("convertPoint:fromView:") = NSPoint, NSPoint, NSView;
override selector("convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
override selector("convertPoint:toView:") = NSPoint, NSPoint, NSView;
override selector("convertPointFromBase:") = NSPoint, NSPoint;
override selector("convertPointToBase:") = NSPoint, NSPoint;
override selector("convertRect:fromLayer:") = CGRect, CGRect, CALayer;
override selector("convertRect:fromView:") = NSRect, NSRect, NSView;
override selector("convertRect:toLayer:") = CGRect, CGRect, CALayer;
override selector("convertRect:toView:") = NSRect, NSRect, NSView;
override selector("convertRectFromBase:") = NSRect, NSRect;
override selector("convertRectToBase:") = NSRect, NSRect;
override selector("convertScreenToBase:") = NSPoint, NSPoint;
override selector("convertSize:fromView:") = NSSize, NSSize, NSView;
override selector("convertSize:toView:") = NSSize, NSSize, NSView;
override selector("convertSizeFromBase:") = NSSize, NSSize;
override selector("convertSizeToBase:") = NSSize, NSSize;
override selector("convertTime:fromLayer:") = Double, Double, CALayer;
override selector("convertTime:toLayer:") = Double, Double, CALayer;
override selector("convertWeight:ofFont:") = NSFont, Bool, NSFont;
override selector("cookie") = NSString;
override selector("cookieAcceptPolicy") = CULong;
override selector("cookieWithProperties:") = Id, NSDictionary;
override selector("cookies") = NSArray;
override selector("cookiesForURL:") = NSArray, NSURL;
override selector("cookiesWithResponseHeaderFields:forURL:") = NSArray, NSDictionary, NSURL;
override selector("coords") = NSString;
override selector("copiesOnScroll") = Bool;
override selector("copy") = Id;
override selector("copy:") = Void, Id;
override selector("copyAttributesFromContext:withMask:") = Void, NSOpenGLContext, UInt;
override selector("copyCGLContextForPixelFormat:") = CGLContextObj, CGLPixelFormatObj;
override selector("copyCGLPixelFormatForDisplayMask:") = CGLPixelFormatObj, UInt;
override selector("copyFont:") = Void, Id;
override selector("copyItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("copyItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("copyPath:toPath:handler:") = Bool, NSString, NSString, Id;
override selector("copyRuler:") = Void, Id;
override selector("copyScriptingValue:forKey:withProperties:") = Id, Id, NSString, NSDictionary;
override selector("copyWithZone:") = Id, Pointer[NSZone];
override selector("cornerRadius") = Double;
override selector("cornerView") = NSView;
override selector("correctionCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("count") = CULong;
override selector("countByEnumeratingWithState:objects:count:") = CULong, Pointer[NSFastEnumerationState], Pointer[Id], CULong;
override selector("countForFetchRequest:error:") = CULong, NSFetchRequest, Pointer[NSError];
override selector("countForObject:") = CULong, Id;
override selector("countKeyPath") = NSString;
override selector("countKeyPathForNode:") = NSString, NSTreeNode;
override selector("countLimit") = CULong;
override selector("countOfIndexesInRange:") = CULong, NSRange;
override selector("countWordsInString:language:") = CLong, NSString, NSString;
override selector("counterIncrement") = NSString;
override selector("counterReset") = NSString;
override selector("coveredCharacterSet") = NSCharacterSet;
override selector("createAttribute:") = DOMAttr, NSString;
override selector("createAttributeNS::") = DOMAttr, NSString, NSString;
override selector("createAttributeNS:qualifiedName:") = DOMAttr, NSString, NSString;
override selector("createCDATASection:") = DOMCDATASection, NSString;
override selector("createCSSStyleDeclaration") = DOMCSSStyleDeclaration;
override selector("createCSSStyleSheet::") = DOMCSSStyleSheet, NSString, NSString;
override selector("createCSSStyleSheet:media:") = DOMCSSStyleSheet, NSString, NSString;
override selector("createCaption") = DOMHTMLElement;
override selector("createClassDescription") = NSScriptClassDescription;
override selector("createCommandInstance") = NSScriptCommand;
override selector("createCommandInstanceWithZone:") = NSScriptCommand, Pointer[NSZone];
override selector("createComment:") = DOMComment, NSString;
override selector("createContext") = NSGraphicsContext;
override selector("createContextualFragment:") = DOMDocumentFragment, NSString;
override selector("createConversationForConnection:") = Id, NSConnection;
override selector("createDestinationInstancesForSourceInstance:entityMapping:manager:error:") = Bool, NSManagedObject, NSEntityMapping, NSMigrationManager, Pointer[NSError];
override selector("createDirectoryAtPath:attributes:") = Bool, NSString, NSDictionary;
override selector("createDirectoryAtPath:withIntermediateDirectories:attributes:error:") = Bool, NSString, Bool, NSDictionary, Pointer[NSError];
override selector("createDocument:::") = DOMDocument, NSString, NSString, DOMDocumentType;
override selector("createDocument:qualifiedName:doctype:") = DOMDocument, NSString, NSString, DOMDocumentType;
override selector("createDocumentFragment") = DOMDocumentFragment;
override selector("createDocumentFragmentWithMarkupString:baseURL:") = DOMDocumentFragment, NSString, NSURL;
override selector("createDocumentFragmentWithText:") = DOMDocumentFragment, NSString;
override selector("createDocumentType:::") = DOMDocumentType, NSString, NSString, NSString;
override selector("createDocumentType:publicId:systemId:") = DOMDocumentType, NSString, NSString, NSString;
override selector("createElement:") = DOMElement, NSString;
override selector("createElementNS::") = DOMElement, NSString, NSString;
override selector("createElementNS:qualifiedName:") = DOMElement, NSString, NSString;
override selector("createEntityReference:") = DOMEntityReference, NSString;
override selector("createEvent:") = DOMEvent, NSString;
override selector("createExpression::") = DOMXPathExpression, NSString, Id;
override selector("createExpression:resolver:") = DOMXPathExpression, NSString, Id;
override selector("createFileAtPath:contents:attributes:") = Bool, NSString, NSData, NSDictionary;
override selector("createHTMLDocument:") = DOMHTMLDocument, NSString;
override selector("createNSResolver:") = Id, DOMNode;
override selector("createNodeIterator::::") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
override selector("createNodeIterator:whatToShow:filter:expandEntityReferences:") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
override selector("createProcessingInstruction::") = DOMProcessingInstruction, NSString, NSString;
override selector("createProcessingInstruction:data:") = DOMProcessingInstruction, NSString, NSString;
override selector("createRange") = DOMRange;
override selector("createRelationshipsForDestinationInstance:entityMapping:manager:error:") = Bool, NSManagedObject, NSEntityMapping, NSMigrationManager, Pointer[NSError];
override selector("createSymbolicLinkAtPath:pathContent:") = Bool, NSString, NSString;
override selector("createSymbolicLinkAtPath:withDestinationPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("createTFoot") = DOMHTMLElement;
override selector("createTHead") = DOMHTMLElement;
override selector("createTextNode:") = DOMText, NSString;
override selector("createTexture:fromView:internalFormat:") = Void, UInt, NSView, UInt;
override selector("createTreeWalker::::") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
override selector("createTreeWalker:whatToShow:filter:expandEntityReferences:") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
override selector("credentialForTrust:") = NSURLCredential, SecTrustRef;
override selector("credentialWithIdentity:certificates:persistence:") = NSURLCredential, SecIdentityRef, NSArray, CULong;
override selector("credentialWithUser:password:persistence:") = NSURLCredential, NSString, NSString, CULong;
override selector("credentialsForProtectionSpace:") = NSDictionary, NSURLProtectionSpace;
override selector("criteriaForRow:") = NSArray, CLong;
override selector("criteriaKeyPath") = NSString;
override selector("criticalValue") = Double;
override selector("crosshairCursor") = NSCursor;
override selector("cssFloat") = NSString;
override selector("cssRules") = DOMCSSRuleList;
override selector("cssText") = NSString;
override selector("cssValueType") = UShort;
override selector("ctrlKey") = Bool;
override selector("cue") = NSString;
override selector("cueAfter") = NSString;
override selector("cueBefore") = NSString;
override selector("currencyCode") = NSString;
override selector("currencyDecimalSeparator") = NSString;
override selector("currencyGroupingSeparator") = NSString;
override selector("currencySymbol") = NSString;
override selector("currentAppleEvent") = NSAppleEventDescriptor;
override selector("currentApplication") = NSRunningApplication;
override selector("currentCalendar") = Id;
override selector("currentCommand") = NSScriptCommand;
override selector("currentContext") = Id;
override selector("currentContextDrawingToScreen") = Bool;
override selector("currentControlTint") = CULong;
override selector("currentConversation") = Id;
override selector("currentCursor") = NSCursor;
override selector("currentDirectory") = NSString;
override selector("currentDirectoryPath") = NSString;
override selector("currentDiskUsage") = CULong;
override selector("currentDocument") = Id;
override selector("currentEditor") = NSText;
override selector("currentEntityMapping") = NSEntityMapping;
override selector("currentEvent") = NSEvent;
override selector("currentFontAction") = CULong;
override selector("currentHandler") = NSAssertionHandler;
override selector("currentHost") = NSHost;
override selector("currentInputContext") = NSTextInputContext;
override selector("currentInputManager") = NSInputManager;
override selector("currentItem") = WebHistoryItem;
override selector("currentLocale") = Id;
override selector("currentMemoryUsage") = CULong;
override selector("currentMode") = NSString;
override selector("currentNode") = DOMNode;
override selector("currentOperation") = NSPrintOperation;
override selector("currentPage") = CLong;
override selector("currentParagraphStyle") = NSParagraphStyle;
override selector("currentPoint") = NSPoint;
override selector("currentProgress") = Float;
override selector("currentQueue") = Id;
override selector("currentReplyAppleEvent") = NSAppleEventDescriptor;
override selector("currentRunLoop") = NSRunLoop;
override selector("currentSystemCursor") = NSCursor;
override selector("currentSystemPresentationOptions") = CULong;
override selector("currentTarget") = Id;
override selector("currentTextContainer") = NSTextContainer;
override selector("currentThread") = NSThread;
override selector("currentTime") = Double;
override selector("currentValue") = Float;
override selector("currentVirtualScreen") = Int;
override selector("cursiveFontFamily") = NSString;
override selector("cursor") = NSString;
override selector("cursorUpdate:") = Void, NSEvent;
override selector("curveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
override selector("customSelector") = SelectorHandle;
override selector("customTextEncodingName") = NSString;
override selector("customUserAgent") = NSString;
override selector("customizationPaletteIsRunning") = Bool;
override selector("cut:") = Void, Id;
override selector("cyanColor") = NSColor;
override selector("cyanComponent") = Double;
override selector("cycleToNextInputLanguage:") = Void, Id;
override selector("cycleToNextInputServerInLanguage:") = Void, Id;
override selector("darkGrayColor") = NSColor;
override selector("dashCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("data") = Id;
override selector("data1") = CLong;
override selector("data2") = CLong;
override selector("dataCell") = Id;
override selector("dataCellForRow:") = Id, CLong;
override selector("dataForKey:") = NSData, NSString;
override selector("dataForType:") = NSData, NSString;
override selector("dataFromPropertyList:format:errorDescription:") = NSData, Id, CULong, Pointer[NSString];
override selector("dataFromRange:documentAttributes:error:") = NSData, NSRange, NSDictionary, Pointer[NSError];
override selector("dataFromTXTRecordDictionary:") = NSData, NSDictionary;
override selector("dataOfType:error:") = NSData, NSString, Pointer[NSError];
override selector("dataRepresentationOfType:") = NSData, NSString;
override selector("dataSource") = Id;
override selector("dataSourceUpdated:") = Void, WebDataSource;
override selector("dataUsingEncoding:") = NSData, CULong;
override selector("dataUsingEncoding:allowLossyConversion:") = NSData, CULong, Bool;
override selector("dataWithBytes:length:") = Id, RawPointer, CULong;
override selector("dataWithBytesNoCopy:length:") = Id, RawPointer, CULong;
override selector("dataWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, CULong, Bool;
override selector("dataWithCapacity:") = Id, CULong;
override selector("dataWithContentsOfFile:") = Id, NSString;
override selector("dataWithContentsOfFile:options:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("dataWithContentsOfMappedFile:") = Id, NSString;
override selector("dataWithContentsOfURL:") = Id, NSURL;
override selector("dataWithContentsOfURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("dataWithData:") = Id, NSData;
override selector("dataWithEPSInsideRect:") = NSData, NSRect;
override selector("dataWithLength:") = Id, CULong;
override selector("dataWithPDFInsideRect:") = NSData, NSRect;
override selector("dataWithPropertyList:format:options:error:") = NSData, Id, CULong, CULong, Pointer[NSError];
override selector("date") = Id;
override selector("dateByAddingComponents:toDate:options:") = NSDate, NSDateComponents, NSDate, CULong;
override selector("dateByAddingTimeInterval:") = Id, Double;
override selector("dateByAddingYears:months:days:hours:minutes:seconds:") = NSCalendarDate, CLong, CLong, CLong, CLong, CLong, CLong;
override selector("dateCheckingResultWithRange:date:") = NSTextCheckingResult, NSRange, NSDate;
override selector("dateCheckingResultWithRange:date:timeZone:duration:") = NSTextCheckingResult, NSRange, NSDate, NSTimeZone, Double;
override selector("dateFormat") = NSString;
override selector("dateFormatFromTemplate:options:locale:") = NSString, NSString, CULong, NSLocale;
override selector("dateFromComponents:") = NSDate, NSDateComponents;
override selector("dateFromString:") = NSDate, NSString;
override selector("datePickerCell:validateProposedDateValue:timeInterval:") = Void, NSDatePickerCell, Pointer[NSDate], Pointer[Double];
override selector("datePickerElements") = CULong;
override selector("datePickerMode") = CULong;
override selector("datePickerStyle") = CULong;
override selector("dateStyle") = CULong;
override selector("dateTime") = NSString;
override selector("dateValue") = NSDate;
override selector("dateWithCalendarFormat:timeZone:") = NSCalendarDate, NSString, NSTimeZone;
override selector("dateWithNaturalLanguageString:") = Id, NSString;
override selector("dateWithNaturalLanguageString:locale:") = Id, NSString, Id;
override selector("dateWithString:") = Id, NSString;
override selector("dateWithString:calendarFormat:") = Id, NSString, NSString;
override selector("dateWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
override selector("dateWithTimeInterval:sinceDate:") = Id, Double, NSDate;
override selector("dateWithTimeIntervalSince1970:") = Id, Double;
override selector("dateWithTimeIntervalSinceNow:") = Id, Double;
override selector("dateWithTimeIntervalSinceReferenceDate:") = Id, Double;
override selector("dateWithYear:month:day:hour:minute:second:timeZone:") = Id, CLong, CULong, CULong, CULong, CULong, CULong, NSTimeZone;
override selector("day") = CLong;
override selector("dayOfCommonEra") = CLong;
override selector("dayOfMonth") = CLong;
override selector("dayOfWeek") = CLong;
override selector("dayOfYear") = CLong;
override selector("daylightSavingTimeOffset") = Double;
override selector("daylightSavingTimeOffsetForDate:") = Double, NSDate;
override selector("deactivate") = Void;
override selector("dealloc") = Void;
override selector("decimalDigitCharacterSet") = Id;
override selector("decimalNumberByAdding:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByAdding:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByDividingBy:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByDividingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByMultiplyingBy:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberByMultiplyingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberByMultiplyingByPowerOf10:") = NSDecimalNumber, Short;
override selector("decimalNumberByMultiplyingByPowerOf10:withBehavior:") = NSDecimalNumber, Short, Id;
override selector("decimalNumberByRaisingToPower:") = NSDecimalNumber, CULong;
override selector("decimalNumberByRaisingToPower:withBehavior:") = NSDecimalNumber, CULong, Id;
override selector("decimalNumberByRoundingAccordingToBehavior:") = NSDecimalNumber, Id;
override selector("decimalNumberBySubtracting:") = NSDecimalNumber, NSDecimalNumber;
override selector("decimalNumberBySubtracting:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
override selector("decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, CULong, Short, Bool, Bool, Bool, Bool;
override selector("decimalNumberWithDecimal:") = NSDecimalNumber, NSDecimal;
override selector("decimalNumberWithMantissa:exponent:isNegative:") = NSDecimalNumber, UInt64, Short, Bool;
override selector("decimalNumberWithString:") = NSDecimalNumber, NSString;
override selector("decimalNumberWithString:locale:") = NSDecimalNumber, NSString, Id;
override selector("decimalSeparator") = NSString;
override selector("decimalValue") = NSDecimal;
override selector("declare") = Bool;
override selector("declareTypes:owner:") = CLong, NSArray, Id;
override selector("decodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], CULong, RawPointer;
override selector("decodeBoolForKey:") = Bool, NSString;
override selector("decodeBytesForKey:returnedLength:") = Pointer[CUChar], NSString, Pointer[CULong];
override selector("decodeBytesWithReturnedLength:") = RawPointer, Pointer[CULong];
override selector("decodeClassName:asClassName:") = Void, NSString, NSString;
override selector("decodeDataObject") = NSData;
override selector("decodeDoubleForKey:") = Double, NSString;
override selector("decodeFloatForKey:") = Float, NSString;
override selector("decodeInt32ForKey:") = Int, NSString;
override selector("decodeInt64ForKey:") = Int64, NSString;
override selector("decodeIntForKey:") = Int, NSString;
override selector("decodeIntegerForKey:") = CLong, NSString;
override selector("decodeNXColor") = NSColor;
override selector("decodeNXObject") = Id;
override selector("decodeObject") = Id;
override selector("decodeObjectForKey:") = Id, NSString;
override selector("decodePoint") = NSPoint;
override selector("decodePointForKey:") = NSPoint, NSString;
override selector("decodePortObject") = NSPort;
override selector("decodePropertyList") = Id;
override selector("decodeRect") = NSRect;
override selector("decodeRectForKey:") = NSRect, NSString;
override selector("decodeSize") = NSSize;
override selector("decodeSizeForKey:") = NSSize, NSString;
override selector("decodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
override varargSelector("decodeValuesOfObjCTypes:") = Void, Pointer[CChar];
override selector("decomposableCharacterSet") = Id;
override selector("decomposedStringWithCanonicalMapping") = NSString;
override selector("decomposedStringWithCompatibilityMapping") = NSString;
override selector("deepestScreen") = NSScreen;
override selector("defaultActionForKey:") = Id, NSString;
override selector("defaultAnimationForKey:") = Id, NSString;
override selector("defaultAttachmentScaling") = CULong;
override selector("defaultBaselineOffsetForFont:") = Double, NSFont;
override selector("defaultBehavior") = Id;
override selector("defaultButtonCell") = NSButtonCell;
override selector("defaultButtonTitle") = NSString;
override selector("defaultCStringEncoding") = CULong;
override selector("defaultCenter") = Id;
override selector("defaultCharset") = NSString;
override selector("defaultChecked") = Bool;
override selector("defaultCollector") = Id;
override selector("defaultColumnWidth") = Double;
override selector("defaultCompletionDelay") = Double;
override selector("defaultConnection") = NSConnection;
override selector("defaultCredentialForProtectionSpace:") = NSURLCredential, NSURLProtectionSpace;
override selector("defaultDate") = NSDate;
override selector("defaultDecimalNumberHandler") = Id;
override selector("defaultDepthLimit") = Int;
override selector("defaultFetchRequest") = NSFetchRequest;
override selector("defaultFixedFontSize") = Int;
override selector("defaultFlatness") = Double;
override selector("defaultFocusRingType") = CULong;
override selector("defaultFontSize") = Int;
override selector("defaultFormatterBehavior") = CULong;
override selector("defaultLineCapStyle") = CULong;
override selector("defaultLineHeightForFont:") = Double, NSFont;
override selector("defaultLineJoinStyle") = CULong;
override selector("defaultLineWidth") = Double;
override selector("defaultManager") = NSFileManager;
override selector("defaultMenu") = NSMenu;
override selector("defaultMiterLimit") = Double;
override selector("defaultNameServerPortNumber") = UShort;
override selector("defaultParagraphStyle") = NSParagraphStyle;
override selector("defaultPixelFormat") = NSOpenGLPixelFormat;
override selector("defaultPlaceholderForMarker:withBinding:") = Id, Id, NSString;
override selector("defaultPrinter") = NSPrinter;
override selector("defaultQueue") = Id;
override selector("defaultSelected") = Bool;
override selector("defaultSubcontainerAttributeKey") = NSString;
override selector("defaultTabInterval") = Double;
override selector("defaultTextEncodingName") = NSString;
override selector("defaultTimeZone") = NSTimeZone;
override selector("defaultTokenizingCharacterSet") = NSCharacterSet;
override selector("defaultType") = NSString;
override selector("defaultTypesetterBehavior") = CLong;
override selector("defaultValue") = Id;
override selector("defaultValueForKey:") = Id, NSString;
override selector("defaultView") = DOMAbstractView;
override selector("defaultVoice") = NSString;
override selector("defaultWindingRule") = CULong;
override selector("defaultWritingDirectionForLanguage:") = CLong, NSString;
override selector("defaults") = NSUserDefaults;
override selector("defer") = Bool;
override selector("definition") = CIFilterShape;
override selector("delegate") = Id;
override selector("delete:") = Void, Id;
override selector("deleteBackward:") = Void, Id;
override selector("deleteBackwardByDecomposingPreviousCharacter:") = Void, Id;
override selector("deleteCaption") = Void;
override selector("deleteCell:") = Void, Int;
override selector("deleteCharactersInRange:") = Void, NSRange;
override selector("deleteContents") = Void;
override selector("deleteCookie:") = Void, NSHTTPCookie;
override selector("deleteData::") = Void, UInt, UInt;
override selector("deleteData:length:") = Void, UInt, UInt;
override selector("deleteForward:") = Void, Id;
override selector("deleteGlyphsInRange:") = Void, NSRange;
override selector("deleteMedium:") = Void, NSString;
override selector("deleteObject:") = Void, NSManagedObject;
override selector("deleteRow:") = Void, Int;
override selector("deleteRule") = CULong;
override selector("deleteRule:") = Void, UInt;
override selector("deleteSelection") = Void;
override selector("deleteTFoot") = Void;
override selector("deleteTHead") = Void;
override selector("deleteToBeginningOfLine:") = Void, Id;
override selector("deleteToBeginningOfParagraph:") = Void, Id;
override selector("deleteToEndOfLine:") = Void, Id;
override selector("deleteToEndOfParagraph:") = Void, Id;
override selector("deleteToMark:") = Void, Id;
override selector("deleteWordBackward:") = Void, Id;
override selector("deleteWordForward:") = Void, Id;
override selector("deletedObjects") = NSSet;
override selector("deletesFileUponFailure") = Bool;
override selector("deliverResult") = Bool;
override selector("deltaX") = Double;
override selector("deltaY") = Double;
override selector("deltaZ") = Double;
override selector("deminiaturize:") = Void, Id;
override selector("dependencies") = NSArray;
override selector("depth") = Int;
override selector("depthLimit") = Int;
override selector("dequeueNotificationsMatching:coalesceMask:") = Void, NSNotification, CULong;
override selector("descendantNodeAtIndexPath:") = NSTreeNode, NSIndexPath;
override selector("descender") = Double;
override selector("description") = NSString;
override selector("descriptionFunction") = CCodePointer[[RawPointer],[NSString]];
override selector("descriptionInStringsFileFormat") = NSString;
override selector("descriptionWithCalendarFormat:") = NSString, NSString;
override selector("descriptionWithCalendarFormat:locale:") = NSString, NSString, Id;
override selector("descriptionWithCalendarFormat:timeZone:locale:") = NSString, NSString, NSTimeZone, Id;
override selector("descriptionWithLocale:") = NSString, Id;
override selector("descriptionWithLocale:indent:") = NSString, Id, CULong;
override selector("descriptor") = NSAppleEventDescriptor;
override selector("descriptorAtIndex:") = NSAppleEventDescriptor, CLong;
override selector("descriptorForKeyword:") = NSAppleEventDescriptor, UInt;
override selector("descriptorType") = UInt;
override selector("descriptorWithBoolean:") = NSAppleEventDescriptor, CUChar;
override selector("descriptorWithDescriptorType:bytes:length:") = NSAppleEventDescriptor, UInt, RawPointer, CULong;
override selector("descriptorWithDescriptorType:data:") = NSAppleEventDescriptor, UInt, NSData;
override selector("descriptorWithEnumCode:") = NSAppleEventDescriptor, UInt;
override selector("descriptorWithInt32:") = NSAppleEventDescriptor, Int;
override selector("descriptorWithString:") = NSAppleEventDescriptor, NSString;
override selector("descriptorWithTypeCode:") = NSAppleEventDescriptor, UInt;
override selector("deselectAll") = Void;
override selector("deselectAll:") = Void, Id;
override selector("deselectAllCells") = Void;
override selector("deselectColumn:") = Void, CLong;
override selector("deselectItemAtIndex:") = Void, CLong;
override selector("deselectRow:") = Void, CLong;
override selector("deselectSelectedCell") = Void;
override selector("designMode") = NSString;
override selector("desktopImageOptionsForScreen:") = NSDictionary, NSScreen;
override selector("desktopImageURLForScreen:") = NSURL, NSScreen;
override selector("destinationContext") = NSManagedObjectContext;
override selector("destinationEntity") = NSEntityDescription;
override selector("destinationEntityForEntityMapping:") = NSEntityDescription, NSEntityMapping;
override selector("destinationEntityName") = NSString;
override selector("destinationEntityVersionHash") = NSData;
override selector("destinationInstancesForEntityMappingNamed:sourceInstances:") = NSArray, NSString, NSArray;
override selector("destinationModel") = NSManagedObjectModel;
override selector("destinationOfSymbolicLinkAtPath:error:") = NSString, NSString, Pointer[NSError];
override selector("destroyContext") = Void;
override selector("detach") = Void;
override selector("detachColorList:") = Void, NSColorList;
override selector("detachDrawingThread:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
override selector("detachNewThreadSelector:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
override selector("detail") = Int;
override selector("detectConflictsForObject:") = Void, NSManagedObject;
override selector("developmentLocalization") = NSString;
override selector("device") = Id;
override selector("deviceCMYKColorSpace") = NSColorSpace;
override selector("deviceDescription") = NSDictionary;
override selector("deviceGrayColorSpace") = NSColorSpace;
override selector("deviceID") = CULong;
override selector("deviceRGBColorSpace") = NSColorSpace;
override selector("deviceSize") = NSSize;
override selector("dictionary") = Id;
override selector("dictionaryForKey:") = NSDictionary, NSString;
override selector("dictionaryFromTXTRecordData:") = NSDictionary, NSData;
override selector("dictionaryRepresentation") = NSDictionary;
override selector("dictionaryWithCapacity:") = Id, CULong;
override selector("dictionaryWithContentsOfFile:") = Id, NSString;
override selector("dictionaryWithContentsOfURL:") = Id, NSURL;
override selector("dictionaryWithDictionary:") = Id, NSDictionary;
override selector("dictionaryWithObject:forKey:") = Id, Id, Id;
override selector("dictionaryWithObjects:forKeys:") = Id, NSArray, NSArray;
override selector("dictionaryWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], CULong;
override varargSelector("dictionaryWithObjectsAndKeys:") = Id, Id;
override selector("dictionaryWithValuesForKeys:") = NSDictionary, NSArray;
override selector("didAccessValueForKey:") = Void, NSString;
override selector("didAddSubview:") = Void, NSView;
override selector("didAddToPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
override selector("didChange:valuesAtIndexes:forKey:") = Void, CULong, NSIndexSet, NSString;
override selector("didChangeArrangementCriteria") = Void;
override selector("didChangeText") = Void;
override selector("didChangeValueForKey:") = Void, NSString;
override selector("didChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, CULong, NSSet;
override selector("didLoadBytes:loadComplete:") = Void, NSData, Bool;
override selector("didSave") = Void;
override selector("didTurnIntoFault") = Void;
override selector("dir") = NSString;
override selector("directParameter") = Id;
override selector("direction") = NSString;
override selector("directory") = NSString;
override selector("directoryAttributes") = NSDictionary;
override selector("directoryContentsAtPath:") = NSArray, NSString;
override selector("directoryURL") = NSURL;
override selector("disable") = Void;
override selector("disableCollectorForPointer:") = Void, RawPointer;
override selector("disableCursorRects") = Void;
override selector("disableFlushWindow") = Void;
override selector("disableKeyEquivalentForDefaultButtonCell") = Void;
override selector("disableScreenUpdatesUntilFlush") = Void;
override selector("disableSuddenTermination") = Void;
override selector("disableUndoRegistration") = Void;
override selector("disableUpdates") = Void;
override selector("disabled") = Bool;
override selector("disabledControlTextColor") = NSColor;
override selector("disappearingItemCursor") = NSCursor;
override selector("discardCachedImage") = Void;
override selector("discardContentIfPossible") = Void;
override selector("discardCursorRects") = Void;
override selector("discardEditing") = Void;
override selector("discardEventsMatchingMask:beforeEvent:") = Void, CULong, NSEvent;
override selector("discardMarkedText") = Void;
override selector("diskCapacity") = CULong;
override selector("dismissPopUp") = Void;
override selector("dispatch") = Void;
override selector("dispatchEvent:") = Bool, DOMEvent;
override selector("dispatchRawAppleEvent:withRawReply:handlerRefCon:") = Short, Pointer[AppleEvent], Pointer[AppleEvent], SRefCon;
override selector("display") = NSString;
override selector("displayAllColumns") = Void;
override selector("displayColumn:") = Void, CLong;
override selector("displayIfNeeded") = Void;
override selector("displayIfNeededIgnoringOpacity") = Void;
override selector("displayIfNeededInRect:") = Void, NSRect;
override selector("displayIfNeededInRectIgnoringOpacity:") = Void, NSRect;
override selector("displayLayer:") = Void, CALayer;
override selector("displayMode") = CULong;
override selector("displayName") = NSString;
override selector("displayNameAtPath:") = NSString, NSString;
override selector("displayNameForKey:value:") = NSString, Id, Id;
override selector("displayNameForType:") = NSString, NSString;
override selector("displayRect:") = Void, NSRect;
override selector("displayRectIgnoringOpacity:") = Void, NSRect;
override selector("displayRectIgnoringOpacity:inContext:") = Void, NSRect, NSGraphicsContext;
override selector("displayValuesForRow:") = NSArray, CLong;
override selector("displayValuesKeyPath") = NSString;
override selector("displayableSubpredicatesOfPredicate:") = NSArray, NSPredicate;
override selector("displayedCommandsTitle") = NSString;
override selector("displaysLinkToolTips") = Bool;
override selector("displaysWhenScreenProfileChanges") = Bool;
override selector("dissolveToPoint:fraction:") = Void, NSPoint, Double;
override selector("dissolveToPoint:fromRect:fraction:") = Void, NSPoint, NSRect, Double;
override selector("distantFuture") = Id;
override selector("distantPast") = Id;
override selector("distinguishedNames") = NSArray;
override selector("dividerColor") = NSColor;
override selector("dividerStyle") = CLong;
override selector("dividerThickness") = Double;
override selector("doClick:") = Void, Id;
override selector("doCommandBySelector:") = Void, SelectorHandle;
override selector("doCommandBySelector:client:") = Void, SelectorHandle, Id;
override selector("doDoubleClick:") = Void, Id;
override selector("docFormatFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
override selector("dockMenu") = NSMenu;
override selector("dockTile") = NSDockTile;
override selector("doctype") = DOMDocumentType;
override selector("document") = Id;
override selector("documentClassForType:") = Id, NSString;
override selector("documentClassNames") = NSArray;
override selector("documentContentKind") = CULong;
override selector("documentCursor") = NSCursor;
override selector("documentElement") = DOMElement;
override selector("documentForFileName:") = Id, NSString;
override selector("documentForURL:") = Id, NSURL;
override selector("documentForWindow:") = Id, NSWindow;
override selector("documentRect") = NSRect;
override selector("documentSource") = NSString;
override selector("documentURI") = NSString;
override selector("documentView") = Id;
override selector("documentViewShouldHandlePrint") = Bool;
override selector("documentVisibleRect") = NSRect;
override selector("documentWithRootElement:") = Id, NSXMLElement;
override selector("documents") = NSArray;
override selector("doesContain:") = Bool, Id;
override selector("doesNotRecognizeSelector:") = Void, SelectorHandle;
override selector("doesRelativeDateFormatting") = Bool;
override selector("domain") = NSString;
override selector("dominantLanguage") = NSString;
override selector("dominantLanguageForScript:") = NSString, NSString;
override selector("dominantScript") = NSString;
override selector("doubleAction") = SelectorHandle;
override selector("doubleClickAtIndex:") = NSRange, CULong;
override selector("doubleClickInterval") = Double;
override selector("doubleForKey:") = Double, NSString;
override selector("doubleValue") = Double;
override selector("download") = Void;
override selector("download:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLDownload, NSURLProtectionSpace;
override selector("download:decideDestinationWithSuggestedFilename:") = Void, NSURLDownload, NSString;
override selector("download:didCancelAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
override selector("download:didCreateDestination:") = Void, NSURLDownload, NSString;
override selector("download:didFailWithError:") = Void, NSURLDownload, NSError;
override selector("download:didReceiveAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
override selector("download:didReceiveDataOfLength:") = Void, NSURLDownload, CULong;
override selector("download:didReceiveResponse:") = Void, NSURLDownload, NSURLResponse;
override selector("download:shouldDecodeSourceDataOfMIMEType:") = Bool, NSURLDownload, NSString;
override selector("download:willResumeWithResponse:fromByte:") = Void, NSURLDownload, NSURLResponse, Int64;
override selector("download:willSendRequest:redirectResponse:") = NSURLRequest, NSURLDownload, NSURLRequest, NSURLResponse;
override selector("downloadDelegate") = Id;
override selector("downloadDidBegin:") = Void, NSURLDownload;
override selector("downloadDidFinish:") = Void, NSURLDownload;
override selector("downloadShouldUseCredentialStorage:") = Bool, NSURLDownload;
override selector("downloadWindowForAuthenticationSheet:") = NSWindow, WebDownload;
override selector("dragColor:withEvent:fromView:") = Bool, NSColor, NSEvent, NSView;
override selector("dragCopyCursor") = NSCursor;
override selector("dragFile:fromRect:slideBack:event:") = Bool, NSString, NSRect, Bool, NSEvent;
override selector("dragImage:at:offset:event:pasteboard:source:slideBack:") = Void, NSImage, NSPoint, NSSize, NSEvent, NSPasteboard, Id, Bool;
override selector("dragImageForRows:event:dragImageOffset:") = NSImage, NSArray, NSEvent, NSPointPointer;
override selector("dragImageForRowsWithIndexes:tableColumns:event:offset:") = NSImage, NSIndexSet, NSArray, NSEvent, NSPointPointer;
override selector("dragImageForSelectionWithEvent:origin:") = NSImage, NSEvent, NSPointPointer;
override selector("dragLinkCursor") = NSCursor;
override selector("dragOperationForDraggingInfo:type:") = CULong, Id, NSString;
override selector("dragPromisedFilesOfTypes:fromRect:source:slideBack:event:") = Bool, NSArray, NSRect, Id, Bool, NSEvent;
override selector("dragSelectionWithEvent:offset:slideBack:") = Bool, NSEvent, NSSize, Bool;
override selector("draggedColumn") = CLong;
override selector("draggedDistance") = Double;
override selector("draggedImage") = NSImage;
override selector("draggedImage:beganAt:") = Void, NSImage, NSPoint;
override selector("draggedImage:endedAt:deposited:") = Void, NSImage, NSPoint, Bool;
override selector("draggedImage:endedAt:operation:") = Void, NSImage, NSPoint, CULong;
override selector("draggedImage:movedTo:") = Void, NSImage, NSPoint;
override selector("draggedImageLocation") = NSPoint;
override selector("draggingDestinationFeedbackStyle") = CLong;
override selector("draggingDestinationWindow") = NSWindow;
override selector("draggingEnded:") = Void, Id;
override selector("draggingEntered:") = CULong, Id;
override selector("draggingExited:") = Void, Id;
override selector("draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSIndexSet, NSEvent, NSPointPointer;
override selector("draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSIndexSet, CLong, NSEvent, NSPointPointer;
override selector("draggingLocation") = NSPoint;
override selector("draggingPasteboard") = NSPasteboard;
override selector("draggingSequenceNumber") = CLong;
override selector("draggingSource") = Id;
override selector("draggingSourceOperationMask") = CULong;
override selector("draggingSourceOperationMaskForLocal:") = CULong, Bool;
override selector("draggingUpdated:") = CULong, Id;
override selector("drain") = Void;
override selector("draw") = Bool;
override selector("drawArrow:highlight:") = Void, CULong, Bool;
override selector("drawAtPoint:") = Bool, NSPoint;
override selector("drawAtPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
override selector("drawAtPoint:withAttributes:") = Void, NSPoint, NSDictionary;
override selector("drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:") = Void, NSTextTableBlock, NSRect, NSView, NSRange, NSLayoutManager;
override selector("drawBackgroundForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
override selector("drawBackgroundInClipRect:") = Void, NSRect;
override selector("drawBackgroundWithFrame:inView:characterRange:layoutManager:") = Void, NSRect, NSView, NSRange, NSLayoutManager;
override selector("drawBarInside:flipped:") = Void, NSRect, Bool;
override selector("drawBezelWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawBorderAndBackgroundWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawCell:") = Void, NSCell;
override selector("drawCellAtIndex:") = Void, CLong;
override selector("drawCellAtRow:column:") = Void, CLong, CLong;
override selector("drawCellInside:") = Void, NSCell;
override selector("drawDividerInRect:") = Void, NSRect;
override selector("drawFromCenter:radius:toCenter:radius:options:") = Void, NSPoint, Double, NSPoint, Double, CULong;
override selector("drawFromPoint:toPoint:options:") = Void, NSPoint, NSPoint, CULong;
override selector("drawGlyphsForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
override selector("drawGridInClipRect:") = Void, NSRect;
override selector("drawHashMarksAndLabelsInRect:") = Void, NSRect;
override selector("drawImage:withFrame:inView:") = Void, NSImage, NSRect, NSView;
override selector("drawImageWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawInBezierPath:angle:") = Void, NSBezierPath, Double;
override selector("drawInBezierPath:relativeCenterPosition:") = Void, NSBezierPath, NSPoint;
override selector("drawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Void, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
override selector("drawInContext:") = Void, CGContextRef;
override selector("drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Void, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
override selector("drawInRect:") = Bool, NSRect;
override selector("drawInRect:angle:") = Void, NSRect, Double;
override selector("drawInRect:fromRect:operation:fraction:") = Void, NSRect, NSRect, CULong, Double;
override selector("drawInRect:fromRect:operation:fraction:respectFlipped:hints:") = Bool, NSRect, NSRect, CULong, Double, Bool, NSDictionary;
override selector("drawInRect:relativeCenterPosition:") = Void, NSRect, NSPoint;
override selector("drawInRect:withAttributes:") = Void, NSRect, NSDictionary;
override selector("drawInsertionPointInRect:color:turnedOn:") = Void, NSRect, NSColor, Bool;
override selector("drawInteriorWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawKeyEquivalentWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawKnob") = Void;
override selector("drawKnob:") = Void, NSRect;
override selector("drawKnobSlotInRect:highlight:") = Void, NSRect, Bool;
override selector("drawLabel:inRect:") = Void, Bool, NSRect;
override selector("drawLayer:inContext:") = Void, CALayer, CGContextRef;
override selector("drawMarkersInRect:") = Void, NSRect;
override selector("drawPackedGlyphs:atPoint:") = Void, Pointer[CChar], NSPoint;
override selector("drawPageBorderWithSize:") = Void, NSSize;
override selector("drawParts") = Void;
override selector("drawRect:") = Void, NSRect;
override selector("drawRepresentation:inRect:") = Bool, NSImageRep, NSRect;
override selector("drawRow:clipRect:") = Void, CLong, NSRect;
override selector("drawSegment:inFrame:withView:") = Void, CLong, NSRect, NSView;
override selector("drawSelector") = SelectorHandle;
override selector("drawSeparatorItemWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawSheetBorderWithSize:") = Void, NSSize;
override selector("drawSortIndicatorWithFrame:inView:ascending:priority:") = Void, NSRect, NSView, Bool, CLong;
override selector("drawStateImageWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawStatusBarBackgroundInRect:withHighlight:") = Void, NSRect, Bool;
override selector("drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
override selector("drawSwatchInRect:") = Void, NSRect;
override selector("drawTitle:withFrame:inView:") = NSRect, NSAttributedString, NSRect, NSView;
override selector("drawTitleOfColumn:inRect:") = Void, CLong, NSRect;
override selector("drawTitleWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
override selector("drawViewBackgroundInRect:") = Void, NSRect;
override selector("drawWellInside:") = Void, NSRect;
override selector("drawWithExpansionFrame:inView:") = Void, NSRect, NSView;
override selector("drawWithFrame:inView:") = Void, NSRect, NSView;
override selector("drawWithFrame:inView:characterIndex:") = Void, NSRect, NSView, CULong;
override selector("drawWithFrame:inView:characterIndex:layoutManager:") = Void, NSRect, NSView, CULong, NSLayoutManager;
override selector("drawWithRect:options:") = Void, NSRect, CLong;
override selector("drawWithRect:options:attributes:") = Void, NSRect, CLong, NSDictionary;
override selector("drawerDidClose:") = Void, NSNotification;
override selector("drawerDidOpen:") = Void, NSNotification;
override selector("drawerShouldClose:") = Bool, NSDrawer;
override selector("drawerShouldOpen:") = Bool, NSDrawer;
override selector("drawerWillClose:") = Void, NSNotification;
override selector("drawerWillOpen:") = Void, NSNotification;
override selector("drawerWillResizeContents:toSize:") = NSSize, NSDrawer, NSSize;
override selector("drawers") = NSArray;
override selector("drawingRectForBounds:") = NSRect, NSRect;
override selector("drawsBackground") = Bool;
override selector("drawsCellBackground") = Bool;
override selector("drawsGrid") = Bool;
override selector("drawsOutsideLineFragmentForGlyphAtIndex:") = Bool, CULong;
override selector("drawsVerticallyForCharacterAtIndex:") = Bool, CULong;
override selector("duplicateURLs:completionHandler:") = Void, NSArray, UnknownType;
override selector("duration") = Double;
override selector("earlierDate:") = NSDate, NSDate;
override selector("echosBullets") = Bool;
override selector("edge") = CULong;
override selector("edgeAntialiasingMask") = UInt;
override selector("editColumn:row:withEvent:select:") = Void, CLong, CLong, NSEvent, Bool;
override selector("editItemAtIndexPath:withEvent:select:") = Void, NSIndexPath, NSEvent, Bool;
override selector("editWithFrame:inView:editor:delegate:event:") = Void, NSRect, NSView, NSText, Id, NSEvent;
override selector("editableDOMRangeForPoint:") = DOMRange, NSPoint;
override selector("edited:range:changeInLength:") = Void, CULong, NSRange, CLong;
override selector("editedColumn") = CLong;
override selector("editedMask") = CULong;
override selector("editedRange") = NSRange;
override selector("editedRow") = CLong;
override selector("editingDelegate") = Id;
override selector("editingStringForObjectValue:") = NSString, Id;
override selector("elementAtIndex:") = CULong, CLong;
override selector("elementAtIndex:associatedPoints:") = CULong, CLong, NSPointArray;
override selector("elementAtPoint:") = NSDictionary, NSPoint;
override selector("elementCount") = CLong;
override selector("elementDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("elementFromPoint:y:") = DOMElement, Int, Int;
override selector("elementWithName:") = Id, NSString;
override selector("elementWithName:URI:") = Id, NSString, NSString;
override selector("elementWithName:children:attributes:") = Id, NSString, NSArray, NSArray;
override selector("elementWithName:stringValue:") = Id, NSString, NSString;
override selector("elements") = DOMHTMLCollection;
override selector("elementsDerivedFromExternalRecordURL:") = NSDictionary, NSURL;
override selector("elementsForLocalName:URI:") = NSArray, NSString, NSString;
override selector("elementsForName:") = NSArray, NSString;
override selector("elevation") = NSString;
override selector("embeds") = DOMHTMLCollection;
override selector("emptyCells") = NSString;
override selector("emptyImage") = CIImage;
override selector("enable") = Void;
override selector("enableCollectorForPointer:") = Void, RawPointer;
override selector("enableCursorRects") = Void;
override selector("enableFlushWindow") = Void;
override selector("enableKeyEquivalentForDefaultButtonCell") = Void;
override selector("enableMultipleThreads") = Void;
override selector("enableSuddenTermination") = Void;
override selector("enableUndoRegistration") = Void;
override selector("enableUpdates") = Void;
override selector("enabledTextCheckingTypes") = UInt64;
override selector("enclosingMenuItem") = NSMenuItem;
override selector("enclosingScrollView") = NSScrollView;
override selector("encodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], CULong, RawPointer;
override selector("encodeBool:forKey:") = Void, Bool, NSString;
override selector("encodeBycopyObject:") = Void, Id;
override selector("encodeByrefObject:") = Void, Id;
override selector("encodeBytes:length:") = Void, RawPointer, CULong;
override selector("encodeBytes:length:forKey:") = Void, Pointer[CUChar], CULong, NSString;
override selector("encodeClassName:intoClassName:") = Void, NSString, NSString;
override selector("encodeConditionalObject:") = Void, Id;
override selector("encodeConditionalObject:forKey:") = Void, Id, NSString;
override selector("encodeDataObject:") = Void, NSData;
override selector("encodeDouble:forKey:") = Void, Double, NSString;
override selector("encodeFloat:forKey:") = Void, Float, NSString;
override selector("encodeInt32:forKey:") = Void, Int, NSString;
override selector("encodeInt64:forKey:") = Void, Int64, NSString;
override selector("encodeInt:forKey:") = Void, Int, NSString;
override selector("encodeInteger:forKey:") = Void, CLong, NSString;
override selector("encodeNXObject:") = Void, Id;
override selector("encodeObject:") = Void, Id;
override selector("encodeObject:forKey:") = Void, Id, NSString;
override selector("encodePoint:") = Void, NSPoint;
override selector("encodePoint:forKey:") = Void, NSPoint, NSString;
override selector("encodePortObject:") = Void, NSPort;
override selector("encodePropertyList:") = Void, Id;
override selector("encodeRect:") = Void, NSRect;
override selector("encodeRect:forKey:") = Void, NSRect, NSString;
override selector("encodeRootObject:") = Void, Id;
override selector("encodeSize:") = Void, NSSize;
override selector("encodeSize:forKey:") = Void, NSSize, NSString;
override selector("encodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
override varargSelector("encodeValuesOfObjCTypes:") = Void, Pointer[CChar];
override selector("encodeWithCoder:") = Void, NSCoder;
override selector("encoding") = NSString;
override selector("enctype") = NSString;
override selector("endContainer") = DOMNode;
override selector("endContentAccess") = Void;
override selector("endDocument") = Void;
override selector("endEditing") = Void;
override selector("endEditing:") = Void, NSText;
override selector("endEditingFor:") = Void, Id;
override selector("endEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
override selector("endGestureWithEvent:") = Void, NSEvent;
override selector("endGrouping") = Void;
override selector("endInstanceCreationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
override selector("endLineWithGlyphRange:") = Void, NSRange;
override selector("endLoadInBackground") = Void;
override selector("endModalSession:") = Void, NSModalSession;
override selector("endOffset") = Int;
override selector("endPage") = Void;
override selector("endParagraph") = Void;
override selector("endRelationshipCreationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
override selector("endSheet:") = Void, NSWindow;
override selector("endSheet:returnCode:") = Void, NSWindow, CLong;
override selector("endSpecifier") = NSScriptObjectSpecifier;
override selector("endSubelementIdentifier") = CULong;
override selector("endSubelementIndex") = CLong;
override selector("endUndoGrouping") = Void;
override selector("enqueueNotification:postingStyle:") = Void, NSNotification, CULong;
override selector("enqueueNotification:postingStyle:coalesceMask:forModes:") = Void, NSNotification, CULong, CULong, NSArray;
override selector("ensureAttributesAreFixedInRange:") = Void, NSRange;
override selector("ensureGlyphsForCharacterRange:") = Void, NSRange;
override selector("ensureGlyphsForGlyphRange:") = Void, NSRange;
override selector("ensureLayoutForBoundingRect:inTextContainer:") = Void, NSRect, NSTextContainer;
override selector("ensureLayoutForCharacterRange:") = Void, NSRange;
override selector("ensureLayoutForGlyphRange:") = Void, NSRange;
override selector("ensureLayoutForTextContainer:") = Void, NSTextContainer;
override selector("enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, RawPointer;
override selector("enterFullScreenMode:withOptions:") = Bool, NSScreen, NSDictionary;
override selector("entities") = Id;
override selector("entitiesByName") = NSDictionary;
override selector("entitiesForConfiguration:") = NSArray, NSString;
override selector("entity") = NSEntityDescription;
override selector("entityDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("entityForName:inManagedObjectContext:") = NSEntityDescription, NSString, NSManagedObjectContext;
override selector("entityMappings") = NSArray;
override selector("entityMappingsByName") = NSDictionary;
override selector("entityMigrationPolicyClassName") = NSString;
override selector("entityName") = NSString;
override selector("entityVersionHashesByName") = NSDictionary;
override selector("entryType") = CLong;
override selector("enumCodeValue") = UInt;
override selector("enumerateAttribute:inRange:options:usingBlock:") = Void, NSString, NSRange, CULong, UnknownType;
override selector("enumerateAttributesInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
override selector("enumerateIndexesInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
override selector("enumerateIndexesUsingBlock:") = Void, UnknownType;
override selector("enumerateIndexesWithOptions:usingBlock:") = Void, CULong, UnknownType;
override selector("enumerateKeysAndObjectsUsingBlock:") = Void, UnknownType;
override selector("enumerateKeysAndObjectsWithOptions:usingBlock:") = Void, CULong, UnknownType;
override selector("enumerateLinesUsingBlock:") = Void, UnknownType;
override selector("enumerateObjectsAtIndexes:options:usingBlock:") = Void, NSIndexSet, CULong, UnknownType;
override selector("enumerateObjectsUsingBlock:") = Void, UnknownType;
override selector("enumerateObjectsWithOptions:usingBlock:") = Void, CULong, UnknownType;
override selector("enumerateSubstringsInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
override selector("enumeratorAtPath:") = NSDirectoryEnumerator, NSString;
override selector("enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:") = NSDirectoryEnumerator, NSURL, NSArray, CULong, UnknownType;
override selector("environment") = NSDictionary;
override selector("era") = CLong;
override selector("eraSymbols") = NSArray;
override selector("error") = NSError;
override selector("errorWithDomain:code:userInfo:") = Id, NSString, CLong, NSDictionary;
override selector("estimatedProgress") = Double;
override selector("evaluate") = Void;
override selector("evaluate:::") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;
override selector("evaluate:::::") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
override selector("evaluate:contextNode:resolver:type:inResult:") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
override selector("evaluate:type:inResult:") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;
override selector("evaluateWebScript:") = Id, NSString;
override selector("evaluateWithObject:") = Bool, Id;
override selector("evaluateWithObject:substitutionVariables:") = Bool, Id, NSDictionary;
override selector("evaluatedArguments") = NSDictionary;
override selector("evaluatedReceivers") = Id;
override selector("evaluationErrorNumber") = CLong;
override selector("evaluationErrorSpecifier") = NSScriptObjectSpecifier;
override selector("event") = NSString;
override selector("eventClass") = UInt;
override selector("eventID") = UInt;
override selector("eventNumber") = CLong;
override selector("eventPhase") = UShort;
override selector("eventRef") = RawPointer;
override selector("eventWithCGEvent:") = NSEvent, CGEventRef;
override selector("eventWithEventRef:") = NSEvent, RawPointer;
override selector("evictsObjectsWithDiscardedContent") = Bool;
override selector("exceptionDuringOperation:error:leftOperand:rightOperand:") = NSDecimalNumber, SelectorHandle, CULong, NSDecimalNumber, NSDecimalNumber;
override selector("exceptionWithName:reason:userInfo:") = NSException, NSString, NSString, NSDictionary;
override selector("exchangeObjectAtIndex:withObjectAtIndex:") = Void, CULong, CULong;
override selector("excludedKeys") = NSArray;
override selector("execCommand:") = Bool, NSString;
override selector("execCommand:userInterface:") = Bool, NSString, Bool;
override selector("execCommand:userInterface:value:") = Bool, NSString, Bool, NSString;
override selector("executableArchitecture") = CLong;
override selector("executableArchitectures") = NSArray;
override selector("executablePath") = NSString;
override selector("executableURL") = NSURL;
override selector("executeAndReturnError:") = NSAppleEventDescriptor, Pointer[NSDictionary];
override selector("executeAppleEvent:error:") = NSAppleEventDescriptor, NSAppleEventDescriptor, Pointer[NSDictionary];
override selector("executeCommand") = Id;
override selector("executeFetchRequest:error:") = NSArray, NSFetchRequest, Pointer[NSError];
override selector("executionBlocks") = NSArray;
override selector("existingObjectWithID:error:") = NSManagedObject, NSManagedObjectID, Pointer[NSError];
override selector("exit") = Void;
override selector("exitFullScreenModeWithOptions:") = Void, NSDictionary;
override selector("expandEntityReferences") = Bool;
override selector("expandItem:") = Void, Id;
override selector("expandItem:expandChildren:") = Void, Id, Bool;
override selector("expansionFrameWithFrame:inView:") = NSRect, NSRect, NSView;
override selector("expectedContentLength") = Int64;
override selector("expectedResourceDataSize") = Int64;
override selector("expiresDate") = NSDate;
override selector("exponentSymbol") = NSString;
override selector("exposeBinding:") = Void, NSString;
override selector("exposedBindings") = NSArray;
override selector("expression") = NSExpression;
override selector("expressionBlock") = UnknownType;
override selector("expressionForAggregate:") = NSExpression, NSArray;
override selector("expressionForBlock:arguments:") = NSExpression, UnknownType, NSArray;
override selector("expressionForConstantValue:") = NSExpression, Id;
override selector("expressionForEvaluatedObject") = NSExpression;
override selector("expressionForFetch:context:countOnly:") = NSExpression, NSExpression, NSExpression, Bool;
override selector("expressionForFunction:arguments:") = NSExpression, NSString, NSArray;
override selector("expressionForFunction:selectorName:arguments:") = NSExpression, NSExpression, NSString, NSArray;
override selector("expressionForIntersectSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForKeyPath:") = NSExpression, NSString;
override selector("expressionForMinusSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForSubquery:usingIteratorVariable:predicate:") = NSExpression, NSExpression, NSString, Id;
override selector("expressionForUnionSet:with:") = NSExpression, NSExpression, NSExpression;
override selector("expressionForVariable:") = NSExpression, NSString;
override selector("expressionResultType") = CULong;
override selector("expressionType") = CULong;
override selector("expressionValueWithObject:context:") = Id, Id, NSMutableDictionary;
override selector("extendPowerOffBy:") = CLong, CLong;
override selector("extent") = CGRect;
override selector("extraLineFragmentRect") = NSRect;
override selector("extraLineFragmentTextContainer") = NSTextContainer;
override selector("extraLineFragmentUsedRect") = NSRect;
override selector("extractContents") = DOMDocumentFragment;
override selector("face") = NSString;
override selector("failureReason") = NSString;
override selector("failureResponse") = NSURLResponse;
override selector("familyName") = NSString;
override selector("fantasyFontFamily") = NSString;
override selector("fastestEncoding") = CULong;
override selector("faultingState") = CULong;
override selector("fetch:") = Void, Id;
override selector("fetchBatchSize") = CULong;
override selector("fetchLimit") = CULong;
override selector("fetchOffset") = CULong;
override selector("fetchPredicate") = NSPredicate;
override selector("fetchRequest") = NSFetchRequest;
override selector("fetchRequestFromTemplateWithName:substitutionVariables:") = NSFetchRequest, NSString, NSDictionary;
override selector("fetchRequestTemplateForName:") = NSFetchRequest, NSString;
override selector("fetchRequestTemplatesByName") = NSDictionary;
override selector("fetchWithRequest:merge:error:") = Bool, NSFetchRequest, Bool, Pointer[NSError];
override selector("fgColor") = NSString;
override selector("fieldEditor:forObject:") = NSText, Bool, Id;
override selector("fieldEditorForView:") = NSTextView, NSView;
override selector("fileAttributes") = NSDictionary;
override selector("fileAttributesAtPath:traverseLink:") = NSDictionary, NSString, Bool;
override selector("fileAttributesToWriteToFile:ofType:saveOperation:") = NSDictionary, NSString, NSString, CULong;
override selector("fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:") = NSDictionary, NSURL, NSString, CULong, NSURL, Pointer[NSError];
override selector("fileCreationDate") = NSDate;
override selector("fileDescriptor") = Int;
override selector("fileExistsAtPath:") = Bool, NSString;
override selector("fileExistsAtPath:isDirectory:") = Bool, NSString, Pointer[Bool];
override selector("fileExtensionHidden") = Bool;
override selector("fileExtensionsFromType:") = NSArray, NSString;
override selector("fileGroupOwnerAccountID") = NSNumber;
override selector("fileGroupOwnerAccountName") = NSString;
override selector("fileHFSCreatorCode") = UInt;
override selector("fileHFSTypeCode") = UInt;
override selector("fileHandleForReading") = NSFileHandle;
override selector("fileHandleForReadingAtPath:") = Id, NSString;
override selector("fileHandleForReadingFromURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleForUpdatingAtPath:") = Id, NSString;
override selector("fileHandleForUpdatingURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleForWriting") = NSFileHandle;
override selector("fileHandleForWritingAtPath:") = Id, NSString;
override selector("fileHandleForWritingToURL:error:") = Id, NSURL, Pointer[NSError];
override selector("fileHandleWithNullDevice") = Id;
override selector("fileHandleWithStandardError") = Id;
override selector("fileHandleWithStandardInput") = Id;
override selector("fileHandleWithStandardOutput") = Id;
override selector("fileIsAppendOnly") = Bool;
override selector("fileIsImmutable") = Bool;
override selector("fileLabelColors") = NSArray;
override selector("fileLabels") = NSArray;
override selector("fileManager:shouldCopyItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldCopyItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldLinkItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldLinkItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldMoveItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
override selector("fileManager:shouldMoveItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:") = Bool, NSFileManager, NSDictionary;
override selector("fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:movingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
override selector("fileManager:shouldProceedAfterError:movingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
override selector("fileManager:shouldProceedAfterError:removingItemAtPath:") = Bool, NSFileManager, NSError, NSString;
override selector("fileManager:shouldProceedAfterError:removingItemAtURL:") = Bool, NSFileManager, NSError, NSURL;
override selector("fileManager:shouldRemoveItemAtPath:") = Bool, NSFileManager, NSString;
override selector("fileManager:shouldRemoveItemAtURL:") = Bool, NSFileManager, NSURL;
override selector("fileManager:willProcessPath:") = Void, NSFileManager, NSString;
override selector("fileModificationDate") = NSDate;
override selector("fileName") = NSString;
override selector("fileNameExtensionForType:saveOperation:") = NSString, NSString, CULong;
override selector("fileNameExtensionWasHiddenInLastRunSavePanel") = Bool;
override selector("fileNamesFromRunningOpenPanel") = NSArray;
override selector("fileOwnerAccountID") = NSNumber;
override selector("fileOwnerAccountName") = NSString;
override selector("filePathURL") = NSURL;
override selector("filePosixPermissions") = CULong;
override selector("fileReferenceURL") = NSURL;
override selector("fileSize") = UInt64;
override selector("fileSystemAttributesAtPath:") = NSDictionary, NSString;
override selector("fileSystemChanged") = Bool;
override selector("fileSystemFileNumber") = CULong;
override selector("fileSystemNumber") = CLong;
override selector("fileSystemRepresentation") = Pointer[CChar];
override selector("fileSystemRepresentationWithPath:") = Pointer[CChar], NSString;
override selector("fileType") = NSString;
override selector("fileTypeFromLastRunSavePanel") = NSString;
override selector("fileURL") = NSURL;
override selector("fileURLWithPath:") = Id, NSString;
override selector("fileURLWithPath:isDirectory:") = Id, NSString, Bool;
override selector("fileURLWithPathComponents:") = NSURL, NSArray;
override selector("fileWrapper") = NSFileWrapper;
override selector("fileWrapperFromRange:documentAttributes:error:") = NSFileWrapper, NSRange, NSDictionary, Pointer[NSError];
override selector("fileWrapperOfType:error:") = NSFileWrapper, NSString, Pointer[NSError];
override selector("fileWrapperRepresentationOfType:") = NSFileWrapper, NSString;
override selector("fileWrappers") = NSDictionary;
override selector("filename") = NSString;
override selector("filenameExtension:isValidForType:") = Bool, NSString, NSString;
override selector("filenames") = NSArray;
override selector("files") = DOMFileList;
override selector("fill") = Void;
override selector("fillBackgroundRectArray:count:forCharacterRange:color:") = Void, NSRectArray, CULong, NSRange, NSColor;
override selector("fillColor") = NSColor;
override selector("fillMode") = NSString;
override selector("fillRect:") = Void, NSRect;
override selector("filter") = Id;
override selector("filterPredicate") = NSPredicate;
override selector("filterUsingPredicate:") = Void, NSPredicate;
override selector("filteredArrayUsingPredicate:") = NSArray, NSPredicate;
override selector("filteredSetUsingPredicate:") = NSSet, NSPredicate;
override selector("filters") = NSArray;
override selector("finalWritePrintInfo") = Void;
override selector("finalize") = Void;
override selector("finalizeForWebScript") = Void;
override selector("findApplications") = Void;
override selector("findFrameNamed:") = WebFrame, NSString;
override selector("findString:inBook:") = Void, NSString, NSString;
override selector("finishDecoding") = Void;
override selector("finishEncoding") = Void;
override selector("finishLaunching") = Void;
override selector("finishedLoadingWithDataSource:") = Void, WebDataSource;
override selector("fire") = Void;
override selector("fireDate") = NSDate;
override selector("firstChild") = DOMNode;
override selector("firstElementChild") = DOMElement;
override selector("firstIndex") = CULong;
override selector("firstLineHeadIndent") = Double;
override selector("firstObjectCommonWithArray:") = Id, NSArray;
override selector("firstRectForCharacterRange:") = NSRect, NSRange;
override selector("firstRectForCharacterRange:actualRange:") = NSRect, NSRange, NSRangePointer;
override selector("firstResponder") = NSResponder;
override selector("firstTextView") = NSTextView;
override selector("firstUnlaidCharacterIndex") = CULong;
override selector("firstUnlaidGlyphIndex") = CULong;
override selector("firstVisibleColumn") = CLong;
override selector("firstWeekday") = CULong;
override selector("fixAttachmentAttributeInRange:") = Void, NSRange;
override selector("fixAttributesInRange:") = Void, NSRange;
override selector("fixFontAttributeInRange:") = Void, NSRange;
override selector("fixParagraphStyleAttributeInRange:") = Void, NSRange;
override selector("fixedFontFamily") = NSString;
override selector("fixesAttributesLazily") = Bool;
override selector("flagsChanged:") = Void, NSEvent;
override selector("flatness") = Double;
override selector("floatForKey:") = Float, NSString;
override selector("floatForKey:inTable:") = Float, NSString, NSString;
override selector("floatValue") = Float;
override selector("flushBuffer") = Void;
override selector("flushBufferedKeyEvents") = Void;
override selector("flushCachedData") = Void;
override selector("flushGraphics") = Void;
override selector("flushHostCache") = Void;
override selector("flushWindow") = Void;
override selector("flushWindowIfNeeded") = Void;
override selector("focus") = Void;
override selector("focusRingType") = CULong;
override selector("focusView") = NSView;
override selector("focusedColumn") = CLong;
override selector("font") = Id;
override selector("fontAttributes") = NSDictionary;
override selector("fontAttributesInRange:") = NSDictionary, NSRange;
override selector("fontDescriptor") = NSFontDescriptor;
override selector("fontDescriptorByAddingAttributes:") = NSFontDescriptor, NSDictionary;
override selector("fontDescriptorWithFace:") = NSFontDescriptor, NSString;
override selector("fontDescriptorWithFamily:") = NSFontDescriptor, NSString;
override selector("fontDescriptorWithFontAttributes:") = NSFontDescriptor, NSDictionary;
override selector("fontDescriptorWithMatrix:") = NSFontDescriptor, NSAffineTransform;
override selector("fontDescriptorWithName:matrix:") = NSFontDescriptor, NSString, NSAffineTransform;
override selector("fontDescriptorWithName:size:") = NSFontDescriptor, NSString, Double;
override selector("fontDescriptorWithSize:") = NSFontDescriptor, Double;
override selector("fontDescriptorWithSymbolicTraits:") = NSFontDescriptor, UInt;
override selector("fontDescriptorsInCollection:") = NSArray, NSString;
override selector("fontFamily") = NSString;
override selector("fontManager:willIncludeFont:") = Bool, Id, NSString;
override selector("fontMenu:") = NSMenu, Bool;
override selector("fontName") = NSString;
override selector("fontNamed:hasTraits:") = Bool, NSString, CULong;
override selector("fontPanel:") = NSFontPanel, Bool;
override selector("fontSize") = NSString;
override selector("fontSizeAdjust") = NSString;
override selector("fontStretch") = NSString;
override selector("fontStyle") = NSString;
override selector("fontVariant") = NSString;
override selector("fontWeight") = NSString;
override selector("fontWithDescriptor:size:") = NSFont, NSFontDescriptor, Double;
override selector("fontWithDescriptor:textTransform:") = NSFont, NSFontDescriptor, NSAffineTransform;
override selector("fontWithFamily:traits:weight:size:") = NSFont, NSString, CULong, CLong, Double;
override selector("fontWithName:matrix:") = NSFont, NSString, Pointer[Double];
override selector("fontWithName:size:") = NSFont, NSString, Double;
override selector("forceTerminate") = Bool;
override selector("foregroundColor") = NSColor;
override selector("forgetWord:") = Void, NSString;
override selector("form") = DOMHTMLFormElement;
override selector("formIntersectionWithCharacterSet:") = Void, NSCharacterSet;
override selector("formUnionWithCharacterSet:") = Void, NSCharacterSet;
override selector("format") = NSString;
override selector("formatWidth") = CULong;
override selector("formatter") = Id;
override selector("formatterBehavior") = CULong;
override selector("formattingDictionary") = NSDictionary;
override selector("formattingStringsFilename") = NSString;
override selector("forms") = DOMHTMLCollection;
override selector("forwardInvocation:") = Void, NSInvocation;
override selector("forwardItem") = WebHistoryItem;
override selector("forwardListCount") = Int;
override selector("forwardListWithLimit:") = NSArray, Int;
override selector("forwardingTargetForSelector:") = Id, SelectorHandle;
override selector("fractionOfDistanceThroughGlyphForPoint:") = Double, NSPoint;
override selector("fractionOfDistanceThroughGlyphForPoint:inTextContainer:") = Double, NSPoint, NSTextContainer;
override selector("fragment") = NSString;
override selector("frame") = NSRect;
override selector("frameAutosaveName") = NSString;
override selector("frameBorder") = NSString;
override selector("frameBorders") = NSString;
override selector("frameCenterRotation") = Double;
override selector("frameElement") = DOMHTMLElement;
override selector("frameForItemAtIndex:") = NSRect, CULong;
override selector("frameLength") = CULong;
override selector("frameLoadDelegate") = Id;
override selector("frameName") = NSString;
override selector("frameOfCellAtColumn:row:") = NSRect, CLong, CLong;
override selector("frameOfColumn:") = NSRect, CLong;
override selector("frameOfInsideOfColumn:") = NSRect, CLong;
override selector("frameOfOutlineCellAtRow:") = NSRect, CLong;
override selector("frameOfRow:inColumn:") = NSRect, CLong, CLong;
override selector("frameRate") = Float;
override selector("frameRectForContentRect:") = NSRect, NSRect;
override selector("frameRectForContentRect:styleMask:") = NSRect, NSRect, CULong;
override selector("frameRotation") = Double;
override selector("frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
override selector("frameView") = WebFrameView;
override selector("fromElement") = DOMNode;
override selector("fullPathForApplication:") = NSString, NSString;
override selector("function") = NSString;
override selector("gState") = CLong;
override selector("generalPasteboard") = NSPasteboard;
override selector("generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:") = Void, Id, CULong, Pointer[CULong], Pointer[CULong];
override selector("generatesCalendarDates") = Bool;
override selector("generatesDecimalNumbers") = Bool;
override selector("genericCMYKColorSpace") = NSColorSpace;
override selector("genericGamma22GrayColorSpace") = NSColorSpace;
override selector("genericGrayColorSpace") = NSColorSpace;
override selector("genericRGBColorSpace") = NSColorSpace;
override selector("getAdvancements:forGlyphs:count:") = Void, NSSizeArray, Pointer[UInt], CULong;
override selector("getAdvancements:forPackedGlyphs:length:") = Void, NSSizeArray, RawPointer, CULong;
override selector("getArgument:atIndex:") = Void, RawPointer, CLong;
override selector("getArgumentTypeAtIndex:") = Pointer[CChar], CULong;
override selector("getAttribute:") = NSString, NSString;
override selector("getAttributeNS::") = NSString, NSString, NSString;
override selector("getAttributeNS:localName:") = NSString, NSString, NSString;
override selector("getAttributeNode:") = DOMAttr, NSString;
override selector("getAttributeNodeNS::") = DOMAttr, NSString, NSString;
override selector("getAttributeNodeNS:localName:") = DOMAttr, NSString, NSString;
override selector("getBitmapDataPlanes:") = Void, Pointer[Pointer[CUChar]];
override selector("getBoundingRects:forGlyphs:count:") = Void, NSRectArray, Pointer[UInt], CULong;
override selector("getBuffer:length:") = Bool, Pointer[Pointer[CUChar]], Pointer[CULong];
override selector("getBytes:") = Void, RawPointer;
override selector("getBytes:length:") = Void, RawPointer, CULong;
override selector("getBytes:maxLength:usedLength:encoding:options:range:remainingRange:") = Bool, RawPointer, CULong, Pointer[CULong], CULong, CULong, NSRange, NSRangePointer;
override selector("getBytes:range:") = Void, RawPointer, NSRange;
override selector("getCFRunLoop") = CFRunLoopRef;
override selector("getCString:") = Void, Pointer[CChar];
override selector("getCString:maxLength:") = Void, Pointer[CChar], CULong;
override selector("getCString:maxLength:encoding:") = Bool, Pointer[CChar], CULong, CULong;
override selector("getCString:maxLength:range:remainingRange:") = Void, Pointer[CChar], CULong, NSRange, NSRangePointer;
override selector("getCharacters:") = Void, Pointer[UShort];
override selector("getCharacters:range:") = Void, Pointer[UShort], NSRange;
override selector("getColor:location:atIndex:") = Void, Pointer[NSColor], Pointer[Double], CLong;
override selector("getComponents:") = Void, Pointer[Double];
override selector("getCompression:factor:") = Void, Pointer[CULong], Pointer[Float];
override selector("getComputedStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
override selector("getComputedStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
override selector("getCounterValue") = DOMCounter;
override selector("getCyan:magenta:yellow:black:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override selector("getElementById:") = DOMElement, NSString;
override selector("getElementsByClassName:") = DOMNodeList, NSString;
override selector("getElementsByName:") = DOMNodeList, NSString;
override selector("getElementsByTagName:") = DOMNodeList, NSString;
override selector("getElementsByTagNameNS::") = DOMNodeList, NSString, NSString;
override selector("getElementsByTagNameNS:localName:") = DOMNodeList, NSString, NSString;
override selector("getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:") = Bool, NSString, Pointer[Bool], Pointer[Bool], Pointer[Bool], Pointer[NSString], Pointer[NSString];
override selector("getFileSystemRepresentation:maxLength:") = Bool, Pointer[CChar], CULong;
override selector("getFirstUnlaidCharacterIndex:glyphIndex:") = Void, Pointer[CULong], Pointer[CULong];
override selector("getFloatValue:") = Float, UShort;
override selector("getGlyphs:range:") = CULong, Pointer[UInt], NSRange;
override selector("getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool];
override selector("getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool], Pointer[CUChar];
override selector("getHue:saturation:brightness:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override selector("getIndexes:") = Void, Pointer[CULong];
override selector("getIndexes:maxCount:inIndexRange:") = CULong, Pointer[CULong], CULong, NSRangePointer;
override selector("getInfoForFile:application:type:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
override selector("getInputStream:outputStream:") = Bool, Pointer[NSInputStream], Pointer[NSOutputStream];
override selector("getLineDash:count:phase:") = Void, Pointer[Double], Pointer[CLong], Pointer[Double];
override selector("getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:") = CULong, CULong, Bool, Bool, Pointer[Double], Pointer[CULong];
override selector("getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:") = Void, NSRectPointer, NSRectPointer, NSRange, NSPoint;
override selector("getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:") = Void, NSRectPointer, NSRectPointer, NSRectPointer, CULong, NSRect, Double, Double, Double;
override selector("getLineStart:end:contentsEnd:forRange:") = Void, Pointer[CULong], Pointer[CULong], Pointer[CULong], NSRange;
override selector("getMatchedCSSRules:pseudoElement:") = DOMCSSRuleList, DOMElement, NSString;
override selector("getMatchedCSSRules:pseudoElement:authorOnly:") = DOMCSSRuleList, DOMElement, NSString, Bool;
override selector("getModifierState:") = Bool, NSString;
override selector("getNamedItem:") = DOMNode, NSString;
override selector("getNamedItemNS::") = DOMNode, NSString, NSString;
override selector("getNamedItemNS:localName:") = DOMNode, NSString, NSString;
override selector("getNumberOfRows:columns:") = Void, Pointer[CLong], Pointer[CLong];
override selector("getObjectValue:forString:errorDescription:") = Bool, Pointer[Id], NSString, Pointer[NSString];
override selector("getObjectValue:forString:range:error:") = Bool, Pointer[Id], NSString, Pointer[NSRange], Pointer[NSError];
override selector("getObjects:") = Void, Pointer[Id];
override selector("getObjects:andKeys:") = Void, Pointer[Id], Pointer[Id];
override selector("getObjects:range:") = Void, Pointer[Id], NSRange;
override selector("getOverrideStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
override selector("getOverrideStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
override selector("getParagraphStart:end:contentsEnd:forRange:") = Void, Pointer[CULong], Pointer[CULong], Pointer[CULong], NSRange;
override selector("getPeriodicDelay:interval:") = Void, Pointer[Float], Pointer[Float];
override selector("getPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
override selector("getPropertyCSSValue:") = DOMCSSValue, NSString;
override selector("getPropertyPriority:") = NSString, NSString;
override selector("getPropertyShorthand:") = NSString, NSString;
override selector("getPropertyValue:") = NSString, NSString;
override selector("getRGBColorValue") = DOMRGBColor;
override selector("getRectValue") = DOMRect;
override selector("getRectsBeingDrawn:count:") = Void, Pointer[Pointer[NSRect]], Pointer[CLong];
override selector("getRectsExposedDuringLiveResize:count:") = Void, Pointer[NSRect], Pointer[CLong];
override selector("getRed:green:blue:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
override selector("getResourceValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("getReturnValue:") = Void, RawPointer;
override selector("getRow:column:forPoint:") = Bool, Pointer[CLong], Pointer[CLong], NSPoint;
override selector("getRow:column:ofCell:") = Bool, Pointer[CLong], Pointer[CLong], NSCell;
override selector("getStreamsToHost:port:inputStream:outputStream:") = Void, NSHost, CLong, Pointer[NSInputStream], Pointer[NSOutputStream];
override selector("getStringValue") = NSString;
override selector("getTIFFCompressionTypes:count:") = Void, Pointer[Pointer[CULong]], Pointer[CLong];
override selector("getValue:") = Void, RawPointer;
override selector("getValues:forAttribute:forVirtualScreen:") = Void, Pointer[Int], UInt, Int;
override selector("getValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
override selector("getWhite:alpha:") = Void, Pointer[Double], Pointer[Double];
override selector("globalContext") = JSGlobalContextRef;
override selector("globallyUniqueString") = NSString;
override selector("glyphAtIndex:") = UInt, CULong;
override selector("glyphAtIndex:isValidIndex:") = UInt, CULong, Pointer[Bool];
override selector("glyphGenerator") = NSGlyphGenerator;
override selector("glyphIndexForCharacterAtIndex:") = CULong, CULong;
override selector("glyphIndexForPoint:inTextContainer:") = CULong, NSPoint, NSTextContainer;
override selector("glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
override selector("glyphInfoWithCharacterIdentifier:collection:baseString:") = NSGlyphInfo, CULong, CULong, NSString;
override selector("glyphInfoWithGlyph:forFont:baseString:") = NSGlyphInfo, UInt, NSFont, NSString;
override selector("glyphInfoWithGlyphName:forFont:baseString:") = NSGlyphInfo, NSString, NSFont, NSString;
override selector("glyphName") = NSString;
override selector("glyphRangeForBoundingRect:inTextContainer:") = NSRange, NSRect, NSTextContainer;
override selector("glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:") = NSRange, NSRect, NSTextContainer;
override selector("glyphRangeForCharacterRange:actualCharacterRange:") = NSRange, NSRange, NSRangePointer;
override selector("glyphRangeForTextContainer:") = NSRange, NSTextContainer;
override selector("glyphWithName:") = UInt, NSString;
override selector("goBack") = Bool;
override selector("goBack:") = Void, Id;
override selector("goForward") = Bool;
override selector("goForward:") = Void, Id;
override selector("goToBackForwardItem:") = Bool, WebHistoryItem;
override selector("goToItem:") = Void, WebHistoryItem;
override selector("gradientType") = CULong;
override selector("grammarCheckingResultWithRange:details:") = NSTextCheckingResult, NSRange, NSArray;
override selector("grammarDetails") = NSArray;
override selector("graphicsContext") = NSGraphicsContext;
override selector("graphicsContextWithAttributes:") = NSGraphicsContext, NSDictionary;
override selector("graphicsContextWithBitmapImageRep:") = NSGraphicsContext, NSBitmapImageRep;
override selector("graphicsContextWithGraphicsPort:flipped:") = NSGraphicsContext, RawPointer, Bool;
override selector("graphicsContextWithWindow:") = NSGraphicsContext, NSWindow;
override selector("graphicsPort") = RawPointer;
override selector("grayColor") = NSColor;
override selector("green") = DOMCSSPrimitiveValue;
override selector("greenColor") = NSColor;
override selector("greenComponent") = Double;
override selector("gregorianStartDate") = NSDate;
override selector("gridColor") = NSColor;
override selector("gridStyleMask") = CULong;
override selector("groupName") = NSString;
override selector("groupedResults") = NSArray;
override selector("groupingAttributes") = NSArray;
override selector("groupingLevel") = CLong;
override selector("groupingSeparator") = NSString;
override selector("groupingSize") = CULong;
override selector("groupsByEvent") = Bool;
override selector("guessesForWord:") = NSArray, NSString;
override selector("guessesForWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
override selector("handleCloseScriptCommand:") = Id, NSCloseCommand;
override selector("handleEvent:") = Bool, DOMEvent;
override varargSelector("handleFailureInFunction:file:lineNumber:description:") = Void, NSString, NSString, CLong, NSString;
override varargSelector("handleFailureInMethod:object:file:lineNumber:description:") = Void, SelectorHandle, Id, NSString, CLong, NSString;
override selector("handleMachMessage:") = Void, RawPointer;
override selector("handleMouseEvent:") = Bool, NSEvent;
override selector("handlePortMessage:") = Void, NSPortMessage;
override selector("handlePrintScriptCommand:") = Id, NSScriptCommand;
override selector("handleQueryWithUnboundKey:") = Id, NSString;
override selector("handleSaveScriptCommand:") = Id, NSScriptCommand;
override selector("handleTakeValue:forUnboundKey:") = Void, Id, NSString;
override selector("handleTextCheckingResults:forRange:types:options:orthography:wordCount:") = Void, NSArray, NSRange, UInt64, NSDictionary, NSOrthography, CLong;
override selector("hasAlpha") = Bool;
override selector("hasAttribute:") = Bool, NSString;
override selector("hasAttributeNS::") = Bool, NSString, NSString;
override selector("hasAttributeNS:localName:") = Bool, NSString, NSString;
override selector("hasAttributes") = Bool;
override selector("hasBytesAvailable") = Bool;
override selector("hasChanges") = Bool;
override selector("hasChildNodes") = Bool;
override selector("hasCloseBox") = Bool;
override selector("hasDynamicDepthLimit") = Bool;
override selector("hasEditedDocuments") = Bool;
override selector("hasFaultForRelationshipNamed:") = Bool, NSString;
override selector("hasFeature::") = Bool, NSString, NSString;
override selector("hasFeature:version:") = Bool, NSString, NSString;
override selector("hasFocus") = Bool;
override selector("hasHorizontalRuler") = Bool;
override selector("hasHorizontalScroller") = Bool;
override selector("hasLearnedWord:") = Bool, NSString;
override selector("hasMarkedText") = Bool;
override selector("hasMemberInPlane:") = Bool, CUChar;
override selector("hasNonContiguousLayout") = Bool;
override selector("hasOrderedToManyRelationshipForKey:") = Bool, NSString;
override selector("hasPassword") = Bool;
override selector("hasPrefix:") = Bool, NSString;
override selector("hasPropertyForKey:") = Bool, NSString;
override selector("hasReadablePropertyForKey:") = Bool, NSString;
override selector("hasShadow") = Bool;
override selector("hasSpaceAvailable") = Bool;
override selector("hasSubmenu") = Bool;
override selector("hasSuffix:") = Bool, NSString;
override selector("hasThousandSeparators") = Bool;
override selector("hasTitleBar") = Bool;
override selector("hasUnappliedChanges") = Bool;
override selector("hasUnautosavedChanges") = Bool;
override selector("hasUndoManager") = Bool;
override selector("hasValidObjectValue") = Bool;
override selector("hasVerticalRuler") = Bool;
override selector("hasVerticalScroller") = Bool;
override selector("hasWritablePropertyForKey:") = Bool, NSString;
override selector("hash") = CULong;
override selector("hashFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[CULong]];
override selector("hashName") = NSString;
override selector("hashTableWithOptions:") = Id, CULong;
override selector("hashTableWithWeakObjects") = Id;
override selector("headIndent") = Double;
override selector("headerCell") = Id;
override selector("headerColor") = NSColor;
override selector("headerLevel") = CLong;
override selector("headerRectOfColumn:") = NSRect, CLong;
override selector("headerTextColor") = NSColor;
override selector("headerToolTip") = NSString;
override selector("headerView") = NSTableHeaderView;
override selector("headers") = NSString;
override selector("height") = NSString;
override selector("heightAdjustLimit") = Double;
override selector("heightTracksTextView") = Bool;
override selector("helpAnchor") = NSString;
override selector("helpMenu") = NSMenu;
override selector("helpRequested:") = Void, NSEvent;
override selector("hide") = Bool;
override selector("hide:") = Void, Id;
override selector("hideOtherApplications") = Void;
override selector("hideOtherApplications:") = Void, Id;
override selector("hidesEmptyCells") = Bool;
override selector("hidesOnDeactivate") = Bool;
override selector("highlight:") = Void, Bool;
override selector("highlight:withFrame:inView:") = Void, Bool, NSRect, NSView;
override selector("highlightCell:atRow:column:") = Void, Bool, CLong, CLong;
override selector("highlightColor") = NSColor;
override selector("highlightColorInView:") = NSColor, NSView;
override selector("highlightColorWithFrame:inView:") = NSColor, NSRect, NSView;
override selector("highlightMode") = Bool;
override selector("highlightSelectionInClipRect:") = Void, NSRect;
override selector("highlightWithLevel:") = NSColor, Double;
override selector("highlightedBranchImage") = NSImage;
override selector("highlightedItem") = NSMenuItem;
override selector("highlightedTableColumn") = NSTableColumn;
override selector("highlightsBy") = CLong;
override selector("historyAgeInDaysLimit") = Int;
override selector("historyItemLimit") = Int;
override selector("hitPart") = CULong;
override selector("hitTest:") = Id, NSPoint;
override selector("hitTestForEvent:inRect:ofView:") = CULong, NSEvent, NSRect, NSView;
override selector("hitTestRect:withImageDestinationRect:context:hints:flipped:") = Bool, NSRect, NSRect, NSGraphicsContext, NSDictionary, Bool;
override selector("horizontalLineScroll") = Double;
override selector("horizontalOverflow") = Bool;
override selector("horizontalPageScroll") = Double;
override selector("horizontalPagination") = CULong;
override selector("horizontalRulerView") = NSRulerView;
override selector("horizontalScroller") = NSScroller;
override selector("host") = NSString;
override selector("hostName") = NSString;
override selector("hostWindow") = NSWindow;
override selector("hostWithAddress:") = NSHost, NSString;
override selector("hostWithName:") = NSHost, NSString;
override selector("hostname") = NSString;
override selector("hotSpot") = NSPoint;
override selector("hour") = CLong;
override selector("hourOfDay") = CLong;
override selector("href") = NSString;
override selector("hreflang") = NSString;
override selector("hspace") = Int;
override selector("htmlFor") = NSString;
override selector("httpEquiv") = NSString;
override selector("hueComponent") = Double;
override selector("hyphenCharacterForGlyphAtIndex:") = UInt, CULong;
override selector("hyphenationFactor") = Float;
override selector("hyphenationFactorForGlyphAtIndex:") = Float, CULong;
override selector("icon") = NSImage;
override selector("iconForFile:") = NSImage, NSString;
override selector("iconForFileType:") = NSImage, NSString;
override selector("iconForFiles:") = NSImage, NSArray;
override selector("idName") = NSString;
override selector("identifier") = Id;
override selector("identity") = SecIdentityRef;
override selector("ignore") = Void;
override selector("ignoreModifierKeysWhileDragging") = Bool;
override selector("ignoreSpelling:") = Void, Id;
override selector("ignoreWord:inSpellDocumentWithTag:") = Void, NSString, CLong;
override selector("ignoredWordsInSpellDocumentWithTag:") = NSArray, CLong;
override selector("ignoresAlpha") = Bool;
override selector("ignoresMouseEvents") = Bool;
override selector("ignoresMultiClick") = Bool;
override selector("illegalCharacterSet") = Id;
override selector("image") = NSImage;
override selector("image:didLoadPartOfRepresentation:withValidRows:") = Void, NSImage, NSImageRep, CLong;
override selector("image:didLoadRepresentation:withStatus:") = Void, NSImage, NSImageRep, CULong;
override selector("image:didLoadRepresentationHeader:") = Void, NSImage, NSImageRep;
override selector("image:willLoadRepresentation:") = Void, NSImage, NSImageRep;
override selector("imageAlignment") = CULong;
override selector("imageByApplyingTransform:") = CIImage, CGAffineTransform;
override selector("imageByCroppingToRect:") = CIImage, CGRect;
override selector("imageDidNotDraw:inRect:") = NSImage, Id, NSRect;
override selector("imageDimsWhenDisabled") = Bool;
override selector("imageFileTypes") = NSArray;
override selector("imageForSegment:") = NSImage, CLong;
override selector("imageFrameStyle") = CULong;
override selector("imageInterpolation") = CULong;
override selector("imageNamed:") = Id, NSString;
override selector("imageOrigin") = NSPoint;
override selector("imagePasteboardTypes") = NSArray;
override selector("imagePosition") = CULong;
override selector("imageRectForBounds:") = NSRect, NSRect;
override selector("imageRectForPaper:") = NSRect, NSString;
override selector("imageRectInRuler") = NSRect;
override selector("imageRepClassForData:") = Id, NSData;
override selector("imageRepClassForFileType:") = Id, NSString;
override selector("imageRepClassForPasteboardType:") = Id, NSString;
override selector("imageRepClassForType:") = Id, NSString;
override selector("imageRepWithCIImage:") = Id, CIImage;
override selector("imageRepWithContentsOfFile:") = Id, NSString;
override selector("imageRepWithContentsOfURL:") = Id, NSURL;
override selector("imageRepWithData:") = Id, NSData;
override selector("imageRepWithPasteboard:") = Id, NSPasteboard;
override selector("imageRepsWithContentsOfFile:") = NSArray, NSString;
override selector("imageRepsWithContentsOfURL:") = NSArray, NSURL;
override selector("imageRepsWithData:") = NSArray, NSData;
override selector("imageRepsWithPasteboard:") = NSArray, NSPasteboard;
override selector("imageScaling") = CULong;
override selector("imageScalingForSegment:") = CULong, CLong;
override selector("imageTypes") = NSArray;
override selector("imageUnfilteredFileTypes") = NSArray;
override selector("imageUnfilteredPasteboardTypes") = NSArray;
override selector("imageUnfilteredTypes") = NSArray;
override selector("imageWidth") = Double;
override selector("imageWithBitmapData:bytesPerRow:size:format:colorSpace:") = CIImage, NSData, CULong, CGSize, Int, CGColorSpaceRef;
override selector("imageWithCGImage:") = CIImage, CGImageRef;
override selector("imageWithCGImage:options:") = CIImage, CGImageRef, NSDictionary;
override selector("imageWithCGLayer:") = CIImage, CGLayerRef;
override selector("imageWithCGLayer:options:") = CIImage, CGLayerRef, NSDictionary;
override selector("imageWithCVImageBuffer:") = CIImage, CVImageBufferRef;
override selector("imageWithCVImageBuffer:options:") = CIImage, CVImageBufferRef, NSDictionary;
override selector("imageWithColor:") = CIImage, CIColor;
override selector("imageWithContentsOfURL:") = CIImage, NSURL;
override selector("imageWithContentsOfURL:options:") = CIImage, NSURL, NSDictionary;
override selector("imageWithData:") = CIImage, NSData;
override selector("imageWithData:options:") = CIImage, NSData, NSDictionary;
override selector("imageWithIOSurface:") = CIImage, IOSurfaceRef;
override selector("imageWithIOSurface:options:") = CIImage, IOSurfaceRef, NSDictionary;
override selector("imageWithTexture:size:flipped:colorSpace:") = CIImage, UInt, CGSize, Bool, CGColorSpaceRef;
override selector("imageablePageBounds") = NSRect;
override selector("images") = DOMHTMLCollection;
override selector("implementation") = DOMImplementation;
override selector("implementationClassName") = NSString;
override selector("importNode::") = DOMNode, DOMNode, Bool;
override selector("importNode:deep:") = DOMNode, DOMNode, Bool;
override selector("importStoreWithIdentifier:fromExternalRecordsDirectory:toURL:options:withType:error:") = NSPersistentStore, NSString, NSURL, NSURL, NSDictionary, NSString, Pointer[NSError];
override selector("importsGraphics") = Bool;
override selector("inLiveResize") = Bool;
override selector("includedKeys") = NSArray;
override selector("includesPendingChanges") = Bool;
override selector("includesPropertyValues") = Bool;
override selector("includesSubentities") = Bool;
override selector("increaseLengthBy:") = Void, CULong;
override selector("increment") = Double;
override selector("incrementBy:") = Void, Double;
override selector("incrementalLoadFromData:complete:") = CLong, NSData, Bool;
override selector("indent:") = Void, Id;
override selector("indentationLevel") = CLong;
override selector("indentationMarkerFollowsCell") = Bool;
override selector("indentationPerLevel") = Double;
override selector("independentConversationQueueing") = Bool;
override selector("indeterminate") = Bool;
override selector("index") = CULong;
override selector("indexAtPosition:") = CULong, CULong;
override selector("indexGreaterThanIndex:") = CULong, CULong;
override selector("indexGreaterThanOrEqualToIndex:") = CULong, CULong;
override selector("indexInRange:options:passingTest:") = CULong, NSRange, CULong, UnknownType;
override selector("indexLessThanIndex:") = CULong, CULong;
override selector("indexLessThanOrEqualToIndex:") = CULong, CULong;
override selector("indexOfCellWithTag:") = CLong, CLong;
override selector("indexOfItem:") = CLong, NSMenuItem;
override selector("indexOfItemWithObjectValue:") = CLong, Id;
override selector("indexOfItemWithRepresentedObject:") = CLong, Id;
override selector("indexOfItemWithSubmenu:") = CLong, NSMenu;
override selector("indexOfItemWithTag:") = CLong, CLong;
override selector("indexOfItemWithTarget:andAction:") = CLong, Id, SelectorHandle;
override selector("indexOfItemWithTitle:") = CLong, NSString;
override selector("indexOfObject:") = CULong, Id;
override selector("indexOfObject:inRange:") = CULong, Id, NSRange;
override selector("indexOfObject:inSortedRange:options:usingComparator:") = CULong, Id, NSRange, CULong, NSComparator;
override selector("indexOfObjectAtIndexes:options:passingTest:") = CULong, NSIndexSet, CULong, UnknownType;
override selector("indexOfObjectIdenticalTo:") = CULong, Id;
override selector("indexOfObjectIdenticalTo:inRange:") = CULong, Id, NSRange;
override selector("indexOfObjectPassingTest:") = CULong, UnknownType;
override selector("indexOfObjectWithOptions:passingTest:") = CULong, CULong, UnknownType;
override selector("indexOfPasteboardItem:") = CULong, NSPasteboardItem;
override selector("indexOfResult:") = CULong, Id;
override selector("indexOfSelectedItem") = CLong;
override selector("indexOfTabViewItem:") = CLong, NSTabViewItem;
override selector("indexOfTabViewItemWithIdentifier:") = CLong, Id;
override selector("indexOfTickMarkAtPoint:") = CLong, NSPoint;
override selector("indexPassingTest:") = CULong, UnknownType;
override selector("indexPath") = NSIndexPath;
override selector("indexPathByAddingIndex:") = NSIndexPath, CULong;
override selector("indexPathByRemovingLastIndex") = NSIndexPath;
override selector("indexPathForColumn:") = NSIndexPath, CLong;
override selector("indexPathWithIndex:") = Id, CULong;
override selector("indexPathWithIndexes:length:") = Id, Pointer[CULong], CULong;
override selector("indexSet") = Id;
override selector("indexSetWithIndex:") = Id, CULong;
override selector("indexSetWithIndexesInRange:") = Id, NSRange;
override selector("indexWithOptions:passingTest:") = CULong, CULong, UnknownType;
override selector("indexesInRange:options:passingTest:") = NSIndexSet, NSRange, CULong, UnknownType;
override selector("indexesOfObjectsAtIndexes:options:passingTest:") = NSIndexSet, NSIndexSet, CULong, UnknownType;
override selector("indexesOfObjectsPassingTest:") = NSIndexSet, UnknownType;
override selector("indexesOfObjectsWithOptions:passingTest:") = NSIndexSet, CULong, UnknownType;
override selector("indexesPassingTest:") = NSIndexSet, UnknownType;
override selector("indexesWithOptions:passingTest:") = NSIndexSet, CULong, UnknownType;
override selector("indicatorImageInTableColumn:") = NSImage, NSTableColumn;
override selector("indicesOfObjectsByEvaluatingObjectSpecifier:") = NSArray, NSScriptObjectSpecifier;
override selector("indicesOfObjectsByEvaluatingWithContainer:count:") = Pointer[CLong], Id, Pointer[CLong];
override selector("inferredMappingModelForSourceModel:destinationModel:error:") = NSMappingModel, NSManagedObjectModel, NSManagedObjectModel, Pointer[NSError];
override selector("infoDictionary") = NSDictionary;
override selector("infoForBinding:") = NSDictionary, NSString;
override selector("informativeText") = NSString;
override selector("init") = Id;
override selector("initAndTestWithTests:") = Id, NSArray;
override selector("initByReferencingFile:") = Id, NSString;
override selector("initByReferencingURL:") = Id, NSURL;
override selector("initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, CULong, NSURL, Pointer[Bool], Pointer[NSError];
override selector("initDirectoryWithFileWrappers:") = Id, NSDictionary;
override selector("initEvent:::") = Void, NSString, Bool, Bool;
override selector("initEvent:canBubbleArg:cancelableArg:") = Void, NSString, Bool, Bool;
override selector("initFileURLWithPath:") = Id, NSString;
override selector("initFileURLWithPath:isDirectory:") = Id, NSString, Bool;
override selector("initForIncrementalLoad") = Id;
override selector("initForReadingWithData:") = Id, NSData;
override selector("initForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
override selector("initForWritingWithMutableData:") = Id, NSMutableData;
override selector("initImageCell:") = Id, NSImage;
override selector("initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool;
override selector("initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:altGraphKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool, Bool;
override selector("initListDescriptor") = Id;
override selector("initMouseEvent:::::::::::::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;
override selector("initMouseEvent:canBubble:cancelable:view:detail:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:button:relatedTarget:") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;
override selector("initMutationEvent::::::::") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;
override selector("initMutationEvent:canBubble:cancelable:relatedNode:prevValue:newValue:attrName:attrChange:") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;
override selector("initNotTestWithTest:") = Id, NSScriptWhoseTest;
override selector("initOrTestWithTests:") = Id, NSArray;
override selector("initOverflowEvent:horizontalOverflow:verticalOverflow:") = Void, UShort, Bool, Bool;
override selector("initRecordDescriptor") = Id;
override selector("initRegularFileWithContents:") = Id, NSData;
override selector("initRemoteWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
override selector("initRemoteWithTCPPort:host:") = Id, UShort, NSString;
override selector("initSymbolicLinkWithDestination:") = Id, NSString;
override selector("initSymbolicLinkWithDestinationURL:") = Id, NSURL;
override selector("initTextCell:") = Id, NSString;
override selector("initTextCell:pullsDown:") = Id, NSString, Bool;
override selector("initToBuffer:capacity:") = Id, Pointer[CUChar], CULong;
override selector("initToFileAtPath:append:") = Id, NSString, Bool;
override selector("initToMemory") = Id;
override selector("initUIEvent:::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int;
override selector("initUIEvent:canBubble:cancelable:view:detail:") = Void, NSString, Bool, Bool, DOMAbstractView, Int;
override selector("initWheelEvent:wheelDeltaY:view:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:") = Void, Int, Int, DOMAbstractView, Int, Int, Int, Int, Bool, Bool, Bool, Bool;
override selector("initWithAEDescNoCopy:") = Id, Pointer[AEDesc];
override selector("initWithArray:") = Id, NSArray;
override selector("initWithArray:copyItems:") = Id, NSArray, Bool;
override selector("initWithAttributedString:") = Id, NSAttributedString;
override selector("initWithAttributes:") = Id, Pointer[UInt];
override selector("initWithAuthenticationChallenge:sender:") = Id, NSURLAuthenticationChallenge, Id;
override selector("initWithBitmapData:bytesPerRow:size:format:colorSpace:") = Id, NSData, CULong, CGSize, Int, CGColorSpaceRef;
override selector("initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CULong, CLong, CLong;
override selector("initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CLong, CLong;
override selector("initWithBitmapImageRep:") = Id, NSBitmapImageRep;
override selector("initWithBool:") = Id, Bool;
override selector("initWithBytes:length:") = Id, RawPointer, CULong;
override selector("initWithBytes:length:encoding:") = Id, RawPointer, CULong, CULong;
override selector("initWithBytes:objCType:") = Id, RawPointer, Pointer[CChar];
override selector("initWithBytesNoCopy:length:") = Id, RawPointer, CULong;
override selector("initWithBytesNoCopy:length:encoding:freeWhenDone:") = Id, RawPointer, CULong, CULong, Bool;
override selector("initWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, CULong, Bool;
override selector("initWithCGColor:") = Id, CGColorRef;
override selector("initWithCGColorSpace:") = Id, CGColorSpaceRef;
override selector("initWithCGImage:") = Id, CGImageRef;
override selector("initWithCGImage:options:") = Id, CGImageRef, NSDictionary;
override selector("initWithCGImage:size:") = Id, CGImageRef, NSSize;
override selector("initWithCGLContextObj:") = Id, RawPointer;
override selector("initWithCGLPBufferObj:") = Id, RawPointer;
override selector("initWithCGLPixelFormatObj:") = Id, RawPointer;
override selector("initWithCGLayer:") = Id, CGLayerRef;
override selector("initWithCGLayer:options:") = Id, CGLayerRef, NSDictionary;
override selector("initWithCIImage:") = Id, CIImage;
override selector("initWithCString:") = Id, Pointer[CChar];
override selector("initWithCString:encoding:") = Id, Pointer[CChar], CULong;
override selector("initWithCString:length:") = Id, Pointer[CChar], CULong;
override selector("initWithCStringNoCopy:length:freeWhenDone:") = Id, Pointer[CChar], CULong, Bool;
override selector("initWithCVImageBuffer:") = Id, CVImageBufferRef;
override selector("initWithCVImageBuffer:options:") = Id, CVImageBufferRef, NSDictionary;
override selector("initWithCalendarIdentifier:") = Id, NSString;
override selector("initWithCapacity:") = Id, CULong;
override selector("initWithChar:") = Id, CChar;
override selector("initWithCharacters:length:") = Id, Pointer[UShort], CULong;
override selector("initWithCharactersNoCopy:length:freeWhenDone:") = Id, Pointer[UShort], CULong, Bool;
override selector("initWithClient:") = Id, Id;
override selector("initWithCoder:") = Id, NSCoder;
override selector("initWithColor:") = Id, NSColor;
override selector("initWithColorSyncProfile:") = Id, RawPointer;
override selector("initWithColors:") = Id, NSArray;
override selector("initWithColors:atLocations:colorSpace:") = Id, NSArray, Pointer[Double], NSColorSpace;
override varargSelector("initWithColorsAndLocations:") = Id, NSColor;
override selector("initWithCommandDescription:") = Id, NSScriptCommandDescription;
override selector("initWithCompoundTypes:") = Id, NSArray;
override selector("initWithCondition:") = Id, CLong;
override selector("initWithContainerClassDescription:containerSpecifier:key:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString;
override selector("initWithContainerClassDescription:containerSpecifier:key:index:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, CLong;
override selector("initWithContainerClassDescription:containerSpecifier:key:name:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSString;
override selector("initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, CULong, NSScriptObjectSpecifier;
override selector("initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptObjectSpecifier, NSScriptObjectSpecifier;
override selector("initWithContainerClassDescription:containerSpecifier:key:test:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptWhoseTest;
override selector("initWithContainerClassDescription:containerSpecifier:key:uniqueID:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, Id;
override selector("initWithContainerSize:") = Id, NSSize;
override selector("initWithContainerSpecifier:key:") = Id, NSScriptObjectSpecifier, NSString;
override selector("initWithContent:") = Id, Id;
override selector("initWithContentRect:styleMask:backing:defer:") = Id, NSRect, CULong, CULong, Bool;
override selector("initWithContentRect:styleMask:backing:defer:screen:") = Id, NSRect, CULong, CULong, Bool, NSScreen;
override selector("initWithContentSize:preferredEdge:") = Id, NSSize, CULong;
override selector("initWithContentsOfFile:") = Id, NSString;
override selector("initWithContentsOfFile:byReference:") = Id, NSString, Bool;
override selector("initWithContentsOfFile:encoding:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("initWithContentsOfFile:ofType:") = Id, NSString, NSString;
override selector("initWithContentsOfFile:options:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("initWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[CULong], Pointer[NSError];
override selector("initWithContentsOfMappedFile:") = Id, NSString;
override selector("initWithContentsOfURL:") = Id, NSURL;
override selector("initWithContentsOfURL:byReference:") = Id, NSURL, Bool;
override selector("initWithContentsOfURL:encoding:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("initWithContentsOfURL:error:") = Id, NSURL, Pointer[NSDictionary];
override selector("initWithContentsOfURL:ofType:") = Id, NSURL, NSString;
override selector("initWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
override selector("initWithContentsOfURL:options:") = Id, NSURL, NSDictionary;
override selector("initWithContentsOfURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("initWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[CULong], Pointer[NSError];
override selector("initWithData:") = Id, NSData;
override selector("initWithData:URL:MIMEType:textEncodingName:frameName:") = Id, NSData, NSURL, NSString, NSString, NSString;
override selector("initWithData:encoding:") = Id, NSData, CULong;
override selector("initWithData:options:") = Id, NSData, NSDictionary;
override selector("initWithData:options:documentAttributes:error:") = Id, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("initWithData:options:error:") = Id, NSData, CULong, Pointer[NSError];
override selector("initWithDataIgnoringOrientation:") = Id, NSData;
override selector("initWithDateFormat:allowNaturalLanguage:") = Id, NSString, Bool;
override selector("initWithDecimal:") = Id, NSDecimal;
override selector("initWithDefaults:initialValues:") = Id, NSUserDefaults, NSDictionary;
override selector("initWithDelegate:name:") = Id, Id, NSString;
override selector("initWithDescriptorType:bytes:length:") = Id, UInt, RawPointer, CULong;
override selector("initWithDescriptorType:data:") = Id, UInt, NSData;
override selector("initWithDictionary:") = Id, NSDictionary;
override selector("initWithDictionary:copyItems:") = Id, NSDictionary, Bool;
override selector("initWithDocFormat:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithDomain:code:userInfo:") = Id, NSString, CLong, NSDictionary;
override selector("initWithDomain:type:name:") = Id, NSString, NSString, NSString;
override selector("initWithDomain:type:name:port:") = Id, NSString, NSString, NSString, Int;
override selector("initWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
override selector("initWithDouble:") = Id, Double;
override selector("initWithDrawSelector:delegate:") = Id, SelectorHandle, Id;
override selector("initWithDuration:animationCurve:") = Id, Double, CULong;
override selector("initWithEntity:insertIntoManagedObjectContext:") = Id, NSEntityDescription, NSManagedObjectContext;
override selector("initWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = Id, UInt, UInt, NSAppleEventDescriptor, Short, Int;
override selector("initWithExpressionType:") = Id, CULong;
override selector("initWithFileAtPath:") = Id, NSString;
override selector("initWithFileDescriptor:") = Id, Int;
override selector("initWithFileDescriptor:closeOnDealloc:") = Id, Int, Bool;
override selector("initWithFileWrapper:") = Id, NSFileWrapper;
override selector("initWithFireDate:interval:target:selector:userInfo:repeats:") = Id, NSDate, Double, Id, SelectorHandle, Id, Bool;
override selector("initWithFloat:") = Id, Float;
override selector("initWithFocusedViewRect:") = Id, NSRect;
override selector("initWithFontAttributes:") = Id, NSDictionary;
override varargSelector("initWithFormat:") = Id, NSString;
override selector("initWithFormat:arguments:") = Id, NSString, Pointer[__va_list_tag];
override varargSelector("initWithFormat:locale:") = Id, NSString, Id;
override selector("initWithFormat:locale:arguments:") = Id, NSString, Id, Pointer[__va_list_tag];
override selector("initWithFormat:shareContext:") = Id, NSOpenGLPixelFormat, NSOpenGLContext;
override selector("initWithFrame:") = Id, NSRect;
override selector("initWithFrame:frameName:groupName:") = Id, NSRect, NSString, NSString;
override selector("initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, Id, CLong, CLong;
override selector("initWithFrame:mode:prototype:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, NSCell, CLong, CLong;
override selector("initWithFrame:pixelFormat:") = Id, NSRect, NSOpenGLPixelFormat;
override selector("initWithFrame:pullsDown:") = Id, NSRect, Bool;
override selector("initWithFrame:textContainer:") = Id, NSRect, NSTextContainer;
override selector("initWithHTML:baseURL:documentAttributes:") = Id, NSData, NSURL, Pointer[NSDictionary];
override selector("initWithHTML:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithHTML:options:documentAttributes:") = Id, NSData, NSDictionary, Pointer[NSDictionary];
override selector("initWithHost:port:protocol:realm:authenticationMethod:") = Id, NSString, CLong, NSString, NSString, NSString;
override selector("initWithICCProfileData:") = Id, NSData;
override selector("initWithIOSurface:") = Id, IOSurfaceRef;
override selector("initWithIOSurface:options:") = Id, IOSurfaceRef, NSDictionary;
override selector("initWithIconRef:") = Id, IconRef;
override selector("initWithIdentifier:") = Id, Id;
override selector("initWithIdentity:certificates:persistence:") = Id, SecIdentityRef, NSArray, CULong;
override selector("initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:") = Id, NSImage, NSColor, NSColor, NSPoint;
override selector("initWithImage:hotSpot:") = Id, NSImage, NSPoint;
override selector("initWithIndex:") = Id, CULong;
override selector("initWithIndexSet:") = Id, NSIndexSet;
override selector("initWithIndexes:length:") = Id, Pointer[CULong], CULong;
override selector("initWithIndexesInRange:") = Id, NSRange;
override selector("initWithInt:") = Id, Int;
override selector("initWithInteger:") = Id, CLong;
override selector("initWithInvocation:") = Id, NSInvocation;
override selector("initWithItemIdentifier:") = Id, NSString;
override selector("initWithKey:ascending:") = Id, NSString, Bool;
override selector("initWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
override selector("initWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
override selector("initWithKeyOptions:valueOptions:capacity:") = Id, CULong, CULong, CULong;
override selector("initWithKeyPointerFunctions:valuePointerFunctions:capacity:") = Id, NSPointerFunctions, NSPointerFunctions, CULong;
override selector("initWithKind:") = Id, CULong;
override selector("initWithKind:options:") = Id, CULong, CULong;
override selector("initWithLayer:") = Id, Id;
override selector("initWithLeftExpression:rightExpression:customSelector:") = Id, NSExpression, NSExpression, SelectorHandle;
override selector("initWithLeftExpression:rightExpression:modifier:type:options:") = Id, NSExpression, NSExpression, CULong, CULong, CULong;
override selector("initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:") = Id, NSArray, CULong, CULong, NSArray, CULong;
override selector("initWithLeftExpressions:rightExpressions:modifier:operators:options:") = Id, NSArray, NSArray, CULong, NSArray, CULong;
override selector("initWithLength:") = Id, CULong;
override selector("initWithLevelIndicatorStyle:") = Id, CULong;
override selector("initWithLocal:connection:") = Id, Id, NSConnection;
override selector("initWithLocaleIdentifier:") = Id, NSString;
override selector("initWithLong:") = Id, CLong;
override selector("initWithLongLong:") = Id, Int64;
override selector("initWithMachPort:") = Id, UInt;
override selector("initWithMachPort:options:") = Id, UInt, CULong;
override selector("initWithMainResource:subresources:subframeArchives:") = Id, WebResource, NSArray, NSArray;
override selector("initWithManagedObjectModel:") = Id, NSManagedObjectModel;
override selector("initWithMantissa:exponent:isNegative:") = Id, UInt64, Short, Bool;
override selector("initWithMarkerFormat:options:") = Id, NSString, CULong;
override selector("initWithMemoryCapacity:diskCapacity:diskPath:") = Id, CULong, CULong, NSString;
override selector("initWithMovie:") = Id, QTMovie;
override selector("initWithName:") = Id, NSString;
override selector("initWithName:URI:") = Id, NSString, NSString;
override selector("initWithName:data:") = Id, NSString, NSData;
override selector("initWithName:fromFile:") = Id, NSString, NSString;
override selector("initWithName:host:") = NSInputManager, NSString, NSString;
override selector("initWithName:reason:userInfo:") = Id, NSString, NSString, NSDictionary;
override selector("initWithName:stringValue:") = Id, NSString, NSString;
override selector("initWithName:webFrameView:webView:") = Id, NSString, WebFrameView, WebView;
override selector("initWithNibName:bundle:") = Id, NSString, NSBundle;
override selector("initWithNibNamed:bundle:") = Id, NSString, NSBundle;
override selector("initWithNotificationCenter:") = Id, NSNotificationCenter;
override selector("initWithObjectID:") = Id, NSManagedObjectID;
override selector("initWithObjectSpecifier:comparisonOperator:testObject:") = Id, NSScriptObjectSpecifier, CULong, Id;
override varargSelector("initWithObjects:") = Id, Id;
override selector("initWithObjects:count:") = Id, Pointer[Id], CULong;
override selector("initWithObjects:forKeys:") = Id, NSArray, NSArray;
override selector("initWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], CULong;
override varargSelector("initWithObjectsAndKeys:") = Id, Id;
override selector("initWithOptions:") = Id, CULong;
override selector("initWithOptions:capacity:") = Id, CULong, CULong;
override selector("initWithPasteboard:") = Id, NSPasteboard;
override selector("initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
override selector("initWithPath:") = Id, NSString;
override selector("initWithPath:documentAttributes:") = Id, NSString, Pointer[NSDictionary];
override selector("initWithPersistentStoreCoordinator:configurationName:URL:options:") = Id, NSPersistentStoreCoordinator, NSString, NSURL, NSDictionary;
override selector("initWithPickerMask:colorPanel:") = Id, CULong, NSColorPanel;
override selector("initWithPointerFunctions:") = Id, NSPointerFunctions;
override selector("initWithPointerFunctions:capacity:") = Id, NSPointerFunctions, CULong;
override selector("initWithPosition:objectSpecifier:") = Id, CULong, NSScriptObjectSpecifier;
override selector("initWithProperties:") = Id, NSDictionary;
override selector("initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:") = Id, NSURLProtectionSpace, NSURLCredential, CLong, NSURLResponse, NSError, Id;
override selector("initWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
override selector("initWithProtocolFamily:socketType:protocol:socket:") = Id, Int, Int, Int, Int;
override selector("initWithProxyHost:port:type:realm:authenticationMethod:") = Id, NSString, CLong, NSString, NSString, NSString;
override selector("initWithRTF:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithRTFD:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
override selector("initWithRTFDFileWrapper:documentAttributes:") = Id, NSFileWrapper, Pointer[NSDictionary];
override selector("initWithReceivePort:sendPort:") = Id, NSPort, NSPort;
override selector("initWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
override selector("initWithRect:options:owner:userInfo:") = Id, NSRect, CULong, Id, NSDictionary;
override selector("initWithRepresentedObject:") = Id, Id;
override selector("initWithRequest:") = Id, NSURLRequest;
override selector("initWithRequest:cachedResponse:client:") = Id, NSURLRequest, NSCachedURLResponse, Id;
override selector("initWithRequest:delegate:") = Id, NSURLRequest, Id;
override selector("initWithRequest:delegate:startImmediately:") = Id, NSURLRequest, Id, Bool;
override selector("initWithResponse:data:") = Id, NSURLResponse, NSData;
override selector("initWithResponse:data:userInfo:storagePolicy:") = Id, NSURLResponse, NSData, NSDictionary, CULong;
override selector("initWithResumeData:delegate:path:") = Id, NSData, Id, NSString;
override selector("initWithRootElement:") = Id, NSXMLElement;
override selector("initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, CULong, Short, Bool, Bool, Bool, Bool;
override selector("initWithRulerView:markerLocation:image:imageOrigin:") = Id, NSRulerView, Double, NSImage, NSPoint;
override selector("initWithScheme:host:path:") = Id, NSString, NSString, NSString;
override selector("initWithScrollView:orientation:") = Id, NSScrollView, CULong;
override selector("initWithSendPort:receivePort:components:") = Id, NSPort, NSPort, NSArray;
override selector("initWithSerializedRepresentation:") = Id, NSData;
override selector("initWithSet:") = Id, NSSet;
override selector("initWithSet:copyItems:") = Id, NSSet, Bool;
override selector("initWithShort:") = Id, Short;
override selector("initWithSize:") = Id, NSSize;
override selector("initWithSize:depth:separate:alpha:") = Id, NSSize, Int, Bool, Bool;
override selector("initWithSource:") = Id, NSString;
override selector("initWithSourceModel:destinationModel:") = Id, NSManagedObjectModel, NSManagedObjectModel;
override selector("initWithStartingColor:endingColor:") = Id, NSColor, NSColor;
override selector("initWithStorageLocation:") = Id, NSURL;
override selector("initWithString:") = Id, NSString;
override selector("initWithString:attributes:") = Id, NSString, NSDictionary;
override selector("initWithString:calendarFormat:") = Id, NSString, NSString;
override selector("initWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
override selector("initWithString:locale:") = Id, NSString, Id;
override selector("initWithString:relativeToURL:") = Id, NSString, NSURL;
override selector("initWithSuiteName:className:dictionary:") = Id, NSString, NSString, NSDictionary;
override selector("initWithSuiteName:commandName:dictionary:") = Id, NSString, NSString, NSDictionary;
override selector("initWithTCPPort:") = Id, UShort;
override selector("initWithTable:startingRow:rowSpan:startingColumn:columnSpan:") = Id, NSTextTable, CLong, CLong, CLong, CLong;
override selector("initWithTarget:connection:") = Id, Id, NSConnection;
override selector("initWithTarget:protocol:") = Id, NSObject, Id;
override selector("initWithTarget:selector:object:") = Id, Id, SelectorHandle, Id;
override selector("initWithTextAlignment:location:options:") = Id, CULong, Double, NSDictionary;
override selector("initWithTexture:size:flipped:colorSpace:") = Id, UInt, CGSize, Bool, CGColorSpaceRef;
override selector("initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:") = Id, UInt, UInt, Int, Int, Int;
override selector("initWithTimeInterval:sinceDate:") = Id, Double, NSDate;
override selector("initWithTimeIntervalSince1970:") = Id, Double;
override selector("initWithTimeIntervalSinceNow:") = Id, Double;
override selector("initWithTimeIntervalSinceReferenceDate:") = Id, Double;
override selector("initWithTitle:") = Id, NSString;
override selector("initWithTitle:action:keyEquivalent:") = Id, NSString, SelectorHandle, NSString;
override selector("initWithTransform:") = Id, NSAffineTransform;
override selector("initWithTrust:") = Id, SecTrustRef;
override selector("initWithType:error:") = Id, NSString, Pointer[NSError];
override selector("initWithType:location:") = Id, CULong, Double;
override selector("initWithType:subpredicates:") = Id, CULong, NSArray;
override selector("initWithURL:") = Id, NSURL;
override selector("initWithURL:MIMEType:expectedContentLength:textEncodingName:") = Id, NSURL, NSString, CLong, NSString;
override selector("initWithURL:append:") = Id, NSURL, Bool;
override selector("initWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, CULong, Double;
override selector("initWithURL:cached:") = Id, NSURL, Bool;
override selector("initWithURL:documentAttributes:") = Id, NSURL, Pointer[NSDictionary];
override selector("initWithURL:options:documentAttributes:error:") = Id, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("initWithURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("initWithURLString:title:lastVisitedTimeInterval:") = Id, NSString, NSString, Double;
override selector("initWithUTF8String:") = Id, Pointer[CChar];
override selector("initWithUnsignedChar:") = Id, CUChar;
override selector("initWithUnsignedInt:") = Id, UInt;
override selector("initWithUnsignedInteger:") = Id, CULong;
override selector("initWithUnsignedLong:") = Id, CULong;
override selector("initWithUnsignedLongLong:") = Id, UInt64;
override selector("initWithUnsignedShort:") = Id, UShort;
override selector("initWithUser:") = Id, NSString;
override selector("initWithUser:password:persistence:") = Id, NSString, NSString, CULong;
override selector("initWithValues:count:") = Id, Pointer[Double], CULong;
override selector("initWithViewAnimations:") = Id, NSArray;
override selector("initWithVoice:") = Id, NSString;
override selector("initWithWindow:") = Id, NSWindow;
override selector("initWithWindow:rect:") = Id, NSWindow, NSRect;
override selector("initWithWindowNibName:") = Id, NSString;
override selector("initWithWindowNibName:owner:") = Id, NSString, Id;
override selector("initWithWindowNibPath:owner:") = Id, NSString, Id;
override selector("initWithWindowRef:") = NSWindow, RawPointer;
override selector("initWithX:") = Id, Double;
override selector("initWithX:Y:") = Id, Double, Double;
override selector("initWithX:Y:Z:") = Id, Double, Double, Double;
override selector("initWithX:Y:Z:W:") = Id, Double, Double, Double, Double;
override selector("initWithXMLString:") = Id, NSString;
override selector("initWithXMLString:error:") = Id, NSString, Pointer[NSError];
override selector("initWithXMLString:options:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("initWithYear:month:day:hour:minute:second:timeZone:") = Id, CLong, CULong, CULong, CULong, CULong, CULong, NSTimeZone;
override selector("initialFirstResponder") = Id;
override selector("initialKey") = NSString;
override selector("initialRequest") = NSURLRequest;
override selector("initialValue") = Id;
override selector("initialValues") = NSDictionary;
override selector("initialize") = Void;
override selector("innerHTML") = NSString;
override selector("innerText") = NSString;
override selector("inputClientBecomeActive:") = Void, Id;
override selector("inputClientDisabled:") = Void, Id;
override selector("inputClientEnabled:") = Void, Id;
override selector("inputClientResignActive:") = Void, Id;
override selector("inputContext") = NSTextInputContext;
override selector("inputEncoding") = NSString;
override selector("inputStreamWithData:") = Id, NSData;
override selector("inputStreamWithFileAtPath:") = Id, NSString;
override selector("inputStreamWithURL:") = Id, NSURL;
override selector("insert:") = Void, Id;
override selector("insertAttributedString:atIndex:") = Void, NSAttributedString, CULong;
override selector("insertBacktab:") = Void, Id;
override selector("insertBefore::") = DOMNode, DOMNode, DOMNode;
override selector("insertBefore:refChild:") = DOMNode, DOMNode, DOMNode;
override selector("insertCell:") = DOMHTMLElement, Int;
override selector("insertChild:") = Void, Id;
override selector("insertChild:atIndex:") = Void, NSXMLNode, CULong;
override selector("insertChildren:atIndex:") = Void, NSArray, CULong;
override selector("insertColor:key:atIndex:") = Void, NSColor, NSString, CULong;
override selector("insertColumn:") = Void, CLong;
override selector("insertColumn:withCells:") = Void, CLong, NSArray;
override selector("insertCompletion:forPartialWordRange:movement:isFinal:") = Void, NSString, NSRange, CLong, Bool;
override selector("insertContainerBreak:") = Void, Id;
override selector("insertData::") = Void, UInt, NSString;
override selector("insertData:data:") = Void, UInt, NSString;
override selector("insertDescriptor:atIndex:") = Void, NSAppleEventDescriptor, CLong;
override selector("insertDoubleQuoteIgnoringSubstitution:") = Void, Id;
override selector("insertEntry:atIndex:") = NSFormCell, NSString, CLong;
override selector("insertGlyph:atGlyphIndex:characterIndex:") = Void, UInt, CULong, CULong;
override selector("insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:") = Void, Pointer[UInt], CULong, CULong, CULong;
override selector("insertItem:atIndex:") = Void, NSMenuItem, CLong;
override selector("insertItemWithItemIdentifier:atIndex:") = Void, NSString, CLong;
override selector("insertItemWithObjectValue:atIndex:") = Void, Id, CLong;
override selector("insertItemWithTitle:action:keyEquivalent:atIndex:") = NSMenuItem, NSString, SelectorHandle, NSString, CLong;
override selector("insertItemWithTitle:atIndex:") = Void, NSString, CLong;
override selector("insertLineBreak:") = Void, Id;
override selector("insertNewButtonImage:in:") = Void, NSImage, NSButtonCell;
override selector("insertNewObjectForEntityForName:inManagedObjectContext:") = Id, NSString, NSManagedObjectContext;
override selector("insertNewline:") = Void, Id;
override selector("insertNewlineIgnoringFieldEditor:") = Void, Id;
override selector("insertNode:") = Void, DOMNode;
override selector("insertObject:") = Void, NSManagedObject;
override selector("insertObject:atArrangedObjectIndex:") = Void, Id, CULong;
override selector("insertObject:atArrangedObjectIndexPath:") = Void, Id, NSIndexPath;
override selector("insertObject:atIndex:") = Void, Id, CULong;
override selector("insertObjects:atArrangedObjectIndexPaths:") = Void, NSArray, NSArray;
override selector("insertObjects:atArrangedObjectIndexes:") = Void, NSArray, NSIndexSet;
override selector("insertObjects:atIndexes:") = Void, NSArray, NSIndexSet;
override selector("insertParagraphSeparator:") = Void, Id;
override selector("insertPointer:atIndex:") = Void, RawPointer, CULong;
override selector("insertRow:") = DOMHTMLElement, Int;
override selector("insertRow:withCells:") = Void, CLong, NSArray;
override selector("insertRowAtIndex:withType:asSubrowOfRow:animate:") = Void, CLong, CULong, CLong, Bool;
override selector("insertRule::") = UInt, NSString, UInt;
override selector("insertRule:index:") = UInt, NSString, UInt;
override selector("insertSingleQuoteIgnoringSubstitution:") = Void, Id;
override selector("insertString:atIndex:") = Void, NSString, CULong;
override selector("insertSublayer:above:") = Void, CALayer, CALayer;
override selector("insertSublayer:atIndex:") = Void, CALayer, UInt;
override selector("insertSublayer:below:") = Void, CALayer, CALayer;
override selector("insertTab:") = Void, Id;
override selector("insertTabIgnoringFieldEditor:") = Void, Id;
override selector("insertTabViewItem:atIndex:") = Void, NSTabViewItem, CLong;
override selector("insertText:") = Void, Id;
override selector("insertText:client:") = Void, Id, Id;
override selector("insertText:replacementRange:") = Void, Id, NSRange;
override selector("insertTextContainer:atIndex:") = Void, NSTextContainer, CULong;
override selector("insertValue:atIndex:inPropertyWithKey:") = Void, Id, CULong, NSString;
override selector("insertValue:inPropertyWithKey:") = Void, Id, NSString;
override selector("insertedObjects") = NSSet;
override selector("insertionContainer") = Id;
override selector("insertionIndex") = CLong;
override selector("insertionKey") = NSString;
override selector("insertionPointColor") = NSColor;
override selector("insertionReplaces") = Bool;
override selector("instanceMethodForSelector:") = IMP, SelectorHandle;
override selector("instanceMethodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
override selector("instancesRespondToSelector:") = Bool, SelectorHandle;
override selector("instantiateNibWithExternalNameTable:") = Bool, NSDictionary;
override selector("instantiateNibWithOwner:topLevelObjects:") = Bool, Id, Pointer[NSArray];
override selector("int32Value") = Int;
override selector("intAttribute:forGlyphAtIndex:") = CLong, CLong, CULong;
override selector("intForKey:inTable:") = Int, NSString, NSString;
override selector("intValue") = Int;
override selector("integerForKey:") = CLong, NSString;
override selector("integerValue") = CLong;
override selector("intercellSpacing") = NSSize;
override selector("interfaceStyle") = CULong;
override selector("interiorBackgroundStyle") = CLong;
override selector("interiorBackgroundStyleForSegment:") = CLong, CLong;
override selector("internalSubset") = NSString;
override selector("internationalCurrencySymbol") = NSString;
override selector("interpolatedColorAtLocation:") = NSColor, Double;
override selector("interpretKeyEvents:") = Void, NSArray;
override selector("interrupt") = Void;
override selector("intersectHashTable:") = Void, NSHashTable;
override selector("intersectSet:") = Void, NSSet;
override selector("intersectsHashTable:") = Bool, NSHashTable;
override selector("intersectsIndexesInRange:") = Bool, NSRange;
override selector("intersectsNode:") = Bool, DOMNode;
override selector("intersectsSet:") = Bool, NSSet;
override selector("invalidIteratorState") = Bool;
override selector("invalidate") = Void;
override selector("invalidateAttributesInRange:") = Void, NSRange;
override selector("invalidateCharacterCoordinates") = Void;
override selector("invalidateClassDescriptionCache") = Void;
override selector("invalidateCursorRectsForView:") = Void, NSView;
override selector("invalidateDisplayForCharacterRange:") = Void, NSRange;
override selector("invalidateDisplayForGlyphRange:") = Void, NSRange;
override selector("invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:") = Void, NSRange, CLong, NSRangePointer;
override selector("invalidateGlyphsOnLayoutInvalidationForGlyphRange:") = Void, NSRange;
override selector("invalidateHashMarks") = Void;
override selector("invalidateLayoutForCharacterRange:actualCharacterRange:") = Void, NSRange, NSRangePointer;
override selector("invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:") = Void, NSRange, Bool, NSRangePointer;
override selector("invalidateLayoutOfLayer:") = Void, CALayer;
override selector("invalidateShadow") = Void;
override selector("invalidateTextContainerOrigin") = Void;
override selector("inverseForRelationshipKey:") = NSString, NSString;
override selector("inverseRelationship") = NSRelationshipDescription;
override selector("invert") = Void;
override selector("invertedSet") = NSCharacterSet;
override selector("invocation") = NSInvocation;
override selector("invocationWithMethodSignature:") = NSInvocation, NSMethodSignature;
override selector("invoke") = Void;
override selector("invokeDefaultMethodWithArguments:") = Id, NSArray;
override selector("invokeUndefinedMethodFromWebScript:withArguments:") = Id, NSString, NSArray;
override selector("invokeWithTarget:") = Void, Id;
override selector("isARepeat") = Bool;
override selector("isAbsolutePath") = Bool;
override selector("isAbstract") = Bool;
override selector("isActive") = Bool;
override selector("isAlternate") = Bool;
override selector("isAnimating") = Bool;
override selector("isAnyApplicationSpeaking") = Bool;
override selector("isAsynchronous") = Bool;
override selector("isAtEnd") = Bool;
override selector("isAttached") = Bool;
override selector("isAutodisplay") = Bool;
override selector("isAutomaticDashSubstitutionEnabled") = Bool;
override selector("isAutomaticDataDetectionEnabled") = Bool;
override selector("isAutomaticLinkDetectionEnabled") = Bool;
override selector("isAutomaticQuoteSubstitutionEnabled") = Bool;
override selector("isAutomaticSpellingCorrectionEnabled") = Bool;
override selector("isAutomaticTextReplacementEnabled") = Bool;
override selector("isAutoscroll") = Bool;
override selector("isBezeled") = Bool;
override selector("isBordered") = Bool;
override selector("isButtonBordered") = Bool;
override selector("isBycopy") = Bool;
override selector("isByref") = Bool;
override selector("isCachedSeparately") = Bool;
override selector("isCancelled") = Bool;
override selector("isCaseInsensitiveLike:") = Bool, NSString;
override selector("isCoalescingUndo") = Bool;
override selector("isCollecting") = Bool;
override selector("isColor") = Bool;
override selector("isColumnSelected:") = Bool, CLong;
override selector("isCompiled") = Bool;
override selector("isConcurrent") = Bool;
override selector("isConfiguration:compatibleWithStoreMetadata:") = Bool, NSString, NSDictionary;
override selector("isContentDiscarded") = Bool;
override selector("isContentEditable") = Bool;
override selector("isContextHelpModeActive") = Bool;
override selector("isContinuous") = Bool;
override selector("isContinuousSpellCheckingEnabled") = Bool;
override selector("isCopyingOperation") = Bool;
override selector("isCountOnlyRequest") = Bool;
override selector("isDataRetained") = Bool;
override selector("isDaylightSavingTime") = Bool;
override selector("isDaylightSavingTimeForDate:") = Bool, NSDate;
override selector("isDefaultNamespace:") = Bool, NSString;
override selector("isDeletableFileAtPath:") = Bool, NSString;
override selector("isDeleted") = Bool;
override selector("isDescendantOf:") = Bool, NSView;
override selector("isDirectory") = Bool;
override selector("isDisplayedWhenStopped") = Bool;
override selector("isDocumentEdited") = Bool;
override selector("isDoubleSided") = Bool;
override selector("isDragging") = Bool;
override selector("isDrawingToScreen") = Bool;
override selector("isEditable") = Bool;
override selector("isEditing") = Bool;
override selector("isEmpty") = Bool;
override selector("isEnabled") = Bool;
override selector("isEnabledForSegment:") = Bool, CLong;
override selector("isEnteringProximity") = Bool;
override selector("isEntryAcceptable:") = Bool, NSString;
override selector("isEqual:") = Bool, Id;
override selector("isEqualFunction") = CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[CULong]]],[CChar]];
override selector("isEqualNode:") = Bool, DOMNode;
override selector("isEqualTo:") = Bool, Id;
override selector("isEqualToArray:") = Bool, NSArray;
override selector("isEqualToAttributedString:") = Bool, NSAttributedString;
override selector("isEqualToData:") = Bool, NSData;
override selector("isEqualToDate:") = Bool, NSDate;
override selector("isEqualToDictionary:") = Bool, NSDictionary;
override selector("isEqualToHashTable:") = Bool, NSHashTable;
override selector("isEqualToHost:") = Bool, NSHost;
override selector("isEqualToIndexSet:") = Bool, NSIndexSet;
override selector("isEqualToNumber:") = Bool, NSNumber;
override selector("isEqualToSet:") = Bool, NSSet;
override selector("isEqualToString:") = Bool, NSString;
override selector("isEqualToTimeZone:") = Bool, NSTimeZone;
override selector("isEqualToValue:") = Bool, NSValue;
override selector("isExcludedFromWindowsMenu") = Bool;
override selector("isExecutableFileAtPath:") = Bool, NSString;
override selector("isExecuting") = Bool;
override selector("isExpandable:") = Bool, Id;
override selector("isExpanded") = Bool;
override selector("isExplicitlyIncluded") = Bool;
override selector("isExtensionHidden") = Bool;
override selector("isExternal") = Bool;
override selector("isFault") = Bool;
override selector("isFieldEditor") = Bool;
override selector("isFilePackageAtPath:") = Bool, NSString;
override selector("isFileReferenceURL") = Bool;
override selector("isFileURL") = Bool;
override selector("isFinished") = Bool;
override selector("isFinishedLaunching") = Bool;
override selector("isFirstResponder") = Bool;
override selector("isFixedPitch") = Bool;
override selector("isFlipped") = Bool;
override selector("isFloatingPanel") = Bool;
override selector("isFlushWindowDisabled") = Bool;
override selector("isFontAvailable:") = Bool, NSString;
override selector("isFullKeyboardAccessEnabled") = Bool;
override selector("isGathering") = Bool;
override selector("isGeometryFlipped") = Bool;
override selector("isGrammarCheckingEnabled") = Bool;
override selector("isGreaterThan:") = Bool, Id;
override selector("isGreaterThanOrEqualTo:") = Bool, Id;
override selector("isHTTPOnly") = Bool;
override selector("isHidden") = Bool;
override selector("isHiddenOrHasHiddenAncestor") = Bool;
override selector("isHighlighted") = Bool;
override selector("isHorizontal") = Bool;
override selector("isHorizontallyCentered") = Bool;
override selector("isHorizontallyResizable") = Bool;
override selector("isHostCacheEnabled") = Bool;
override selector("isInFullScreenMode") = Bool;
override selector("isIndeterminate") = Bool;
override selector("isIndexed") = Bool;
override selector("isIndexedBySpotlight") = Bool;
override selector("isInserted") = Bool;
override selector("isItemExpanded:") = Bool, Id;
override selector("isJavaEnabled") = Bool;
override selector("isJavaScriptEnabled") = Bool;
override selector("isKey:inTable:") = Bool, NSString, NSString;
override selector("isKeyExcludedFromWebScript:") = Bool, Pointer[CChar];
override selector("isKeyWindow") = Bool;
override selector("isKindOfClass:") = Bool, Id;
override selector("isKindOfEntity:") = Bool, NSEntityDescription;
override selector("isLeaf") = Bool;
override selector("isLeafItem:") = Bool, Id;
override selector("isLenient") = Bool;
override selector("isLessThan:") = Bool, Id;
override selector("isLessThanOrEqualTo:") = Bool, Id;
override selector("isLike:") = Bool, NSString;
override selector("isLoaded") = Bool;
override selector("isLoading") = Bool;
override selector("isLocationRequiredToCreateForKey:") = Bool, NSString;
override selector("isMainThread") = Bool;
override selector("isMainWindow") = Bool;
override selector("isMap") = Bool;
override selector("isMemberOfClass:") = Bool, Id;
override selector("isMiniaturizable") = Bool;
override selector("isMiniaturized") = Bool;
override selector("isModalPanel") = Bool;
override selector("isMouseCoalescingEnabled") = Bool;
override selector("isMovable") = Bool;
override selector("isMovableByWindowBackground") = Bool;
override selector("isMultiThreaded") = Bool;
override selector("isMultiple") = Bool;
override selector("isNativeType:") = Bool, NSString;
override selector("isNotEqualTo:") = Bool, Id;
override selector("isOnActiveSpace") = Bool;
override selector("isOneShot") = Bool;
override selector("isOneway") = Bool;
override selector("isOpaque") = Bool;
override selector("isOptional") = Bool;
override selector("isOptionalArgumentWithName:") = Bool, NSString;
override selector("isOutputStackInReverseOrder") = Bool;
override selector("isPaneSplitter") = Bool;
override selector("isPartialStringValid:newEditingString:errorDescription:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
override selector("isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:") = Bool, Pointer[NSString], NSRangePointer, NSString, NSRange, Pointer[NSString];
override selector("isPartialStringValidationEnabled") = Bool;
override selector("isPlanar") = Bool;
override selector("isPlaying") = Bool;
override selector("isPointInRange:offset:") = Bool, DOMNode, Int;
override selector("isPropertyImplicit:") = Bool, NSString;
override selector("isProxy") = Bool;
override selector("isReadOnly") = Bool;
override selector("isReadOnlyKey:") = Bool, NSString;
override selector("isReadableFileAtPath:") = Bool, NSString;
override selector("isReady") = Bool;
override selector("isRedoing") = Bool;
override selector("isRegularFile") = Bool;
override selector("isReleasedWhenClosed") = Bool;
override selector("isRemovable") = Bool;
override selector("isResizable") = Bool;
override selector("isResting") = Bool;
override selector("isRichText") = Bool;
override selector("isRotatedFromBase") = Bool;
override selector("isRotatedOrScaledFromBase") = Bool;
override selector("isRowSelected:") = Bool, CLong;
override selector("isRulerVisible") = Bool;
override selector("isRunning") = Bool;
override selector("isSameNode:") = Bool, DOMNode;
override selector("isScrollable") = Bool;
override selector("isSecure") = Bool;
override selector("isSelectable") = Bool;
override selector("isSelected") = Bool;
override selector("isSelectedForSegment:") = Bool, CLong;
override selector("isSelectionByRect") = Bool;
override selector("isSelectionOnly") = Bool;
override selector("isSelectorExcludedFromWebScript:") = Bool, SelectorHandle;
override selector("isSeparatorItem") = Bool;
override selector("isSessionOnly") = Bool;
override selector("isSetOnMouseEntered") = Bool;
override selector("isSetOnMouseExited") = Bool;
override selector("isSheet") = Bool;
override selector("isSimpleRectangularTextContainer") = Bool;
override selector("isSpeaking") = Bool;
override selector("isStandalone") = Bool;
override selector("isStarted") = Bool;
override selector("isStopped") = Bool;
override selector("isStoredInExternalRecord") = Bool;
override selector("isSubclassOfClass:") = Bool, Id;
override selector("isSubsetOfHashTable:") = Bool, NSHashTable;
override selector("isSubsetOfSet:") = Bool, NSSet;
override selector("isSubviewCollapsed:") = Bool, NSView;
override selector("isSupersetOfSet:") = Bool, NSCharacterSet;
override selector("isSupported::") = Bool, NSString, NSString;
override selector("isSupported:version:") = Bool, NSString, NSString;
override selector("isSuspended") = Bool;
override selector("isSymbolicLink") = Bool;
override selector("isTemplate") = Bool;
override selector("isTemporaryID") = Bool;
override selector("isTerminated") = Bool;
override selector("isTitled") = Bool;
override selector("isToMany") = Bool;
override selector("isTornOff") = Bool;
override selector("isTransient") = Bool;
override selector("isTransparent") = Bool;
override selector("isTrue") = Bool;
override selector("isUndoRegistrationEnabled") = Bool;
override selector("isUndoing") = Bool;
override selector("isUpdated") = Bool;
override selector("isValid") = Bool;
override selector("isValidGlyphIndex:") = Bool, CULong;
override selector("isVertical") = Bool;
override selector("isVerticallyCentered") = Bool;
override selector("isVerticallyResizable") = Bool;
override selector("isVisible") = Bool;
override selector("isWellFormed") = Bool;
override selector("isWindowLoaded") = Bool;
override selector("isWordInUserDictionaries:caseSensitive:") = Bool, NSString, Bool;
override selector("isWritableFileAtPath:") = Bool, NSString;
override selector("isZoomable") = Bool;
override selector("isZoomed") = Bool;
override selector("italicAngle") = Double;
override selector("item:") = Id, UInt;
override selector("itemArray") = NSArray;
override selector("itemAtIndex:") = Id, Int;
override selector("itemAtIndexPath:") = Id, NSIndexPath;
override selector("itemAtRow:") = Id, CLong;
override selector("itemAtRow:inColumn:") = Id, CLong, CLong;
override selector("itemChanged:") = Void, NSMenuItem;
override selector("itemForURL:") = WebHistoryItem, NSURL;
override selector("itemHeight") = Double;
override selector("itemIdentifier") = NSString;
override selector("itemNumberInTextList:atIndex:") = CLong, NSTextList, CULong;
override selector("itemObjectValueAtIndex:") = Id, CLong;
override selector("itemPrototype") = NSCollectionViewItem;
override selector("itemTitleAtIndex:") = NSString, CLong;
override selector("itemTitles") = NSArray;
override selector("itemWithTag:") = NSMenuItem, CLong;
override selector("itemWithTitle:") = NSMenuItem, NSString;
override selector("items") = NSArray;
override selector("iterateNext") = DOMNode;
override selector("javaScriptCanOpenWindowsAutomatically") = Bool;
override selector("jobDisposition") = NSString;
override selector("jobStyleHint") = NSString;
override selector("jobTitle") = NSString;
override selector("keepBackupFile") = Bool;
override selector("key") = NSString;
override selector("keyCell") = Id;
override selector("keyClassDescription") = NSScriptClassDescription;
override selector("keyCode") = Int;
override selector("keyDown:") = Void, NSEvent;
override selector("keyEnumerator") = NSEnumerator;
override selector("keyEquivalent") = NSString;
override selector("keyEquivalentFont") = NSFont;
override selector("keyEquivalentModifierMask") = CULong;
override selector("keyEquivalentRectForBounds:") = NSRect, NSRect;
override selector("keyEquivalentWidth") = Double;
override selector("keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, NSString, NSString, Bool, UShort;
override selector("keyForFileWrapper:") = NSString, NSFileWrapper;
override selector("keyIdentifier") = NSString;
override selector("keyLocation") = UInt;
override selector("keyPath") = NSString;
override selector("keyPathsForValuesAffectingPreview") = NSSet;
override selector("keyPathsForValuesAffectingValueForKey:") = NSSet, NSString;
override selector("keyPointerFunctions") = NSPointerFunctions;
override selector("keyRepeatDelay") = Double;
override selector("keyRepeatInterval") = Double;
override selector("keySpecifier") = NSScriptObjectSpecifier;
override selector("keyUp:") = Void, NSEvent;
override selector("keyViewSelectionDirection") = CULong;
override selector("keyWindow") = NSWindow;
override selector("keyWithAppleEventCode:") = NSString, UInt;
override selector("keyboardFocusIndicatorColor") = NSColor;
override selector("keyboardInputSources") = NSArray;
override selector("keysOfEntriesPassingTest:") = NSSet, UnknownType;
override selector("keysOfEntriesWithOptions:passingTest:") = NSSet, CULong, UnknownType;
override selector("keysSortedByValueUsingComparator:") = NSArray, NSComparator;
override selector("keysSortedByValueUsingSelector:") = NSArray, SelectorHandle;
override selector("keysSortedByValueWithOptions:usingComparator:") = NSArray, CULong, NSComparator;
override selector("keywordForDescriptorAtIndex:") = UInt, CLong;
override selector("kind") = CULong;
override selector("knobColor") = NSColor;
override selector("knobProportion") = Double;
override selector("knobRectFlipped:") = NSRect, Bool;
override selector("knobThickness") = Double;
override selector("knownTimeZoneNames") = NSArray;
override selector("knowsPageRange:") = Bool, NSRangePointer;
override selector("label") = NSString;
override selector("labelFontOfSize:") = NSFont, Double;
override selector("labelFontSize") = Double;
override selector("labelForSegment:") = NSString, CLong;
override selector("lang") = NSString;
override selector("language") = NSString;
override selector("languageLevel") = CLong;
override selector("languageMap") = NSDictionary;
override selector("languagesForScript:") = NSArray, NSString;
override selector("lastChild") = DOMNode;
override selector("lastColumn") = CLong;
override selector("lastComponentOfFileName") = NSString;
override selector("lastElementChild") = DOMElement;
override selector("lastIndex") = CULong;
override selector("lastItem") = NSMenuItem;
override selector("lastModified") = NSString;
override selector("lastObject") = Id;
override selector("lastPathComponent") = NSString;
override selector("lastVisibleColumn") = CLong;
override selector("lastVisitedTimeInterval") = Double;
override selector("laterDate:") = NSDate, NSDate;
override selector("launch") = Void;
override selector("launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:") = Bool, NSString, CULong, NSAppleEventDescriptor, Pointer[NSNumber];
override selector("launchApplication:") = Bool, NSString;
override selector("launchApplication:showIcon:autolaunch:") = Bool, NSString, Bool, Bool;
override selector("launchApplicationAtURL:options:configuration:error:") = NSRunningApplication, NSURL, CULong, NSDictionary, Pointer[NSError];
override selector("launchDate") = NSDate;
override selector("launchPath") = NSString;
override selector("launchedApplications") = NSArray;
override selector("launchedTaskWithLaunchPath:arguments:") = NSTask, NSString, NSArray;
override selector("layer") = Id;
override selector("layerContentsPlacement") = CLong;
override selector("layerContentsRedrawPolicy") = CLong;
override selector("layerX") = Int;
override selector("layerY") = Int;
override selector("layout") = Void;
override selector("layoutAlgorithm") = CULong;
override selector("layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:") = NSRange, NSRange, NSLayoutManager, CULong;
override selector("layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:") = Void, NSLayoutManager, CULong, CULong, Pointer[CULong];
override selector("layoutIfNeeded") = Void;
override selector("layoutManager") = Id;
override selector("layoutManager:didCompleteLayoutForTextContainer:atEnd:") = Void, NSLayoutManager, NSTextContainer, Bool;
override selector("layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:") = NSDictionary, NSLayoutManager, NSDictionary, Bool, CULong, NSRangePointer;
override selector("layoutManagerDidInvalidateLayout:") = Void, NSLayoutManager;
override selector("layoutManagerOwnsFirstResponderInWindow:") = Bool, NSWindow;
override selector("layoutManagers") = NSArray;
override selector("layoutOptions") = CULong;
override selector("layoutParagraphAtPoint:") = CULong, NSPointPointer;
override selector("layoutRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
override selector("layoutRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
override selector("layoutSublayers") = Void;
override selector("layoutSublayersOfLayer:") = Void, CALayer;
override selector("leading") = Double;
override selector("leadingOffset") = Double;
override selector("leafKeyPath") = NSString;
override selector("leafKeyPathForNode:") = NSString, NSTreeNode;
override selector("learnWord:") = Void, NSString;
override selector("left") = Id;
override selector("leftExpression") = NSExpression;
override selector("leftExpressions") = NSArray;
override selector("leftMargin") = Double;
override selector("length") = CULong;
override selector("lengthOfBytesUsingEncoding:") = CULong, CULong;
override selector("letterCharacterSet") = Id;
override selector("letterSpacing") = NSString;
override selector("level") = CULong;
override selector("levelForItem:") = CLong, Id;
override selector("levelForRow:") = CLong, CLong;
override selector("levelIndicatorStyle") = CULong;
override selector("levelsOfUndo") = CULong;
override selector("lightGrayColor") = NSColor;
override selector("limitDateForMode:") = NSDate, NSString;
override selector("lineBoxRects") = NSArray;
override selector("lineBreakBeforeIndex:withinRange:") = CULong, CULong, NSRange;
override selector("lineBreakByHyphenatingBeforeIndex:withinRange:") = CULong, CULong, NSRange;
override selector("lineBreakMode") = CULong;
override selector("lineCapStyle") = CULong;
override selector("lineDirectionForLanguage:") = CULong, NSString;
override selector("lineFragmentPadding") = Double;
override selector("lineFragmentRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
override selector("lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
override selector("lineFragmentRectForProposedRect:remainingRect:") = NSRect, NSRect, NSRectPointer;
override selector("lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:") = NSRect, NSRect, CULong, CULong, NSRectPointer;
override selector("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
override selector("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
override selector("lineHeight") = NSString;
override selector("lineHeightMultiple") = Double;
override selector("lineJoinStyle") = CULong;
override selector("lineNumber") = CLong;
override selector("lineRangeForRange:") = NSRange, NSRange;
override selector("lineScroll") = Double;
override selector("lineSpacing") = Double;
override selector("lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override selector("lineToPoint:") = Void, NSPoint;
override selector("lineWidth") = Double;
override selector("link") = NSString;
override selector("linkCheckingResultWithRange:URL:") = NSTextCheckingResult, NSRange, NSURL;
override selector("linkColor") = NSString;
override selector("linkItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("linkItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("linkPath:toPath:handler:") = Bool, NSString, NSString, Id;
override selector("linkTextAttributes") = NSDictionary;
override selector("links") = DOMHTMLCollection;
override selector("listDescriptor") = NSAppleEventDescriptor;
override selector("listOptions") = CULong;
override selector("listStyle") = NSString;
override selector("listStyleImage") = NSString;
override selector("listStylePosition") = NSString;
override selector("listStyleType") = NSString;
override selector("listensInForegroundOnly") = Bool;
override selector("load") = Bool;
override selector("load:") = Bool, Pointer[NSError];
override selector("loadAlternateHTMLString:baseURL:forUnreachableURL:") = Void, NSString, NSURL, NSURL;
override selector("loadAndReturnError:") = Bool, Pointer[NSError];
override selector("loadArchive:") = Void, WebArchive;
override selector("loadColumnZero") = Void;
override selector("loadData:MIMEType:textEncodingName:baseURL:") = Void, NSData, NSString, NSString, NSURL;
override selector("loadDataRepresentation:ofType:") = Bool, NSData, NSString;
override selector("loadFileWrapperRepresentation:ofType:") = Bool, NSFileWrapper, NSString;
override selector("loadFromURL:error:") = Bool, NSURL, Pointer[NSError];
override selector("loadHTMLString:baseURL:") = Void, NSString, NSURL;
override selector("loadInBackground") = Void;
override selector("loadInForeground") = NSData;
override selector("loadMetadata:") = Bool, Pointer[NSError];
override selector("loadNibFile:externalNameTable:withZone:") = Bool, NSString, NSDictionary, Pointer[NSZone];
override selector("loadNibNamed:owner:") = Bool, NSString, Id;
override selector("loadRequest:") = Void, NSURLRequest;
override selector("loadResourceDataNotifyingClient:usingCache:") = Void, Id, Bool;
override selector("loadSuiteWithDictionary:fromBundle:") = Void, NSDictionary, NSBundle;
override selector("loadSuitesFromBundle:") = Void, NSBundle;
override selector("loadView") = Void;
override selector("loadWindow") = Void;
override selector("loadedCellAtRow:column:") = Id, CLong, CLong;
override selector("loadsImagesAutomatically") = Bool;
override selector("localName") = NSString;
override selector("localNameForName:") = NSString, NSString;
override selector("localObjects") = NSArray;
override selector("localTimeZone") = NSTimeZone;
override selector("locale") = Id;
override selector("localeIdentifier") = NSString;
override selector("localeIdentifierFromComponents:") = NSString, NSDictionary;
override selector("localeIdentifierFromWindowsLocaleCode:") = NSString, UInt;
override selector("localizationDictionary") = NSDictionary;
override selector("localizations") = NSArray;
override selector("localizedCaseInsensitiveCompare:") = CLong, NSString;
override selector("localizedCatalogNameComponent") = NSString;
override selector("localizedColorNameComponent") = NSString;
override selector("localizedCompare:") = CLong, NSString;
override selector("localizedDescription") = NSString;
override selector("localizedDescriptionForType:") = NSString, NSString;
override selector("localizedFailureReason") = NSString;
override selector("localizedInfoDictionary") = NSDictionary;
override selector("localizedInputManagerName") = NSString;
override selector("localizedKey") = NSString;
override selector("localizedKeyDictionary") = NSDictionary;
override selector("localizedKeyTable") = NSString;
override selector("localizedName") = NSString;
override selector("localizedName:locale:") = NSString, CLong, NSLocale;
override selector("localizedNameForFamily:face:") = NSString, NSString, NSString;
override selector("localizedNameForInputSource:") = NSString, NSString;
override selector("localizedNameForTIFFCompressionType:") = NSString, CULong;
override selector("localizedNameOfStringEncoding:") = NSString, CULong;
override selector("localizedPaperName") = NSString;
override selector("localizedRecoveryOptions") = NSArray;
override selector("localizedRecoverySuggestion") = NSString;
override selector("localizedScannerWithString:") = Id, NSString;
override selector("localizedStandardCompare:") = CLong, NSString;
override selector("localizedStringForKey:value:table:") = NSString, NSString, NSString, NSString;
override selector("localizedStringForStatusCode:") = NSString, CLong;
override selector("localizedStringFromDate:dateStyle:timeStyle:") = NSString, NSDate, CULong, CULong;
override selector("localizedStringFromNumber:numberStyle:") = NSString, NSNumber, CULong;
override varargSelector("localizedStringWithFormat:") = Id, NSString;
override selector("localizedSummaryItems") = NSArray;
override selector("localizedTitlesForItem:") = NSArray, Id;
override selector("localizesFormat") = Bool;
override selector("location") = NSString;
override selector("locationForGlyphAtIndex:") = NSPoint, CULong;
override selector("locationForSubmenu:") = NSPoint, NSMenu;
override selector("locationInWindow") = NSPoint;
override selector("locationOfPrintRect:") = NSPoint, NSRect;
override selector("lock") = Void;
override selector("lockBeforeDate:") = Bool, NSDate;
override selector("lockDate") = NSDate;
override selector("lockFocus") = Void;
override selector("lockFocusFlipped:") = Void, Bool;
override selector("lockFocusIfCanDraw") = Bool;
override selector("lockFocusIfCanDrawInContext:") = Bool, NSGraphicsContext;
override selector("lockFocusOnRepresentation:") = Void, NSImageRep;
override selector("lockWhenCondition:") = Void, CLong;
override selector("lockWhenCondition:beforeDate:") = Bool, CLong, NSDate;
override selector("lockWithPath:") = NSDistributedLock, NSString;
override selector("longCharacterIsMember:") = Bool, UInt;
override selector("longDesc") = NSString;
override selector("longEraSymbols") = NSArray;
override selector("longLongValue") = Int64;
override selector("longValue") = CLong;
override selector("lookupNamespaceURI:") = NSString, NSString;
override selector("lookupPrefix:") = NSString, NSString;
override selector("loops") = Bool;
override selector("loosenKerning:") = Void, Id;
override selector("lossyCString") = Pointer[CChar];
override selector("lowerBaseline:") = Void, Id;
override selector("lowercaseLetterCharacterSet") = Id;
override selector("lowercaseString") = NSString;
override selector("lowercaseWord:") = Void, Id;
override selector("lowsrc") = NSString;
override selector("machPort") = UInt;
override selector("magentaColor") = NSColor;
override selector("magentaComponent") = Double;
override selector("magnification") = Double;
override selector("magnificationFilter") = NSString;
override selector("magnifyWithEvent:") = Void, NSEvent;
override selector("main") = Void;
override selector("mainBundle") = NSBundle;
override selector("mainDocumentURL") = NSURL;
override selector("mainFrame") = WebFrame;
override selector("mainFrameDocument") = DOMDocument;
override selector("mainFrameIcon") = NSImage;
override selector("mainFrameTitle") = NSString;
override selector("mainFrameURL") = NSString;
override selector("mainMenu") = NSMenu;
override selector("mainQueue") = Id;
override selector("mainResource") = WebResource;
override selector("mainRunLoop") = NSRunLoop;
override selector("mainScreen") = NSScreen;
override selector("mainThread") = NSThread;
override selector("mainWindow") = NSWindow;
override selector("maintainsInactiveSelection") = Bool;
override selector("makeBackingLayer") = CALayer;
override selector("makeBaseWritingDirectionLeftToRight:") = Void, Id;
override selector("makeBaseWritingDirectionNatural:") = Void, Id;
override selector("makeBaseWritingDirectionRightToLeft:") = Void, Id;
override selector("makeCellAtRow:column:") = NSCell, CLong, CLong;
override selector("makeCurrentContext") = Void;
override selector("makeDocumentForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
override selector("makeDocumentWithContentsOfFile:ofType:") = Id, NSString, NSString;
override selector("makeDocumentWithContentsOfURL:ofType:") = Id, NSURL, NSString;
override selector("makeDocumentWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
override selector("makeFirstResponder:") = Bool, NSResponder;
override selector("makeKeyAndOrderFront:") = Void, Id;
override selector("makeKeyWindow") = Void;
override selector("makeMainWindow") = Void;
override selector("makeNewConnection:sender:") = Bool, NSConnection, NSConnection;
override selector("makeNextSegmentKey") = Void;
override selector("makeObjectsPerformSelector:") = Void, SelectorHandle;
override selector("makeObjectsPerformSelector:withObject:") = Void, SelectorHandle, Id;
override selector("makePreviousSegmentKey") = Void;
override selector("makeTextLarger:") = Void, Id;
override selector("makeTextSmaller:") = Void, Id;
override selector("makeTextStandardSize:") = Void, Id;
override selector("makeTextWritingDirectionLeftToRight:") = Void, Id;
override selector("makeTextWritingDirectionNatural:") = Void, Id;
override selector("makeTextWritingDirectionRightToLeft:") = Void, Id;
override selector("makeUntitledDocumentOfType:") = Id, NSString;
override selector("makeUntitledDocumentOfType:error:") = Id, NSString, Pointer[NSError];
override selector("makeWindowControllers") = Void;
override selector("makeWindowsPerform:inOrder:") = NSWindow, SelectorHandle, Bool;
override selector("managedObjectClassName") = NSString;
override selector("managedObjectContext") = NSManagedObjectContext;
override selector("managedObjectIDForURIRepresentation:") = NSManagedObjectID, NSURL;
override selector("managedObjectModel") = Id;
override selector("mapTableWithKeyOptions:valueOptions:") = Id, CULong, CULong;
override selector("mapTableWithStrongToStrongObjects") = Id;
override selector("mapTableWithStrongToWeakObjects") = Id;
override selector("mapTableWithWeakToStrongObjects") = Id;
override selector("mapTableWithWeakToWeakObjects") = Id;
override selector("mappingModel") = NSMappingModel;
override selector("mappingModelFromBundles:forSourceModel:destinationModel:") = NSMappingModel, NSArray, NSManagedObjectModel, NSManagedObjectModel;
override selector("mappingType") = CULong;
override selector("margin") = NSString;
override selector("marginBottom") = NSString;
override selector("marginHeight") = NSString;
override selector("marginLeft") = NSString;
override selector("marginRight") = NSString;
override selector("marginTop") = NSString;
override selector("marginWidth") = NSString;
override selector("markedRange") = NSRange;
override selector("markedTextAbandoned:") = Void, Id;
override selector("markedTextAttributes") = NSDictionary;
override selector("markedTextSelectionChanged:client:") = Void, NSRange, Id;
override selector("markerForItemNumber:") = NSString, CLong;
override selector("markerFormat") = NSString;
override selector("markerLocation") = Double;
override selector("markerOffset") = NSString;
override selector("markers") = NSArray;
override selector("marks") = NSString;
override selector("markupString") = NSString;
override selector("mask") = CALayer;
override selector("masksToBounds") = Bool;
override selector("matchForPredicate:") = Double, NSPredicate;
override selector("matchesAppleEventCode:") = Bool, UInt;
override selector("matchesContentsOfURL:") = Bool, NSURL;
override selector("matchesOnMultipleResolution") = Bool;
override selector("matchingFontDescriptorWithMandatoryKeys:") = NSFontDescriptor, NSSet;
override selector("matchingFontDescriptorsWithMandatoryKeys:") = NSArray, NSSet;
override selector("matrix") = Pointer[Double];
override selector("matrixClass") = Id;
override selector("matrixInColumn:") = NSMatrix, CLong;
override selector("maxConcurrentOperationCount") = CLong;
override selector("maxContentSize") = NSSize;
override selector("maxCount") = CULong;
override selector("maxDate") = NSDate;
override selector("maxHeight") = NSString;
override selector("maxItemSize") = NSSize;
override selector("maxLength") = Int;
override selector("maxNumberOfColumns") = CULong;
override selector("maxNumberOfRows") = CULong;
override selector("maxPossiblePositionOfDividerAtIndex:") = Double, CLong;
override selector("maxSize") = NSSize;
override selector("maxValue") = Double;
override selector("maxVisibleColumns") = CLong;
override selector("maxWidth") = NSString;
override selector("maximum") = NSNumber;
override selector("maximumAdvancement") = NSSize;
override selector("maximumDecimalNumber") = NSDecimalNumber;
override selector("maximumFractionDigits") = CULong;
override selector("maximumIntegerDigits") = CULong;
override selector("maximumLengthOfBytesUsingEncoding:") = CULong, CULong;
override selector("maximumLineHeight") = Double;
override selector("maximumRangeOfUnit:") = NSRange, CULong;
override selector("maximumRecentDocumentCount") = CULong;
override selector("maximumRecents") = CLong;
override selector("maximumSignificantDigits") = CULong;
override selector("measurementUnits") = NSString;
override selector("media") = Id;
override selector("mediaStyle") = NSString;
override selector("mediaText") = NSString;
override selector("member:") = Id, Id;
override selector("memoryCapacity") = CULong;
override selector("menu") = NSMenu;
override selector("menu:updateItem:atIndex:shouldCancel:") = Bool, NSMenu, NSMenuItem, CLong, Bool;
override selector("menu:willHighlightItem:") = Void, NSMenu, NSMenuItem;
override selector("menuBarFontOfSize:") = NSFont, Double;
override selector("menuBarHeight") = Double;
override selector("menuBarVisible") = Bool;
override selector("menuChanged:") = Void, NSMenu;
override selector("menuChangedMessagesEnabled") = Bool;
override selector("menuDidClose:") = Void, NSMenu;
override selector("menuFontOfSize:") = NSFont, Double;
override selector("menuForEvent:") = NSMenu, NSEvent;
override selector("menuForEvent:inRect:ofView:") = NSMenu, NSEvent, NSRect, NSView;
override selector("menuForResult:string:options:atLocation:inView:") = NSMenu, NSTextCheckingResult, NSString, NSDictionary, NSPoint, NSView;
override selector("menuForSegment:") = NSMenu, CLong;
override selector("menuFormRepresentation") = NSMenuItem;
override selector("menuHasKeyEquivalent:forEvent:target:action:") = Bool, NSMenu, NSEvent, Pointer[Id], Pointer[SelectorHandle];
override selector("menuItem") = NSMenuItem;
override selector("menuNeedsUpdate:") = Void, NSMenu;
override selector("menuRepresentation") = Id;
override selector("menuWillOpen:") = Void, NSMenu;
override selector("menuZone") = Pointer[NSZone];
override selector("mergeChangesFromContextDidSaveNotification:") = Void, NSNotification;
override selector("mergePolicy") = Id;
override selector("mergedModelFromBundles:") = NSManagedObjectModel, NSArray;
override selector("mergedModelFromBundles:forStoreMetadata:") = NSManagedObjectModel, NSArray, NSDictionary;
override selector("message") = NSString;
override selector("messageFontOfSize:") = NSFont, Double;
override selector("messageText") = NSString;
override selector("metaKey") = Bool;
override selector("metadata") = NSDictionary;
override selector("metadataForPersistentStore:") = NSDictionary, NSPersistentStore;
override selector("metadataForPersistentStoreOfType:URL:error:") = NSDictionary, NSString, NSURL, Pointer[NSError];
override selector("metadataForPersistentStoreWithURL:error:") = NSDictionary, NSURL, Pointer[NSError];
override selector("metadataQuery:replacementObjectForResultObject:") = Id, NSMetadataQuery, NSMetadataItem;
override selector("metadataQuery:replacementValueForAttribute:value:") = Id, NSMetadataQuery, NSString, Id;
override selector("method") = NSString;
override selector("methodForSelector:") = IMP, SelectorHandle;
override selector("methodReturnLength") = CULong;
override selector("methodReturnType") = Pointer[CChar];
override selector("methodSignature") = NSMethodSignature;
override selector("methodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
override selector("migratePersistentStore:toURL:options:withType:error:") = NSPersistentStore, NSPersistentStore, NSURL, NSDictionary, NSString, Pointer[NSError];
override selector("migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:") = Bool, NSURL, NSString, NSDictionary, NSMappingModel, NSURL, NSString, NSDictionary, Pointer[NSError];
override selector("migrationManagerClass") = Id;
override selector("migrationProgress") = Float;
override selector("minColumnWidth") = Double;
override selector("minContentSize") = NSSize;
override selector("minCount") = CULong;
override selector("minDate") = NSDate;
override selector("minFrameWidthWithTitle:styleMask:") = Double, NSString, CULong;
override selector("minHeight") = NSString;
override selector("minItemSize") = NSSize;
override selector("minPossiblePositionOfDividerAtIndex:") = Double, CLong;
override selector("minSize") = NSSize;
override selector("minValue") = Double;
override selector("minWidth") = NSString;
override selector("miniaturize:") = Void, Id;
override selector("miniaturizeAll:") = Void, Id;
override selector("minificationFilter") = NSString;
override selector("minificationFilterBias") = Float;
override selector("minimum") = NSNumber;
override selector("minimumDaysInFirstWeek") = CULong;
override selector("minimumDecimalNumber") = NSDecimalNumber;
override selector("minimumFontSize") = Int;
override selector("minimumFractionDigits") = CULong;
override selector("minimumIntegerDigits") = CULong;
override selector("minimumLineHeight") = Double;
override selector("minimumLogicalFontSize") = Int;
override selector("minimumRangeOfUnit:") = NSRange, CULong;
override selector("minimumSignificantDigits") = CULong;
override selector("minimumSize") = NSSize;
override selector("minimumWidth") = Double;
override selector("miniwindowImage") = NSImage;
override selector("miniwindowTitle") = NSString;
override selector("minusHashTable:") = Void, NSHashTable;
override selector("minusSet:") = Void, NSSet;
override selector("minusSign") = NSString;
override selector("minute") = CLong;
override selector("minuteOfHour") = CLong;
override selector("miterLimit") = Double;
override selector("mixedStateImage") = NSImage;
override selector("mnemonic") = NSString;
override selector("mnemonicLocation") = CULong;
override selector("modalWindow") = NSWindow;
override selector("mode") = CULong;
override selector("modelByMergingModels:") = NSManagedObjectModel, NSArray;
override selector("modelByMergingModels:forStoreMetadata:") = NSManagedObjectModel, NSArray, NSDictionary;
override selector("modelLayer") = Id;
override selector("modifier") = CULong;
override selector("modifierFlags") = CULong;
override selector("modifyFont:") = Void, Id;
override selector("modifyFontViaPanel:") = Void, Id;
override selector("month") = CLong;
override selector("monthOfYear") = CLong;
override selector("monthSymbols") = NSArray;
override selector("mostCompatibleStringEncoding") = CULong;
override selector("mountNewRemovableMedia") = NSArray;
override selector("mountedLocalVolumePaths") = NSArray;
override selector("mountedRemovableMedia") = NSArray;
override selector("mountedVolumeURLsIncludingResourceValuesForKeys:options:") = NSArray, NSArray, CULong;
override selector("mouse:inRect:") = Bool, NSPoint, NSRect;
override selector("mouseDown:") = Void, NSEvent;
override selector("mouseDownCanMoveWindow") = Bool;
override selector("mouseDownFlags") = CLong;
override selector("mouseDownOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
override selector("mouseDragged:") = Void, NSEvent;
override selector("mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
override selector("mouseEntered:") = Void, NSEvent;
override selector("mouseEntered:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
override selector("mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, Float;
override selector("mouseExited:") = Void, NSEvent;
override selector("mouseExited:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
override selector("mouseLocation") = NSPoint;
override selector("mouseLocationOutsideOfEventStream") = NSPoint;
override selector("mouseMoved:") = Void, NSEvent;
override selector("mouseUp:") = Void, NSEvent;
override selector("mouseUpOnCharacterIndex:atCoordinate:withModifier:client:") = Void, CULong, NSPoint, CULong, Id;
override selector("moveBackward:") = Void, Id;
override selector("moveBackwardAndModifySelection:") = Void, Id;
override selector("moveColumn:toColumn:") = Void, CLong, CLong;
override selector("moveDown:") = Void, Id;
override selector("moveDownAndModifySelection:") = Void, Id;
override selector("moveDragCaretToPoint:") = Void, NSPoint;
override selector("moveForward:") = Void, Id;
override selector("moveForwardAndModifySelection:") = Void, Id;
override selector("moveItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
override selector("moveItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("moveLeft:") = Void, Id;
override selector("moveLeftAndModifySelection:") = Void, Id;
override selector("moveNode:toIndexPath:") = Void, NSTreeNode, NSIndexPath;
override selector("moveNodes:toIndexPath:") = Void, NSArray, NSIndexPath;
override selector("moveParagraphBackwardAndModifySelection:") = Void, Id;
override selector("moveParagraphForwardAndModifySelection:") = Void, Id;
override selector("movePath:toPath:handler:") = Bool, NSString, NSString, Id;
override selector("moveRight:") = Void, Id;
override selector("moveRightAndModifySelection:") = Void, Id;
override selector("moveRulerlineFromLocation:toLocation:") = Void, Double, Double;
override selector("moveToBeginningOfDocument:") = Void, Id;
override selector("moveToBeginningOfDocumentAndModifySelection:") = Void, Id;
override selector("moveToBeginningOfLine:") = Void, Id;
override selector("moveToBeginningOfLineAndModifySelection:") = Void, Id;
override selector("moveToBeginningOfParagraph:") = Void, Id;
override selector("moveToBeginningOfParagraphAndModifySelection:") = Void, Id;
override selector("moveToBeginningOfSentence:") = Void, Id;
override selector("moveToBeginningOfSentenceAndModifySelection:") = Void, Id;
override selector("moveToEndOfDocument:") = Void, Id;
override selector("moveToEndOfDocumentAndModifySelection:") = Void, Id;
override selector("moveToEndOfLine:") = Void, Id;
override selector("moveToEndOfLineAndModifySelection:") = Void, Id;
override selector("moveToEndOfParagraph:") = Void, Id;
override selector("moveToEndOfParagraphAndModifySelection:") = Void, Id;
override selector("moveToEndOfSentence:") = Void, Id;
override selector("moveToEndOfSentenceAndModifySelection:") = Void, Id;
override selector("moveToLeftEndOfLine:") = Void, Id;
override selector("moveToLeftEndOfLineAndModifySelection:") = Void, Id;
override selector("moveToPoint:") = Void, NSPoint;
override selector("moveToRightEndOfLine:") = Void, Id;
override selector("moveToRightEndOfLineAndModifySelection:") = Void, Id;
override selector("moveUp:") = Void, Id;
override selector("moveUpAndModifySelection:") = Void, Id;
override selector("moveWordBackward:") = Void, Id;
override selector("moveWordBackwardAndModifySelection:") = Void, Id;
override selector("moveWordForward:") = Void, Id;
override selector("moveWordForwardAndModifySelection:") = Void, Id;
override selector("moveWordLeft:") = Void, Id;
override selector("moveWordLeftAndModifySelection:") = Void, Id;
override selector("moveWordRight:") = Void, Id;
override selector("moveWordRightAndModifySelection:") = Void, Id;
override selector("msgid") = UInt;
override selector("multiple") = Bool;
override selector("multipleThreadsEnabled") = Bool;
override selector("multiplier") = NSNumber;
override selector("mutableArrayValueForKey:") = NSMutableArray, NSString;
override selector("mutableArrayValueForKeyPath:") = NSMutableArray, NSString;
override selector("mutableBytes") = RawPointer;
override selector("mutableChildNodes") = NSMutableArray;
override selector("mutableCopy") = Id;
override selector("mutableCopyWithZone:") = Id, Pointer[NSZone];
override selector("mutableSetValueForKey:") = NSMutableSet, NSString;
override selector("mutableSetValueForKeyPath:") = NSMutableSet, NSString;
override selector("mutableString") = NSMutableString;
override selector("name") = NSString;
override selector("nameFieldLabel") = NSString;
override selector("nameFieldStringValue") = NSString;
override selector("namedItem:") = DOMNode, NSString;
override selector("names") = NSArray;
override selector("namesOfPromisedFilesDroppedAtDestination:") = NSArray, NSURL;
override selector("namespaceForPrefix:") = NSXMLNode, NSString;
override selector("namespaceURI") = NSString;
override selector("namespaceWithName:stringValue:") = Id, NSString, NSString;
override selector("namespaces") = NSArray;
override selector("naturalHeight") = Int;
override selector("naturalWidth") = Int;
override selector("needsDisplay") = Bool;
override selector("needsDisplayForKey:") = Bool, NSString;
override selector("needsDisplayOnBoundsChange") = Bool;
override selector("needsLayout") = Bool;
override selector("needsPanelToBecomeKey") = Bool;
override selector("needsSizing") = Bool;
override selector("needsToBeUpdatedFromPath:") = Bool, NSString;
override selector("needsToDrawRect:") = Bool, NSRect;
override selector("negativeFormat") = NSString;
override selector("negativeInfinitySymbol") = NSString;
override selector("negativePrefix") = NSString;
override selector("negativeSuffix") = NSString;
override selector("nestingMode") = CULong;
override selector("netService:didNotPublish:") = Void, NSNetService, NSDictionary;
override selector("netService:didNotResolve:") = Void, NSNetService, NSDictionary;
override selector("netService:didUpdateTXTRecordData:") = Void, NSNetService, NSData;
override selector("netServiceBrowser:didFindDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
override selector("netServiceBrowser:didFindService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
override selector("netServiceBrowser:didNotSearch:") = Void, NSNetServiceBrowser, NSDictionary;
override selector("netServiceBrowser:didRemoveDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
override selector("netServiceBrowser:didRemoveService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
override selector("netServiceBrowserDidStopSearch:") = Void, NSNetServiceBrowser;
override selector("netServiceBrowserWillSearch:") = Void, NSNetServiceBrowser;
override selector("netServiceDidPublish:") = Void, NSNetService;
override selector("netServiceDidResolveAddress:") = Void, NSNetService;
override selector("netServiceDidStop:") = Void, NSNetService;
override selector("netServiceWillPublish:") = Void, NSNetService;
override selector("netServiceWillResolve:") = Void, NSNetService;
override selector("new") = Id;
override selector("newCacheNodeForManagedObject:") = NSAtomicStoreCacheNode, NSManagedObject;
override selector("newDocument:") = Void, Id;
override selector("newItemForRepresentedObject:") = NSCollectionViewItem, Id;
override selector("newObject") = Id;
override selector("newReferenceObjectForManagedObject:") = Id, NSManagedObject;
override selector("newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:") = Id, Id, NSString, Id, NSDictionary;
override selector("newValue") = NSString;
override selector("newlineCharacterSet") = Id;
override selector("nextDaylightSavingTimeTransition") = NSDate;
override selector("nextDaylightSavingTimeTransitionAfterDate:") = NSDate, NSDate;
override selector("nextElementSibling") = DOMElement;
override selector("nextEventMatchingMask:") = NSEvent, CULong;
override selector("nextEventMatchingMask:untilDate:inMode:dequeue:") = NSEvent, CULong, NSDate, NSString, Bool;
override selector("nextKeyView") = NSView;
override selector("nextNode") = Id;
override selector("nextObject") = Id;
override selector("nextResponder") = NSResponder;
override selector("nextSibling") = Id;
override selector("nextState") = CLong;
override selector("nextValidKeyView") = NSView;
override selector("nextWordFromIndex:forward:") = CULong, CULong, Bool;
override selector("nibBundle") = NSBundle;
override selector("nibName") = NSString;
override selector("nilSymbol") = NSString;
override selector("noHref") = Bool;
override selector("noResize") = Bool;
override selector("noResponderFor:") = Void, SelectorHandle;
override selector("noShade") = Bool;
override selector("noWrap") = Bool;
override selector("nodeName") = NSString;
override selector("nodeType") = UShort;
override selector("nodeValue") = NSString;
override selector("nodesForXPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("nonBaseCharacterSet") = Id;
override selector("nonretainedObjectValue") = Id;
override selector("normalize") = Void;
override selector("normalizeAdjacentTextNodesPreservingCDATA:") = Void, Bool;
override selector("normalizedPosition") = NSPoint;
override selector("notANumber") = NSDecimalNumber;
override selector("notANumberSymbol") = NSString;
override selector("notPredicateWithSubpredicate:") = NSPredicate, NSPredicate;
override selector("notShownAttributeForGlyphAtIndex:") = Bool, CULong;
override selector("notationDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("notationName") = NSString;
override selector("notations") = DOMNamedNodeMap;
override selector("note") = NSString;
override selector("noteFileSystemChanged") = Void;
override selector("noteFileSystemChanged:") = Void, NSString;
override selector("noteHeightOfRowsWithIndexesChanged:") = Void, NSIndexSet;
override selector("noteHeightOfRowsWithIndexesChanged:inColumn:") = Void, NSIndexSet, CLong;
override selector("noteNewRecentDocument:") = Void, NSDocument;
override selector("noteNewRecentDocumentURL:") = Void, NSURL;
override selector("noteNumberOfItemsChanged") = Void;
override selector("noteNumberOfRowsChanged") = Void;
override selector("noteUserDefaultsChanged") = Void;
override selector("notificationBatchingInterval") = Double;
override selector("notificationCenter") = NSNotificationCenter;
override selector("notificationCenterForType:") = NSDistributedNotificationCenter, NSString;
override selector("notificationWithName:object:") = Id, NSString, Id;
override selector("notificationWithName:object:userInfo:") = Id, NSString, Id, NSDictionary;
override selector("null") = NSNull;
override selector("nullDescriptor") = NSAppleEventDescriptor;
override selector("numberFromString:") = NSNumber, NSString;
override selector("numberOfArguments") = CULong;
override selector("numberOfColorComponents") = CLong;
override selector("numberOfColorStops") = CLong;
override selector("numberOfColumns") = CLong;
override selector("numberOfComponents") = CULong;
override selector("numberOfGlyphs") = CULong;
override selector("numberOfItems") = CLong;
override selector("numberOfItemsInComboBox:") = CLong, NSComboBox;
override selector("numberOfItemsInComboBoxCell:") = CLong, NSComboBoxCell;
override selector("numberOfItemsInMenu:") = CLong, NSMenu;
override selector("numberOfMajorTickMarks") = CLong;
override selector("numberOfPlanes") = CLong;
override selector("numberOfRows") = CLong;
override selector("numberOfRowsInTableView:") = CLong, NSTableView;
override selector("numberOfSelectedColumns") = CLong;
override selector("numberOfSelectedRows") = CLong;
override selector("numberOfTabViewItems") = CLong;
override selector("numberOfTickMarks") = CLong;
override selector("numberOfVirtualScreens") = Int;
override selector("numberOfVisibleColumns") = CLong;
override selector("numberOfVisibleItems") = CLong;
override selector("numberStyle") = CULong;
override selector("numberValue") = Double;
override selector("numberWithBool:") = NSNumber, Bool;
override selector("numberWithChar:") = NSNumber, CChar;
override selector("numberWithDouble:") = NSNumber, Double;
override selector("numberWithFloat:") = NSNumber, Float;
override selector("numberWithInt:") = NSNumber, Int;
override selector("numberWithInteger:") = NSNumber, CLong;
override selector("numberWithLong:") = NSNumber, CLong;
override selector("numberWithLongLong:") = NSNumber, Int64;
override selector("numberWithShort:") = NSNumber, Short;
override selector("numberWithUnsignedChar:") = NSNumber, CUChar;
override selector("numberWithUnsignedInt:") = NSNumber, UInt;
override selector("numberWithUnsignedInteger:") = NSNumber, CULong;
override selector("numberWithUnsignedLong:") = NSNumber, CULong;
override selector("numberWithUnsignedLongLong:") = NSNumber, UInt64;
override selector("numberWithUnsignedShort:") = NSNumber, UShort;
override selector("objCType") = Pointer[CChar];
override selector("object") = Id;
override selector("objectAtIndex:") = Id, CULong;
override selector("objectBeingTested") = Id;
override selector("objectByApplyingXSLT:arguments:error:") = Id, NSData, NSDictionary, Pointer[NSError];
override selector("objectByApplyingXSLTAtURL:arguments:error:") = Id, NSURL, NSDictionary, Pointer[NSError];
override selector("objectByApplyingXSLTString:arguments:error:") = Id, NSString, NSDictionary, Pointer[NSError];
override selector("objectClass") = Id;
override selector("objectDidBeginEditing:") = Void, Id;
override selector("objectDidEndEditing:") = Void, Id;
override selector("objectEnumerator") = NSEnumerator;
override selector("objectForInfoDictionaryKey:") = Id, NSString;
override selector("objectForKey:") = Id, Id;
override selector("objectForProperty:error:") = Id, NSString, Pointer[NSError];
override selector("objectForWebScript") = Id;
override selector("objectID") = NSManagedObjectID;
override selector("objectIDForEntity:referenceObject:") = NSManagedObjectID, NSEntityDescription, Id;
override selector("objectIsForcedForKey:") = Bool, NSString;
override selector("objectIsForcedForKey:inDomain:") = Bool, NSString, NSString;
override selector("objectRegisteredForID:") = NSManagedObject, NSManagedObjectID;
override selector("objectSpecifier") = NSScriptObjectSpecifier;
override selector("objectSpecifierWithDescriptor:") = NSScriptObjectSpecifier, NSAppleEventDescriptor;
override selector("objectValue") = Id;
override selector("objectValueOfSelectedItem") = Id;
override selector("objectValues") = NSArray;
override selector("objectWithID:") = NSManagedObject, NSManagedObjectID;
override selector("objectZone") = Pointer[NSZone];
override selector("objectsAtIndexes:") = NSArray, NSIndexSet;
override selector("objectsByEvaluatingSpecifier") = Id;
override selector("objectsByEvaluatingWithContainers:") = Id, Id;
override selector("objectsForKeys:notFoundMarker:") = NSArray, NSArray, Id;
override selector("objectsForXQuery:constants:error:") = NSArray, NSString, NSDictionary, Pointer[NSError];
override selector("objectsForXQuery:error:") = NSArray, NSString, Pointer[NSError];
override selector("objectsPassingTest:") = NSSet, UnknownType;
override selector("objectsWithOptions:passingTest:") = NSSet, CULong, UnknownType;
override selector("observationInfo") = RawPointer;
override selector("observeValueForKeyPath:ofObject:change:context:") = Void, NSString, Id, NSDictionary, RawPointer;
override selector("obtainPermanentIDsForObjects:error:") = Bool, NSArray, Pointer[NSError];
override selector("offStateImage") = NSImage;
override selector("offsetHeight") = Int;
override selector("offsetInFile") = UInt64;
override selector("offsetLeft") = Int;
override selector("offsetParent") = DOMElement;
override selector("offsetTop") = Int;
override selector("offsetWidth") = Int;
override selector("offsetX") = Int;
override selector("offsetY") = Int;
override selector("ok:") = Void, Id;
override selector("onStateImage") = NSImage;
override selector("one") = NSDecimalNumber;
override selector("opacity") = Float;
override selector("opaqueAncestor") = NSView;
override selector("open") = Void;
override selector("open:") = Void, Id;
override selector("openDocument:") = Void, Id;
override selector("openDocumentWithContentsOfFile:display:") = Id, NSString, Bool;
override selector("openDocumentWithContentsOfURL:display:") = Id, NSURL, Bool;
override selector("openDocumentWithContentsOfURL:display:error:") = Id, NSURL, Bool, Pointer[NSError];
override selector("openFile:") = Bool, NSString;
override selector("openFile:fromImage:at:inView:") = Bool, NSString, NSImage, NSPoint, NSView;
override selector("openFile:withApplication:") = Bool, NSString, NSString;
override selector("openFile:withApplication:andDeactivate:") = Bool, NSString, NSString, Bool;
override selector("openGLContext") = NSOpenGLContext;
override selector("openGLContextForPixelFormat:") = NSOpenGLContext, NSOpenGLPixelFormat;
override selector("openGLPixelFormat") = NSOpenGLPixelFormat;
override selector("openGLPixelFormatForDisplayMask:") = NSOpenGLPixelFormat, UInt;
override selector("openHandCursor") = NSCursor;
override selector("openHelpAnchor:inBook:") = Void, NSString, NSString;
override selector("openOnEdge:") = Void, CULong;
override selector("openPanel") = NSOpenPanel;
override selector("openTempFile:") = Bool, NSString;
override selector("openURL:") = Bool, NSURL;
override selector("openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:") = Bool, NSArray, NSString, CULong, NSAppleEventDescriptor, Pointer[NSArray];
override selector("openUntitledDocumentAndDisplay:error:") = Id, Bool, Pointer[NSError];
override selector("openUntitledDocumentOfType:display:") = Id, NSString, Bool;
override selector("operand") = NSExpression;
override selector("operatingSystem") = CULong;
override selector("operatingSystemName") = NSString;
override selector("operatingSystemVersionString") = NSString;
override selector("operationCount") = CULong;
override selector("operationNotAllowedCursor") = NSCursor;
override selector("operations") = NSArray;
override selector("operators") = NSArray;
override selector("optionDescriptionsForBinding:") = NSArray, NSString;
override selector("optionalSharedHistory") = WebHistory;
override selector("options") = CULong;
override selector("orPredicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("orangeColor") = NSColor;
override selector("orderBack:") = Void, Id;
override selector("orderFront:") = Void, Id;
override selector("orderFrontCharacterPalette:") = Void, Id;
override selector("orderFrontColorPanel:") = Void, Id;
override selector("orderFrontFontPanel:") = Void, Id;
override selector("orderFrontLinkPanel:") = Void, Id;
override selector("orderFrontListPanel:") = Void, Id;
override selector("orderFrontRegardless") = Void;
override selector("orderFrontSpacingPanel:") = Void, Id;
override selector("orderFrontStandardAboutPanel:") = Void, Id;
override selector("orderFrontStandardAboutPanelWithOptions:") = Void, NSDictionary;
override selector("orderFrontStylesPanel:") = Void, Id;
override selector("orderFrontSubstitutionsPanel:") = Void, Id;
override selector("orderFrontTablePanel:") = Void, Id;
override selector("orderOut:") = Void, Id;
override selector("orderWindow:relativeTo:") = Void, CLong, CLong;
override selector("orderedDocuments") = NSArray;
override selector("orderedIndex") = CLong;
override selector("orderedItemsLastVisitedOnDay:") = NSArray, NSCalendarDate;
override selector("orderedLastVisitedDays") = NSArray;
override selector("orderedWindows") = NSArray;
override selector("ordinalityOfUnit:inUnit:forDate:") = CULong, CULong, CULong, NSDate;
override selector("orient") = UShort;
override selector("orientation") = CULong;
override selector("originOffset") = Double;
override selector("originalURLString") = NSString;
override selector("orphans") = NSString;
override selector("orthography") = NSOrthography;
override selector("orthographyCheckingResultWithRange:orthography:") = NSTextCheckingResult, NSRange, NSOrthography;
override selector("orthographyWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
override selector("otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, Short, CLong, CLong;
override selector("otherMouseDown:") = Void, NSEvent;
override selector("otherMouseDragged:") = Void, NSEvent;
override selector("otherMouseUp:") = Void, NSEvent;
override selector("outerHTML") = NSString;
override selector("outerText") = NSString;
override selector("outline") = NSString;
override selector("outline:") = Void, Id;
override selector("outlineColor") = NSString;
override selector("outlineStyle") = NSString;
override selector("outlineTableColumn") = NSTableColumn;
override selector("outlineView:acceptDrop:item:childIndex:") = Bool, NSOutlineView, Id, Id, CLong;
override selector("outlineView:child:ofItem:") = Id, NSOutlineView, CLong, Id;
override selector("outlineView:dataCellForTableColumn:item:") = NSCell, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:didClickTableColumn:") = Void, NSOutlineView, NSTableColumn;
override selector("outlineView:didDragTableColumn:") = Void, NSOutlineView, NSTableColumn;
override selector("outlineView:heightOfRowByItem:") = Double, NSOutlineView, Id;
override selector("outlineView:isGroupItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:isItemExpandable:") = Bool, NSOutlineView, Id;
override selector("outlineView:itemForPersistentObject:") = Id, NSOutlineView, Id;
override selector("outlineView:mouseDownInHeaderOfTableColumn:") = Void, NSOutlineView, NSTableColumn;
override selector("outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:") = NSArray, NSOutlineView, NSURL, NSArray;
override selector("outlineView:nextTypeSelectMatchFromItem:toItem:forString:") = Id, NSOutlineView, Id, Id, NSString;
override selector("outlineView:numberOfChildrenOfItem:") = CLong, NSOutlineView, Id;
override selector("outlineView:objectValueForTableColumn:byItem:") = Id, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:persistentObjectForItem:") = Id, NSOutlineView, Id;
override selector("outlineView:selectionIndexesForProposedSelection:") = NSIndexSet, NSOutlineView, NSIndexSet;
override selector("outlineView:setObjectValue:forTableColumn:byItem:") = Void, NSOutlineView, Id, NSTableColumn, Id;
override selector("outlineView:shouldCollapseItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldEditTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:shouldExpandItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldReorderColumn:toColumn:") = Bool, NSOutlineView, CLong, CLong;
override selector("outlineView:shouldSelectItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldSelectTableColumn:") = Bool, NSOutlineView, NSTableColumn;
override selector("outlineView:shouldShowCellExpansionForTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:shouldShowOutlineCellForItem:") = Bool, NSOutlineView, Id;
override selector("outlineView:shouldTrackCell:forTableColumn:item:") = Bool, NSOutlineView, NSCell, NSTableColumn, Id;
override selector("outlineView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSOutlineView, NSEvent, NSString;
override selector("outlineView:sizeToFitWidthOfColumn:") = Double, NSOutlineView, CLong;
override selector("outlineView:sortDescriptorsDidChange:") = Void, NSOutlineView, NSArray;
override selector("outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:") = NSString, NSOutlineView, NSCell, NSRectPointer, NSTableColumn, Id, NSPoint;
override selector("outlineView:typeSelectStringForTableColumn:item:") = NSString, NSOutlineView, NSTableColumn, Id;
override selector("outlineView:validateDrop:proposedItem:proposedChildIndex:") = CULong, NSOutlineView, Id, Id, CLong;
override selector("outlineView:willDisplayCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
override selector("outlineView:willDisplayOutlineCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
override selector("outlineView:writeItems:toPasteboard:") = Bool, NSOutlineView, NSArray, NSPasteboard;
override selector("outlineViewColumnDidMove:") = Void, NSNotification;
override selector("outlineViewColumnDidResize:") = Void, NSNotification;
override selector("outlineViewItemDidCollapse:") = Void, NSNotification;
override selector("outlineViewItemDidExpand:") = Void, NSNotification;
override selector("outlineViewItemWillCollapse:") = Void, NSNotification;
override selector("outlineViewItemWillExpand:") = Void, NSNotification;
override selector("outlineViewSelectionDidChange:") = Void, NSNotification;
override selector("outlineViewSelectionIsChanging:") = Void, NSNotification;
override selector("outlineWidth") = NSString;
override selector("outputFormat") = CULong;
override selector("outputStreamToBuffer:capacity:") = Id, Pointer[CUChar], CULong;
override selector("outputStreamToFileAtPath:append:") = Id, NSString, Bool;
override selector("outputStreamToMemory") = Id;
override selector("outputStreamWithURL:append:") = Id, NSURL, Bool;
override selector("overflow") = NSString;
override selector("owner") = Id;
override selector("ownerDocument") = DOMDocument;
override selector("ownerElement") = DOMElement;
override selector("ownerNode") = DOMNode;
override selector("ownerRule") = DOMCSSRule;
override selector("padding") = NSString;
override selector("paddingBottom") = NSString;
override selector("paddingCharacter") = NSString;
override selector("paddingLeft") = NSString;
override selector("paddingPosition") = CULong;
override selector("paddingRight") = NSString;
override selector("paddingTop") = NSString;
override selector("page") = NSString;
override selector("pageBreakAfter") = NSString;
override selector("pageBreakBefore") = NSString;
override selector("pageBreakInside") = NSString;
override selector("pageCacheSize") = CULong;
override selector("pageCount") = CLong;
override selector("pageDown:") = Void, Id;
override selector("pageDownAndModifySelection:") = Void, Id;
override selector("pageFooter") = NSAttributedString;
override selector("pageHeader") = NSAttributedString;
override selector("pageLayout") = NSPageLayout;
override selector("pageOrder") = CLong;
override selector("pageRange") = NSRange;
override selector("pageScroll") = Double;
override selector("pageSizeForPaper:") = NSSize, NSString;
override selector("pageTitle") = NSString;
override selector("pageUp:") = Void, Id;
override selector("pageUpAndModifySelection:") = Void, Id;
override selector("pageX") = Int;
override selector("pageY") = Int;
override selector("paletteFontOfSize:") = NSFont, Double;
override selector("paletteLabel") = NSString;
override selector("panel:compareFilename:with:caseSensitive:") = CLong, Id, NSString, NSString, Bool;
override selector("panel:didChangeToDirectoryURL:") = Void, Id, NSURL;
override selector("panel:directoryDidChange:") = Void, Id, NSString;
override selector("panel:isValidFilename:") = Bool, Id, NSString;
override selector("panel:shouldEnableURL:") = Bool, Id, NSURL;
override selector("panel:shouldShowFilename:") = Bool, Id, NSString;
override selector("panel:userEnteredFilename:confirmed:") = NSString, Id, NSString, Bool;
override selector("panel:validateURL:error:") = Bool, Id, NSURL, Pointer[NSError];
override selector("panel:willExpand:") = Void, Id, Bool;
override selector("panelConvertFont:") = NSFont, NSFont;
override selector("panelSelectionDidChange:") = Void, Id;
override selector("paperName") = NSString;
override selector("paperSize") = NSSize;
override selector("paragraphCharacterRange") = NSRange;
override selector("paragraphGlyphRange") = NSRange;
override selector("paragraphRangeForRange:") = NSRange, NSRange;
override selector("paragraphSeparatorCharacterRange") = NSRange;
override selector("paragraphSeparatorGlyphRange") = NSRange;
override selector("paragraphSpacing") = Double;
override selector("paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override selector("paragraphSpacingBefore") = Double;
override selector("paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
override selector("paragraphs") = NSArray;
override selector("paramDescriptorForKeyword:") = NSAppleEventDescriptor, UInt;
override selector("parameterString") = NSString;
override selector("parent") = NSXMLNode;
override selector("parentElement") = DOMElement;
override selector("parentForItem:") = Id, Id;
override selector("parentForItemsInColumn:") = Id, CLong;
override selector("parentFrame") = WebFrame;
override selector("parentItem") = NSMenuItem;
override selector("parentNode") = Id;
override selector("parentRowForRow:") = CLong, CLong;
override selector("parentRule") = DOMCSSRule;
override selector("parentStyleSheet") = Id;
override selector("parentWindow") = NSWindow;
override selector("parse") = Bool;
override selector("parser:didEndElement:namespaceURI:qualifiedName:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:didEndMappingPrefix:") = Void, NSXMLParser, NSString;
override selector("parser:didStartElement:namespaceURI:qualifiedName:attributes:") = Void, NSXMLParser, NSString, NSString, NSString, NSDictionary;
override selector("parser:didStartMappingPrefix:toURI:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
override selector("parser:foundCDATA:") = Void, NSXMLParser, NSData;
override selector("parser:foundCharacters:") = Void, NSXMLParser, NSString;
override selector("parser:foundComment:") = Void, NSXMLParser, NSString;
override selector("parser:foundElementDeclarationWithName:model:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundExternalEntityDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:foundIgnorableWhitespace:") = Void, NSXMLParser, NSString;
override selector("parser:foundInternalEntityDeclarationWithName:value:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundNotationDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
override selector("parser:foundProcessingInstructionWithTarget:data:") = Void, NSXMLParser, NSString, NSString;
override selector("parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
override selector("parser:parseErrorOccurred:") = Void, NSXMLParser, NSError;
override selector("parser:resolveExternalEntityName:systemID:") = NSData, NSXMLParser, NSString, NSString;
override selector("parser:validationErrorOccurred:") = Void, NSXMLParser, NSError;
override selector("parserDidEndDocument:") = Void, NSXMLParser;
override selector("parserDidStartDocument:") = Void, NSXMLParser;
override selector("parserError") = NSError;
override selector("password") = NSString;
override selector("paste:") = Void, Id;
override selector("pasteAsPlainText:") = Void, Id;
override selector("pasteAsRichText:") = Void, Id;
override selector("pasteFont:") = Void, Id;
override selector("pasteRuler:") = Void, Id;
override selector("pasteboard:item:provideDataForType:") = Void, NSPasteboard, NSPasteboardItem, NSString;
override selector("pasteboard:provideDataForType:") = Void, NSPasteboard, NSString;
override selector("pasteboardByFilteringData:ofType:") = NSPasteboard, NSData, NSString;
override selector("pasteboardByFilteringFile:") = NSPasteboard, NSString;
override selector("pasteboardByFilteringTypesInPasteboard:") = NSPasteboard, NSPasteboard;
override selector("pasteboardChangedOwner:") = Void, NSPasteboard;
override selector("pasteboardFinishedWithDataProvider:") = Void, NSPasteboard;
override selector("pasteboardItems") = NSArray;
override selector("pasteboardPropertyListForType:") = Id, NSString;
override selector("pasteboardTypesForElement:") = NSArray, NSDictionary;
override selector("pasteboardTypesForSelection") = NSArray;
override selector("pasteboardWithName:") = NSPasteboard, NSString;
override selector("pasteboardWithUniqueName") = NSPasteboard;
override selector("path") = NSString;
override selector("pathCell:willDisplayOpenPanel:") = Void, NSPathCell, NSOpenPanel;
override selector("pathCell:willPopUpMenu:") = Void, NSPathCell, NSMenu;
override selector("pathComponentCellAtPoint:withFrame:inView:") = NSPathComponentCell, NSPoint, NSRect, NSView;
override selector("pathComponentCellClass") = Id;
override selector("pathComponentCells") = NSArray;
override selector("pathComponents") = NSArray;
override selector("pathContentOfSymbolicLinkAtPath:") = NSString, NSString;
override selector("pathControl:acceptDrop:") = Bool, NSPathControl, Id;
override selector("pathControl:shouldDragPathComponentCell:withPasteboard:") = Bool, NSPathControl, NSPathComponentCell, NSPasteboard;
override selector("pathControl:validateDrop:") = CULong, NSPathControl, Id;
override selector("pathControl:willDisplayOpenPanel:") = Void, NSPathControl, NSOpenPanel;
override selector("pathControl:willPopUpMenu:") = Void, NSPathControl, NSMenu;
override selector("pathExtension") = NSString;
override selector("pathForAuxiliaryExecutable:") = NSString, NSString;
override selector("pathForImageResource:") = NSString, NSString;
override selector("pathForResource:ofType:") = NSString, NSString, NSString;
override selector("pathForResource:ofType:inDirectory:") = NSString, NSString, NSString, NSString;
override selector("pathForResource:ofType:inDirectory:forLocalization:") = NSString, NSString, NSString, NSString, NSString;
override selector("pathForSoundResource:") = NSString, NSString;
override selector("pathSeparator") = NSString;
override selector("pathStyle") = CLong;
override selector("pathToColumn:") = NSString, CLong;
override selector("pathWithComponents:") = NSString, NSArray;
override selector("pathname") = NSString;
override selector("pathsForResourcesOfType:inDirectory:") = NSArray, NSString, NSString;
override selector("pathsForResourcesOfType:inDirectory:forLocalization:") = NSArray, NSString, NSString, NSString;
override selector("pathsMatchingExtensions:") = NSArray, NSArray;
override selector("patternImage") = NSImage;
override selector("patternPhase") = NSPoint;
override selector("pause") = NSString;
override selector("pauseAfter") = NSString;
override selector("pauseBefore") = NSString;
override selector("pauseSpeakingAtBoundary:") = Void, CULong;
override selector("perMillSymbol") = NSString;
override selector("percentSymbol") = NSString;
override selector("performActionForItem:") = Void, Id;
override selector("performActionForItemAtIndex:") = Void, CLong;
override selector("performClick:") = Void, Id;
override selector("performClickOnCellAtColumn:row:") = Void, CLong, CLong;
override selector("performClickWithFrame:inView:") = Void, NSRect, NSView;
override selector("performClose:") = Void, Id;
override selector("performCustomValidationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
override selector("performDefaultImplementation") = Id;
override selector("performDragOperation:") = Bool, Id;
override selector("performFileOperation:source:destination:files:tag:") = Bool, NSString, NSString, NSString, NSArray, Pointer[CLong];
override selector("performFindPanelAction:") = Void, Id;
override selector("performKeyEquivalent:") = Bool, NSEvent;
override selector("performMiniaturize:") = Void, Id;
override selector("performMnemonic:") = Bool, NSString;
override selector("performSelector:") = Id, SelectorHandle;
override selector("performSelector:onThread:withObject:waitUntilDone:") = Void, SelectorHandle, NSThread, Id, Bool;
override selector("performSelector:onThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, NSThread, Id, Bool, NSArray;
override selector("performSelector:target:argument:order:modes:") = Void, SelectorHandle, Id, Id, CULong, NSArray;
override selector("performSelector:withObject:") = Id, SelectorHandle, Id;
override selector("performSelector:withObject:afterDelay:") = Void, SelectorHandle, Id, Double;
override selector("performSelector:withObject:afterDelay:inModes:") = Void, SelectorHandle, Id, Double, NSArray;
override selector("performSelector:withObject:withObject:") = Id, SelectorHandle, Id, Id;
override selector("performSelectorInBackground:withObject:") = Void, SelectorHandle, Id;
override selector("performSelectorOnMainThread:withObject:waitUntilDone:") = Void, SelectorHandle, Id, Bool;
override selector("performSelectorOnMainThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, Id, Bool, NSArray;
override selector("performZoom:") = Void, Id;
override selector("persistence") = CULong;
override selector("persistentDomainForName:") = NSDictionary, NSString;
override selector("persistentDomainNames") = NSArray;
override selector("persistentStore") = NSPersistentStore;
override selector("persistentStoreCoordinator") = NSPersistentStoreCoordinator;
override selector("persistentStoreForURL:") = NSPersistentStore, NSURL;
override selector("persistentStoreTypeForFileType:") = NSString, NSString;
override selector("persistentStores") = NSArray;
override selector("phase") = CULong;
override selector("phonemesFromText:") = NSString, NSString;
override selector("physicalMemory") = UInt64;
override selector("pipe") = Id;
override selector("pitch") = NSString;
override selector("pitchRange") = NSString;
override selector("pixelBuffer") = NSOpenGLPixelBuffer;
override selector("pixelBufferCubeMapFace") = UInt;
override selector("pixelBufferMipMapLevel") = Int;
override selector("pixelFormat") = NSOpenGLPixelFormat;
override selector("pixelsHigh") = CLong;
override selector("pixelsWide") = CLong;
override selector("placeholderAttributedString") = NSAttributedString;
override selector("placeholderString") = NSString;
override selector("play") = Bool;
override selector("playDuring") = NSString;
override selector("playbackDeviceIdentifier") = NSString;
override selector("plugInViewWithArguments:") = NSView, NSDictionary;
override selector("plugins") = DOMHTMLCollection;
override selector("plusSign") = NSString;
override selector("pointSize") = Double;
override selector("pointValue") = NSPoint;
override selector("pointerArrayWithOptions:") = Id, CULong;
override selector("pointerArrayWithPointerFunctions:") = Id, NSPointerFunctions;
override selector("pointerArrayWithStrongObjects") = Id;
override selector("pointerArrayWithWeakObjects") = Id;
override selector("pointerAtIndex:") = RawPointer, CULong;
override selector("pointerBeforeReferenceNode") = Bool;
override selector("pointerFunctions") = NSPointerFunctions;
override selector("pointerFunctionsWithOptions:") = Id, CULong;
override selector("pointerValue") = RawPointer;
override selector("pointingDeviceID") = CULong;
override selector("pointingDeviceSerialNumber") = CULong;
override selector("pointingDeviceType") = CULong;
override selector("pointingHandCursor") = NSCursor;
override selector("policyDelegate") = Id;
override selector("pop") = Void;
override selector("popUpContextMenu:withEvent:forView:") = Void, NSMenu, NSEvent, NSView;
override selector("popUpContextMenu:withEvent:forView:withFont:") = Void, NSMenu, NSEvent, NSView, NSFont;
override selector("popUpMenuPositioningItem:atLocation:inView:") = Bool, NSMenuItem, NSPoint, NSView;
override selector("popUpStatusItemMenu:") = Void, NSMenu;
override selector("port") = Id;
override selector("portCoderWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
override selector("portForName:") = NSPort, NSString;
override selector("portForName:host:") = NSPort, NSString, NSString;
override selector("portForName:host:nameServerPortNumber:") = NSPort, NSString, NSString, UShort;
override selector("portList") = NSArray;
override selector("portWithMachPort:") = NSPort, UInt;
override selector("portWithMachPort:options:") = NSPort, UInt, CULong;
override selector("poseAsClass:") = Void, Id;
override selector("position") = CULong;
override selector("positiveFormat") = NSString;
override selector("positiveInfinitySymbol") = NSString;
override selector("positivePrefix") = NSString;
override selector("positiveSuffix") = NSString;
override selector("postEvent:atStart:") = Void, NSEvent, Bool;
override selector("postNotification:") = Void, NSNotification;
override selector("postNotificationName:object:") = Void, NSString, Id;
override selector("postNotificationName:object:userInfo:") = Void, NSString, Id, NSDictionary;
override selector("postNotificationName:object:userInfo:deliverImmediately:") = Void, NSString, NSString, NSDictionary, Bool;
override selector("postNotificationName:object:userInfo:options:") = Void, NSString, NSString, NSDictionary, CULong;
override selector("postsBoundsChangedNotifications") = Bool;
override selector("postsFrameChangedNotifications") = Bool;
override selector("postscriptName") = NSString;
override selector("precomposedStringWithCanonicalMapping") = NSString;
override selector("precomposedStringWithCompatibilityMapping") = NSString;
override selector("predefinedEntityDeclarationForName:") = NSXMLDTDNode, NSString;
override selector("predefinedNamespaceForPrefix:") = NSXMLNode, NSString;
override selector("predicate") = NSPredicate;
override selector("predicateForRow:") = NSPredicate, CLong;
override selector("predicateFormat") = NSString;
override selector("predicateOperatorType") = CULong;
override selector("predicateWithBlock:") = NSPredicate, UnknownType;
override varargSelector("predicateWithFormat:") = NSPredicate, NSString;
override selector("predicateWithFormat:argumentArray:") = NSPredicate, NSString, NSArray;
override selector("predicateWithFormat:arguments:") = NSPredicate, NSString, Pointer[__va_list_tag];
override selector("predicateWithLeftExpression:rightExpression:customSelector:") = NSPredicate, NSExpression, NSExpression, SelectorHandle;
override selector("predicateWithLeftExpression:rightExpression:modifier:type:options:") = NSPredicate, NSExpression, NSExpression, CULong, CULong, CULong;
override selector("predicateWithSubpredicates:") = NSPredicate, NSArray;
override selector("predicateWithSubstitutionVariables:") = NSPredicate, NSDictionary;
override selector("predicateWithValue:") = NSPredicate, Bool;
override selector("preferences") = WebPreferences;
override selector("preferencesIdentifier") = NSString;
override selector("preferredBackingLocation") = CULong;
override selector("preferredEdge") = CULong;
override selector("preferredFilename") = NSString;
override selector("preferredFilenameExtensionForType:") = NSString, NSString;
override selector("preferredFrameSize") = CGSize;
override selector("preferredLanguages") = NSArray;
override selector("preferredLocalizations") = NSArray;
override selector("preferredLocalizationsFromArray:") = NSArray, NSArray;
override selector("preferredLocalizationsFromArray:forPreferences:") = NSArray, NSArray, NSArray;
override selector("preferredPasteboardTypeFromArray:restrictedToTypesFromArray:") = NSString, NSArray, NSArray;
override selector("preferredSizeOfLayer:") = CGSize, CALayer;
override selector("preferredStylesheetSet") = NSString;
override selector("prefersAllColumnUserResizing") = Bool;
override selector("prefersColorMatch") = Bool;
override selector("prefersTrackingUntilMouseUp") = Bool;
override selector("prefix") = NSString;
override selector("prefixForName:") = NSString, NSString;
override selector("preflightAndReturnError:") = Bool, Pointer[NSError];
override selector("prepareContent") = Void;
override selector("prepareForDeletion") = Void;
override selector("prepareForDragOperation:") = Bool, Id;
override selector("prepareGState") = Void;
override selector("prepareOpenGL") = Void;
override selector("preparePageLayout:") = Bool, NSPageLayout;
override selector("prepareSavePanel:") = Bool, NSSavePanel;
override selector("prepareWithInvocationTarget:") = Id, Id;
override selector("preparedCellAtColumn:row:") = NSCell, CLong, CLong;
override selector("prependTransform:") = Void, NSAffineTransform;
override selector("presentError:") = Bool, NSError;
override selector("presentError:modalForWindow:delegate:didPresentSelector:contextInfo:") = Void, NSError, NSWindow, Id, SelectorHandle, RawPointer;
override selector("presentationLayer") = Id;
override selector("presentationOptions") = CULong;
override selector("preservesContentDuringLiveResize") = Bool;
override selector("preservesSelection") = Bool;
override selector("pressedMouseButtons") = CULong;
override selector("pressure") = Float;
override selector("prevValue") = NSString;
override selector("preventDefault") = Void;
override selector("preventWindowOrdering") = Void;
override selector("preventsApplicationTerminationWhenModal") = Bool;
override selector("previousElementSibling") = DOMElement;
override selector("previousFailureCount") = CLong;
override selector("previousKeyView") = NSView;
override selector("previousNode") = Id;
override selector("previousSibling") = Id;
override selector("previousValidKeyView") = NSView;
override selector("primitiveType") = UShort;
override selector("primitiveValueForKey:") = Id, NSString;
override selector("principalClass") = Id;
override selector("print:") = Void, Id;
override selector("printDocument:") = Void, Id;
override selector("printDocumentView") = Void;
override selector("printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:") = Void, NSDictionary, Bool, Id, SelectorHandle, RawPointer;
override selector("printInfo") = NSPrintInfo;
override selector("printJobTitle") = NSString;
override selector("printOperationWithPrintInfo:") = NSPrintOperation, NSPrintInfo;
override selector("printOperationWithSettings:error:") = NSPrintOperation, NSDictionary, Pointer[NSError];
override selector("printOperationWithView:") = NSPrintOperation, NSView;
override selector("printOperationWithView:printInfo:") = NSPrintOperation, NSView, NSPrintInfo;
override selector("printPanel") = NSPrintPanel;
override selector("printSettings") = NSMutableDictionary;
override selector("printShowingPrintPanel:") = Void, Bool;
override selector("printer") = NSPrinter;
override selector("printerFont") = NSFont;
override selector("printerNames") = NSArray;
override selector("printerTypes") = NSArray;
override selector("printerWithName:") = NSPrinter, NSString;
override selector("printerWithName:domain:includeUnavailable:") = NSPrinter, NSString, NSString, Bool;
override selector("printerWithType:") = NSPrinter, NSString;
override selector("printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:") = NSSize, NSLayoutManager, NSRange, Pointer[CUChar], CULong;
override selector("privateBrowsingEnabled") = Bool;
override selector("privateFrameworksPath") = NSString;
override selector("privateFrameworksURL") = NSURL;
override selector("processEditing") = Void;
override selector("processIdentifier") = Int;
override selector("processInfo") = NSProcessInfo;
override selector("processName") = NSString;
override selector("processPendingChanges") = Void;
override selector("processingInstructionWithName:stringValue:") = Id, NSString, NSString;
override selector("processorCount") = CULong;
override selector("profile") = NSString;
override selector("progressMarks") = NSArray;
override selector("prompt") = NSString;
override selector("propagatesDeletesAtEndOfEvent") = Bool;
override selector("properties") = Id;
override selector("propertiesByName") = NSDictionary;
override selector("propertiesToFetch") = NSArray;
override selector("propertiesToUpdate") = CULong;
override selector("propertyCache") = NSMutableDictionary;
override selector("propertyForKey:") = Id, NSString;
override selector("propertyForKey:inRequest:") = Id, NSString, NSURLRequest;
override selector("propertyForKeyIfAvailable:") = Id, NSString;
override selector("propertyList") = Id;
override selector("propertyList:isValidForFormat:") = Bool, Id, CULong;
override selector("propertyListForType:") = Id, NSString;
override selector("propertyListFromData:mutabilityOption:format:errorDescription:") = Id, NSData, CULong, Pointer[CULong], Pointer[NSString];
override selector("propertyListFromStringsFileFormat") = NSDictionary;
override selector("propertyListWithData:options:format:error:") = Id, NSData, CULong, Pointer[CULong], Pointer[NSError];
override selector("propertyListWithStream:options:format:error:") = Id, NSInputStream, CULong, Pointer[CULong], Pointer[NSError];
override selector("proposedCredential") = NSURLCredential;
override selector("protectionSpace") = NSURLProtectionSpace;
override selector("protocol") = Int;
override selector("protocolCheckerWithTarget:protocol:") = Id, NSObject, Id;
override selector("protocolFamily") = Int;
override selector("protocolSpecificInformation") = NSString;
override selector("prototype") = Id;
override selector("provideNewButtonImage") = NSImage;
override selector("provideNewView:") = NSView, Bool;
override selector("provisionalDataSource") = WebDataSource;
override selector("proxyType") = NSString;
override selector("proxyWithLocal:connection:") = NSDistantObject, Id, NSConnection;
override selector("proxyWithTarget:connection:") = NSDistantObject, Id, NSConnection;
override selector("publicID") = NSString;
override selector("publicId") = NSString;
override selector("publish") = Void;
override selector("publishWithOptions:") = Void, CULong;
override selector("pullsDown") = Bool;
override selector("punctuationCharacterSet") = Id;
override selector("purpleColor") = NSColor;
override selector("push") = Void;
override selector("putCell:atRow:column:") = Void, NSCell, CLong, CLong;
override selector("quarter") = CLong;
override selector("quarterSymbols") = NSArray;
override selector("query") = NSString;
override selector("queryCommandEnabled:") = Bool, NSString;
override selector("queryCommandIndeterm:") = Bool, NSString;
override selector("queryCommandState:") = Bool, NSString;
override selector("queryCommandSupported:") = Bool, NSString;
override selector("queryCommandValue:") = NSString, NSString;
override selector("querySelector:") = DOMElement, NSString;
override selector("querySelectorAll:") = DOMNodeList, NSString;
override selector("queuePriority") = CLong;
override selector("quoteCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("quotes") = NSString;
override selector("raise") = Void;
override varargSelector("raise:format:") = Void, NSString, NSString;
override selector("raise:format:arguments:") = Void, NSString, NSString, Pointer[__va_list_tag];
override selector("raiseBaseline:") = Void, Id;
override selector("range") = NSRange;
override selector("rangeContainerObject") = Id;
override selector("rangeForUserCharacterAttributeChange") = NSRange;
override selector("rangeForUserCompletion") = NSRange;
override selector("rangeForUserParagraphAttributeChange") = NSRange;
override selector("rangeForUserTextChange") = NSRange;
override selector("rangeOfCharacterFromSet:") = NSRange, NSCharacterSet;
override selector("rangeOfCharacterFromSet:options:") = NSRange, NSCharacterSet, CULong;
override selector("rangeOfCharacterFromSet:options:range:") = NSRange, NSCharacterSet, CULong, NSRange;
override selector("rangeOfComposedCharacterSequenceAtIndex:") = NSRange, CULong;
override selector("rangeOfComposedCharacterSequencesForRange:") = NSRange, NSRange;
override selector("rangeOfData:options:range:") = NSRange, NSData, CULong, NSRange;
override selector("rangeOfNominallySpacedGlyphsContainingIndex:") = NSRange, CULong;
override selector("rangeOfString:") = NSRange, NSString;
override selector("rangeOfString:options:") = NSRange, NSString, CULong;
override selector("rangeOfString:options:range:") = NSRange, NSString, CULong, NSRange;
override selector("rangeOfString:options:range:locale:") = NSRange, NSString, CULong, NSRange, NSLocale;
override selector("rangeOfTextBlock:atIndex:") = NSRange, NSTextBlock, CULong;
override selector("rangeOfTextList:atIndex:") = NSRange, NSTextList, CULong;
override selector("rangeOfTextTable:atIndex:") = NSRange, NSTextTable, CULong;
override selector("rangeOfUnit:inUnit:forDate:") = NSRange, CULong, CULong, NSDate;
override selector("rangeOfUnit:startDate:interval:forDate:") = Bool, CULong, Pointer[NSDate], Pointer[Double], NSDate;
override selector("rangeValue") = NSRange;
override selector("rangesForUserCharacterAttributeChange") = NSArray;
override selector("rangesForUserParagraphAttributeChange") = NSArray;
override selector("rangesForUserTextChange") = NSArray;
override selector("rate") = Float;
override selector("read:maxLength:") = CLong, Pointer[CUChar], CULong;
override selector("readDataOfLength:") = NSData, CULong;
override selector("readDataToEndOfFile") = NSData;
override selector("readFileContentsType:toFile:") = NSString, NSString, NSString;
override selector("readFileWrapper") = NSFileWrapper;
override selector("readFromData:ofType:error:") = Bool, NSData, NSString, Pointer[NSError];
override selector("readFromData:options:documentAttributes:") = Bool, NSData, NSDictionary, Pointer[NSDictionary];
override selector("readFromData:options:documentAttributes:error:") = Bool, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("readFromFile:ofType:") = Bool, NSString, NSString;
override selector("readFromFileWrapper:ofType:error:") = Bool, NSFileWrapper, NSString, Pointer[NSError];
override selector("readFromURL:ofType:") = Bool, NSURL, NSString;
override selector("readFromURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("readFromURL:options:documentAttributes:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary];
override selector("readFromURL:options:documentAttributes:error:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
override selector("readFromURL:options:error:") = Bool, NSURL, CULong, Pointer[NSError];
override selector("readInBackgroundAndNotify") = Void;
override selector("readInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("readObjectsForClasses:options:") = NSArray, NSArray, NSDictionary;
override selector("readOnly") = Bool;
override selector("readPrintInfo") = Void;
override selector("readRTFDFromFile:") = Bool, NSString;
override selector("readSelectionFromPasteboard:") = Bool, NSPasteboard;
override selector("readSelectionFromPasteboard:type:") = Bool, NSPasteboard, NSString;
override selector("readToEndOfFileInBackgroundAndNotify") = Void;
override selector("readToEndOfFileInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("readablePasteboardTypes") = NSArray;
override selector("readableTypes") = NSArray;
override selector("readableTypesForPasteboard:") = NSArray, NSPasteboard;
override selector("readingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override selector("readyState") = NSString;
override selector("realm") = NSString;
override selector("rearrangeObjects") = Void;
override selector("reason") = NSString;
override selector("recache") = Void;
override selector("recalculateKeyViewLoop") = Void;
override selector("receivePort") = NSPort;
override selector("receivedData:withDataSource:") = Void, NSData, WebDataSource;
override selector("receivedError:withDataSource:") = Void, NSError, WebDataSource;
override selector("receiversSpecifier") = NSScriptObjectSpecifier;
override selector("receivesCredentialSecurely") = Bool;
override selector("recentDocumentURLs") = NSArray;
override selector("recentSearches") = NSArray;
override selector("recentsAutosaveName") = NSString;
override selector("recordDescriptor") = NSAppleEventDescriptor;
override selector("recoveryAttempter") = Id;
override selector("rect") = NSRect;
override selector("rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
override selector("rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
override selector("rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSPoint, NSRect, NSTextContainer, NSRange;
override selector("rectForKey:inTable:") = NSRect, NSString, NSString;
override selector("rectForLayoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSPoint, NSRect, NSTextContainer, NSRange;
override selector("rectForPage:") = NSRect, CLong;
override selector("rectForPart:") = NSRect, CULong;
override selector("rectOfColumn:") = NSRect, CLong;
override selector("rectOfPathComponentCell:withFrame:inView:") = NSRect, NSPathComponentCell, NSRect, NSView;
override selector("rectOfRow:") = NSRect, CLong;
override selector("rectOfTickMarkAtIndex:") = NSRect, CLong;
override selector("rectPreservedDuringLiveResize") = NSRect;
override selector("rectValue") = NSRect;
override selector("recycleURLs:completionHandler:") = Void, NSArray, UnknownType;
override selector("red") = DOMCSSPrimitiveValue;
override selector("redColor") = NSColor;
override selector("redComponent") = Double;
override selector("redo") = Void;
override selector("redoActionName") = NSString;
override selector("redoMenuItemTitle") = NSString;
override selector("redoMenuTitleForUndoActionName:") = NSString, NSString;
override selector("referenceNode") = DOMNode;
override selector("referenceObjectForObjectID:") = Id, NSManagedObjectID;
override selector("referrer") = NSString;
override selector("reflectScrolledClipView:") = Void, NSClipView;
override selector("refreshObject:mergeChanges:") = Void, NSManagedObject, Bool;
override selector("refusesFirstResponder") = Bool;
override selector("registerBooksInBundle:") = Bool, NSBundle;
override selector("registerClass:") = Bool, Id;
override selector("registerClassDescription:") = Void, NSScriptClassDescription;
override selector("registerClassDescription:forClass:") = Void, NSClassDescription, Id;
override selector("registerCoercer:selector:toConvertFromClass:toClass:") = Void, Id, SelectorHandle, Id, Id;
override selector("registerCommandDescription:") = Void, NSScriptCommandDescription;
override selector("registerDefaults:") = Void, NSDictionary;
override selector("registerForDraggedTypes:") = Void, NSArray;
override selector("registerForServices") = Void;
override selector("registerImageRepClass:") = Void, Id;
override selector("registerLanguage:byVendor:") = Bool, NSString, NSString;
override selector("registerName:") = Bool, NSString;
override selector("registerName:withNameServer:") = Bool, NSString, NSPortNameServer;
override selector("registerPort:name:") = Bool, NSPort, NSString;
override selector("registerPort:name:nameServerPortNumber:") = Bool, NSPort, NSString, UShort;
override selector("registerServicesMenuSendTypes:returnTypes:") = Void, NSArray, NSArray;
override selector("registerStoreClass:forStoreType:") = Void, Id, NSString;
override selector("registerURLHandleClass:") = Void, Id;
override selector("registerURLSchemeAsLocal:") = Void, NSString;
override selector("registerUndoWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
override selector("registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:") = Void, NSString, NSString, Double, NSArray, NSArray;
override selector("registerUserInterfaceItemSearchHandler:") = Void, Id;
override selector("registerViewClass:representationClass:forMIMEType:") = Void, Id, Id, NSString;
override selector("registeredDraggedTypes") = NSArray;
override selector("registeredImageRepClasses") = NSArray;
override selector("registeredObjects") = NSSet;
override selector("registeredStoreTypes") = NSDictionary;
override selector("regularFileContents") = NSData;
override selector("rel") = NSString;
override selector("relatedNode") = DOMNode;
override selector("relatedTarget") = Id;
override selector("relationshipKeyPathsForPrefetching") = NSArray;
override selector("relationshipMappings") = NSArray;
override selector("relationshipsByName") = NSDictionary;
override selector("relationshipsWithDestinationEntity:") = NSArray, NSEntityDescription;
override selector("relativeCurveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
override selector("relativeLineToPoint:") = Void, NSPoint;
override selector("relativeMoveToPoint:") = Void, NSPoint;
override selector("relativePath") = NSString;
override selector("relativePosition") = CULong;
override selector("relativeString") = NSString;
override selector("release") = Void;
override selector("releaseCGLContext:") = Void, CGLContextObj;
override selector("releaseCGLPixelFormat:") = Void, CGLPixelFormatObj;
override selector("releaseEvents") = Void;
override selector("releaseGState") = Void;
override selector("releaseGlobally") = Void;
override selector("relinquishFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[]];
override selector("reload") = Void;
override selector("reload:") = Void, Id;
override selector("reloadColumn:") = Void, CLong;
override selector("reloadCriteria") = Void;
override selector("reloadData") = Void;
override selector("reloadDataForRowIndexes:columnIndexes:") = Void, NSIndexSet, NSIndexSet;
override selector("reloadDataForRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
override selector("reloadDefaultFontFamilies") = Void;
override selector("reloadFromOrigin") = Void;
override selector("reloadFromOrigin:") = Void, Id;
override selector("reloadItem:") = Void, Id;
override selector("reloadItem:reloadChildren:") = Void, Id, Bool;
override selector("reloadPredicate") = Void;
override selector("remoteObjects") = NSArray;
override selector("remove:") = Void, UInt;
override selector("removeAccessoryController:") = Void, NSViewController;
override selector("removeAllActions") = Void;
override selector("removeAllActionsWithTarget:") = Void, Id;
override selector("removeAllAnimations") = Void;
override selector("removeAllCachedResponses") = Void;
override selector("removeAllIndexes") = Void;
override selector("removeAllItems") = Void;
override selector("removeAllObjects") = Void;
override selector("removeAllPoints") = Void;
override selector("removeAllToolTips") = Void;
override selector("removeAnimationForKey:") = Void, NSString;
override selector("removeAttribute:") = Void, NSString;
override selector("removeAttribute:range:") = Void, NSString, NSRange;
override selector("removeAttributeForName:") = Void, NSString;
override selector("removeAttributeNS::") = Void, NSString, NSString;
override selector("removeAttributeNS:localName:") = Void, NSString, NSString;
override selector("removeAttributeNode:") = DOMAttr, DOMAttr;
override selector("removeCachedResponseForRequest:") = Void, NSURLRequest;
override selector("removeCharactersInRange:") = Void, NSRange;
override selector("removeCharactersInString:") = Void, NSString;
override selector("removeChild:") = DOMNode, DOMNode;
override selector("removeChildAtIndex:") = Void, CULong;
override selector("removeChildWindow:") = Void, NSWindow;
override selector("removeClient:") = Void, Id;
override selector("removeCollection:") = Bool, NSString;
override selector("removeColorWithKey:") = Void, NSString;
override selector("removeColumn:") = Void, CLong;
override selector("removeConnection:fromRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
override selector("removeContextHelpForObject:") = Void, Id;
override selector("removeCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("removeCursorRect:cursor:") = Void, NSRect, NSCursor;
override selector("removeDependency:") = Void, NSOperation;
override selector("removeDescriptorAtIndex:") = Void, CLong;
override selector("removeDescriptorWithKeyword:") = Void, UInt;
override selector("removeDocument:") = Void, NSDocument;
override selector("removeDragCaret") = Void;
override selector("removeEntryAtIndex:") = Void, CLong;
override selector("removeEventHandlerForEventClass:andEventID:") = Void, UInt, UInt;
override selector("removeEventListener:::") = Void, NSString, Id, Bool;
override selector("removeEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
override selector("removeFile") = Void;
override selector("removeFileAtPath:handler:") = Bool, NSString, Id;
override selector("removeFileWrapper:") = Void, NSFileWrapper;
override selector("removeFontDescriptor:fromCollection:") = Void, NSFontDescriptor, NSString;
override selector("removeFontTrait:") = Void, Id;
override selector("removeFrameUsingName:") = Void, NSString;
override selector("removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("removeFromSuperlayer") = Void;
override selector("removeFromSuperview") = Void;
override selector("removeFromSuperviewWithoutNeedingDisplay") = Void;
override selector("removeIndex:") = Void, CULong;
override selector("removeIndexes:") = Void, NSIndexSet;
override selector("removeIndexesInRange:") = Void, NSRange;
override selector("removeItem:") = Void, NSMenuItem;
override selector("removeItemAtIndex:") = Void, CLong;
override selector("removeItemAtPath:error:") = Bool, NSString, Pointer[NSError];
override selector("removeItemAtURL:error:") = Bool, NSURL, Pointer[NSError];
override selector("removeItemWithObjectValue:") = Void, Id;
override selector("removeItemWithTitle:") = Void, NSString;
override selector("removeItems:") = Void, NSArray;
override selector("removeLastObject") = Void;
override selector("removeLayoutManager:") = Void, NSLayoutManager;
override selector("removeMarker:") = Void, NSRulerMarker;
override selector("removeMonitor:") = Void, Id;
override selector("removeNamedItem:") = DOMNode, NSString;
override selector("removeNamedItemNS::") = DOMNode, NSString, NSString;
override selector("removeNamedItemNS:localName:") = DOMNode, NSString, NSString;
override selector("removeNamespaceForPrefix:") = Void, NSString;
override selector("removeObject:") = Void, Id;
override selector("removeObject:inRange:") = Void, Id, NSRange;
override selector("removeObjectAtArrangedObjectIndex:") = Void, CULong;
override selector("removeObjectAtArrangedObjectIndexPath:") = Void, NSIndexPath;
override selector("removeObjectAtIndex:") = Void, CULong;
override selector("removeObjectForKey:") = Void, Id;
override selector("removeObjectIdenticalTo:") = Void, Id;
override selector("removeObjectIdenticalTo:inRange:") = Void, Id, NSRange;
override selector("removeObjects:") = Void, NSArray;
override selector("removeObjectsAtArrangedObjectIndexPaths:") = Void, NSArray;
override selector("removeObjectsAtArrangedObjectIndexes:") = Void, NSIndexSet;
override selector("removeObjectsAtIndexes:") = Void, NSIndexSet;
override selector("removeObjectsForKeys:") = Void, NSArray;
override selector("removeObjectsFromIndices:numIndices:") = Void, Pointer[CULong], CULong;
override selector("removeObjectsInArray:") = Void, NSArray;
override selector("removeObjectsInRange:") = Void, NSRange;
override selector("removeObserver:") = Void, Id;
override selector("removeObserver:forKeyPath:") = Void, NSObject, NSString;
override selector("removeObserver:fromObjectsAtIndexes:forKeyPath:") = Void, NSObject, NSIndexSet, NSString;
override selector("removeObserver:name:object:") = Void, Id, NSString, Id;
override selector("removeParamDescriptorWithKeyword:") = Void, UInt;
override selector("removePersistentDomainForName:") = Void, NSString;
override selector("removePersistentStore:error:") = Bool, NSPersistentStore, Pointer[NSError];
override selector("removePointerAtIndex:") = Void, CULong;
override selector("removePort:forMode:") = Void, NSPort, NSString;
override selector("removePortForName:") = Bool, NSString;
override selector("removeProgressMark:") = Void, Float;
override selector("removeProperty:") = NSString, NSString;
override selector("removePropertyForKey:inRequest:") = Void, NSString, NSMutableURLRequest;
override selector("removeRepresentation:") = Void, NSImageRep;
override selector("removeRequestMode:") = Void, NSString;
override selector("removeRow:") = Void, CLong;
override selector("removeRowAtIndex:") = Void, CLong;
override selector("removeRowsAtIndexes:includeSubrows:") = Void, NSIndexSet, Bool;
override selector("removeRule:") = Void, UInt;
override selector("removeRunLoop:") = Void, NSRunLoop;
override selector("removeSavedColumnsWithAutosaveName:") = Void, NSString;
override selector("removeSelectedObjects:") = Bool, NSArray;
override selector("removeSelectionIndexPaths:") = Bool, NSArray;
override selector("removeSelectionIndexes:") = Bool, NSIndexSet;
override selector("removeStatusItem:") = Void, NSStatusItem;
override selector("removeSuiteNamed:") = Void, NSString;
override selector("removeTabStop:") = Void, NSTextTab;
override selector("removeTabViewItem:") = Void, NSTabViewItem;
override selector("removeTableColumn:") = Void, NSTableColumn;
override selector("removeTemporaryAttribute:forCharacterRange:") = Void, NSString, NSRange;
override selector("removeTextContainerAtIndex:") = Void, CULong;
override selector("removeToolTip:") = Void, CLong;
override selector("removeTrackingArea:") = Void, NSTrackingArea;
override selector("removeTrackingRect:") = Void, CLong;
override selector("removeValueAtIndex:fromPropertyWithKey:") = Void, CULong, NSString;
override selector("removeVolatileDomainForName:") = Void, NSString;
override selector("removeWebScriptKey:") = Void, NSString;
override selector("removeWindowController:") = Void, NSWindowController;
override selector("removeWindowsItem:") = Void, NSWindow;
override selector("renamingIdentifier") = NSString;
override selector("renderInContext:") = Void, CGContextRef;
override selector("renderingMode") = CULong;
override selector("renewGState") = Void;
override selector("renewRows:columns:") = Void, CLong, CLong;
override selector("reopenDocumentForURL:withContentsOfURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
override selector("repeatCount") = Float;
override selector("repeatDuration") = Double;
override selector("replaceBytesInRange:withBytes:") = Void, NSRange, RawPointer;
override selector("replaceBytesInRange:withBytes:length:") = Void, NSRange, RawPointer, CULong;
override selector("replaceCharactersInRange:withAttributedString:") = Void, NSRange, NSAttributedString;
override selector("replaceCharactersInRange:withRTF:") = Void, NSRange, NSData;
override selector("replaceCharactersInRange:withRTFD:") = Void, NSRange, NSData;
override selector("replaceCharactersInRange:withString:") = Void, NSRange, NSString;
override selector("replaceChild::") = DOMNode, DOMNode, DOMNode;
override selector("replaceChild:oldChild:") = DOMNode, DOMNode, DOMNode;
override selector("replaceChildAtIndex:withNode:") = Void, CULong, NSXMLNode;
override selector("replaceData:::") = Void, UInt, UInt, NSString;
override selector("replaceData:length:data:") = Void, UInt, UInt, NSString;
override selector("replaceGlyphAtIndex:withGlyph:") = Void, CULong, UInt;
override selector("replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:") = Bool, NSURL, NSURL, NSString, CULong, Pointer[NSURL], Pointer[NSError];
override selector("replaceLayoutManager:") = Void, NSLayoutManager;
override selector("replaceObject:withObject:") = Void, Id, Id;
override selector("replaceObjectAtIndex:withObject:") = Void, CULong, Id;
override selector("replaceObjectsAtIndexes:withObjects:") = Void, NSIndexSet, NSArray;
override selector("replaceObjectsInRange:withObjectsFromArray:") = Void, NSRange, NSArray;
override selector("replaceObjectsInRange:withObjectsFromArray:range:") = Void, NSRange, NSArray, NSRange;
override selector("replaceOccurrencesOfString:withString:options:range:") = CULong, NSString, NSString, CULong, NSRange;
override selector("replacePointerAtIndex:withPointer:") = Void, CULong, RawPointer;
override selector("replaceSelectionWithArchive:") = Void, WebArchive;
override selector("replaceSelectionWithMarkupString:") = Void, NSString;
override selector("replaceSelectionWithNode:") = Void, DOMNode;
override selector("replaceSelectionWithText:") = Void, NSString;
override selector("replaceSublayer:with:") = Void, CALayer, CALayer;
override selector("replaceSubview:with:") = Void, NSView, NSView;
override selector("replaceTextContainer:") = Void, NSTextContainer;
override selector("replaceTextStorage:") = Void, NSTextStorage;
override selector("replaceValueAtIndex:inPropertyWithKey:withValue:") = Void, CULong, NSString, Id;
override selector("replaceWholeText:") = DOMText, NSString;
override selector("replacementCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
override selector("replacementClassForClass:") = Id, Id;
override selector("replacementObjectForArchiver:") = Id, NSArchiver;
override selector("replacementObjectForCoder:") = Id, NSCoder;
override selector("replacementObjectForKeyedArchiver:") = Id, NSKeyedArchiver;
override selector("replacementObjectForPortCoder:") = Id, NSPortCoder;
override selector("replacementString") = NSString;
override selector("replyAppleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
override selector("replyTimeout") = Double;
override selector("replyToApplicationShouldTerminate:") = Void, Bool;
override selector("replyToOpenOrPrint:") = Void, CULong;
override selector("replyWithException:") = Void, NSException;
override selector("reportException:") = Void, NSException;
override selector("representation") = Id;
override selector("representationOfImageRepsInArray:usingType:properties:") = NSData, NSArray, CULong, NSDictionary;
override selector("representationUsingType:properties:") = NSData, CULong, NSDictionary;
override selector("representations") = NSArray;
override selector("representedFilename") = NSString;
override selector("representedObject") = Id;
override selector("representedURL") = NSURL;
override selector("request") = Id;
override selector("requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:") = CLong, NSString, NSRange, UInt64, NSDictionary, CLong, UnknownType;
override selector("requestExpression") = NSExpression;
override selector("requestHeaderFieldsWithCookies:") = NSDictionary, NSArray;
override selector("requestIsCacheEquivalent:toRequest:") = Bool, NSURLRequest, NSURLRequest;
override selector("requestModes") = NSArray;
override selector("requestTimeout") = Double;
override selector("requestUserAttention:") = CLong, CULong;
override selector("requestWithURL:") = Id, NSURL;
override selector("requestWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, CULong, Double;
override selector("requiredFileType") = NSString;
override selector("requiredThickness") = Double;
override selector("reservedSpaceLength") = CULong;
override selector("reservedThicknessForAccessoryView") = Double;
override selector("reservedThicknessForMarkers") = Double;
override selector("reset") = Void;
override selector("resetBytesInRange:") = Void, NSRange;
override selector("resetCancelButtonCell") = Void;
override selector("resetCursorRect:inView:") = Void, NSRect, NSView;
override selector("resetCursorRects") = Void;
override selector("resetSearchButtonCell") = Void;
override selector("resetStandardUserDefaults") = Void;
override selector("resetSystemTimeZone") = Void;
override selector("reshape") = Void;
override selector("resignFirstResponder") = Bool;
override selector("resignKeyWindow") = Void;
override selector("resignMainWindow") = Void;
override selector("resizeDownCursor") = NSCursor;
override selector("resizeFlags") = CLong;
override selector("resizeIncrements") = NSSize;
override selector("resizeLeftCursor") = NSCursor;
override selector("resizeLeftRightCursor") = NSCursor;
override selector("resizeRightCursor") = NSCursor;
override selector("resizeSublayersWithOldSize:") = Void, CGSize;
override selector("resizeSubviewsWithOldSize:") = Void, NSSize;
override selector("resizeUpCursor") = NSCursor;
override selector("resizeUpDownCursor") = NSCursor;
override selector("resizeWithOldSuperlayerSize:") = Void, CGSize;
override selector("resizeWithOldSuperviewSize:") = Void, NSSize;
override selector("resizedColumn") = CLong;
override selector("resizingMask") = CULong;
override selector("resolve") = Void;
override selector("resolveClassMethod:") = Bool, SelectorHandle;
override selector("resolveInstanceMethod:") = Bool, SelectorHandle;
override selector("resolveNamespaceForName:") = NSXMLNode, NSString;
override selector("resolvePrefixForNamespaceURI:") = NSString, NSString;
override selector("resolveWithTimeout:") = Void, Double;
override selector("resolvedKeyDictionary") = NSDictionary;
override selector("resolvesAliases") = Bool;
override selector("resourceData") = NSData;
override selector("resourceDataUsingCache:") = NSData, Bool;
override selector("resourceLoadDelegate") = Id;
override selector("resourcePath") = NSString;
override selector("resourceSpecifier") = NSString;
override selector("resourceURL") = NSURL;
override selector("resourceValuesForKeys:error:") = NSDictionary, NSArray, Pointer[NSError];
override selector("resourceValuesForKeys:fromBookmarkData:") = NSDictionary, NSArray, NSData;
override selector("respondsToSelector:") = Bool, SelectorHandle;
override selector("response") = NSURLResponse;
override selector("restoreCachedImage") = Void;
override selector("restoreGraphicsState") = Void;
override selector("result") = Id;
override selector("resultAtIndex:") = Id, CULong;
override selector("resultCount") = CULong;
override selector("resultType") = UInt64;
override selector("results") = NSArray;
override selector("resume") = Bool;
override selector("resumeData") = NSData;
override selector("resumeExecutionWithResult:") = Void, Id;
override selector("resumeWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
override selector("retain") = Id;
override selector("retainArguments") = Void;
override selector("retainCount") = CULong;
override selector("retainsRegisteredObjects") = Bool;
override selector("returnID") = Short;
override selector("returnType") = NSString;
override selector("returnValue") = Bool;
override selector("returnsDistinctResults") = Bool;
override selector("returnsObjectsAsFaults") = Bool;
override selector("reusesColumns") = Bool;
override selector("rev") = NSString;
override selector("reverseObjectEnumerator") = NSEnumerator;
override selector("reverseTransformedValue:") = Id, Id;
override selector("reversedSortDescriptor") = Id;
override selector("revert:") = Void, Id;
override selector("revertDocumentToSaved:") = Void, Id;
override selector("revertToContentsOfURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("revertToInitialValues:") = Void, Id;
override selector("revertToSavedFromFile:ofType:") = Bool, NSString, NSString;
override selector("revertToSavedFromURL:ofType:") = Bool, NSURL, NSString;
override selector("reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:") = Void, NSString, Bool, Id, SelectorHandle, RawPointer;
override selector("richTextSource") = NSAttributedString;
override selector("richness") = NSString;
override selector("right") = Id;
override selector("rightExpression") = NSExpression;
override selector("rightExpressionAttributeType") = CULong;
override selector("rightExpressions") = NSArray;
override selector("rightMargin") = Double;
override selector("rightMouseDown:") = Void, NSEvent;
override selector("rightMouseDragged:") = Void, NSEvent;
override selector("rightMouseUp:") = Void, NSEvent;
override selector("rollback") = Void;
override selector("root") = DOMNode;
override selector("rootDocument") = NSXMLDocument;
override selector("rootElement") = NSXMLElement;
override selector("rootItemForBrowser:") = Id, NSBrowser;
override selector("rootObject") = Id;
override selector("rootProxy") = NSDistantObject;
override selector("rootProxyForConnectionWithRegisteredName:host:") = NSDistantObject, NSString, NSString;
override selector("rootProxyForConnectionWithRegisteredName:host:usingNameServer:") = NSDistantObject, NSString, NSString, NSPortNameServer;
override selector("rotateByAngle:") = Void, Double;
override selector("rotateByDegrees:") = Void, Double;
override selector("rotateByRadians:") = Void, Double;
override selector("rotateWithEvent:") = Void, NSEvent;
override selector("rotation") = Float;
override selector("roundingBehavior") = NSDecimalNumberHandler;
override selector("roundingIncrement") = NSNumber;
override selector("roundingMode") = CULong;
override selector("rowAtPoint:") = CLong, NSPoint;
override selector("rowClass") = Id;
override selector("rowForDisplayValue:") = CLong, Id;
override selector("rowForItem:") = CLong, Id;
override selector("rowHeight") = Double;
override selector("rowIndex") = Int;
override selector("rowSpan") = Int;
override selector("rowTemplates") = NSArray;
override selector("rowTypeForRow:") = CULong, CLong;
override selector("rowTypeKeyPath") = NSString;
override selector("rows") = Id;
override selector("rowsInRect:") = NSRange, NSRect;
override selector("ruleEditor:child:forCriterion:withRowType:") = Id, NSRuleEditor, CLong, Id, CULong;
override selector("ruleEditor:displayValueForCriterion:inRow:") = Id, NSRuleEditor, Id, CLong;
override selector("ruleEditor:numberOfChildrenForCriterion:withRowType:") = CLong, NSRuleEditor, Id, CULong;
override selector("ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:") = NSDictionary, NSRuleEditor, Id, Id, CLong;
override selector("ruleEditorRowsDidChange:") = Void, NSNotification;
override selector("ruleThickness") = Double;
override selector("ruler") = NSRulerView;
override selector("rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:") = NSView, NSTextView, NSParagraphStyle, NSRulerView, Bool;
override selector("rulerAttributesInRange:") = NSDictionary, NSRange;
override selector("rulerMarkersForTextView:paragraphStyle:ruler:") = NSArray, NSTextView, NSParagraphStyle, NSRulerView;
override selector("rulerView:didAddMarker:") = Void, NSRulerView, NSRulerMarker;
override selector("rulerView:didMoveMarker:") = Void, NSRulerView, NSRulerMarker;
override selector("rulerView:didRemoveMarker:") = Void, NSRulerView, NSRulerMarker;
override selector("rulerView:handleMouseDown:") = Void, NSRulerView, NSEvent;
override selector("rulerView:shouldAddMarker:") = Bool, NSRulerView, NSRulerMarker;
override selector("rulerView:shouldMoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override selector("rulerView:shouldRemoveMarker:") = Bool, NSRulerView, NSRulerMarker;
override selector("rulerView:willAddMarker:atLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override selector("rulerView:willMoveMarker:toLocation:") = Double, NSRulerView, NSRulerMarker, Double;
override selector("rulerView:willSetClientView:") = Void, NSRulerView, NSView;
override selector("rulerViewClass") = Id;
override selector("rulersVisible") = Bool;
override selector("rules") = Id;
override selector("run") = Void;
override selector("runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
override selector("runCustomizationPalette:") = Void, Id;
override selector("runInNewThread") = Void;
override selector("runLoopModes") = NSArray;
override selector("runLoopModesForAnimating") = NSArray;
override selector("runModal") = CLong;
override selector("runModalForDirectory:file:") = CLong, NSString, NSString;
override selector("runModalForDirectory:file:types:") = CLong, NSString, NSString, NSArray;
override selector("runModalForTypes:") = CLong, NSArray;
override selector("runModalForWindow:") = CLong, NSWindow;
override selector("runModalForWindow:relativeToWindow:") = CLong, NSWindow, NSWindow;
override selector("runModalOpenPanel:forTypes:") = CLong, NSOpenPanel, NSArray;
override selector("runModalPageLayoutWithPrintInfo:") = CLong, NSPrintInfo;
override selector("runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:") = Void, NSPrintInfo, Id, SelectorHandle, RawPointer;
override selector("runModalPrintOperation:delegate:didRunSelector:contextInfo:") = Void, NSPrintOperation, Id, SelectorHandle, RawPointer;
override selector("runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, CULong, Id, SelectorHandle, RawPointer;
override selector("runModalSession:") = CLong, NSModalSession;
override selector("runModalWithPrintInfo:") = CLong, NSPrintInfo;
override selector("runMode:beforeDate:") = Bool, NSString, NSDate;
override selector("runOperation") = Bool;
override selector("runOperationModalForWindow:delegate:didRunSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
override selector("runPageLayout:") = Void, Id;
override selector("runToolbarCustomizationPalette:") = Void, Id;
override selector("runUntilDate:") = Void, NSDate;
override selector("runningApplicationWithProcessIdentifier:") = NSRunningApplication, Int;
override selector("runningApplications") = NSArray;
override selector("runningApplicationsWithBundleIdentifier:") = NSArray, NSString;
override selector("sRGBColorSpace") = NSColorSpace;
override selector("samplesPerPixel") = CLong;
override selector("sansSerifFontFamily") = NSString;
override selector("saturationComponent") = Double;
override selector("save:") = Bool, Id;
override selector("saveAllDocuments:") = Void, Id;
override selector("saveDocument:") = Void, Id;
override selector("saveDocumentAs:") = Void, Id;
override selector("saveDocumentTo:") = Void, Id;
override selector("saveDocumentWithDelegate:didSaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
override selector("saveFrameUsingName:") = Void, NSString;
override selector("saveGraphicsState") = Void;
override selector("saveOptions") = CULong;
override selector("savePanel") = NSSavePanel;
override selector("saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSString, CULong, Id, SelectorHandle, RawPointer;
override selector("saveToURL:error:") = Bool, NSURL, Pointer[NSError];
override selector("saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSURL, NSString, CULong, Id, SelectorHandle, RawPointer;
override selector("saveToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
override selector("scale") = Short;
override selector("scaleBy:") = Void, Double;
override selector("scaleUnitSquareToSize:") = Void, NSSize;
override selector("scaleXBy:yBy:") = Void, Double, Double;
override selector("scalesWhenResized") = Bool;
override selector("scalingFactor") = Double;
override selector("scanCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
override selector("scanDecimal:") = Bool, Pointer[NSDecimal];
override selector("scanDouble:") = Bool, Pointer[Double];
override selector("scanFloat:") = Bool, Pointer[Float];
override selector("scanHexDouble:") = Bool, Pointer[Double];
override selector("scanHexFloat:") = Bool, Pointer[Float];
override selector("scanHexInt:") = Bool, Pointer[UInt];
override selector("scanHexLongLong:") = Bool, Pointer[UInt64];
override selector("scanInt:") = Bool, Pointer[Int];
override selector("scanInteger:") = Bool, Pointer[CLong];
override selector("scanLocation") = CULong;
override selector("scanLongLong:") = Bool, Pointer[Int64];
override selector("scanString:intoString:") = Bool, NSString, Pointer[NSString];
override selector("scanUpToCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
override selector("scanUpToString:intoString:") = Bool, NSString, Pointer[NSString];
override selector("scannerWithString:") = Id, NSString;
override selector("scheduleInRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("scheduledTimerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
override selector("scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
override selector("scheme") = NSString;
override selector("scope") = NSString;
override selector("screen") = NSScreen;
override selector("screenFont") = NSFont;
override selector("screenFontWithRenderingMode:") = NSFont, CULong;
override selector("screenX") = Int;
override selector("screenY") = Int;
override selector("screens") = NSArray;
override selector("scriptErrorExpectedTypeDescriptor") = NSAppleEventDescriptor;
override selector("scriptErrorNumber") = Int;
override selector("scriptErrorOffendingObjectDescriptor") = NSAppleEventDescriptor;
override selector("scriptErrorString") = NSString;
override selector("scriptingBeginsWith:") = Bool, Id;
override selector("scriptingContains:") = Bool, Id;
override selector("scriptingEndsWith:") = Bool, Id;
override selector("scriptingIsEqualTo:") = Bool, Id;
override selector("scriptingIsGreaterThan:") = Bool, Id;
override selector("scriptingIsGreaterThanOrEqualTo:") = Bool, Id;
override selector("scriptingIsLessThan:") = Bool, Id;
override selector("scriptingIsLessThanOrEqualTo:") = Bool, Id;
override selector("scriptingProperties") = NSDictionary;
override selector("scriptingValueForSpecifier:") = Id, NSScriptObjectSpecifier;
override selector("scripts") = DOMHTMLCollection;
override selector("scrollBarColor") = NSColor;
override selector("scrollByLines:") = Void, Int;
override selector("scrollByPages:") = Void, Int;
override selector("scrollCellToVisibleAtRow:column:") = Void, CLong, CLong;
override selector("scrollClipView:toPoint:") = Void, NSClipView, NSPoint;
override selector("scrollColumnToVisible:") = Void, CLong;
override selector("scrollColumnsLeftBy:") = Void, CLong;
override selector("scrollColumnsRightBy:") = Void, CLong;
override selector("scrollHeight") = Int;
override selector("scrollIntoView:") = Void, Bool;
override selector("scrollIntoViewIfNeeded:") = Void, Bool;
override selector("scrollItemAtIndexToTop:") = Void, CLong;
override selector("scrollItemAtIndexToVisible:") = Void, CLong;
override selector("scrollLeft") = Int;
override selector("scrollLineDown:") = Void, Id;
override selector("scrollLineUp:") = Void, Id;
override selector("scrollPageDown:") = Void, Id;
override selector("scrollPageUp:") = Void, Id;
override selector("scrollPoint:") = Void, NSPoint;
override selector("scrollRangeToVisible:") = Void, NSRange;
override selector("scrollRect:by:") = Void, NSRect, NSSize;
override selector("scrollRectToVisible:") = Bool, NSRect;
override selector("scrollRowToVisible:") = Void, CLong;
override selector("scrollRowToVisible:inColumn:") = Void, CLong, CLong;
override selector("scrollToBeginningOfDocument:") = Void, Id;
override selector("scrollToEndOfDocument:") = Void, Id;
override selector("scrollToPoint:") = Void, NSPoint;
override selector("scrollTop") = Int;
override selector("scrollViaScroller:") = Void, NSScroller;
override selector("scrollView") = NSScrollView;
override selector("scrollWheel:") = Void, NSEvent;
override selector("scrollWidth") = Int;
override selector("scrollerWidth") = Double;
override selector("scrollerWidthForControlSize:") = Double, CULong;
override selector("scrolling") = NSString;
override selector("scrollsDynamically") = Bool;
override selector("search") = NSString;
override selector("searchButtonCell") = NSButtonCell;
override selector("searchButtonRectForBounds:") = NSRect, NSRect;
override selector("searchFor:direction:caseSensitive:wrap:") = Bool, NSString, Bool, Bool, Bool;
override selector("searchForAllDomains") = Void;
override selector("searchForBrowsableDomains") = Void;
override selector("searchForItemsWithSearchString:resultLimit:matchedItemHandler:") = Void, NSString, CLong, UnknownType;
override selector("searchForRegistrationDomains") = Void;
override selector("searchForServicesOfType:inDomain:") = Void, NSString, NSString;
override selector("searchMenuTemplate") = NSMenu;
override selector("searchScopes") = NSArray;
override selector("searchString:inUserInterfaceItemString:searchRange:foundRange:") = Bool, NSString, NSString, NSRange, Pointer[NSRange];
override selector("searchTextRectForBounds:") = NSRect, NSRect;
override selector("second") = CLong;
override selector("secondOfMinute") = CLong;
override selector("secondaryGroupingSize") = CULong;
override selector("secondarySelectedControlColor") = NSColor;
override selector("secondsFromGMT") = CLong;
override selector("secondsFromGMTForDate:") = CLong, NSDate;
override selector("sectionRowIndex") = Int;
override selector("seekToEndOfFile") = UInt64;
override selector("seekToFileOffset:") = Void, UInt64;
override selector("segmentCount") = CLong;
override selector("segmentStyle") = CLong;
override selector("select") = Void;
override selector("selectAll") = Void;
override selector("selectAll:") = Void, Id;
override selector("selectCell:") = Void, NSCell;
override selector("selectCellAtRow:column:") = Void, CLong, CLong;
override selector("selectCellWithTag:") = Bool, CLong;
override selector("selectColumn:byExtendingSelection:") = Void, CLong, Bool;
override selector("selectColumnIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
override selector("selectFile:inFileViewerRootedAtPath:") = Bool, NSString, NSString;
override selector("selectFirstTabViewItem:") = Void, Id;
override selector("selectItem:") = Void, NSMenuItem;
override selector("selectItemAtIndex:") = Void, CLong;
override selector("selectItemWithObjectValue:") = Void, Id;
override selector("selectItemWithTag:") = Bool, CLong;
override selector("selectItemWithTitle:") = Void, NSString;
override selector("selectKeyViewFollowingView:") = Void, NSView;
override selector("selectKeyViewPrecedingView:") = Void, NSView;
override selector("selectLastTabViewItem:") = Void, Id;
override selector("selectLine:") = Void, Id;
override selector("selectNext:") = Void, Id;
override selector("selectNextKeyView:") = Void, Id;
override selector("selectNextTabViewItem:") = Void, Id;
override selector("selectNode:") = Void, DOMNode;
override selector("selectNodeContents:") = Void, DOMNode;
override selector("selectParagraph:") = Void, Id;
override selector("selectPrevious:") = Void, Id;
override selector("selectPreviousKeyView:") = Void, Id;
override selector("selectPreviousTabViewItem:") = Void, Id;
override selector("selectRow:byExtendingSelection:") = Void, CLong, Bool;
override selector("selectRow:inColumn:") = Void, CLong, CLong;
override selector("selectRowIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
override selector("selectRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
override selector("selectSegmentWithTag:") = Bool, CLong;
override selector("selectSentence:") = Void, Id;
override selector("selectTabViewItem:") = Void, NSTabViewItem;
override selector("selectTabViewItemAtIndex:") = Void, CLong;
override selector("selectTabViewItemWithIdentifier:") = Void, Id;
override selector("selectText:") = Void, Id;
override selector("selectTextAtIndex:") = Void, CLong;
override selector("selectTextAtRow:column:") = Id, CLong, CLong;
override selector("selectToMark:") = Void, Id;
override selector("selectWithFrame:inView:editor:delegate:start:length:") = Void, NSRect, NSView, NSText, Id, CLong, CLong;
override selector("selectWord:") = Void, Id;
override selector("selected") = Bool;
override selector("selectedAttributedString") = NSAttributedString;
override selector("selectedCell") = Id;
override selector("selectedCellInColumn:") = Id, CLong;
override selector("selectedCells") = NSArray;
override selector("selectedColumn") = CLong;
override selector("selectedColumnEnumerator") = NSEnumerator;
override selector("selectedColumnIndexes") = NSIndexSet;
override selector("selectedControlColor") = NSColor;
override selector("selectedControlTextColor") = NSColor;
override selector("selectedDOMRange") = DOMRange;
override selector("selectedFont") = NSFont;
override selector("selectedFrame") = WebFrame;
override selector("selectedIndex") = Int;
override selector("selectedItem") = NSMenuItem;
override selector("selectedItemIdentifier") = NSString;
override selector("selectedKeyboardInputSource") = NSString;
override selector("selectedKnobColor") = NSColor;
override selector("selectedMenuItemColor") = NSColor;
override selector("selectedMenuItemTextColor") = NSColor;
override selector("selectedNodes") = NSArray;
override selector("selectedObjects") = NSArray;
override selector("selectedRange") = NSRange;
override selector("selectedRanges") = NSArray;
override selector("selectedRow") = CLong;
override selector("selectedRowEnumerator") = NSEnumerator;
override selector("selectedRowInColumn:") = CLong, CLong;
override selector("selectedRowIndexes") = NSIndexSet;
override selector("selectedRowIndexesInColumn:") = NSIndexSet, CLong;
override selector("selectedSegment") = CLong;
override selector("selectedString") = NSString;
override selector("selectedStylesheetSet") = NSString;
override selector("selectedTabViewItem") = NSTabViewItem;
override selector("selectedTag") = CLong;
override selector("selectedTextAttributes") = NSDictionary;
override selector("selectedTextBackgroundColor") = NSColor;
override selector("selectedTextColor") = NSColor;
override selector("selection") = Id;
override selector("selectionAffinity") = CULong;
override selector("selectionEnd") = Int;
override selector("selectionGranularity") = CULong;
override selector("selectionHighlightStyle") = CLong;
override selector("selectionIndex") = CULong;
override selector("selectionIndexPath") = NSIndexPath;
override selector("selectionIndexPaths") = NSArray;
override selector("selectionIndexes") = NSIndexSet;
override selector("selectionRangeForProposedRange:granularity:") = NSRange, NSRange, CULong;
override selector("selectionShouldChangeInOutlineView:") = Bool, NSOutlineView;
override selector("selectionShouldChangeInTableView:") = Bool, NSTableView;
override selector("selectionStart") = Int;
override selector("selector") = SelectorHandle;
override selector("selectorForCommand:") = SelectorHandle, NSScriptCommandDescription;
override selector("selectorText") = NSString;
override selector("selectsInsertedObjects") = Bool;
override selector("self") = Id;
override selector("sendAction") = Bool;
override selector("sendAction:to:") = Bool, SelectorHandle, Id;
override selector("sendAction:to:forAllCells:") = Void, SelectorHandle, Id, Bool;
override selector("sendAction:to:from:") = Bool, SelectorHandle, Id, Id;
override selector("sendActionOn:") = CLong, CLong;
override selector("sendBeforeDate:") = Bool, NSDate;
override selector("sendBeforeDate:components:from:reserved:") = Bool, NSDate, NSMutableArray, NSPort, CULong;
override selector("sendBeforeDate:msgid:components:from:reserved:") = Bool, NSDate, CULong, NSMutableArray, NSPort, CULong;
override selector("sendDoubleAction") = Void;
override selector("sendEvent:") = Void, NSEvent;
override selector("sendPort") = NSPort;
override selector("sendSynchronousRequest:returningResponse:error:") = NSData, NSURLRequest, Pointer[NSURLResponse], Pointer[NSError];
override selector("sender") = Id;
override selector("sendsActionOnArrowKeys") = Bool;
override selector("sendsActionOnEndEditing") = Bool;
override selector("sendsSearchStringImmediately") = Bool;
override selector("sendsWholeSearchString") = Bool;
override selector("separatesColumns") = Bool;
override selector("separator") = NSString;
override selector("separatorItem") = NSMenuItem;
override selector("serializedRepresentation") = NSData;
override selector("serifFontFamily") = NSString;
override selector("server") = NSInputServer;
override selector("serverTrust") = SecTrustRef;
override selector("serviceConnectionWithName:rootObject:") = Id, NSString, Id;
override selector("serviceConnectionWithName:rootObject:usingNameServer:") = Id, NSString, Id, NSPortNameServer;
override selector("servicePortWithName:") = NSPort, NSString;
override selector("servicesMenu") = NSMenu;
override selector("servicesProvider") = Id;
override selector("set") = Id;
override selector("setALink:") = Void, NSString;
override selector("setAMSymbol:") = Void, NSString;
override selector("setAbbr:") = Void, NSString;
override selector("setAbbreviationDictionary:") = Void, NSDictionary;
override selector("setAbstract:") = Void, Bool;
override selector("setAccept:") = Void, NSString;
override selector("setAcceptCharset:") = Void, NSString;
override selector("setAcceptsArrowKeys:") = Void, Bool;
override selector("setAcceptsGlyphInfo:") = Void, Bool;
override selector("setAcceptsMouseMovedEvents:") = Void, Bool;
override selector("setAcceptsTouchEvents:") = Void, Bool;
override selector("setAccessKey:") = Void, NSString;
override selector("setAccessibilityDescription:") = Void, NSString;
override selector("setAccessoryView:") = Void, NSView;
override selector("setAcquireFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]],CChar],[RawPointer]];
override selector("setAction:") = Void, NSString;
override selector("setActionName:") = Void, NSString;
override selector("setActions:") = Void, NSDictionary;
override selector("setActivationPolicy:") = Bool, CLong;
override selector("setAffectedStores:") = Void, NSArray;
override selector("setAffineTransform:") = Void, CGAffineTransform;
override selector("setAlertStyle:") = Void, CULong;
override selector("setAlign:") = Void, NSString;
override selector("setAlignment:") = Void, CULong;
override selector("setAlignment:range:") = Void, CULong, NSRange;
override selector("setAlignmentRect:") = Void, NSRect;
override selector("setAlinkColor:") = Void, NSString;
override selector("setAllHTTPHeaderFields:") = Void, NSDictionary;
override selector("setAllowedFileTypes:") = Void, NSArray;
override selector("setAllowedInputSourceLocales:") = Void, NSArray;
override selector("setAllowedTypes:") = Void, NSArray;
override selector("setAllowsAnimatedImageLooping:") = Void, Bool;
override selector("setAllowsAnimatedImages:") = Void, Bool;
override selector("setAllowsBranchSelection:") = Void, Bool;
override selector("setAllowsColumnReordering:") = Void, Bool;
override selector("setAllowsColumnResizing:") = Void, Bool;
override selector("setAllowsColumnSelection:") = Void, Bool;
override selector("setAllowsConcurrentViewDrawing:") = Void, Bool;
override selector("setAllowsContextMenuPlugIns:") = Void, Bool;
override selector("setAllowsCutCopyPaste:") = Void, Bool;
override selector("setAllowsDocumentBackgroundColorChange:") = Void, Bool;
override selector("setAllowsEditingTextAttributes:") = Void, Bool;
override selector("setAllowsEmptySelection:") = Void, Bool;
override selector("setAllowsFloats:") = Void, Bool;
override selector("setAllowsImageEditing:") = Void, Bool;
override selector("setAllowsMixedState:") = Void, Bool;
override selector("setAllowsMultipleSelection:") = Void, Bool;
override selector("setAllowsNonContiguousLayout:") = Void, Bool;
override selector("setAllowsOtherFileTypes:") = Void, Bool;
override selector("setAllowsScrolling:") = Void, Bool;
override selector("setAllowsTickMarkValuesOnly:") = Void, Bool;
override selector("setAllowsToolTipsWhenApplicationIsInactive:") = Void, Bool;
override selector("setAllowsTruncatedLabels:") = Void, Bool;
override selector("setAllowsTypeSelect:") = Void, Bool;
override selector("setAllowsUndo:") = Void, Bool;
override selector("setAllowsUserCustomization:") = Void, Bool;
override selector("setAlpha:") = Void, Bool;
override selector("setAlphaValue:") = Void, Double;
override selector("setAlt:") = Void, NSString;
override selector("setAltIncrementValue:") = Void, Double;
override selector("setAlternate:") = Void, Bool;
override selector("setAlternateImage:") = Void, NSImage;
override selector("setAlternateMnemonicLocation:") = Void, CULong;
override selector("setAlternateTitle:") = Void, NSString;
override selector("setAlternateTitleWithMnemonic:") = Void, NSString;
override selector("setAltersStateOfSelectedItem:") = Void, Bool;
override selector("setAlwaysShowsDecimalSeparator:") = Void, Bool;
override selector("setAlwaysUsesMultipleValuesMarker:") = Void, Bool;
override selector("setAnchorPoint:") = Void, CGPoint;
override selector("setAnchorPointZ:") = Void, Double;
override selector("setAnimates:") = Void, Bool;
override selector("setAnimationBlockingMode:") = Void, CULong;
override selector("setAnimationCurve:") = Void, CULong;
override selector("setAnimationDelay:") = Void, Double;
override selector("setAnimations:") = Void, NSDictionary;
override selector("setApplicationIconImage:") = Void, NSImage;
override selector("setApplicationNameForUserAgent:") = Void, NSString;
override selector("setAppliesImmediately:") = Void, Bool;
override selector("setArchive:") = Void, NSString;
override selector("setArgument:atIndex:") = Void, RawPointer, CLong;
override selector("setArguments:") = Void, NSArray;
override selector("setArray:") = Void, NSArray;
override selector("setArrowPosition:") = Void, CULong;
override selector("setArrowsPosition:") = Void, CULong;
override selector("setAspectRatio:") = Void, NSSize;
override selector("setAssociatedPoints:atIndex:") = Void, NSPointArray, CLong;
override selector("setAsynchronous:") = Void, Bool;
override selector("setAttachment:") = Void, NSTextAttachment;
override selector("setAttachmentCell:") = Void, Id;
override selector("setAttachmentSize:forGlyphRange:") = Void, NSSize, NSRange;
override selector("setAttribute::") = Void, NSString, NSString;
override selector("setAttribute:value:") = Void, NSString, NSString;
override selector("setAttributeDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
override selector("setAttributeMappings:") = Void, NSArray;
override selector("setAttributeNS:::") = Void, NSString, NSString, NSString;
override selector("setAttributeNS:qualifiedName:value:") = Void, NSString, NSString, NSString;
override selector("setAttributeNode:") = DOMAttr, DOMAttr;
override selector("setAttributeNodeNS:") = DOMAttr, DOMAttr;
override selector("setAttributeRuns:") = Void, NSArray;
override selector("setAttributeType:") = Void, CULong;
override selector("setAttributeValueClassName:") = Void, NSString;
override selector("setAttributedAlternateTitle:") = Void, NSAttributedString;
override selector("setAttributedString:") = Void, NSAttributedString;
override selector("setAttributedStringForNil:") = Void, NSAttributedString;
override selector("setAttributedStringForNotANumber:") = Void, NSAttributedString;
override selector("setAttributedStringForZero:") = Void, NSAttributedString;
override selector("setAttributedStringValue:") = Void, NSAttributedString;
override selector("setAttributedTitle:") = Void, NSAttributedString;
override selector("setAttributes:") = Void, NSArray;
override selector("setAttributes:ofItemAtPath:error:") = Bool, NSDictionary, NSString, Pointer[NSError];
override selector("setAttributes:range:") = Void, NSDictionary, NSRange;
override selector("setAttributesAsDictionary:") = Void, NSDictionary;
override selector("setAutodisplay:") = Void, Bool;
override selector("setAutoenablesItems:") = Void, Bool;
override selector("setAutofocus:") = Void, Bool;
override selector("setAutohidesScroller:") = Void, Bool;
override selector("setAutohidesScrollers:") = Void, Bool;
override selector("setAutomaticDashSubstitutionEnabled:") = Void, Bool;
override selector("setAutomaticDataDetectionEnabled:") = Void, Bool;
override selector("setAutomaticLinkDetectionEnabled:") = Void, Bool;
override selector("setAutomaticQuoteSubstitutionEnabled:") = Void, Bool;
override selector("setAutomaticSpellingCorrectionEnabled:") = Void, Bool;
override selector("setAutomaticTextReplacementEnabled:") = Void, Bool;
override selector("setAutomaticallyIdentifiesLanguages:") = Void, Bool;
override selector("setAutomaticallyPreparesContent:") = Void, Bool;
override selector("setAutomaticallyRearrangesObjects:") = Void, Bool;
override selector("setAutorecalculatesContentBorderThickness:forEdge:") = Void, Bool, CULong;
override selector("setAutorecalculatesKeyViewLoop:") = Void, Bool;
override selector("setAutorepeat:") = Void, Bool;
override selector("setAutoresizesAllColumnsToFit:") = Void, Bool;
override selector("setAutoresizesOutlineColumn:") = Void, Bool;
override selector("setAutoresizesSubviews:") = Void, Bool;
override selector("setAutoresizingMask:") = Void, CULong;
override selector("setAutoreverses:") = Void, Bool;
override selector("setAutosaveExpandedItems:") = Void, Bool;
override selector("setAutosaveName:") = Void, NSString;
override selector("setAutosaveTableColumns:") = Void, Bool;
override selector("setAutosavedContentsFileURL:") = Void, NSURL;
override selector("setAutosaves:") = Void, Bool;
override selector("setAutosavesConfiguration:") = Void, Bool;
override selector("setAutosavingDelay:") = Void, Double;
override selector("setAutoscroll:") = Void, Bool;
override selector("setAutosizesCells:") = Void, Bool;
override selector("setAutovalidates:") = Void, Bool;
override selector("setAvoidsEmptySelection:") = Void, Bool;
override selector("setAxis:") = Void, NSString;
override selector("setAzimuth:") = Void, NSString;
override selector("setBackground:") = Void, NSString;
override selector("setBackgroundAttachment:") = Void, NSString;
override selector("setBackgroundColor:") = Void, NSString;
override selector("setBackgroundColors:") = Void, NSArray;
override selector("setBackgroundFilters:") = Void, NSArray;
override selector("setBackgroundImage:") = Void, NSString;
override selector("setBackgroundLayoutEnabled:") = Void, Bool;
override selector("setBackgroundPosition:") = Void, NSString;
override selector("setBackgroundRepeat:") = Void, NSString;
override selector("setBackgroundStyle:") = Void, CLong;
override selector("setBackingType:") = Void, CULong;
override selector("setBadgeLabel:") = Void, NSString;
override selector("setBaseSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setBaseWritingDirection:") = Void, CLong;
override selector("setBaseWritingDirection:range:") = Void, CLong, NSRange;
override selector("setBecomesKeyOnlyIfNeeded:") = Void, Bool;
override selector("setBeginTime:") = Void, Double;
override selector("setBezelStyle:") = Void, CULong;
override selector("setBezeled:") = Void, Bool;
override selector("setBgColor:") = Void, NSString;
override selector("setBidiLevels:forGlyphRange:") = Void, Pointer[CUChar], NSRange;
override selector("setBidiProcessingEnabled:") = Void, Bool;
override selector("setBitsPerSample:") = Void, CLong;
override selector("setBlocksOtherRecognizers:") = Void, Bool;
override selector("setBody:") = Void, DOMHTMLElement;
override selector("setBool:forKey:") = Void, Bool, NSString;
override selector("setBorder:") = Void, NSString;
override selector("setBorderBottom:") = Void, NSString;
override selector("setBorderBottomColor:") = Void, NSString;
override selector("setBorderBottomStyle:") = Void, NSString;
override selector("setBorderBottomWidth:") = Void, NSString;
override selector("setBorderCollapse:") = Void, NSString;
override selector("setBorderColor:") = Void, NSString;
override selector("setBorderColor:forEdge:") = Void, NSColor, CULong;
override selector("setBorderLeft:") = Void, NSString;
override selector("setBorderLeftColor:") = Void, NSString;
override selector("setBorderLeftStyle:") = Void, NSString;
override selector("setBorderLeftWidth:") = Void, NSString;
override selector("setBorderRight:") = Void, NSString;
override selector("setBorderRightColor:") = Void, NSString;
override selector("setBorderRightStyle:") = Void, NSString;
override selector("setBorderRightWidth:") = Void, NSString;
override selector("setBorderSpacing:") = Void, NSString;
override selector("setBorderStyle:") = Void, NSString;
override selector("setBorderTop:") = Void, NSString;
override selector("setBorderTopColor:") = Void, NSString;
override selector("setBorderTopStyle:") = Void, NSString;
override selector("setBorderTopWidth:") = Void, NSString;
override selector("setBorderType:") = Void, CULong;
override selector("setBorderWidth:") = Void, NSString;
override selector("setBordered:") = Void, Bool;
override selector("setBottom:") = Void, NSString;
override selector("setBottomMargin:") = Void, Double;
override selector("setBounds:") = Void, NSRect;
override selector("setBoundsOrigin:") = Void, NSPoint;
override selector("setBoundsRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
override selector("setBoundsRotation:") = Void, Double;
override selector("setBoundsSize:") = Void, NSSize;
override selector("setBoxType:") = Void, CULong;
override selector("setButtonBordered:") = Void, Bool;
override selector("setButtonType:") = Void, CULong;
override selector("setByAddingObject:") = NSSet, Id;
override selector("setByAddingObjectsFromArray:") = NSSet, NSArray;
override selector("setByAddingObjectsFromSet:") = NSSet, NSSet;
override selector("setCacheDepthMatchesImageDepth:") = Void, Bool;
override selector("setCacheMode:") = Void, CULong;
override selector("setCacheModel:") = Void, CULong;
override selector("setCachePolicy:") = Void, CULong;
override selector("setCachedSeparately:") = Void, Bool;
override selector("setCachesBezierPath:") = Void, Bool;
override selector("setCalendar:") = Void, NSCalendar;
override selector("setCalendarFormat:") = Void, NSString;
override selector("setCanBeVisibleOnAllSpaces:") = Void, Bool;
override selector("setCanBecomeVisibleWithoutLogin:") = Void, Bool;
override selector("setCanChooseDirectories:") = Void, Bool;
override selector("setCanChooseFiles:") = Void, Bool;
override selector("setCanCreateDirectories:") = Void, Bool;
override selector("setCanDrawConcurrently:") = Void, Bool;
override selector("setCanHide:") = Void, Bool;
override selector("setCanRemoveAllRows:") = Void, Bool;
override selector("setCanSelectHiddenExtension:") = Void, Bool;
override selector("setCanSpawnSeparateThread:") = Void, Bool;
override selector("setCancelBubble:") = Void, Bool;
override selector("setCancelButtonCell:") = Void, NSButtonCell;
override selector("setCapacity:") = Void, Int;
override selector("setCaption:") = Void, DOMHTMLTableCaptionElement;
override selector("setCaptionSide:") = Void, NSString;
override selector("setCaseSensitive:") = Void, Bool;
override selector("setCell:") = Void, NSCell;
override selector("setCellAttribute:to:") = Void, CULong, CLong;
override selector("setCellBackgroundColor:") = Void, NSColor;
override selector("setCellClass:") = Void, Id;
override selector("setCellPadding:") = Void, NSString;
override selector("setCellPrototype:") = Void, NSCell;
override selector("setCellSize:") = Void, NSSize;
override selector("setCellSpacing:") = Void, NSString;
override selector("setCh:") = Void, NSString;
override selector("setChOff:") = Void, NSString;
override selector("setChannelMapping:") = Void, NSArray;
override selector("setCharacterEncoding:") = Void, NSString;
override selector("setCharacterIndex:forGlyphAtIndex:") = Void, CULong, CULong;
override selector("setCharacters:") = Void, NSArray;
override selector("setCharactersToBeSkipped:") = Void, NSCharacterSet;
override selector("setCharset:") = Void, NSString;
override selector("setChecked:") = Void, Bool;
override selector("setChildSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setChildren:") = Void, NSArray;
override selector("setChildrenKeyPath:") = Void, NSString;
override selector("setCite:") = Void, NSString;
override selector("setClass:forClassName:") = Void, Id, NSString;
override selector("setClassName:") = Void, NSString;
override selector("setClassName:forClass:") = Void, NSString, Id;
override selector("setClear:") = Void, NSString;
override selector("setClearsFilterPredicateOnInsertion:") = Void, Bool;
override selector("setClientView:") = Void, NSView;
override selector("setClip") = Void;
override selector("setClip:") = Void, NSString;
override selector("setCode:") = Void, NSString;
override selector("setCodeBase:") = Void, NSString;
override selector("setCodeType:") = Void, NSString;
override selector("setColSpan:") = Void, Int;
override selector("setCollapsesBorders:") = Void, Bool;
override selector("setCollectionBehavior:") = Void, CULong;
override selector("setColor:") = Void, NSString;
override selector("setColor:atX:y:") = Void, NSColor, CLong, CLong;
override selector("setColor:forKey:") = Void, NSColor, NSString;
override selector("setColorRenderingIntent:") = Void, CLong;
override selector("setColorSpace:") = Void, NSColorSpace;
override selector("setColorSpaceName:") = Void, NSString;
override selector("setCols:") = Void, NSString;
override selector("setColumnAutoresizingStyle:") = Void, CULong;
override selector("setColumnResizingType:") = Void, CULong;
override selector("setColumnsAutosaveName:") = Void, NSString;
override selector("setCommands:") = Void, NSArray;
override selector("setCompact:") = Void, Bool;
override selector("setCompletes:") = Void, Bool;
override selector("setCompletionBlock:") = Void, UnknownType;
override selector("setCompletionDelay:") = Void, Double;
override selector("setCompositingFilter:") = Void, CIFilter;
override selector("setCompositingOperation:") = Void, CULong;
override selector("setCompression:factor:") = Void, CULong, Float;
override selector("setConfigurationFromDictionary:") = Void, NSDictionary;
override selector("setConstrainedFrameSize:") = Void, NSSize;
override selector("setContainerClassDescription:") = Void, NSScriptClassDescription;
override selector("setContainerIsObjectBeingTested:") = Void, Bool;
override selector("setContainerIsRangeContainerObject:") = Void, Bool;
override selector("setContainerSize:") = Void, NSSize;
override selector("setContainerSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setContent:") = Void, NSString;
override selector("setContentAspectRatio:") = Void, NSSize;
override selector("setContentBorderThickness:forEdge:") = Void, Double, CULong;
override selector("setContentEditable:") = Void, NSString;
override selector("setContentFilters:") = Void, NSArray;
override selector("setContentMaxSize:") = Void, NSSize;
override selector("setContentMinSize:") = Void, NSSize;
override selector("setContentResizeIncrements:") = Void, NSSize;
override selector("setContentSize:") = Void, NSSize;
override selector("setContentView:") = Void, NSView;
override selector("setContentViewMargins:") = Void, NSSize;
override selector("setContentWidth:type:") = Void, Double, CULong;
override selector("setContents:") = Void, Id;
override selector("setContentsCenter:") = Void, CGRect;
override selector("setContentsGravity:") = Void, NSString;
override selector("setContentsRect:") = Void, CGRect;
override selector("setContextHelp:forObject:") = Void, NSAttributedString, Id;
override selector("setContextHelpModeActive:") = Void, Bool;
override selector("setContextMenuRepresentation:") = Void, Id;
override selector("setContinuous:") = Void, Bool;
override selector("setContinuousSpellCheckingEnabled:") = Void, Bool;
override selector("setControlSize:") = Void, CULong;
override selector("setControlTint:") = Void, CULong;
override selector("setControlView:") = Void, NSView;
override selector("setCookie:") = Void, NSHTTPCookie;
override selector("setCookieAcceptPolicy:") = Void, CULong;
override selector("setCookies:forURL:mainDocumentURL:") = Void, NSArray, NSURL, NSURL;
override selector("setCoords:") = Void, NSString;
override selector("setCopiesOnScroll:") = Void, Bool;
override selector("setCornerRadius:") = Void, Double;
override selector("setCornerView:") = Void, NSView;
override selector("setCount:") = Void, CULong;
override selector("setCountKeyPath:") = Void, NSString;
override selector("setCountLimit:") = Void, CULong;
override selector("setCounterIncrement:") = Void, NSString;
override selector("setCounterReset:") = Void, NSString;
override selector("setCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("setCriteria:andDisplayValues:forRowAtIndex:") = Void, NSArray, NSArray, CLong;
override selector("setCriteriaKeyPath:") = Void, NSString;
override selector("setCriticalValue:") = Void, Double;
override selector("setCssFloat:") = Void, NSString;
override selector("setCssText:") = Void, NSString;
override selector("setCue:") = Void, NSString;
override selector("setCueAfter:") = Void, NSString;
override selector("setCueBefore:") = Void, NSString;
override selector("setCurrencyCode:") = Void, NSString;
override selector("setCurrencyDecimalSeparator:") = Void, NSString;
override selector("setCurrencyGroupingSeparator:") = Void, NSString;
override selector("setCurrencySymbol:") = Void, NSString;
override selector("setCurrentAppleEventAndReplyEventWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
override selector("setCurrentContext:") = Void, NSGraphicsContext;
override selector("setCurrentDirectoryPath:") = Void, NSString;
override selector("setCurrentNode:") = Void, DOMNode;
override selector("setCurrentOperation:") = Void, NSPrintOperation;
override selector("setCurrentPage:") = Void, CLong;
override selector("setCurrentProgress:") = Void, Float;
override selector("setCurrentTime:") = Void, Double;
override selector("setCurrentVirtualScreen:") = Void, Int;
override selector("setCursiveFontFamily:") = Void, NSString;
override selector("setCursor:") = Void, NSString;
override selector("setCustomTextEncodingName:") = Void, NSString;
override selector("setCustomUserAgent:") = Void, NSString;
override selector("setDTD:") = Void, NSXMLDTD;
override selector("setDTDKind:") = Void, CULong;
override selector("setData:") = Void, NSData;
override selector("setData:forType:") = Bool, NSData, NSString;
override selector("setDataCell:") = Void, NSCell;
override selector("setDataProvider:forTypes:") = Bool, Id, NSArray;
override selector("setDataRetained:") = Void, Bool;
override selector("setDataSource:") = Void, Id;
override selector("setDateFormat:") = Void, NSString;
override selector("setDatePickerElements:") = Void, CULong;
override selector("setDatePickerMode:") = Void, CULong;
override selector("setDatePickerStyle:") = Void, CULong;
override selector("setDateStyle:") = Void, CULong;
override selector("setDateTime:") = Void, NSString;
override selector("setDateValue:") = Void, NSDate;
override selector("setDay:") = Void, CLong;
override selector("setDecimalSeparator:") = Void, NSString;
override selector("setDeclare:") = Void, Bool;
override selector("setDefaultAttachmentScaling:") = Void, CULong;
override selector("setDefaultBehavior:") = Void, Id;
override selector("setDefaultButtonCell:") = Void, NSButtonCell;
override selector("setDefaultButtonTitle:") = Void, NSString;
override selector("setDefaultChecked:") = Void, Bool;
override selector("setDefaultColumnWidth:") = Void, Double;
override selector("setDefaultCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
override selector("setDefaultDate:") = Void, NSDate;
override selector("setDefaultFixedFontSize:") = Void, Int;
override selector("setDefaultFlatness:") = Void, Double;
override selector("setDefaultFontSize:") = Void, Int;
override selector("setDefaultFormatterBehavior:") = Void, CULong;
override selector("setDefaultLineCapStyle:") = Void, CULong;
override selector("setDefaultLineJoinStyle:") = Void, CULong;
override selector("setDefaultLineWidth:") = Void, Double;
override selector("setDefaultMiterLimit:") = Void, Double;
override selector("setDefaultNameServerPortNumber:") = Void, UShort;
override selector("setDefaultParagraphStyle:") = Void, NSParagraphStyle;
override selector("setDefaultPlaceholder:forMarker:withBinding:") = Void, Id, Id, NSString;
override selector("setDefaultPrinter:") = Void, NSPrinter;
override selector("setDefaultSelected:") = Void, Bool;
override selector("setDefaultTabInterval:") = Void, Double;
override selector("setDefaultTextEncodingName:") = Void, NSString;
override selector("setDefaultTimeZone:") = Void, NSTimeZone;
override selector("setDefaultValue:") = Void, NSString;
override selector("setDefaultWindingRule:") = Void, CULong;
override selector("setDefer:") = Void, Bool;
override selector("setDelegate:") = Void, Id;
override selector("setDeleteRule:") = Void, CULong;
override selector("setDeletesFileUponFailure:") = Void, Bool;
override selector("setDepthLimit:") = Void, Int;
override selector("setDescriptionFunction:") = Void, CCodePointer[[RawPointer],[NSString]];
override selector("setDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
override selector("setDesignMode:") = Void, NSString;
override selector("setDesktopImageURL:forScreen:options:error:") = Bool, NSURL, NSScreen, NSDictionary, Pointer[NSError];
override selector("setDestination:allowOverwrite:") = Void, NSString, Bool;
override selector("setDestinationEntity:") = Void, NSEntityDescription;
override selector("setDestinationEntityName:") = Void, NSString;
override selector("setDestinationEntityVersionHash:") = Void, NSData;
override selector("setDictionary:") = Void, NSDictionary;
override selector("setDir:") = Void, NSString;
override selector("setDirectParameter:") = Void, Id;
override selector("setDirection:") = Void, NSString;
override selector("setDirectory:") = Void, NSString;
override selector("setDirectoryURL:") = Void, NSURL;
override selector("setDisabled:") = Void, Bool;
override selector("setDiskCapacity:") = Void, CULong;
override selector("setDisplay:") = Void, NSString;
override selector("setDisplayMode:") = Void, CULong;
override selector("setDisplayValuesKeyPath:") = Void, NSString;
override selector("setDisplayedCommandsTitle:") = Void, NSString;
override selector("setDisplayedWhenStopped:") = Void, Bool;
override selector("setDisplaysLinkToolTips:") = Void, Bool;
override selector("setDisplaysWhenScreenProfileChanges:") = Void, Bool;
override selector("setDividerStyle:") = Void, CLong;
override selector("setDockTile:") = Void, NSDockTile;
override selector("setDocument:") = Void, NSDocument;
override selector("setDocumentContentKind:") = Void, CULong;
override selector("setDocumentCursor:") = Void, NSCursor;
override selector("setDocumentEdited:") = Void, Bool;
override selector("setDocumentURI:") = Void, NSString;
override selector("setDocumentView:") = Void, NSView;
override selector("setDoesRelativeDateFormatting:") = Void, Bool;
override selector("setDouble:forKey:") = Void, Double, NSString;
override selector("setDoubleAction:") = Void, SelectorHandle;
override selector("setDoubleSided:") = Void, Bool;
override selector("setDoubleValue:") = Void, Double;
override selector("setDownloadDelegate:") = Void, Id;
override selector("setDraggingDestinationFeedbackStyle:") = Void, CLong;
override selector("setDraggingSourceOperationMask:forLocal:") = Void, CULong, Bool;
override selector("setDrawsBackground:") = Void, Bool;
override selector("setDrawsCellBackground:") = Void, Bool;
override selector("setDrawsGrid:") = Void, Bool;
override selector("setDrawsOutsideLineFragment:forGlyphAtIndex:") = Void, Bool, CULong;
override selector("setDrawsOutsideLineFragment:forGlyphRange:") = Void, Bool, NSRange;
override selector("setDropItem:dropChildIndex:") = Void, Id, CLong;
override selector("setDropRow:dropOperation:") = Void, CLong, CULong;
override selector("setDuration:") = Void, Double;
override selector("setDynamicDepthLimit:") = Void, Bool;
override selector("setEchosBullets:") = Void, Bool;
override selector("setEdgeAntialiasingMask:") = Void, UInt;
override selector("setEditable:") = Void, Bool;
override selector("setEditingDelegate:") = Void, Id;
override selector("setElevation:") = Void, NSString;
override selector("setEmptyCells:") = Void, NSString;
override selector("setEnabled:") = Void, Bool;
override selector("setEnabled:forSegment:") = Void, Bool, CLong;
override selector("setEnabledTextCheckingTypes:") = Void, UInt64;
override selector("setEncoding:") = Void, NSString;
override selector("setEnctype:") = Void, NSString;
override selector("setEnd::") = Void, DOMNode, Int;
override selector("setEnd:offset:") = Void, DOMNode, Int;
override selector("setEndAfter:") = Void, DOMNode;
override selector("setEndBefore:") = Void, DOMNode;
override selector("setEndSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setEndSubelementIdentifier:") = Void, CULong;
override selector("setEndSubelementIndex:") = Void, CLong;
override selector("setEntities:") = Void, NSArray;
override selector("setEntities:forConfiguration:") = Void, NSArray, NSString;
override selector("setEntity:") = Void, NSEntityDescription;
override selector("setEntityMappings:") = Void, NSArray;
override selector("setEntityMigrationPolicyClassName:") = Void, NSString;
override selector("setEntityName:") = Void, NSString;
override selector("setEntryType:") = Void, CLong;
override selector("setEntryWidth:") = Void, Double;
override selector("setEnvironment:") = Void, NSDictionary;
override selector("setEra:") = Void, CLong;
override selector("setEraSymbols:") = Void, NSArray;
override selector("setEvaluationErrorNumber:") = Void, CLong;
override selector("setEvent:") = Void, NSString;
override selector("setEventHandler:andSelector:forEventClass:andEventID:") = Void, Id, SelectorHandle, UInt, UInt;
override selector("setEvictsObjectsWithDiscardedContent:") = Void, Bool;
override selector("setException:") = Void, NSString;
override selector("setExcludedFromWindowsMenu:") = Void, Bool;
override selector("setExcludedKeys:") = Void, NSArray;
override selector("setExponentSymbol:") = Void, NSString;
override selector("setExpression:") = Void, NSExpression;
override selector("setExpressionResultType:") = Void, CULong;
override selector("setExtensionHidden:") = Void, Bool;
override selector("setExtraLineFragmentRect:usedRect:textContainer:") = Void, NSRect, NSRect, NSTextContainer;
override selector("setFace:") = Void, NSString;
override selector("setFantasyFontFamily:") = Void, NSString;
override selector("setFetchBatchSize:") = Void, CULong;
override selector("setFetchLimit:") = Void, CULong;
override selector("setFetchOffset:") = Void, CULong;
override selector("setFetchPredicate:") = Void, NSPredicate;
override selector("setFetchRequest:") = Void, NSFetchRequest;
override selector("setFetchRequestTemplate:forName:") = Void, NSFetchRequest, NSString;
override selector("setFgColor:") = Void, NSString;
override selector("setFieldEditor:") = Void, Bool;
override selector("setFileAttributes:") = Void, NSDictionary;
override selector("setFileModificationDate:") = Void, NSDate;
override selector("setFileName:") = Void, NSString;
override selector("setFileType:") = Void, NSString;
override selector("setFileURL:") = Void, NSURL;
override selector("setFileWrapper:") = Void, NSFileWrapper;
override selector("setFilename:") = Void, NSString;
override selector("setFill") = Void;
override selector("setFillColor:") = Void, NSColor;
override selector("setFillMode:") = Void, NSString;
override selector("setFilterPredicate:") = Void, NSPredicate;
override selector("setFilters:") = Void, NSArray;
override selector("setFireDate:") = Void, NSDate;
override selector("setFirstLineHeadIndent:") = Void, Double;
override selector("setFirstWeekday:") = Void, CULong;
override selector("setFixedFontFamily:") = Void, NSString;
override selector("setFlatness:") = Void, Double;
override selector("setFlipped:") = Void, Bool;
override selector("setFloat:forKey:") = Void, Float, NSString;
override selector("setFloatValue:") = Void, Float;
override selector("setFloatValue::") = Void, UShort, Float;
override selector("setFloatValue:floatValue:") = Void, UShort, Float;
override selector("setFloatValue:knobProportion:") = Void, Float, Double;
override selector("setFloatingPanel:") = Void, Bool;
override selector("setFloatingPointFormat:left:right:") = Void, Bool, CULong, CULong;
override selector("setFocusRingType:") = Void, CULong;
override selector("setFocusedColumn:") = Void, CLong;
override selector("setFont:") = Void, NSString;
override selector("setFont:range:") = Void, NSFont, NSRange;
override selector("setFontFamily:") = Void, NSString;
override selector("setFontManagerFactory:") = Void, Id;
override selector("setFontMenu:") = Void, NSMenu;
override selector("setFontPanelFactory:") = Void, Id;
override selector("setFontSize:") = Void, NSString;
override selector("setFontSizeAdjust:") = Void, NSString;
override selector("setFontStretch:") = Void, NSString;
override selector("setFontStyle:") = Void, NSString;
override selector("setFontVariant:") = Void, NSString;
override selector("setFontWeight:") = Void, NSString;
override selector("setForegroundColor:") = Void, NSColor;
override selector("setFormat:") = Void, NSString;
override selector("setFormatWidth:") = Void, CULong;
override selector("setFormatter:") = Void, NSFormatter;
override selector("setFormatterBehavior:") = Void, CULong;
override selector("setFormattingDictionary:") = Void, NSDictionary;
override selector("setFormattingStringsFilename:") = Void, NSString;
override selector("setFrame:") = Void, NSRect;
override selector("setFrame:display:") = Void, NSRect, Bool;
override selector("setFrame:display:animate:") = Void, NSRect, Bool, Bool;
override selector("setFrameAutosaveName:") = Bool, NSString;
override selector("setFrameBorder:") = Void, NSString;
override selector("setFrameBorders:") = Void, NSString;
override selector("setFrameCenterRotation:") = Void, Double;
override selector("setFrameFromContentFrame:") = Void, NSRect;
override selector("setFrameFromString:") = Void, NSString;
override selector("setFrameLoadDelegate:") = Void, Id;
override selector("setFrameOrigin:") = Void, NSPoint;
override selector("setFrameRate:") = Void, Float;
override selector("setFrameRotation:") = Void, Double;
override selector("setFrameSize:") = Void, NSSize;
override selector("setFrameTopLeftPoint:") = Void, NSPoint;
override selector("setFrameUsingName:") = Bool, NSString;
override selector("setFrameUsingName:force:") = Bool, NSString, Bool;
override selector("setFullScreen") = Void;
override selector("setGeneratesCalendarDates:") = Void, Bool;
override selector("setGeneratesDecimalNumbers:") = Void, Bool;
override selector("setGeometryFlipped:") = Void, Bool;
override selector("setGlyphGenerator:") = Void, NSGlyphGenerator;
override selector("setGradientType:") = Void, CULong;
override selector("setGrammarCheckingEnabled:") = Void, Bool;
override selector("setGraphicsState:") = Void, CLong;
override selector("setGregorianStartDate:") = Void, NSDate;
override selector("setGridColor:") = Void, NSColor;
override selector("setGridStyleMask:") = Void, CULong;
override selector("setGroupName:") = Void, NSString;
override selector("setGroupingAttributes:") = Void, NSArray;
override selector("setGroupingSeparator:") = Void, NSString;
override selector("setGroupingSize:") = Void, CULong;
override selector("setGroupsByEvent:") = Void, Bool;
override selector("setHTTPBody:") = Void, NSData;
override selector("setHTTPBodyStream:") = Void, NSInputStream;
override selector("setHTTPMethod:") = Void, NSString;
override selector("setHTTPShouldHandleCookies:") = Void, Bool;
override selector("setHardInvalidation:forGlyphRange:") = Void, Bool, NSRange;
override selector("setHasHorizontalRuler:") = Void, Bool;
override selector("setHasHorizontalScroller:") = Void, Bool;
override selector("setHasShadow:") = Void, Bool;
override selector("setHasThousandSeparators:") = Void, Bool;
override selector("setHasUndoManager:") = Void, Bool;
override selector("setHasVerticalRuler:") = Void, Bool;
override selector("setHasVerticalScroller:") = Void, Bool;
override selector("setHashFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[CULong]];
override selector("setHeadIndent:") = Void, Double;
override selector("setHeaderCell:") = Void, NSCell;
override selector("setHeaderLevel:") = Void, CLong;
override selector("setHeaderToolTip:") = Void, NSString;
override selector("setHeaderView:") = Void, NSTableHeaderView;
override selector("setHeaders:") = Void, NSString;
override selector("setHeight:") = Void, NSString;
override selector("setHeightTracksTextView:") = Void, Bool;
override selector("setHelpAnchor:") = Void, NSString;
override selector("setHelpMenu:") = Void, NSMenu;
override selector("setHidden:") = Void, Bool;
override selector("setHiddenUntilMouseMoves:") = Void, Bool;
override selector("setHidesEmptyCells:") = Void, Bool;
override selector("setHidesOnDeactivate:") = Void, Bool;
override selector("setHighlightMode:") = Void, Bool;
override selector("setHighlighted:") = Void, Bool;
override selector("setHighlightedTableColumn:") = Void, NSTableColumn;
override selector("setHighlightsBy:") = Void, CLong;
override selector("setHistoryAgeInDaysLimit:") = Void, Int;
override selector("setHistoryItemLimit:") = Void, Int;
override selector("setHorizontalLineScroll:") = Void, Double;
override selector("setHorizontalPageScroll:") = Void, Double;
override selector("setHorizontalPagination:") = Void, CULong;
override selector("setHorizontalRulerView:") = Void, NSRulerView;
override selector("setHorizontalScroller:") = Void, NSScroller;
override selector("setHorizontallyCentered:") = Void, Bool;
override selector("setHorizontallyResizable:") = Void, Bool;
override selector("setHostCacheEnabled:") = Void, Bool;
override selector("setHostWindow:") = Void, NSWindow;
override selector("setHour:") = Void, CLong;
override selector("setHref:") = Void, NSString;
override selector("setHreflang:") = Void, NSString;
override selector("setHspace:") = Void, Int;
override selector("setHtmlFor:") = Void, NSString;
override selector("setHttpEquiv:") = Void, NSString;
override selector("setHyphenationFactor:") = Void, Float;
override selector("setIcon:") = Void, NSImage;
override selector("setIcon:forFile:options:") = Bool, NSImage, NSString, CULong;
override selector("setIdName:") = Void, NSString;
override selector("setIdentifier:") = Void, Id;
override selector("setIgnoredWords:inSpellDocumentWithTag:") = Void, NSArray, CLong;
override selector("setIgnoresAlpha:") = Void, Bool;
override selector("setIgnoresMouseEvents:") = Void, Bool;
override selector("setIgnoresMultiClick:") = Void, Bool;
override selector("setImage:") = Void, NSImage;
override selector("setImage:forSegment:") = Void, NSImage, CLong;
override selector("setImageAlignment:") = Void, CULong;
override selector("setImageDimsWhenDisabled:") = Void, Bool;
override selector("setImageFrameStyle:") = Void, CULong;
override selector("setImageInterpolation:") = Void, CULong;
override selector("setImageOrigin:") = Void, NSPoint;
override selector("setImagePosition:") = Void, CULong;
override selector("setImageScaling:") = Void, CULong;
override selector("setImageScaling:forSegment:") = Void, CULong, CLong;
override selector("setImportsGraphics:") = Void, Bool;
override selector("setInContext:") = Void, NSGraphicsContext;
override selector("setIncludedKeys:") = Void, NSArray;
override selector("setIncludesPendingChanges:") = Void, Bool;
override selector("setIncludesPropertyValues:") = Void, Bool;
override selector("setIncludesSubentities:") = Void, Bool;
override selector("setIncrement:") = Void, Double;
override selector("setIndentationLevel:") = Void, CLong;
override selector("setIndentationMarkerFollowsCell:") = Void, Bool;
override selector("setIndentationPerLevel:") = Void, Double;
override selector("setIndependentConversationQueueing:") = Void, Bool;
override selector("setIndeterminate:") = Void, Bool;
override selector("setIndex:") = Void, CLong;
override selector("setIndexed:") = Void, Bool;
override selector("setIndexedBySpotlight:") = Void, Bool;
override selector("setIndicatorImage:inTableColumn:") = Void, NSImage, NSTableColumn;
override selector("setInformativeText:") = Void, NSString;
override selector("setInitialFirstResponder:") = Void, NSView;
override selector("setInitialKey:") = Void, NSString;
override selector("setInitialValue:") = Void, Id;
override selector("setInitialValues:") = Void, NSDictionary;
override selector("setInnerHTML:") = Void, NSString;
override selector("setInnerText:") = Void, NSString;
override selector("setInsertionClassDescription:") = Void, NSScriptClassDescription;
override selector("setInsertionPointColor:") = Void, NSColor;
override selector("setIntAttribute:value:forGlyphAtIndex:") = Void, CLong, CLong, CULong;
override selector("setIntValue:") = Void, Int;
override selector("setInteger:forKey:") = Void, CLong, NSString;
override selector("setIntegerValue:") = Void, CLong;
override selector("setIntercellSpacing:") = Void, NSSize;
override selector("setInterfaceStyle:") = Void, CULong;
override selector("setInterlineSpacing:") = Void, Double;
override selector("setInternationalCurrencySymbol:") = Void, NSString;
override selector("setInverseRelationship:") = Void, NSRelationshipDescription;
override selector("setIsEqualFunction:") = Void, CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[CULong]]],[CChar]];
override selector("setIsMap:") = Void, Bool;
override selector("setIsMiniaturized:") = Void, Bool;
override selector("setIsPaneSplitter:") = Void, Bool;
override selector("setIsVisible:") = Void, Bool;
override selector("setIsZoomed:") = Void, Bool;
override selector("setItemHeight:") = Void, Double;
override selector("setItemPrototype:") = Void, NSCollectionViewItem;
override selector("setJavaEnabled:") = Void, Bool;
override selector("setJavaScriptCanOpenWindowsAutomatically:") = Void, Bool;
override selector("setJavaScriptEnabled:") = Void, Bool;
override selector("setJobDisposition:") = Void, NSString;
override selector("setJobStyleHint:") = Void, NSString;
override selector("setJobTitle:") = Void, NSString;
override selector("setKey:") = Void, NSString;
override selector("setKeyCell:") = Void, NSCell;
override selector("setKeyEquivalent:") = Void, NSString;
override selector("setKeyEquivalentFont:") = Void, NSFont;
override selector("setKeyEquivalentFont:size:") = Void, NSString, Double;
override selector("setKeyEquivalentModifierMask:") = Void, CULong;
override selector("setKeyboardFocusRingNeedsDisplayInRect:") = Void, NSRect;
override selector("setKeys:triggerChangeNotificationsForDependentKey:") = Void, NSArray, NSString;
override selector("setKnobProportion:") = Void, Double;
override selector("setKnobThickness:") = Void, Double;
override selector("setLabel:") = Void, NSString;
override selector("setLabel:forSegment:") = Void, NSString, CLong;
override selector("setLang:") = Void, NSString;
override selector("setLanguage:") = Bool, NSString;
override selector("setLastColumn:") = Void, CLong;
override selector("setLastComponentOfFileName:") = Void, NSString;
override selector("setLaunchPath:") = Void, NSString;
override selector("setLayer:") = Void, CALayer;
override selector("setLayerContentsPlacement:") = Void, CLong;
override selector("setLayerContentsRedrawPolicy:") = Void, CLong;
override selector("setLayoutAlgorithm:") = Void, CULong;
override selector("setLayoutManager:") = Void, NSLayoutManager;
override selector("setLayoutRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
override selector("setLeadingOffset:") = Void, Double;
override selector("setLeaf:") = Void, Bool;
override selector("setLeafKeyPath:") = Void, NSString;
override selector("setLeft:") = Void, NSString;
override selector("setLeftMargin:") = Void, Double;
override selector("setLength:") = Void, CULong;
override selector("setLenient:") = Void, Bool;
override selector("setLetterSpacing:") = Void, NSString;
override selector("setLevel:") = Void, CLong;
override selector("setLevelIndicatorStyle:") = Void, CULong;
override selector("setLevelsOfUndo:") = Void, CULong;
override selector("setLineBreakMode:") = Void, CULong;
override selector("setLineCapStyle:") = Void, CULong;
override selector("setLineDash:count:phase:") = Void, Pointer[Double], CLong, Double;
override selector("setLineFragmentPadding:") = Void, Double;
override selector("setLineFragmentRect:forGlyphRange:usedRect:") = Void, NSRect, NSRange, NSRect;
override selector("setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRect, NSRange, NSRect, Double;
override selector("setLineHeight:") = Void, NSString;
override selector("setLineHeightMultiple:") = Void, Double;
override selector("setLineJoinStyle:") = Void, CULong;
override selector("setLineScroll:") = Void, Double;
override selector("setLineSpacing:") = Void, Double;
override selector("setLineWidth:") = Void, Double;
override selector("setLink:") = Void, NSString;
override selector("setLinkColor:") = Void, NSString;
override selector("setLinkTextAttributes:") = Void, NSDictionary;
override selector("setListStyle:") = Void, NSString;
override selector("setListStyleImage:") = Void, NSString;
override selector("setListStylePosition:") = Void, NSString;
override selector("setListStyleType:") = Void, NSString;
override selector("setListensInForegroundOnly:") = Void, Bool;
override selector("setLoaded:") = Void, Bool;
override selector("setLoadsImagesAutomatically:") = Void, Bool;
override selector("setLocale:") = Void, NSLocale;
override selector("setLocalizationDictionary:") = Void, NSDictionary;
override selector("setLocalizedKey:") = Void, NSString;
override selector("setLocalizedKeyDictionary:") = Void, NSDictionary;
override selector("setLocalizedKeyTable:") = Void, NSString;
override selector("setLocalizesFormat:") = Void, Bool;
override selector("setLocation:") = Void, NSString;
override selector("setLocation:forStartOfGlyphRange:") = Void, NSPoint, NSRange;
override selector("setLocation:withAdvancements:forStartOfGlyphRange:") = Void, NSPoint, Pointer[Double], NSRange;
override selector("setLocations:startingGlyphIndexes:count:forGlyphRange:") = Void, NSPointArray, Pointer[CULong], CULong, NSRange;
override selector("setLongDesc:") = Void, NSString;
override selector("setLongEraSymbols:") = Void, NSArray;
override selector("setLoops:") = Void, Bool;
override selector("setLowsrc:") = Void, NSString;
override selector("setMIMEType:") = Void, NSString;
override selector("setMIMETypesShownAsHTML:") = Void, NSArray;
override selector("setMagnificationFilter:") = Void, NSString;
override selector("setMainDocumentURL:") = Void, NSURL;
override selector("setMainFrameURL:") = Void, NSString;
override selector("setMainMenu:") = Void, NSMenu;
override selector("setMaintainsBackForwardList:") = Void, Bool;
override selector("setManagedObjectClassName:") = Void, NSString;
override selector("setManagedObjectContext:") = Void, NSManagedObjectContext;
override selector("setMappingType:") = Void, CULong;
override selector("setMargin:") = Void, NSString;
override selector("setMarginBottom:") = Void, NSString;
override selector("setMarginHeight:") = Void, NSString;
override selector("setMarginLeft:") = Void, NSString;
override selector("setMarginRight:") = Void, NSString;
override selector("setMarginTop:") = Void, NSString;
override selector("setMarginWidth:") = Void, NSString;
override selector("setMark:") = Void, Id;
override selector("setMarkedText:selectedRange:") = Void, Id, NSRange;
override selector("setMarkedText:selectedRange:replacementRange:") = Void, Id, NSRange, NSRange;
override selector("setMarkedTextAttributes:") = Void, NSDictionary;
override selector("setMarkerLocation:") = Void, Double;
override selector("setMarkerOffset:") = Void, NSString;
override selector("setMarkers:") = Void, NSArray;
override selector("setMarks:") = Void, NSString;
override selector("setMask:") = Void, CALayer;
override selector("setMasksToBounds:") = Void, Bool;
override selector("setMatchesOnMultipleResolution:") = Void, Bool;
override selector("setMatrixClass:") = Void, Id;
override selector("setMaxConcurrentOperationCount:") = Void, CLong;
override selector("setMaxContentSize:") = Void, NSSize;
override selector("setMaxCount:") = Void, CULong;
override selector("setMaxDate:") = Void, NSDate;
override selector("setMaxHeight:") = Void, NSString;
override selector("setMaxItemSize:") = Void, NSSize;
override selector("setMaxLength:") = Void, Int;
override selector("setMaxNumberOfColumns:") = Void, CULong;
override selector("setMaxNumberOfRows:") = Void, CULong;
override selector("setMaxSize:") = Void, NSSize;
override selector("setMaxValue:") = Void, Double;
override selector("setMaxVisibleColumns:") = Void, CLong;
override selector("setMaxWidth:") = Void, NSString;
override selector("setMaximum:") = Void, NSNumber;
override selector("setMaximumFractionDigits:") = Void, CULong;
override selector("setMaximumIntegerDigits:") = Void, CULong;
override selector("setMaximumLineHeight:") = Void, Double;
override selector("setMaximumRecents:") = Void, CLong;
override selector("setMaximumSignificantDigits:") = Void, CULong;
override selector("setMeasurementUnits:") = Void, NSString;
override selector("setMedia:") = Void, NSString;
override selector("setMediaStyle:") = Void, NSString;
override selector("setMediaText:") = Void, NSString;
override selector("setMemoryCapacity:") = Void, CULong;
override selector("setMenu:") = Void, NSMenu;
override selector("setMenu:forSegment:") = Void, NSMenu, CLong;
override selector("setMenuBarVisible:") = Void, Bool;
override selector("setMenuChangedMessagesEnabled:") = Void, Bool;
override selector("setMenuFormRepresentation:") = Void, NSMenuItem;
override selector("setMenuItem:") = Void, NSMenuItem;
override selector("setMenuRepresentation:") = Void, Id;
override selector("setMenuZone:") = Void, Pointer[NSZone];
override selector("setMergePolicy:") = Void, Id;
override selector("setMessage:") = Void, NSString;
override selector("setMessageText:") = Void, NSString;
override selector("setMetadata:") = Void, NSDictionary;
override selector("setMetadata:forPersistentStore:") = Void, NSDictionary, NSPersistentStore;
override selector("setMetadata:forPersistentStoreOfType:URL:error:") = Bool, NSDictionary, NSString, NSURL, Pointer[NSError];
override selector("setMetadata:forPersistentStoreWithURL:error:") = Bool, NSDictionary, NSURL, Pointer[NSError];
override selector("setMethod:") = Void, NSString;
override selector("setMinColumnWidth:") = Void, Double;
override selector("setMinContentSize:") = Void, NSSize;
override selector("setMinCount:") = Void, CULong;
override selector("setMinDate:") = Void, NSDate;
override selector("setMinHeight:") = Void, NSString;
override selector("setMinItemSize:") = Void, NSSize;
override selector("setMinSize:") = Void, NSSize;
override selector("setMinValue:") = Void, Double;
override selector("setMinWidth:") = Void, NSString;
override selector("setMinificationFilter:") = Void, NSString;
override selector("setMinificationFilterBias:") = Void, Float;
override selector("setMinimum:") = Void, NSNumber;
override selector("setMinimumDaysInFirstWeek:") = Void, CULong;
override selector("setMinimumFontSize:") = Void, Int;
override selector("setMinimumFractionDigits:") = Void, CULong;
override selector("setMinimumIntegerDigits:") = Void, CULong;
override selector("setMinimumLineHeight:") = Void, Double;
override selector("setMinimumLogicalFontSize:") = Void, Int;
override selector("setMinimumSignificantDigits:") = Void, CULong;
override selector("setMinimumWidth:") = Void, Double;
override selector("setMiniwindowImage:") = Void, NSImage;
override selector("setMiniwindowTitle:") = Void, NSString;
override selector("setMinusSign:") = Void, NSString;
override selector("setMinute:") = Void, CLong;
override selector("setMiterLimit:") = Void, Double;
override selector("setMixedStateImage:") = Void, NSImage;
override selector("setMnemonicLocation:") = Void, CULong;
override selector("setMode:") = Void, CULong;
override selector("setMonth:") = Void, CLong;
override selector("setMonthSymbols:") = Void, NSArray;
override selector("setMouseCoalescingEnabled:") = Void, Bool;
override selector("setMovable:") = Void, Bool;
override selector("setMovableByWindowBackground:") = Void, Bool;
override selector("setMsgid:") = Void, UInt;
override selector("setMultiple:") = Void, Bool;
override selector("setMultiplier:") = Void, NSNumber;
override selector("setName:") = Bool, NSString;
override selector("setNameFieldLabel:") = Void, NSString;
override selector("setNameFieldStringValue:") = Void, NSString;
override selector("setNamedItem:") = DOMNode, DOMNode;
override selector("setNamedItemNS:") = DOMNode, DOMNode;
override selector("setNamespaces:") = Void, NSArray;
override selector("setNeedsDisplay") = Void;
override selector("setNeedsDisplay:") = Void, Bool;
override selector("setNeedsDisplayInRect:") = Void, NSRect;
override selector("setNeedsDisplayInRect:avoidAdditionalLayout:") = Void, NSRect, Bool;
override selector("setNeedsDisplayOnBoundsChange:") = Void, Bool;
override selector("setNeedsLayout") = Void;
override selector("setNeedsLayout:") = Void, Bool;
override selector("setNeedsSizing:") = Void, Bool;
override selector("setNegativeFormat:") = Void, NSString;
override selector("setNegativeInfinitySymbol:") = Void, NSString;
override selector("setNegativePrefix:") = Void, NSString;
override selector("setNegativeSuffix:") = Void, NSString;
override selector("setNestingMode:") = Void, CULong;
override selector("setNextKeyView:") = Void, NSView;
override selector("setNextResponder:") = Void, NSResponder;
override selector("setNextState") = Void;
override selector("setNilSymbol:") = Void, NSString;
override selector("setNilValueForKey:") = Void, NSString;
override selector("setNoHref:") = Void, Bool;
override selector("setNoResize:") = Void, Bool;
override selector("setNoShade:") = Void, Bool;
override selector("setNoWrap:") = Void, Bool;
override selector("setNodeValue:") = Void, NSString;
override selector("setNotANumberSymbol:") = Void, NSString;
override selector("setNotShownAttribute:forGlyphAtIndex:") = Void, Bool, CULong;
override selector("setNotShownAttribute:forGlyphRange:") = Void, Bool, NSRange;
override selector("setNotationName:") = Void, NSString;
override selector("setNotificationBatchingInterval:") = Void, Double;
override selector("setNumberOfColumns:") = Void, CULong;
override selector("setNumberOfMajorTickMarks:") = Void, CLong;
override selector("setNumberOfTickMarks:") = Void, CLong;
override selector("setNumberOfVisibleItems:") = Void, CLong;
override selector("setNumberStyle:") = Void, CULong;
override selector("setObject:") = Void, NSString;
override selector("setObject:forKey:") = Void, Id, Id;
override selector("setObject:forKey:cost:") = Void, Id, Id, CULong;
override selector("setObject:forProperty:error:") = Bool, Id, NSString, Pointer[NSError];
override selector("setObjectBeingTested:") = Void, Id;
override selector("setObjectClass:") = Void, Id;
override selector("setObjectValue:") = Void, Id;
override selector("setObjectZone:") = Void, Pointer[NSZone];
override selector("setObservationInfo:") = Void, RawPointer;
override selector("setOffScreen:width:height:rowbytes:") = Void, RawPointer, Int, Int, Int;
override selector("setOffStateImage:") = Void, NSImage;
override selector("setOnMouseEntered:") = Void, Bool;
override selector("setOnMouseExited:") = Void, Bool;
override selector("setOnStateImage:") = Void, NSImage;
override selector("setOneShot:") = Void, Bool;
override selector("setOpacity:") = Void, Float;
override selector("setOpaque:") = Void, Bool;
override selector("setOpenGLContext:") = Void, NSOpenGLContext;
override selector("setOpenGLPixelFormat:") = Void, NSOpenGLPixelFormat;
override selector("setOptional:") = Void, Bool;
override selector("setOptionalSharedHistory:") = Void, WebHistory;
override selector("setOptions:") = Void, CLong;
override selector("setOrderedIndex:") = Void, CLong;
override selector("setOrientation:") = Void, CULong;
override selector("setOriginOffset:") = Void, Double;
override selector("setOrphans:") = Void, NSString;
override selector("setOuterHTML:") = Void, NSString;
override selector("setOuterText:") = Void, NSString;
override selector("setOutline:") = Void, NSString;
override selector("setOutlineColor:") = Void, NSString;
override selector("setOutlineStyle:") = Void, NSString;
override selector("setOutlineTableColumn:") = Void, NSTableColumn;
override selector("setOutlineWidth:") = Void, NSString;
override selector("setOutputFormat:") = Void, CULong;
override selector("setOverflow:") = Void, NSString;
override selector("setPMSymbol:") = Void, NSString;
override selector("setPadding:") = Void, NSString;
override selector("setPaddingBottom:") = Void, NSString;
override selector("setPaddingCharacter:") = Void, NSString;
override selector("setPaddingLeft:") = Void, NSString;
override selector("setPaddingPosition:") = Void, CULong;
override selector("setPaddingRight:") = Void, NSString;
override selector("setPaddingTop:") = Void, NSString;
override selector("setPage:") = Void, NSString;
override selector("setPageBreakAfter:") = Void, NSString;
override selector("setPageBreakBefore:") = Void, NSString;
override selector("setPageBreakInside:") = Void, NSString;
override selector("setPageCacheSize:") = Void, CULong;
override selector("setPageOrder:") = Void, CLong;
override selector("setPageScroll:") = Void, Double;
override selector("setPaletteLabel:") = Void, NSString;
override selector("setPanelFont:isMultiple:") = Void, NSFont, Bool;
override selector("setPaperName:") = Void, NSString;
override selector("setPaperSize:") = Void, NSSize;
override selector("setParagraphGlyphRange:separatorGlyphRange:") = Void, NSRange, NSRange;
override selector("setParagraphSpacing:") = Void, Double;
override selector("setParagraphSpacingBefore:") = Void, Double;
override selector("setParagraphStyle:") = Void, NSParagraphStyle;
override selector("setParagraphs:") = Void, NSArray;
override selector("setParamDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
override selector("setParentWindow:") = Void, NSWindow;
override selector("setPartialStringValidationEnabled:") = Void, Bool;
override selector("setPath:") = Bool, NSString;
override selector("setPathComponentCells:") = Void, NSArray;
override selector("setPathSeparator:") = Void, NSString;
override selector("setPathStyle:") = Void, CLong;
override selector("setPatternPhase:") = Void, NSPoint;
override selector("setPause:") = Void, NSString;
override selector("setPauseAfter:") = Void, NSString;
override selector("setPauseBefore:") = Void, NSString;
override selector("setPerMillSymbol:") = Void, NSString;
override selector("setPercentSymbol:") = Void, NSString;
override selector("setPeriodicDelay:interval:") = Void, Float, Float;
override selector("setPersistentDomain:forName:") = Void, NSDictionary, NSString;
override selector("setPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
override selector("setPickerMask:") = Void, CULong;
override selector("setPickerMode:") = Void, CLong;
override selector("setPitch:") = Void, NSString;
override selector("setPitchRange:") = Void, NSString;
override selector("setPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
override selector("setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:") = Void, NSOpenGLPixelBuffer, UInt, Int, Int;
override selector("setPixelFormat:") = Void, NSOpenGLPixelFormat;
override selector("setPixelsHigh:") = Void, CLong;
override selector("setPixelsWide:") = Void, CLong;
override selector("setPlaceholderAttributedString:") = Void, NSAttributedString;
override selector("setPlaceholderString:") = Void, NSString;
override selector("setPlayDuring:") = Void, NSString;
override selector("setPlaybackDeviceIdentifier:") = Void, NSString;
override selector("setPlugInsEnabled:") = Void, Bool;
override selector("setPlusSign:") = Void, NSString;
override selector("setPolicyDelegate:") = Void, Id;
override selector("setPosition:") = Void, NSString;
override selector("setPosition:ofDividerAtIndex:") = Void, Double, CLong;
override selector("setPositiveFormat:") = Void, NSString;
override selector("setPositiveInfinitySymbol:") = Void, NSString;
override selector("setPositivePrefix:") = Void, NSString;
override selector("setPositiveSuffix:") = Void, NSString;
override selector("setPostsBoundsChangedNotifications:") = Void, Bool;
override selector("setPostsFrameChangedNotifications:") = Void, Bool;
override selector("setPredicate:") = Void, NSPredicate;
override selector("setPreferences:") = Void, WebPreferences;
override selector("setPreferencesIdentifier:") = Void, NSString;
override selector("setPreferredBackingLocation:") = Void, CULong;
override selector("setPreferredEdge:") = Void, CULong;
override selector("setPreferredFilename:") = Void, NSString;
override selector("setPrefersAllColumnUserResizing:") = Void, Bool;
override selector("setPrefersColorMatch:") = Void, Bool;
override selector("setPrefix:") = Void, NSString;
override selector("setPresentationOptions:") = Void, CULong;
override selector("setPreservesContentDuringLiveResize:") = Void, Bool;
override selector("setPreservesSelection:") = Void, Bool;
override selector("setPreventsApplicationTerminationWhenModal:") = Void, Bool;
override selector("setPrimitiveValue:forKey:") = Void, Id, NSString;
override selector("setPrintInfo:") = Void, NSPrintInfo;
override selector("setPrintPanel:") = Void, NSPrintPanel;
override selector("setPrinter:") = Void, NSPrinter;
override selector("setPrivateBrowsingEnabled:") = Void, Bool;
override selector("setProcessName:") = Void, NSString;
override selector("setProfile:") = Void, NSString;
override selector("setProgressMarks:") = Void, NSArray;
override selector("setPrompt:") = Void, NSString;
override selector("setPropagatesDeletesAtEndOfEvent:") = Void, Bool;
override selector("setProperties:") = Void, NSArray;
override selector("setPropertiesToFetch:") = Void, NSArray;
override selector("setProperty:::") = Void, NSString, NSString, NSString;
override selector("setProperty:forKey:") = Bool, Id, NSString;
override selector("setProperty:forKey:inRequest:") = Void, Id, NSString, NSMutableURLRequest;
override selector("setProperty:value:priority:") = Void, NSString, NSString, NSString;
override selector("setProperty:withValue:") = Void, NSString, Id;
override selector("setPropertyCache:") = Void, NSMutableDictionary;
override selector("setPropertyList:forType:") = Bool, Id, NSString;
override selector("setProtocolForProxy:") = Void, Id;
override selector("setProtocolSpecificInformation:") = Void, NSString;
override selector("setPrototype:") = Void, NSCell;
override selector("setPublicID:") = Void, NSString;
override selector("setPullsDown:") = Void, Bool;
override selector("setQuarter:") = Void, CLong;
override selector("setQuarterSymbols:") = Void, NSArray;
override selector("setQueuePriority:") = Void, CLong;
override selector("setQuotes:") = Void, NSString;
override selector("setRangeContainerObject:") = Void, Id;
override selector("setRate:") = Void, Float;
override selector("setReadOnly:") = Void, Bool;
override selector("setReceiversSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setRecentSearches:") = Void, NSArray;
override selector("setRecentsAutosaveName:") = Void, NSString;
override selector("setRefusesFirstResponder:") = Void, Bool;
override selector("setRel:") = Void, NSString;
override selector("setRelationshipKeyPathsForPrefetching:") = Void, NSArray;
override selector("setRelationshipMappings:") = Void, NSArray;
override selector("setRelativePosition:") = Void, CULong;
override selector("setReleasedWhenClosed:") = Void, Bool;
override selector("setRelinquishFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[]];
override selector("setRemovable:") = Void, Bool;
override selector("setRenamingIdentifier:") = Void, NSString;
override selector("setRepeatCount:") = Void, Float;
override selector("setRepeatDuration:") = Void, Double;
override selector("setReplyTimeout:") = Void, Double;
override selector("setRepresentation") = NSSet;
override selector("setRepresentedFilename:") = Void, NSString;
override selector("setRepresentedObject:") = Void, Id;
override selector("setRepresentedURL:") = Void, NSURL;
override selector("setRequestTimeout:") = Void, Double;
override selector("setRequiredFileType:") = Void, NSString;
override selector("setReservedThicknessForAccessoryView:") = Void, Double;
override selector("setReservedThicknessForMarkers:") = Void, Double;
override selector("setResizable:") = Void, Bool;
override selector("setResizeIncrements:") = Void, NSSize;
override selector("setResizingMask:") = Void, CULong;
override selector("setResolvesAliases:") = Void, Bool;
override selector("setResourceData:") = Bool, NSData;
override selector("setResourceLoadDelegate:") = Void, Id;
override selector("setResourceValue:forKey:error:") = Bool, Id, NSString, Pointer[NSError];
override selector("setResourceValues:error:") = Bool, NSDictionary, Pointer[NSError];
override selector("setResultType:") = Void, CULong;
override selector("setRetainsRegisteredObjects:") = Void, Bool;
override selector("setReturnValue:") = Void, RawPointer;
override selector("setReturnsDistinctResults:") = Void, Bool;
override selector("setReturnsObjectsAsFaults:") = Void, Bool;
override selector("setReusesColumns:") = Void, Bool;
override selector("setRev:") = Void, NSString;
override selector("setRichText:") = Void, Bool;
override selector("setRichness:") = Void, NSString;
override selector("setRight:") = Void, NSString;
override selector("setRightMargin:") = Void, Double;
override selector("setRootElement:") = Void, NSXMLNode;
override selector("setRootObject:") = Void, Id;
override selector("setRoundingBehavior:") = Void, NSDecimalNumberHandler;
override selector("setRoundingIncrement:") = Void, NSNumber;
override selector("setRoundingMode:") = Void, CULong;
override selector("setRowClass:") = Void, Id;
override selector("setRowHeight:") = Void, Double;
override selector("setRowSpan:") = Void, Int;
override selector("setRowTemplates:") = Void, NSArray;
override selector("setRowTypeKeyPath:") = Void, NSString;
override selector("setRows:") = Void, NSString;
override selector("setRuleThickness:") = Void, Double;
override selector("setRulerViewClass:") = Void, Id;
override selector("setRulerVisible:") = Void, Bool;
override selector("setRulersVisible:") = Void, Bool;
override selector("setRules:") = Void, NSString;
override selector("setRunLoopModes:") = Void, NSArray;
override selector("setSansSerifFontFamily:") = Void, NSString;
override selector("setScalesWhenResized:") = Void, Bool;
override selector("setScalingFactor:") = Void, Double;
override selector("setScanLocation:") = Void, CULong;
override selector("setScheme:") = Void, NSString;
override selector("setScope:") = Void, NSString;
override selector("setScriptErrorExpectedTypeDescriptor:") = Void, NSAppleEventDescriptor;
override selector("setScriptErrorNumber:") = Void, Int;
override selector("setScriptErrorOffendingObjectDescriptor:") = Void, NSAppleEventDescriptor;
override selector("setScriptErrorString:") = Void, NSString;
override selector("setScriptingProperties:") = Void, NSDictionary;
override selector("setScrollLeft:") = Void, Int;
override selector("setScrollTop:") = Void, Int;
override selector("setScrollView:") = Void, NSScrollView;
override selector("setScrollable:") = Void, Bool;
override selector("setScrolling:") = Void, NSString;
override selector("setScrollsDynamically:") = Void, Bool;
override selector("setSearchButtonCell:") = Void, NSButtonCell;
override selector("setSearchMenuTemplate:") = Void, NSMenu;
override selector("setSearchScopes:") = Void, NSArray;
override selector("setSecond:") = Void, CLong;
override selector("setSecondaryGroupingSize:") = Void, CULong;
override selector("setSegmentCount:") = Void, CLong;
override selector("setSegmentStyle:") = Void, CLong;
override selector("setSelectable:") = Void, Bool;
override selector("setSelected:") = Void, Bool;
override selector("setSelected:forSegment:") = Void, Bool, CLong;
override selector("setSelectedAttributes:isMultiple:") = Void, NSDictionary, Bool;
override selector("setSelectedDOMRange:affinity:") = Void, DOMRange, CULong;
override selector("setSelectedFont:isMultiple:") = Void, NSFont, Bool;
override selector("setSelectedIndex:") = Void, Int;
override selector("setSelectedItemIdentifier:") = Void, NSString;
override selector("setSelectedKeyboardInputSource:") = Void, NSString;
override selector("setSelectedObjects:") = Bool, NSArray;
override selector("setSelectedRange:") = Void, NSRange;
override selector("setSelectedRange:affinity:stillSelecting:") = Void, NSRange, CULong, Bool;
override selector("setSelectedRanges:") = Void, NSArray;
override selector("setSelectedRanges:affinity:stillSelecting:") = Void, NSArray, CULong, Bool;
override selector("setSelectedSegment:") = Void, CLong;
override selector("setSelectedStylesheetSet:") = Void, NSString;
override selector("setSelectedTextAttributes:") = Void, NSDictionary;
override selector("setSelectionByRect:") = Void, Bool;
override selector("setSelectionEnd:") = Void, Int;
override selector("setSelectionFrom:to:anchor:highlight:") = Void, CLong, CLong, CLong, Bool;
override selector("setSelectionGranularity:") = Void, CULong;
override selector("setSelectionHighlightStyle:") = Void, CLong;
override selector("setSelectionIndex:") = Bool, CULong;
override selector("setSelectionIndexPath:") = Bool, NSIndexPath;
override selector("setSelectionIndexPaths:") = Bool, NSArray;
override selector("setSelectionIndexes:") = Bool, NSIndexSet;
override selector("setSelectionOnly:") = Void, Bool;
override selector("setSelectionRange:end:") = Void, Int, Int;
override selector("setSelectionStart:") = Void, Int;
override selector("setSelector:") = Void, SelectorHandle;
override selector("setSelectorText:") = Void, NSString;
override selector("setSelectsInsertedObjects:") = Void, Bool;
override selector("setSendsActionOnArrowKeys:") = Void, Bool;
override selector("setSendsActionOnEndEditing:") = Void, Bool;
override selector("setSendsSearchStringImmediately:") = Void, Bool;
override selector("setSendsWholeSearchString:") = Void, Bool;
override selector("setSeparatesColumns:") = Void, Bool;
override selector("setSerifFontFamily:") = Void, NSString;
override selector("setServicesMenu:") = Void, NSMenu;
override selector("setServicesProvider:") = Void, Id;
override selector("setSet:") = Void, NSSet;
override selector("setShadow:") = Void, NSShadow;
override selector("setShadowBlurRadius:") = Void, Double;
override selector("setShadowColor:") = Void, CGColorRef;
override selector("setShadowOffset:") = Void, CGSize;
override selector("setShadowOpacity:") = Void, Float;
override selector("setShadowRadius:") = Void, Double;
override selector("setShape:") = Void, NSString;
override selector("setSharedPrintInfo:") = Void, NSPrintInfo;
override selector("setSharedScriptSuiteRegistry:") = Void, NSScriptSuiteRegistry;
override selector("setSharedURLCache:") = Void, NSURLCache;
override selector("setSharingType:") = Void, CULong;
override selector("setShortMonthSymbols:") = Void, NSArray;
override selector("setShortQuarterSymbols:") = Void, NSArray;
override selector("setShortStandaloneMonthSymbols:") = Void, NSArray;
override selector("setShortStandaloneQuarterSymbols:") = Void, NSArray;
override selector("setShortStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setShortWeekdaySymbols:") = Void, NSArray;
override selector("setShouldAntialias:") = Void, Bool;
override selector("setShouldCascadeWindows:") = Void, Bool;
override selector("setShouldCloseDocument:") = Void, Bool;
override selector("setShouldCloseWithWindow:") = Void, Bool;
override selector("setShouldCreateUI:") = Void, Bool;
override selector("setShouldPrintBackgrounds:") = Void, Bool;
override selector("setShouldProcessNamespaces:") = Void, Bool;
override selector("setShouldReportNamespacePrefixes:") = Void, Bool;
override selector("setShouldResolveExternalEntities:") = Void, Bool;
override selector("setShouldUpdateWhileOffscreen:") = Void, Bool;
override selector("setShowPanels:") = Void, Bool;
override selector("setShowsAlpha:") = Void, Bool;
override selector("setShowsApplicationBadge:") = Void, Bool;
override selector("setShowsBaselineSeparator:") = Void, Bool;
override selector("setShowsBorderOnlyWhileMouseInside:") = Void, Bool;
override selector("setShowsControlCharacters:") = Void, Bool;
override selector("setShowsFirstResponder:") = Void, Bool;
override selector("setShowsHelp:") = Void, Bool;
override selector("setShowsHiddenFiles:") = Void, Bool;
override selector("setShowsInvisibleCharacters:") = Void, Bool;
override selector("setShowsPrintPanel:") = Void, Bool;
override selector("setShowsProgressPanel:") = Void, Bool;
override selector("setShowsResizeIndicator:") = Void, Bool;
override selector("setShowsStateBy:") = Void, CLong;
override selector("setShowsStateColumn:") = Void, Bool;
override selector("setShowsSuppressionButton:") = Void, Bool;
override selector("setShowsToolbarButton:") = Void, Bool;
override selector("setSize:") = Void, NSString;
override selector("setSizeFunction:") = Void, CCodePointer[[RawPointer],[CULong]];
override selector("setSizeMode:") = Void, CULong;
override selector("setSliderType:") = Void, CULong;
override selector("setSmartInsertDeleteEnabled:") = Void, Bool;
override selector("setSortDescriptorPrototype:") = Void, NSSortDescriptor;
override selector("setSortDescriptors:") = Void, NSArray;
override selector("setSound:") = Void, NSSound;
override selector("setSourceEntityName:") = Void, NSString;
override selector("setSourceEntityVersionHash:") = Void, NSData;
override selector("setSourceExpression:") = Void, NSExpression;
override selector("setSpan:") = Void, Int;
override selector("setSpeak:") = Void, NSString;
override selector("setSpeakHeader:") = Void, NSString;
override selector("setSpeakNumeral:") = Void, NSString;
override selector("setSpeakPunctuation:") = Void, NSString;
override selector("setSpeechRate:") = Void, NSString;
override selector("setSpeed:") = Void, Float;
override selector("setSpellingState:range:") = Void, CLong, NSRange;
override selector("setSrc:") = Void, NSString;
override selector("setStackSize:") = Void, CULong;
override selector("setStalenessInterval:") = Void, Double;
override selector("setStandalone:") = Void, Bool;
override selector("setStandaloneMonthSymbols:") = Void, NSArray;
override selector("setStandaloneQuarterSymbols:") = Void, NSArray;
override selector("setStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setStandardError:") = Void, Id;
override selector("setStandardFontFamily:") = Void, NSString;
override selector("setStandardInput:") = Void, Id;
override selector("setStandardOutput:") = Void, Id;
override selector("setStandby:") = Void, NSString;
override selector("setStart:") = Void, Int;
override selector("setStart::") = Void, DOMNode, Int;
override selector("setStart:offset:") = Void, DOMNode, Int;
override selector("setStartAfter:") = Void, DOMNode;
override selector("setStartBefore:") = Void, DOMNode;
override selector("setStartSpecifier:") = Void, NSScriptObjectSpecifier;
override selector("setStartSubelementIdentifier:") = Void, CULong;
override selector("setStartSubelementIndex:") = Void, CLong;
override selector("setStartingItemNumber:") = Void, CLong;
override selector("setState:") = Void, CLong;
override selector("setState:atRow:column:") = Void, CLong, CLong, CLong;
override selector("setStoredInExternalRecord:") = Void, Bool;
override selector("setStress:") = Void, NSString;
override selector("setString:") = Void, NSString;
override selector("setString:forType:") = Bool, NSString, NSString;
override selector("setStringValue:") = Void, NSString;
override selector("setStringValue::") = Void, UShort, NSString;
override selector("setStringValue:resolvingEntities:") = Void, NSString, Bool;
override selector("setStringValue:stringValue:") = Void, UShort, NSString;
override selector("setStroke") = Void;
override selector("setStyle:") = Void, CULong;
override selector("setStyleMask:") = Void, CULong;
override selector("setSubentities:") = Void, NSArray;
override selector("setSubitems:") = Void, NSArray;
override selector("setSublayerTransform:") = Void, CATransform3D;
override selector("setSublayers:") = Void, NSArray;
override selector("setSubmenu:") = Void, NSMenu;
override selector("setSubmenu:forItem:") = Void, NSMenu, NSMenuItem;
override selector("setSubrowsKeyPath:") = Void, NSString;
override selector("setSubstitutionsPanelAccessoryViewController:") = Void, NSViewController;
override selector("setSubviews:") = Void, NSArray;
override selector("setSummary:") = Void, NSString;
override selector("setSupermenu:") = Void, NSMenu;
override selector("setSuspended:") = Void, Bool;
override selector("setSystemID:") = Void, NSString;
override selector("setTFoot:") = Void, DOMHTMLTableSectionElement;
override selector("setTHead:") = Void, DOMHTMLTableSectionElement;
override selector("setTXTRecordData:") = Bool, NSData;
override selector("setTabIndex:") = Void, Int;
override selector("setTabKeyTraversesCells:") = Void, Bool;
override selector("setTabStops:") = Void, NSArray;
override selector("setTabViewType:") = Void, CULong;
override selector("setTableLayout:") = Void, NSString;
override selector("setTableView:") = Void, NSTableView;
override selector("setTabsToLinks:") = Void, Bool;
override selector("setTag:") = Void, CLong;
override selector("setTag:forSegment:") = Void, CLong, CLong;
override selector("setTailIndent:") = Void, Double;
override selector("setTakesTitleFromPreviousColumn:") = Void, Bool;
override selector("setTarget:") = Void, Id;
override selector("setTearOffMenuRepresentation:") = Void, Id;
override selector("setTemplate:") = Void, Bool;
override selector("setTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
override selector("setTest:") = Void, NSScriptWhoseTest;
override selector("setText:") = Void, NSString;
override selector("setTextAlign:") = Void, NSString;
override selector("setTextAlignment:") = Void, CULong;
override selector("setTextAttributesForNegativeInfinity:") = Void, NSDictionary;
override selector("setTextAttributesForNegativeValues:") = Void, NSDictionary;
override selector("setTextAttributesForNil:") = Void, NSDictionary;
override selector("setTextAttributesForNotANumber:") = Void, NSDictionary;
override selector("setTextAttributesForPositiveInfinity:") = Void, NSDictionary;
override selector("setTextAttributesForPositiveValues:") = Void, NSDictionary;
override selector("setTextAttributesForZero:") = Void, NSDictionary;
override selector("setTextBaseWritingDirection:") = Void, CLong;
override selector("setTextBlocks:") = Void, NSArray;
override selector("setTextColor:") = Void, NSColor;
override selector("setTextColor:range:") = Void, NSColor, NSRange;
override selector("setTextContainer:") = Void, NSTextContainer;
override selector("setTextContainer:forGlyphRange:") = Void, NSTextContainer, NSRange;
override selector("setTextContainerInset:") = Void, NSSize;
override selector("setTextContent:") = Void, NSString;
override selector("setTextDecoration:") = Void, NSString;
override selector("setTextFont:") = Void, NSFont;
override selector("setTextIndent:") = Void, NSString;
override selector("setTextLists:") = Void, NSArray;
override selector("setTextShadow:") = Void, NSString;
override selector("setTextSizeMultiplier:") = Void, Float;
override selector("setTextStorage:") = Void, NSTextStorage;
override selector("setTextTransform:") = Void, NSString;
override selector("setTextView:") = Void, NSTextView;
override selector("setTextureImageToPixelBuffer:colorBuffer:") = Void, NSOpenGLPixelBuffer, UInt;
override selector("setThousandSeparator:") = Void, NSString;
override selector("setThreadPriority:") = Bool, Double;
override selector("setTickMarkPosition:") = Void, CULong;
override selector("setTighteningFactorForTruncation:") = Void, Float;
override selector("setTimeInterval:") = Void, Double;
override selector("setTimeOffset:") = Void, Double;
override selector("setTimeStyle:") = Void, CULong;
override selector("setTimeZone:") = Void, NSTimeZone;
override selector("setTimeoutInterval:") = Void, Double;
override selector("setTitle:") = Void, NSString;
override selector("setTitle:ofColumn:") = Void, NSString, CLong;
override selector("setTitleAlignment:") = Void, CULong;
override selector("setTitleBaseWritingDirection:") = Void, CLong;
override selector("setTitleCell:") = Void, NSCell;
override selector("setTitleColor:") = Void, NSColor;
override selector("setTitleFont:") = Void, NSFont;
override selector("setTitlePosition:") = Void, CULong;
override selector("setTitleWidth:") = Void, Double;
override selector("setTitleWithMnemonic:") = Void, NSString;
override selector("setTitleWithRepresentedFilename:") = Void, NSString;
override selector("setTitled:") = Void, Bool;
override selector("setTokenStyle:") = Void, CULong;
override selector("setTokenizingCharacterSet:") = Void, NSCharacterSet;
override selector("setToolTip:") = Void, NSString;
override selector("setToolTip:forCell:") = Void, NSString, NSCell;
override selector("setToolTip:forSegment:") = Void, NSString, CLong;
override selector("setToolbar:") = Void, NSToolbar;
override selector("setTop:") = Void, NSString;
override selector("setTopLevelObject:") = Void, Id;
override selector("setTopMargin:") = Void, Double;
override selector("setTotalCostLimit:") = Void, CULong;
override selector("setTrackingMode:") = Void, CULong;
override selector("setTrailingOffset:") = Void, Double;
override selector("setTransform:") = Void, CATransform3D;
override selector("setTransformStruct:") = Void, NSAffineTransformStruct;
override selector("setTransient:") = Void, Bool;
override selector("setTransparent:") = Void, Bool;
override selector("setTreatsFilePackagesAsDirectories:") = Void, Bool;
override selector("setTruncatesLastVisibleLine:") = Void, Bool;
override selector("setTwoDigitStartDate:") = Void, NSDate;
override selector("setType:") = Void, NSString;
override selector("setTypesetter:") = Void, NSTypesetter;
override selector("setTypesetterBehavior:") = Void, CLong;
override selector("setTypingAttributes:") = Void, NSDictionary;
override selector("setTypingStyle:") = Void, DOMCSSStyleDeclaration;
override selector("setUIDelegate:") = Void, Id;
override selector("setURI:") = Void, NSString;
override selector("setURL:") = Void, NSURL;
override selector("setURL:forKey:") = Void, NSURL, NSString;
override selector("setURL:forPersistentStore:") = Bool, NSURL, NSPersistentStore;
override selector("setUndoManager:") = Void, NSUndoManager;
override selector("setUnicodeBidi:") = Void, NSString;
override selector("setUniqueID:") = Void, Id;
override selector("setUpFieldEditorAttributes:") = NSText, NSText;
override selector("setUpGState") = Void;
override selector("setUpPrintOperationDefaultValues") = Void;
override selector("setUseMap:") = Void, NSString;
override selector("setUserFixedPitchFont:") = Void, NSFont;
override selector("setUserFont:") = Void, NSFont;
override selector("setUserInfo:") = Void, NSDictionary;
override selector("setUserInterfaceLayoutDirection:") = Void, CLong;
override selector("setUserStyleSheetEnabled:") = Void, Bool;
override selector("setUserStyleSheetLocation:") = Void, NSURL;
override selector("setUsesAlternatingRowBackgroundColors:") = Void, Bool;
override selector("setUsesDataSource:") = Void, Bool;
override selector("setUsesEPSOnResolutionMismatch:") = Void, Bool;
override selector("setUsesFeedbackWindow:") = Void, Bool;
override selector("setUsesFindPanel:") = Void, Bool;
override selector("setUsesFontLeading:") = Void, Bool;
override selector("setUsesFontPanel:") = Void, Bool;
override selector("setUsesGroupingSeparator:") = Void, Bool;
override selector("setUsesItemFromMenu:") = Void, Bool;
override selector("setUsesLazyFetching:") = Void, Bool;
override selector("setUsesPageCache:") = Void, Bool;
override selector("setUsesRuler:") = Void, Bool;
override selector("setUsesScreenFonts:") = Void, Bool;
override selector("setUsesSignificantDigits:") = Void, Bool;
override selector("setUsesSingleLineMode:") = Void, Bool;
override selector("setUsesStrongWriteBarrier:") = Void, Bool;
override selector("setUsesThreadedAnimation:") = Void, Bool;
override selector("setUsesUserKeyEquivalents:") = Void, Bool;
override selector("setUsesWeakReadAndWriteBarriers:") = Void, Bool;
override selector("setVAlign:") = Void, NSString;
override selector("setVLink:") = Void, NSString;
override selector("setValidateSize:") = Void, Bool;
override selector("setValidationPredicates:withValidationWarnings:") = Void, NSArray, NSArray;
override selector("setValue:") = Void, NSString;
override selector("setValue:forHTTPHeaderField:") = Void, NSString, NSString;
override selector("setValue:forKey:") = Void, Id, NSString;
override selector("setValue:forKeyPath:") = Void, Id, NSString;
override selector("setValue:forUndefinedKey:") = Void, Id, NSString;
override selector("setValue:type:forDimension:") = Void, Double, CULong, CULong;
override selector("setValueExpression:") = Void, NSExpression;
override selector("setValueListAttributes:") = Void, NSArray;
override selector("setValueTransformer:forName:") = Void, NSValueTransformer, NSString;
override selector("setValueTransformerName:") = Void, NSString;
override selector("setValueType:") = Void, NSString;
override selector("setValueWraps:") = Void, Bool;
override selector("setValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
override selector("setValuesForKeysWithDictionary:") = Void, NSDictionary;
override selector("setVersion:") = Void, CLong;
override selector("setVersionHashModifier:") = Void, NSString;
override selector("setVersionIdentifiers:") = Void, NSSet;
override selector("setVertical:") = Void, Bool;
override selector("setVerticalAlign:") = Void, NSString;
override selector("setVerticalAlignment:") = Void, CULong;
override selector("setVerticalLineScroll:") = Void, Double;
override selector("setVerticalMotionCanBeginDrag:") = Void, Bool;
override selector("setVerticalPageScroll:") = Void, Double;
override selector("setVerticalPagination:") = Void, CULong;
override selector("setVerticalRulerView:") = Void, NSRulerView;
override selector("setVerticalScroller:") = Void, NSScroller;
override selector("setVerticallyCentered:") = Void, Bool;
override selector("setVerticallyResizable:") = Void, Bool;
override selector("setVeryShortMonthSymbols:") = Void, NSArray;
override selector("setVeryShortStandaloneMonthSymbols:") = Void, NSArray;
override selector("setVeryShortStandaloneWeekdaySymbols:") = Void, NSArray;
override selector("setVeryShortWeekdaySymbols:") = Void, NSArray;
override selector("setView:") = Void, NSView;
override selector("setViewAnimations:") = Void, NSArray;
override selector("setViewsNeedDisplay:") = Void, Bool;
override selector("setVisibility:") = Void, NSString;
override selector("setVisibilityPriority:") = Void, CLong;
override selector("setVisible:") = Void, Bool;
override selector("setVlinkColor:") = Void, NSString;
override selector("setVoice:") = Bool, NSString;
override selector("setVoiceFamily:") = Void, NSString;
override selector("setVolatileDomain:forName:") = Void, NSDictionary, NSString;
override selector("setVolume:") = Void, NSString;
override selector("setVspace:") = Void, Int;
override selector("setWantsLayer:") = Void, Bool;
override selector("setWantsNotificationForMarkedText:") = Void, Bool;
override selector("setWantsRestingTouches:") = Void, Bool;
override selector("setWarningValue:") = Void, Double;
override selector("setWebScriptValueAtIndex:value:") = Void, UInt, Id;
override selector("setWeek:") = Void, CLong;
override selector("setWeekday:") = Void, CLong;
override selector("setWeekdayOrdinal:") = Void, CLong;
override selector("setWeekdaySymbols:") = Void, NSArray;
override selector("setWhiteSpace:") = Void, NSString;
override selector("setWidows:") = Void, NSString;
override selector("setWidth:") = Void, NSString;
override selector("setWidth:forSegment:") = Void, Double, CLong;
override selector("setWidth:ofColumn:") = Void, Double, CLong;
override selector("setWidth:type:forLayer:") = Void, Double, CULong, CLong;
override selector("setWidth:type:forLayer:edge:") = Void, Double, CULong, CLong, CULong;
override selector("setWidthTracksTextView:") = Void, Bool;
override selector("setWindingRule:") = Void, CULong;
override selector("setWindow:") = Void, NSWindow;
override selector("setWindowController:") = Void, NSWindowController;
override selector("setWindowFrameAutosaveName:") = Void, NSString;
override selector("setWindowsMenu:") = Void, NSMenu;
override selector("setWindowsNeedUpdate:") = Void, Bool;
override selector("setWithArray:") = Id, NSArray;
override selector("setWithCapacity:") = Id, CULong;
override selector("setWithObject:") = Id, Id;
override varargSelector("setWithObjects:") = Id, Id;
override selector("setWithObjects:count:") = Id, Pointer[Id], CULong;
override selector("setWithSet:") = Id, NSSet;
override selector("setWordFieldStringValue:") = Void, NSString;
override selector("setWordSpacing:") = Void, NSString;
override selector("setWords:") = Void, NSArray;
override selector("setWorksWhenModal:") = Void, Bool;
override selector("setWrap:") = Void, Bool;
override selector("setWraps:") = Void, Bool;
override selector("setXmlStandalone:") = Void, Bool;
override selector("setXmlVersion:") = Void, NSString;
override selector("setYear:") = Void, CLong;
override selector("setZIndex:") = Void, NSString;
override selector("setZPosition:") = Void, Double;
override selector("setZeroSymbol:") = Void, NSString;
override selector("shadow") = NSShadow;
override selector("shadowBlurRadius") = Double;
override selector("shadowColor") = NSColor;
override selector("shadowOffset") = CGSize;
override selector("shadowOpacity") = Float;
override selector("shadowRadius") = Double;
override selector("shadowWithLevel:") = NSColor, Double;
override selector("shape") = NSString;
override selector("sharedAppleEventManager") = NSAppleEventManager;
override selector("sharedApplication") = NSApplication;
override selector("sharedCoercionHandler") = NSScriptCoercionHandler;
override selector("sharedColorPanel") = NSColorPanel;
override selector("sharedColorPanelExists") = Bool;
override selector("sharedCredentialStorage") = NSURLCredentialStorage;
override selector("sharedDocumentController") = Id;
override selector("sharedFontManager") = NSFontManager;
override selector("sharedFontPanel") = NSFontPanel;
override selector("sharedFontPanelExists") = Bool;
override selector("sharedFrameworksPath") = NSString;
override selector("sharedFrameworksURL") = NSURL;
override selector("sharedGlyphGenerator") = Id;
override selector("sharedHTTPCookieStorage") = NSHTTPCookieStorage;
override selector("sharedHelpManager") = NSHelpManager;
override selector("sharedInstance") = Id;
override selector("sharedPrintInfo") = NSPrintInfo;
override selector("sharedScriptExecutionContext") = NSScriptExecutionContext;
override selector("sharedScriptSuiteRegistry") = NSScriptSuiteRegistry;
override selector("sharedSpellChecker") = NSSpellChecker;
override selector("sharedSpellCheckerExists") = Bool;
override selector("sharedSupportPath") = NSString;
override selector("sharedSupportURL") = NSURL;
override selector("sharedSystemTypesetter") = Id;
override selector("sharedSystemTypesetterForBehavior:") = Id, CLong;
override selector("sharedTypesetter") = Id;
override selector("sharedURLCache") = NSURLCache;
override selector("sharedUserDefaultsController") = Id;
override selector("sharedWorkspace") = NSWorkspace;
override selector("sharingType") = CULong;
override selector("sheet") = DOMStyleSheet;
override selector("shiftIndexesStartingAtIndex:by:") = Void, CULong, CLong;
override selector("shiftKey") = Bool;
override selector("shortMonthSymbols") = NSArray;
override selector("shortQuarterSymbols") = NSArray;
override selector("shortStandaloneMonthSymbols") = NSArray;
override selector("shortStandaloneQuarterSymbols") = NSArray;
override selector("shortStandaloneWeekdaySymbols") = NSArray;
override selector("shortValue") = Short;
override selector("shortWeekdaySymbols") = NSArray;
override selector("shouldAntialias") = Bool;
override selector("shouldArchiveValueForKey:") = Bool, NSString;
override selector("shouldBeTreatedAsInkEvent:") = Bool, NSEvent;
override selector("shouldBreakLineByHyphenatingBeforeCharacterAtIndex:") = Bool, CULong;
override selector("shouldBreakLineByWordBeforeCharacterAtIndex:") = Bool, CULong;
override selector("shouldCascadeWindows") = Bool;
override selector("shouldChangePrintInfo:") = Bool, NSPrintInfo;
override selector("shouldChangeTextInRange:replacementString:") = Bool, NSRange, NSString;
override selector("shouldChangeTextInRanges:replacementStrings:") = Bool, NSArray, NSArray;
override selector("shouldCloseDocument") = Bool;
override selector("shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:") = Void, NSWindowController, Id, SelectorHandle, RawPointer;
override selector("shouldCloseWithWindow") = Bool;
override selector("shouldCollapseAutoExpandedItemsForDeposited:") = Bool, Bool;
override selector("shouldCreateUI") = Bool;
override selector("shouldDelayWindowOrderingForEvent:") = Bool, NSEvent;
override selector("shouldDrawColor") = Bool;
override selector("shouldDrawInsertionPoint") = Bool;
override selector("shouldFocusCell:atColumn:row:") = Bool, NSCell, CLong, CLong;
override selector("shouldPrintBackgrounds") = Bool;
override selector("shouldProcessNamespaces") = Bool;
override selector("shouldReportNamespacePrefixes") = Bool;
override selector("shouldResolveExternalEntities") = Bool;
override selector("shouldRunSavePanelWithAccessoryView") = Bool;
override selector("shouldUpdateWhileOffscreen") = Bool;
override selector("showAllHelpTopicsForSearchString:") = Void, NSString;
override selector("showAttachmentCell:inRect:characterIndex:") = Void, NSCell, NSRect, CULong;
override selector("showContextHelp:") = Void, Id;
override selector("showContextHelpForObject:locationHint:") = Bool, Id, NSPoint;
override selector("showDefinitionForAttributedString:atPoint:") = Void, NSAttributedString, NSPoint;
override selector("showDefinitionForAttributedString:range:options:baselineOriginProvider:") = Void, NSAttributedString, NSRange, NSDictionary, UnknownType;
override selector("showFindIndicatorForRange:") = Void, NSRange;
override selector("showGuessPanel:") = Void, Id;
override selector("showHelp:") = Void, Id;
override selector("showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:") = Void, Pointer[CChar], CULong, NSRange, NSPoint, NSFont, NSColor, NSSize;
override selector("showPanels") = Bool;
override selector("showSearchResultsForQueryString:") = Bool, NSString;
override selector("showWindow:") = Void, Id;
override selector("showWindows") = Void;
override selector("showsAlpha") = Bool;
override selector("showsApplicationBadge") = Bool;
override selector("showsBaselineSeparator") = Bool;
override selector("showsBorderOnlyWhileMouseInside") = Bool;
override selector("showsControlCharacters") = Bool;
override selector("showsFirstResponder") = Bool;
override selector("showsHelp") = Bool;
override selector("showsHiddenFiles") = Bool;
override selector("showsInvisibleCharacters") = Bool;
override selector("showsPrintPanel") = Bool;
override selector("showsProgressPanel") = Bool;
override selector("showsResizeIndicator") = Bool;
override selector("showsStateBy") = CLong;
override selector("showsStateColumn") = Bool;
override selector("showsSuppressionButton") = Bool;
override selector("showsToolbarButton") = Bool;
override selector("signal") = Void;
override selector("signatureWithObjCTypes:") = NSMethodSignature, Pointer[CChar];
override selector("singleNodeValue") = DOMNode;
override selector("size") = NSString;
override selector("sizeForKey:inTable:") = NSSize, NSString, NSString;
override selector("sizeForPaperName:") = NSSize, NSString;
override selector("sizeFunction") = CCodePointer[[RawPointer],[CULong]];
override selector("sizeLastColumnToFit") = Void;
override selector("sizeMode") = CULong;
override selector("sizeOfLabel:") = NSSize, Bool;
override selector("sizeToCells") = Void;
override selector("sizeToFit") = Void;
override selector("sizeValue") = NSSize;
override selector("sizeWithAttributes:") = NSSize, NSDictionary;
override selector("skipDescendants") = Void;
override selector("skipDescendents") = Void;
override selector("sleepForTimeInterval:") = Void, Double;
override selector("sleepUntilDate:") = Void, NSDate;
override selector("slideDraggedImageTo:") = Void, NSPoint;
override selector("slideImage:from:to:") = Void, NSImage, NSPoint, NSPoint;
override selector("sliderType") = CULong;
override selector("smallSystemFontSize") = Double;
override selector("smallestEncoding") = CULong;
override selector("smartDeleteRangeForProposedRange:") = NSRange, NSRange;
override selector("smartInsertAfterStringForString:replacingRange:") = NSString, NSString, NSRange;
override selector("smartInsertBeforeStringForString:replacingRange:") = NSString, NSString, NSRange;
override selector("smartInsertDeleteEnabled") = Bool;
override selector("smartInsertForString:replacingRange:beforeString:afterString:") = Void, NSString, NSRange, Pointer[NSString], Pointer[NSString];
override selector("snapshotItem:") = DOMNode, UInt;
override selector("snapshotLength") = UInt;
override selector("socket") = Int;
override selector("socketType") = Int;
override selector("sortDescriptorPrototype") = NSSortDescriptor;
override selector("sortDescriptorWithKey:ascending:") = Id, NSString, Bool;
override selector("sortDescriptorWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
override selector("sortDescriptorWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
override selector("sortDescriptors") = NSArray;
override selector("sortIndicatorRectForBounds:") = NSRect, NSRect;
override selector("sortSubviewsUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override selector("sortUsingComparator:") = Void, NSComparator;
override selector("sortUsingDescriptors:") = Void, NSArray;
override selector("sortUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override selector("sortUsingSelector:") = Void, SelectorHandle;
override selector("sortWithOptions:usingComparator:") = Void, CULong, NSComparator;
override selector("sortWithSortDescriptors:recursively:") = Void, NSArray, Bool;
override selector("sortedArrayHint") = NSData;
override selector("sortedArrayUsingComparator:") = NSArray, NSComparator;
override selector("sortedArrayUsingDescriptors:") = NSArray, NSArray;
override selector("sortedArrayUsingFunction:context:") = NSArray, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
override selector("sortedArrayUsingFunction:context:hint:") = NSArray, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer, NSData;
override selector("sortedArrayUsingSelector:") = NSArray, SelectorHandle;
override selector("sortedArrayWithOptions:usingComparator:") = NSArray, CULong, NSComparator;
override selector("sound") = NSSound;
override selector("sound:didFinishPlaying:") = Void, NSSound, Bool;
override selector("soundNamed:") = Id, NSString;
override selector("soundUnfilteredFileTypes") = NSArray;
override selector("soundUnfilteredPasteboardTypes") = NSArray;
override selector("soundUnfilteredTypes") = NSArray;
override selector("source") = NSString;
override selector("sourceContext") = NSManagedObjectContext;
override selector("sourceEntityForEntityMapping:") = NSEntityDescription, NSEntityMapping;
override selector("sourceEntityName") = NSString;
override selector("sourceEntityVersionHash") = NSData;
override selector("sourceExpression") = NSExpression;
override selector("sourceInstancesForEntityMappingNamed:destinationInstances:") = NSArray, NSString, NSArray;
override selector("sourceModel") = NSManagedObjectModel;
override selector("span") = Int;
override selector("speak") = NSString;
override selector("speakHeader") = NSString;
override selector("speakNumeral") = NSString;
override selector("speakPunctuation") = NSString;
override selector("specified") = Bool;
override selector("speechRate") = NSString;
override selector("speechRecognizer:didRecognizeCommand:") = Void, NSSpeechRecognizer, Id;
override selector("speechSynthesizer:didEncounterErrorAtIndex:ofString:message:") = Void, NSSpeechSynthesizer, CULong, NSString, NSString;
override selector("speechSynthesizer:didEncounterSyncMessage:") = Void, NSSpeechSynthesizer, NSString;
override selector("speechSynthesizer:didFinishSpeaking:") = Void, NSSpeechSynthesizer, Bool;
override selector("speechSynthesizer:willSpeakPhoneme:") = Void, NSSpeechSynthesizer, Short;
override selector("speechSynthesizer:willSpeakWord:ofString:") = Void, NSSpeechSynthesizer, NSRange, NSString;
override selector("speed") = Float;
override selector("spellCheckerDocumentTag") = CLong;
override selector("spellCheckingResultWithRange:") = NSTextCheckingResult, NSRange;
override selector("spellServer:checkGrammarInString:language:details:") = NSRange, NSSpellServer, NSString, NSString, Pointer[NSArray];
override selector("spellServer:checkString:offset:types:options:orthography:wordCount:") = NSArray, NSSpellServer, NSString, CULong, UInt64, NSDictionary, NSOrthography, Pointer[CLong];
override selector("spellServer:didForgetWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
override selector("spellServer:didLearnWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
override selector("spellServer:findMisspelledWordInString:language:wordCount:countOnly:") = NSRange, NSSpellServer, NSString, NSString, Pointer[CLong], Bool;
override selector("spellServer:suggestCompletionsForPartialWordRange:inString:language:") = NSArray, NSSpellServer, NSRange, NSString, NSString;
override selector("spellServer:suggestGuessesForWord:inLanguage:") = NSArray, NSSpellServer, NSString, NSString;
override selector("spellingPanel") = NSPanel;
override selector("splitText:") = DOMText, UInt;
override selector("splitView:additionalEffectiveRectOfDividerAtIndex:") = NSRect, NSSplitView, CLong;
override selector("splitView:canCollapseSubview:") = Bool, NSSplitView, NSView;
override selector("splitView:constrainMaxCoordinate:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
override selector("splitView:constrainMinCoordinate:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
override selector("splitView:constrainSplitPosition:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
override selector("splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:") = NSRect, NSSplitView, NSRect, NSRect, CLong;
override selector("splitView:resizeSubviewsWithOldSize:") = Void, NSSplitView, NSSize;
override selector("splitView:shouldAdjustSizeOfSubview:") = Bool, NSSplitView, NSView;
override selector("splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:") = Bool, NSSplitView, NSView, CLong;
override selector("splitView:shouldHideDividerAtIndex:") = Bool, NSSplitView, CLong;
override selector("splitViewDidResizeSubviews:") = Void, NSNotification;
override selector("splitViewWillResizeSubviews:") = Void, NSNotification;
override selector("src") = NSString;
override selector("srcElement") = Id;
override selector("stackSize") = CULong;
override selector("stalenessInterval") = Double;
override selector("standaloneMonthSymbols") = NSArray;
override selector("standaloneQuarterSymbols") = NSArray;
override selector("standaloneWeekdaySymbols") = NSArray;
override selector("standardError") = Id;
override selector("standardFontFamily") = NSString;
override selector("standardInput") = Id;
override selector("standardOutput") = Id;
override selector("standardPreferences") = WebPreferences;
override selector("standardUserDefaults") = NSUserDefaults;
override selector("standardWindowButton:") = NSButton, CULong;
override selector("standardWindowButton:forStyleMask:") = NSButton, CULong, CULong;
override selector("standardizedURL") = NSURL;
override selector("standby") = NSString;
override selector("start") = Int;
override selector("startAnimation") = Void;
override selector("startAnimation:") = Void, Id;
override selector("startContainer") = DOMNode;
override selector("startListening") = Void;
override selector("startLoading") = Void;
override selector("startMonitoring") = Void;
override selector("startOffset") = Int;
override selector("startPeriodicEventsAfterDelay:withPeriod:") = Void, Double, Double;
override selector("startQuery") = Bool;
override selector("startSpeaking:") = Void, Id;
override selector("startSpeakingString:") = Bool, NSString;
override selector("startSpeakingString:toURL:") = Bool, NSString, NSURL;
override selector("startSpecifier") = NSScriptObjectSpecifier;
override selector("startSubelementIdentifier") = CULong;
override selector("startSubelementIndex") = CLong;
override selector("startTrackingAt:inView:") = Bool, NSPoint, NSView;
override selector("startWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
override selector("startingColumn") = CLong;
override selector("startingItemNumber") = CLong;
override selector("startingRow") = CLong;
override selector("state") = CLong;
override selector("stateImageRectForBounds:") = NSRect, NSRect;
override selector("stateImageWidth") = Double;
override selector("statistics") = NSDictionary;
override selector("status") = CULong;
override selector("statusBar") = NSStatusBar;
override selector("statusCode") = CLong;
override selector("statusForTable:") = CULong, NSString;
override selector("statusItemWithLength:") = NSStatusItem, Double;
override selector("stop") = Bool;
override selector("stop:") = Void, Id;
override selector("stopAnimation") = Void;
override selector("stopAnimation:") = Void, Id;
override selector("stopListening") = Void;
override selector("stopLoading") = Void;
override selector("stopLoading:") = Void, Id;
override selector("stopModal") = Void;
override selector("stopModalWithCode:") = Void, CLong;
override selector("stopMonitoring") = Void;
override selector("stopPeriodicEvents") = Void;
override selector("stopPropagation") = Void;
override selector("stopQuery") = Void;
override selector("stopSpeaking") = Void;
override selector("stopSpeaking:") = Void, Id;
override selector("stopSpeakingAtBoundary:") = Void, CULong;
override selector("stopTracking:at:inView:mouseIsUp:") = Void, NSPoint, NSPoint, NSView, Bool;
override selector("stopWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
override selector("storagePolicy") = CULong;
override selector("storeCachedResponse:forRequest:") = Void, NSCachedURLResponse, NSURLRequest;
override selector("storedValueForKey:") = Id, NSString;
override selector("stream:handleEvent:") = Void, NSStream, CULong;
override selector("streamError") = NSError;
override selector("streamStatus") = CULong;
override selector("stress") = NSString;
override selector("strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;
override selector("string") = Id;
override selector("stringArrayForKey:") = NSArray, NSString;
override selector("stringByAbbreviatingWithTildeInPath") = NSString;
override selector("stringByAddingPercentEscapesUsingEncoding:") = NSString, CULong;
override varargSelector("stringByAppendingFormat:") = NSString, NSString;
override selector("stringByAppendingPathComponent:") = NSString, NSString;
override selector("stringByAppendingPathExtension:") = NSString, NSString;
override selector("stringByAppendingString:") = NSString, NSString;
override selector("stringByDeletingLastPathComponent") = NSString;
override selector("stringByDeletingPathExtension") = NSString;
override selector("stringByEvaluatingJavaScriptFromString:") = NSString, NSString;
override selector("stringByExpandingTildeInPath") = NSString;
override selector("stringByFoldingWithOptions:locale:") = NSString, CULong, NSLocale;
override selector("stringByPaddingToLength:withString:startingAtIndex:") = NSString, CULong, NSString, CULong;
override selector("stringByReplacingCharactersInRange:withString:") = NSString, NSRange, NSString;
override selector("stringByReplacingOccurrencesOfString:withString:") = NSString, NSString, NSString;
override selector("stringByReplacingOccurrencesOfString:withString:options:range:") = NSString, NSString, NSString, CULong, NSRange;
override selector("stringByReplacingPercentEscapesUsingEncoding:") = NSString, CULong;
override selector("stringByResolvingSymlinksInPath") = NSString;
override selector("stringByStandardizingPath") = NSString;
override selector("stringByTrimmingCharactersInSet:") = NSString, NSCharacterSet;
override selector("stringForKey:") = NSString, NSString;
override selector("stringForKey:inTable:") = NSString, NSString, NSString;
override selector("stringForObjectValue:") = NSString, Id;
override selector("stringForType:") = NSString, NSString;
override selector("stringFromDate:") = NSString, NSDate;
override selector("stringFromNumber:") = NSString, NSNumber;
override selector("stringListForKey:inTable:") = NSArray, NSString, NSString;
override selector("stringRepresentation") = NSString;
override selector("stringValue") = NSString;
override selector("stringWithCString:") = Id, Pointer[CChar];
override selector("stringWithCString:encoding:") = Id, Pointer[CChar], CULong;
override selector("stringWithCString:length:") = Id, Pointer[CChar], CULong;
override selector("stringWithCapacity:") = Id, CULong;
override selector("stringWithCharacters:length:") = Id, Pointer[UShort], CULong;
override selector("stringWithContentsOfFile:") = Id, NSString;
override selector("stringWithContentsOfFile:encoding:error:") = Id, NSString, CULong, Pointer[NSError];
override selector("stringWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[CULong], Pointer[NSError];
override selector("stringWithContentsOfURL:") = Id, NSURL;
override selector("stringWithContentsOfURL:encoding:error:") = Id, NSURL, CULong, Pointer[NSError];
override selector("stringWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[CULong], Pointer[NSError];
override selector("stringWithFileSystemRepresentation:length:") = NSString, Pointer[CChar], CULong;
override varargSelector("stringWithFormat:") = Id, NSString;
override selector("stringWithSavedFrame") = NSString;
override selector("stringWithString:") = Id, NSString;
override selector("stringWithUTF8String:") = Id, Pointer[CChar];
override selector("stringsByAppendingPaths:") = NSArray, NSArray;
override selector("stroke") = Void;
override selector("strokeLineFromPoint:toPoint:") = Void, NSPoint, NSPoint;
override selector("strokeRect:") = Void, NSRect;
override selector("style") = Id;
override selector("styleDeclarationWithText:") = DOMCSSStyleDeclaration, NSString;
override selector("styleMask") = CULong;
override selector("styleSheet") = DOMCSSStyleSheet;
override selector("styleSheets") = DOMStyleSheetList;
override selector("subarrayWithRange:") = NSArray, NSRange;
override selector("subdataWithRange:") = NSData, NSRange;
override selector("subentities") = NSArray;
override selector("subentitiesByName") = NSDictionary;
override selector("subframeArchives") = NSArray;
override selector("subgroups") = NSArray;
override selector("subitems") = NSArray;
override selector("sublayerTransform") = CATransform3D;
override selector("sublayers") = NSArray;
override selector("submenu") = NSMenu;
override selector("submenuAction:") = Void, Id;
override selector("submit") = Void;
override selector("subpathsAtPath:") = NSArray, NSString;
override selector("subpathsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
override selector("subpredicates") = NSArray;
override selector("subresourceForURL:") = WebResource, NSURL;
override selector("subresources") = NSArray;
override selector("subrowIndexesForRow:") = NSIndexSet, CLong;
override selector("subrowsKeyPath") = NSString;
override selector("subscript:") = Void, Id;
override selector("subscriptRange:") = Void, NSRange;
override selector("substituteFontForFont:") = NSFont, NSFont;
override selector("substituteGlyphsInRange:withGlyphs:") = Void, NSRange, Pointer[UInt];
override selector("substitutionsPanel") = NSPanel;
override selector("substitutionsPanelAccessoryViewController") = NSViewController;
override selector("substringData::") = NSString, UInt, UInt;
override selector("substringData:length:") = NSString, UInt, UInt;
override selector("substringFromIndex:") = NSString, CULong;
override selector("substringToIndex:") = NSString, CULong;
override selector("substringWithRange:") = NSString, NSRange;
override selector("subtype") = Short;
override selector("subviews") = NSArray;
override selector("suggestedFilename") = NSString;
override selector("suiteForAppleEventCode:") = NSString, UInt;
override selector("suiteName") = NSString;
override selector("suiteNames") = NSArray;
override selector("summary") = NSString;
override selector("superclass") = Id;
override selector("superclassDescription") = NSScriptClassDescription;
override selector("superentity") = NSEntityDescription;
override selector("superlayer") = CALayer;
override selector("supermenu") = NSMenu;
override selector("superscript:") = Void, Id;
override selector("superscriptRange:") = Void, NSRange;
override selector("superview") = NSView;
override selector("supportedWindowDepths") = Pointer[Int];
override selector("supportsCommand:") = Bool, NSScriptCommandDescription;
override selector("supportsMode:") = Bool, CLong;
override selector("supportsTextEncoding") = Bool;
override selector("suppressionButton") = NSButton;
override selector("surroundContents:") = Void, DOMNode;
override selector("suspend") = Bool;
override selector("suspendCurrentAppleEvent") = NSAppleEventManagerSuspensionID;
override selector("suspendExecution") = Void;
override selector("suspended") = Bool;
override selector("swapWithMark:") = Void, Id;
override selector("swipeWithEvent:") = Void, NSEvent;
override selector("symbolCharacterSet") = Id;
override selector("symbolicLinkDestination") = NSString;
override selector("symbolicLinkDestinationURL") = NSURL;
override selector("symbolicTraits") = UInt;
override selector("synchronize") = Bool;
override selector("synchronizeFile") = Void;
override selector("synchronizeTitleAndSelectedItem") = Void;
override selector("synchronizeWindowTitleWithDocumentName") = Void;
override selector("systemDefaultPortNameServer") = NSPortNameServer;
override selector("systemFontOfSize:") = NSFont, Double;
override selector("systemFontSize") = Double;
override selector("systemFontSizeForControlSize:") = Double, CULong;
override selector("systemID") = NSString;
override selector("systemId") = NSString;
override selector("systemLocale") = Id;
override selector("systemStatusBar") = NSStatusBar;
override selector("systemTabletID") = CULong;
override selector("systemTimeZone") = NSTimeZone;
override selector("systemUptime") = Double;
override selector("systemVersion") = UInt;
override selector("tBodies") = DOMHTMLCollection;
override selector("tFoot") = DOMHTMLTableSectionElement;
override selector("tHead") = DOMHTMLTableSectionElement;
override selector("tabIndex") = Int;
override selector("tabKeyTraversesCells") = Bool;
override selector("tabState") = CULong;
override selector("tabStopType") = CULong;
override selector("tabStops") = NSArray;
override selector("tabView") = NSTabView;
override selector("tabView:didSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
override selector("tabView:shouldSelectTabViewItem:") = Bool, NSTabView, NSTabViewItem;
override selector("tabView:willSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
override selector("tabViewDidChangeNumberOfTabViewItems:") = Void, NSTabView;
override selector("tabViewItemAtIndex:") = NSTabViewItem, CLong;
override selector("tabViewItemAtPoint:") = NSTabViewItem, NSPoint;
override selector("tabViewItems") = NSArray;
override selector("tabViewType") = CULong;
override selector("table") = NSTextTable;
override selector("tableColumnWithIdentifier:") = NSTableColumn, Id;
override selector("tableColumns") = NSArray;
override selector("tableLayout") = NSString;
override selector("tableView") = NSTableView;
override selector("tableView:acceptDrop:row:dropOperation:") = Bool, NSTableView, Id, CLong, CULong;
override selector("tableView:dataCellForTableColumn:row:") = NSCell, NSTableView, NSTableColumn, CLong;
override selector("tableView:didClickTableColumn:") = Void, NSTableView, NSTableColumn;
override selector("tableView:didDragTableColumn:") = Void, NSTableView, NSTableColumn;
override selector("tableView:heightOfRow:") = Double, NSTableView, CLong;
override selector("tableView:isGroupRow:") = Bool, NSTableView, CLong;
override selector("tableView:mouseDownInHeaderOfTableColumn:") = Void, NSTableView, NSTableColumn;
override selector("tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:") = NSArray, NSTableView, NSURL, NSIndexSet;
override selector("tableView:nextTypeSelectMatchFromRow:toRow:forString:") = CLong, NSTableView, CLong, CLong, NSString;
override selector("tableView:objectValueForTableColumn:row:") = Id, NSTableView, NSTableColumn, CLong;
override selector("tableView:selectionIndexesForProposedSelection:") = NSIndexSet, NSTableView, NSIndexSet;
override selector("tableView:setObjectValue:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, CLong;
override selector("tableView:shouldEditTableColumn:row:") = Bool, NSTableView, NSTableColumn, CLong;
override selector("tableView:shouldReorderColumn:toColumn:") = Bool, NSTableView, CLong, CLong;
override selector("tableView:shouldSelectRow:") = Bool, NSTableView, CLong;
override selector("tableView:shouldSelectTableColumn:") = Bool, NSTableView, NSTableColumn;
override selector("tableView:shouldShowCellExpansionForTableColumn:row:") = Bool, NSTableView, NSTableColumn, CLong;
override selector("tableView:shouldTrackCell:forTableColumn:row:") = Bool, NSTableView, NSCell, NSTableColumn, CLong;
override selector("tableView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSTableView, NSEvent, NSString;
override selector("tableView:sizeToFitWidthOfColumn:") = Double, NSTableView, CLong;
override selector("tableView:sortDescriptorsDidChange:") = Void, NSTableView, NSArray;
override selector("tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:") = NSString, NSTableView, NSCell, NSRectPointer, NSTableColumn, CLong, NSPoint;
override selector("tableView:typeSelectStringForTableColumn:row:") = NSString, NSTableView, NSTableColumn, CLong;
override selector("tableView:validateDrop:proposedRow:proposedDropOperation:") = CULong, NSTableView, Id, CLong, CULong;
override selector("tableView:willDisplayCell:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, CLong;
override selector("tableView:writeRows:toPasteboard:") = Bool, NSTableView, NSArray, NSPasteboard;
override selector("tableView:writeRowsWithIndexes:toPasteboard:") = Bool, NSTableView, NSIndexSet, NSPasteboard;
override selector("tableViewColumnDidMove:") = Void, NSNotification;
override selector("tableViewColumnDidResize:") = Void, NSNotification;
override selector("tableViewSelectionDidChange:") = Void, NSNotification;
override selector("tableViewSelectionIsChanging:") = Void, NSNotification;
override selector("tabletID") = CULong;
override selector("tabletPoint:") = Void, NSEvent;
override selector("tabletProximity:") = Void, NSEvent;
override selector("tabsToLinks") = Bool;
override selector("tag") = CLong;
override selector("tagForSegment:") = CLong, CLong;
override selector("tagName") = NSString;
override selector("tags:") = DOMNodeList, NSString;
override selector("tailIndent") = Double;
override selector("takeColorFrom:") = Void, Id;
override selector("takeDoubleValueFrom:") = Void, Id;
override selector("takeFloatValueFrom:") = Void, Id;
override selector("takeIntValueFrom:") = Void, Id;
override selector("takeIntegerValueFrom:") = Void, Id;
override selector("takeObjectValueFrom:") = Void, Id;
override selector("takeSelectedTabViewItemFromSender:") = Void, Id;
override selector("takeStoredValue:forKey:") = Void, Id, NSString;
override selector("takeStringURLFrom:") = Void, Id;
override selector("takeStringValueFrom:") = Void, Id;
override selector("takeValue:forKey:") = Void, Id, NSString;
override selector("takeValue:forKeyPath:") = Void, Id, NSString;
override selector("takeValuesFromDictionary:") = Void, NSDictionary;
override selector("takesTitleFromPreviousColumn") = Bool;
override selector("tangentialPressure") = Float;
override selector("target") = Id;
override selector("targetForAction:") = Id, SelectorHandle;
override selector("targetForAction:to:from:") = Id, SelectorHandle, Id, Id;
override selector("tearOffMenuRepresentation") = Id;
override selector("templateViews") = NSArray;
override selector("templatesWithAttributeKeyPaths:inEntityDescription:") = NSArray, NSArray, NSEntityDescription;
override selector("temporaryAttribute:atCharacterIndex:effectiveRange:") = Id, NSString, CULong, NSRangePointer;
override selector("temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:") = Id, NSString, CULong, NSRangePointer, NSRange;
override selector("temporaryAttributesAtCharacterIndex:effectiveRange:") = NSDictionary, CULong, NSRangePointer;
override selector("temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:") = NSDictionary, CULong, NSRangePointer, NSRange;
override selector("terminate") = Bool;
override selector("terminate:") = Void, Id;
override selector("terminationReason") = CLong;
override selector("terminationStatus") = Int;
override selector("test") = NSScriptWhoseTest;
override selector("testPart:") = CULong, NSPoint;
override selector("text") = NSString;
override selector("textAlign") = NSString;
override selector("textAttributesForNegativeInfinity") = NSDictionary;
override selector("textAttributesForNegativeValues") = NSDictionary;
override selector("textAttributesForNil") = NSDictionary;
override selector("textAttributesForNotANumber") = NSDictionary;
override selector("textAttributesForPositiveInfinity") = NSDictionary;
override selector("textAttributesForPositiveValues") = NSDictionary;
override selector("textAttributesForZero") = NSDictionary;
override selector("textBackgroundColor") = NSColor;
override selector("textBlocks") = NSArray;
override selector("textColor") = NSColor;
override selector("textContainer") = NSTextContainer;
override selector("textContainerChangedGeometry:") = Void, NSTextContainer;
override selector("textContainerChangedTextView:") = Void, NSTextContainer;
override selector("textContainerForGlyphAtIndex:effectiveRange:") = NSTextContainer, CULong, NSRangePointer;
override selector("textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSTextContainer, CULong, NSRangePointer, Bool;
override selector("textContainerInset") = NSSize;
override selector("textContainerOrigin") = NSPoint;
override selector("textContainers") = NSArray;
override selector("textContent") = NSString;
override selector("textDecoration") = NSString;
override selector("textDidBeginEditing:") = Void, NSNotification;
override selector("textDidChange:") = Void, NSNotification;
override selector("textDidEndEditing:") = Void, NSNotification;
override selector("textEncodingName") = NSString;
override selector("textFileTypes") = NSArray;
override selector("textIndent") = NSString;
override selector("textLists") = NSArray;
override selector("textPasteboardTypes") = NSArray;
override selector("textShadow") = NSString;
override selector("textShouldBeginEditing:") = Bool, NSText;
override selector("textShouldEndEditing:") = Bool, NSText;
override selector("textSizeMultiplier") = Float;
override selector("textStorage") = NSTextStorage;
override selector("textStorage:edited:range:changeInLength:invalidatedRange:") = Void, NSTextStorage, CULong, NSRange, CLong, NSRange;
override selector("textStorageDidProcessEditing:") = Void, NSNotification;
override selector("textStorageWillProcessEditing:") = Void, NSNotification;
override selector("textTabForGlyphLocation:writingDirection:maxLocation:") = NSTextTab, Double, CLong, Double;
override selector("textTransform") = Id;
override selector("textTypes") = NSArray;
override selector("textUnfilteredFileTypes") = NSArray;
override selector("textUnfilteredPasteboardTypes") = NSArray;
override selector("textUnfilteredTypes") = NSArray;
override selector("textView") = NSTextView;
override selector("textView:clickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
override selector("textView:clickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
override selector("textView:clickedOnLink:") = Bool, NSTextView, Id;
override selector("textView:clickedOnLink:atIndex:") = Bool, NSTextView, Id, CULong;
override selector("textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSTextView, NSArray, NSRange, Pointer[CLong];
override selector("textView:didCheckTextInRange:types:options:results:orthography:wordCount:") = NSArray, NSTextView, NSRange, UInt64, NSDictionary, NSArray, NSOrthography, CLong;
override selector("textView:doCommandBySelector:") = Bool, NSTextView, SelectorHandle;
override selector("textView:doubleClickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
override selector("textView:doubleClickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
override selector("textView:draggedCell:inRect:event:") = Void, NSTextView, Id, NSRect, NSEvent;
override selector("textView:draggedCell:inRect:event:atIndex:") = Void, NSTextView, Id, NSRect, NSEvent, CULong;
override selector("textView:menu:forEvent:atIndex:") = NSMenu, NSTextView, NSMenu, NSEvent, CULong;
override selector("textView:shouldChangeTextInRange:replacementString:") = Bool, NSTextView, NSRange, NSString;
override selector("textView:shouldChangeTextInRanges:replacementStrings:") = Bool, NSTextView, NSArray, NSArray;
override selector("textView:shouldChangeTypingAttributes:toAttributes:") = NSDictionary, NSTextView, NSDictionary, NSDictionary;
override selector("textView:shouldSetSpellingState:range:") = CLong, NSTextView, CLong, NSRange;
override selector("textView:willChangeSelectionFromCharacterRange:toCharacterRange:") = NSRange, NSTextView, NSRange, NSRange;
override selector("textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:") = NSArray, NSTextView, NSArray, NSArray;
override selector("textView:willCheckTextInRange:options:types:") = NSDictionary, NSTextView, NSRange, NSDictionary, Pointer[UInt64];
override selector("textView:willDisplayToolTip:forCharacterAtIndex:") = NSString, NSTextView, NSString, CULong;
override selector("textView:writablePasteboardTypesForCell:atIndex:") = NSArray, NSTextView, Id, CULong;
override selector("textView:writeCell:atIndex:toPasteboard:type:") = Bool, NSTextView, Id, CULong, NSPasteboard, NSString;
override selector("textViewDidChangeSelection:") = Void, NSNotification;
override selector("textViewDidChangeTypingAttributes:") = Void, NSNotification;
override selector("textViewForBeginningOfSelection") = NSTextView;
override selector("textWithStringValue:") = Id, NSString;
override selector("textureInternalFormat") = UInt;
override selector("textureMaxMipMapLevel") = Int;
override selector("textureTarget") = UInt;
override selector("thickness") = Double;
override selector("thicknessRequiredInRuler") = Double;
override selector("thousandSeparator") = NSString;
override selector("threadDictionary") = NSMutableDictionary;
override selector("threadPriority") = Double;
override selector("throwException:") = Bool, NSString;
override selector("tickMarkPosition") = CULong;
override selector("tickMarkValueAtIndex:") = Double, CLong;
override selector("tightenKerning:") = Void, Id;
override selector("tighteningFactorForTruncation") = Float;
override selector("tile") = Void;
override selector("tilt") = NSPoint;
override selector("timeInterval") = Double;
override selector("timeIntervalSince1970") = Double;
override selector("timeIntervalSinceDate:") = Double, NSDate;
override selector("timeIntervalSinceNow") = Double;
override selector("timeIntervalSinceReferenceDate") = Double;
override selector("timeOffset") = Double;
override selector("timeStamp") = UInt64;
override selector("timeStyle") = CULong;
override selector("timeZone") = NSTimeZone;
override selector("timeZoneDataVersion") = NSString;
override selector("timeZoneForSecondsFromGMT:") = Id, CLong;
override selector("timeZoneWithAbbreviation:") = Id, NSString;
override selector("timeZoneWithName:") = Id, NSString;
override selector("timeZoneWithName:data:") = Id, NSString, NSData;
override selector("timeoutInterval") = Double;
override selector("timerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
override selector("timerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
override selector("timestamp") = Double;
override selector("title") = NSString;
override selector("titleAlignment") = CULong;
override selector("titleBarFontOfSize:") = NSFont, Double;
override selector("titleBaseWritingDirection") = CLong;
override selector("titleCell") = Id;
override selector("titleColor") = NSColor;
override selector("titleDisplayString") = NSString;
override selector("titleFont") = NSFont;
override selector("titleFrameOfColumn:") = NSRect, CLong;
override selector("titleHeight") = Double;
override selector("titleOfColumn:") = NSString, CLong;
override selector("titleOfSelectedItem") = NSString;
override selector("titlePosition") = CULong;
override selector("titleRect") = NSRect;
override selector("titleRectForBounds:") = NSRect, NSRect;
override selector("titleWidth") = Double;
override selector("titleWidth:") = Double, NSSize;
override selector("toElement") = DOMNode;
override selector("toManyRelationshipKeys") = NSArray;
override selector("toOneRelationshipKeys") = NSArray;
override selector("toString") = NSString;
override selector("toggle:") = Void, Id;
override selector("toggleAutomaticDashSubstitution:") = Void, Id;
override selector("toggleAutomaticDataDetection:") = Void, Id;
override selector("toggleAutomaticLinkDetection:") = Void, Id;
override selector("toggleAutomaticQuoteSubstitution:") = Void, Id;
override selector("toggleAutomaticSpellingCorrection:") = Void, Id;
override selector("toggleAutomaticTextReplacement:") = Void, Id;
override selector("toggleBaseWritingDirection:") = Void, Id;
override selector("toggleContinuousSpellChecking:") = Void, Id;
override selector("toggleGrammarChecking:") = Void, Id;
override selector("toggleRuler:") = Void, Id;
override selector("toggleSmartInsertDelete:") = Void, Id;
override selector("toggleToolbarShown:") = Void, Id;
override selector("toggleTraditionalCharacterShape:") = Void, Id;
override selector("tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenField, NSString, CLong, Pointer[CLong];
override selector("tokenField:displayStringForRepresentedObject:") = NSString, NSTokenField, Id;
override selector("tokenField:editingStringForRepresentedObject:") = NSString, NSTokenField, Id;
override selector("tokenField:hasMenuForRepresentedObject:") = Bool, NSTokenField, Id;
override selector("tokenField:menuForRepresentedObject:") = NSMenu, NSTokenField, Id;
override selector("tokenField:readFromPasteboard:") = NSArray, NSTokenField, NSPasteboard;
override selector("tokenField:representedObjectForEditingString:") = Id, NSTokenField, NSString;
override selector("tokenField:shouldAddObjects:atIndex:") = NSArray, NSTokenField, NSArray, CULong;
override selector("tokenField:styleForRepresentedObject:") = CULong, NSTokenField, Id;
override selector("tokenField:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenField, NSArray, NSPasteboard;
override selector("tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenFieldCell, NSString, CLong, Pointer[CLong];
override selector("tokenFieldCell:displayStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
override selector("tokenFieldCell:editingStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
override selector("tokenFieldCell:hasMenuForRepresentedObject:") = Bool, NSTokenFieldCell, Id;
override selector("tokenFieldCell:menuForRepresentedObject:") = NSMenu, NSTokenFieldCell, Id;
override selector("tokenFieldCell:readFromPasteboard:") = NSArray, NSTokenFieldCell, NSPasteboard;
override selector("tokenFieldCell:representedObjectForEditingString:") = Id, NSTokenFieldCell, NSString;
override selector("tokenFieldCell:shouldAddObjects:atIndex:") = NSArray, NSTokenFieldCell, NSArray, CULong;
override selector("tokenFieldCell:styleForRepresentedObject:") = CULong, NSTokenFieldCell, Id;
override selector("tokenFieldCell:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenFieldCell, NSArray, NSPasteboard;
override selector("tokenStyle") = CULong;
override selector("tokenizingCharacterSet") = NSCharacterSet;
override selector("toolTip") = NSString;
override selector("toolTipForCell:") = NSString, NSCell;
override selector("toolTipForSegment:") = NSString, CLong;
override selector("toolTipsFontOfSize:") = NSFont, Double;
override selector("toolbar") = NSToolbar;
override selector("toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:") = NSToolbarItem, NSToolbar, NSString, Bool;
override selector("toolbarAllowedItemIdentifiers:") = NSArray, NSToolbar;
override selector("toolbarDefaultItemIdentifiers:") = NSArray, NSToolbar;
override selector("toolbarDidRemoveItem:") = Void, NSNotification;
override selector("toolbarSelectableItemIdentifiers:") = NSArray, NSToolbar;
override selector("toolbarWillAddItem:") = Void, NSNotification;
override selector("top") = Id;
override selector("topLevelObject") = Id;
override selector("topMargin") = Double;
override selector("totalCostLimit") = CULong;
override selector("touchesBeganWithEvent:") = Void, NSEvent;
override selector("touchesCancelledWithEvent:") = Void, NSEvent;
override selector("touchesEndedWithEvent:") = Void, NSEvent;
override selector("touchesMatchingPhase:inView:") = NSSet, CULong, NSView;
override selector("touchesMovedWithEvent:") = Void, NSEvent;
override selector("trackKnob:") = Void, NSEvent;
override selector("trackMarker:withMouseEvent:") = Bool, NSRulerMarker, NSEvent;
override selector("trackMouse:adding:") = Bool, NSEvent, Bool;
override selector("trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, CULong, Bool;
override selector("trackMouse:inRect:ofView:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, Bool;
override selector("trackRect") = NSRect;
override selector("trackScrollButtons:") = Void, NSEvent;
override selector("trackingArea") = NSTrackingArea;
override selector("trackingAreas") = NSArray;
override selector("trackingMode") = CULong;
override selector("trackingNumber") = CLong;
override selector("trailingOffset") = Double;
override selector("traitsOfFont:") = CULong, NSFont;
override selector("transactionID") = Int;
override selector("transform") = NSAffineTransform;
override selector("transformBezierPath:") = NSBezierPath, NSBezierPath;
override selector("transformPoint:") = NSPoint, NSPoint;
override selector("transformSize:") = NSSize, NSSize;
override selector("transformStruct") = NSAffineTransformStruct;
override selector("transformUsingAffineTransform:") = Void, NSAffineTransform;
override selector("transformedValue:") = Id, Id;
override selector("transformedValueClass") = Id;
override selector("translateOriginToPoint:") = Void, NSPoint;
override selector("translateRectsNeedingDisplayInRect:by:") = Void, NSRect, NSSize;
override selector("translateXBy:yBy:") = Void, Double, Double;
override selector("transpose:") = Void, Id;
override selector("transposeWords:") = Void, Id;
override selector("treatsFilePackagesAsDirectories") = Bool;
override selector("treeNodeWithRepresentedObject:") = Id, Id;
override selector("truncateFileAtOffset:") = Void, UInt64;
override selector("truncatesLastVisibleLine") = Bool;
override selector("tryLock") = Bool;
override selector("tryLockWhenCondition:") = Bool, CLong;
override selector("tryToPerform:with:") = Bool, SelectorHandle, Id;
override selector("turnOffKerning:") = Void, Id;
override selector("turnOffLigatures:") = Void, Id;
override selector("twoDigitStartDate") = NSDate;
override selector("type") = NSString;
override selector("type:conformsToType:") = Bool, NSString, NSString;
override selector("typeCodeValue") = UInt;
override selector("typeForArgumentWithName:") = NSString, NSString;
override selector("typeForContentsOfURL:error:") = NSString, NSURL, Pointer[NSError];
override selector("typeForKey:") = NSString, NSString;
override selector("typeFromFileExtension:") = NSString, NSString;
override selector("typeOfFile:error:") = NSString, NSString, Pointer[NSError];
override selector("types") = NSArray;
override selector("typesFilterableTo:") = NSArray, NSString;
override selector("typesetter") = NSTypesetter;
override selector("typesetterBehavior") = CLong;
override selector("typingAttributes") = NSDictionary;
override selector("typingStyle") = DOMCSSStyleDeclaration;
override selector("unableToSetNilForKey:") = Void, NSString;
override selector("unarchiveObjectWithData:") = Id, NSData;
override selector("unarchiveObjectWithFile:") = Id, NSString;
override selector("unarchiver:cannotDecodeObjectOfClassName:originalClasses:") = Id, NSKeyedUnarchiver, NSString, NSArray;
override selector("unarchiver:didDecodeObject:") = Id, NSKeyedUnarchiver, Id;
override selector("unarchiver:willReplaceObject:withObject:") = Void, NSKeyedUnarchiver, Id, Id;
override selector("unarchiverDidFinish:") = Void, NSKeyedUnarchiver;
override selector("unarchiverWillFinish:") = Void, NSKeyedUnarchiver;
override selector("unbind:") = Void, NSString;
override selector("undefined") = WebUndefined;
override selector("underline:") = Void, Id;
override selector("underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;
override selector("underlinePosition") = Double;
override selector("underlineThickness") = Double;
override selector("undo") = Void;
override selector("undoActionName") = NSString;
override selector("undoManager") = NSUndoManager;
override selector("undoManagerForTextView:") = NSUndoManager, NSTextView;
override selector("undoManagerForWebView:") = NSUndoManager, WebView;
override selector("undoMenuItemTitle") = NSString;
override selector("undoMenuTitleForUndoActionName:") = NSString, NSString;
override selector("undoNestedGroup") = Void;
override selector("unhide") = Bool;
override selector("unhide:") = Void, Id;
override selector("unhideAllApplications:") = Void, Id;
override selector("unhideWithoutActivation") = Void;
override selector("unicodeBidi") = NSString;
override selector("unionHashTable:") = Void, NSHashTable;
override selector("unionSet:") = Void, NSSet;
override selector("uniqueID") = Id;
override selector("uniqueSpellDocumentTag") = CLong;
override selector("unlearnWord:") = Void, NSString;
override selector("unload") = Bool;
override selector("unlock") = Void;
override selector("unlockFocus") = Void;
override selector("unlockWithCondition:") = Void, CLong;
override selector("unmarkText") = Void;
override selector("unmountAndEjectDeviceAtPath:") = Bool, NSString;
override selector("unmountAndEjectDeviceAtURL:error:") = Bool, NSURL, Pointer[NSError];
override selector("unreachableURL") = NSURL;
override selector("unregisterClass:") = Void, Id;
override selector("unregisterDraggedTypes") = Void;
override selector("unregisterImageRepClass:") = Void, Id;
override selector("unregisterUserInterfaceItemSearchHandler:") = Void, Id;
override selector("unscheduleFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
override selector("unscript:") = Void, Id;
override selector("unscriptRange:") = Void, NSRange;
override selector("unsignedCharValue") = CUChar;
override selector("unsignedIntValue") = UInt;
override selector("unsignedIntegerValue") = CULong;
override selector("unsignedLongLongValue") = UInt64;
override selector("unsignedLongValue") = CULong;
override selector("unsignedShortValue") = UShort;
override selector("update") = Void;
override selector("updateAttachmentsFromPath:") = Void, NSString;
override selector("updateCacheNode:fromManagedObject:") = Void, NSAtomicStoreCacheNode, NSManagedObject;
override selector("updateCell:") = Void, NSCell;
override selector("updateCellInside:") = Void, NSCell;
override selector("updateChangeCount:") = Void, CULong;
override selector("updateDragTypeRegistration") = Void;
override selector("updateFontPanel") = Void;
override selector("updateFromPMPageFormat") = Void;
override selector("updateFromPMPrintSettings") = Void;
override selector("updateFromPath:") = Bool, NSString;
override selector("updateFromPrintInfo") = Void;
override selector("updateInsertionPointStateAndRestartTimer:") = Void, Bool;
override selector("updatePanels") = Void;
override selector("updateRuler") = Void;
override selector("updateScroller") = Void;
override selector("updateSpellingPanelWithGrammarString:detail:") = Void, NSString, NSDictionary;
override selector("updateSpellingPanelWithMisspelledWord:") = Void, NSString;
override selector("updateTrackingAreas") = Void;
override selector("updateWindows") = Void;
override selector("updateWindowsItem:") = Void, NSWindow;
override selector("updatedObjects") = NSSet;
override selector("uppercaseLetterCharacterSet") = Id;
override selector("uppercaseString") = NSString;
override selector("uppercaseWord:") = Void, Id;
override selector("url") = NSURL;
override selector("usableParts") = CULong;
override selector("use") = Void;
override selector("useAllLigatures:") = Void, Id;
override selector("useCredential:forAuthenticationChallenge:") = Void, NSURLCredential, NSURLAuthenticationChallenge;
override selector("useMap") = NSString;
override selector("useOptimizedDrawing:") = Void, Bool;
override selector("useStandardKerning:") = Void, Id;
override selector("useStandardLigatures:") = Void, Id;
override selector("useStoredAccessor") = Bool;
override selector("usedRectForTextContainer:") = NSRect, NSTextContainer;
override selector("user") = NSString;
override selector("userAgentForURL:") = NSString, NSURL;
override selector("userData") = RawPointer;
override selector("userDefaultsChanged") = Bool;
override selector("userFixedPitchFontOfSize:") = NSFont, Double;
override selector("userFontOfSize:") = NSFont, Double;
override selector("userInfo") = Id;
override selector("userInterfaceLayoutDirection") = CLong;
override selector("userKeyEquivalent") = NSString;
override selector("userPreferredLanguages") = NSArray;
override selector("userQuotesArrayForLanguage:") = NSArray, NSString;
override selector("userReplacementsDictionary") = NSDictionary;
override selector("userSpaceScaleFactor") = Double;
override selector("userStyleSheetEnabled") = Bool;
override selector("userStyleSheetLocation") = NSURL;
override selector("usesAlternatingRowBackgroundColors") = Bool;
override selector("usesDataSource") = Bool;
override selector("usesEPSOnResolutionMismatch") = Bool;
override selector("usesFeedbackWindow") = Bool;
override selector("usesFindPanel") = Bool;
override selector("usesFontLeading") = Bool;
override selector("usesFontPanel") = Bool;
override selector("usesGroupingSeparator") = Bool;
override selector("usesItemFromMenu") = Bool;
override selector("usesLazyFetching") = Bool;
override selector("usesPageCache") = Bool;
override selector("usesRuler") = Bool;
override selector("usesScreenFonts") = Bool;
override selector("usesSignificantDigits") = Bool;
override selector("usesSingleLineMode") = Bool;
override selector("usesStrongWriteBarrier") = Bool;
override selector("usesThreadedAnimation") = Bool;
override selector("usesUserKeyEquivalents") = Bool;
override selector("usesWeakReadAndWriteBarriers") = Bool;
override selector("vAlign") = NSString;
override selector("vLink") = NSString;
override selector("validAttributesForMarkedText") = NSArray;
override selector("validModesForFontPanel:") = CULong, NSFontPanel;
override selector("validRequestorForSendType:returnType:") = Id, NSString, NSString;
override selector("validate") = Void;
override selector("validateAndReturnError:") = Bool, Pointer[NSError];
override selector("validateEditing") = Void;
override selector("validateForDelete:") = Bool, Pointer[NSError];
override selector("validateForInsert:") = Bool, Pointer[NSError];
override selector("validateForUpdate:") = Bool, Pointer[NSError];
override selector("validateMenuItem:") = Bool, NSMenuItem;
override selector("validateToolbarItem:") = Bool, NSToolbarItem;
override selector("validateUserInterfaceItem:") = Bool, Id;
override selector("validateValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("validateValue:forKeyPath:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
override selector("validateVisibleColumns") = Void;
override selector("validateVisibleItems") = Void;
override selector("validationPredicates") = NSArray;
override selector("validationWarnings") = NSArray;
override selector("value") = Id;
override selector("value:withObjCType:") = NSValue, RawPointer, Pointer[CChar];
override selector("valueAtIndex:") = Double, CULong;
override selector("valueAtIndex:inPropertyWithKey:") = Id, CULong, NSString;
override selector("valueClassForBinding:") = Id, NSString;
override selector("valueExpression") = NSExpression;
override selector("valueForAttribute:") = Id, NSString;
override selector("valueForDimension:") = Double, CULong;
override selector("valueForHTTPHeaderField:") = NSString, NSString;
override selector("valueForKey:") = Id, NSString;
override selector("valueForKeyPath:") = Id, NSString;
override selector("valueForProperty:") = Id, NSString;
override selector("valueForUndefinedKey:") = Id, NSString;
override selector("valueListAttributes") = NSArray;
override selector("valueLists") = NSDictionary;
override selector("valueOfAttribute:forResultAtIndex:") = Id, NSString, CULong;
override selector("valuePointerFunctions") = NSPointerFunctions;
override selector("valueTransformerForName:") = NSValueTransformer, NSString;
override selector("valueTransformerName") = NSString;
override selector("valueTransformerNames") = NSArray;
override selector("valueType") = NSString;
override selector("valueTypeForDimension:") = CULong, CULong;
override selector("valueWithBytes:objCType:") = NSValue, RawPointer, Pointer[CChar];
override selector("valueWithCATransform3D:") = NSValue, CATransform3D;
override selector("valueWithName:inPropertyWithKey:") = Id, NSString, NSString;
override selector("valueWithNonretainedObject:") = NSValue, Id;
override selector("valueWithPoint:") = NSValue, NSPoint;
override selector("valueWithPointer:") = NSValue, RawPointer;
override selector("valueWithRange:") = NSValue, NSRange;
override selector("valueWithRect:") = NSValue, NSRect;
override selector("valueWithSize:") = NSValue, NSSize;
override selector("valueWithUniqueID:inPropertyWithKey:") = Id, Id, NSString;
override selector("valueWraps") = Bool;
override selector("values") = Id;
override selector("valuesForAttributes:") = NSDictionary, NSArray;
override selector("valuesForKeys:") = NSDictionary, NSArray;
override selector("variable") = NSString;
override selector("vectorWithString:") = CIVector, NSString;
override selector("vectorWithValues:count:") = CIVector, Pointer[Double], CULong;
override selector("vectorWithX:") = CIVector, Double;
override selector("vectorWithX:Y:") = CIVector, Double, Double;
override selector("vectorWithX:Y:Z:") = CIVector, Double, Double, Double;
override selector("vectorWithX:Y:Z:W:") = CIVector, Double, Double, Double, Double;
override selector("vendorDefined") = Id;
override selector("vendorID") = CULong;
override selector("vendorPointingDeviceType") = CULong;
override selector("version") = CLong;
override selector("versionForClassName:") = CLong, NSString;
override selector("versionHash") = NSData;
override selector("versionHashModifier") = NSString;
override selector("versionIdentifiers") = NSSet;
override selector("verticalAlign") = NSString;
override selector("verticalAlignment") = CULong;
override selector("verticalLineScroll") = Double;
override selector("verticalMotionCanBeginDrag") = Bool;
override selector("verticalOverflow") = Bool;
override selector("verticalPageScroll") = Double;
override selector("verticalPagination") = CULong;
override selector("verticalRulerView") = NSRulerView;
override selector("verticalScroller") = NSScroller;
override selector("veryShortMonthSymbols") = NSArray;
override selector("veryShortStandaloneMonthSymbols") = NSArray;
override selector("veryShortStandaloneWeekdaySymbols") = NSArray;
override selector("veryShortWeekdaySymbols") = NSArray;
override selector("view") = Id;
override selector("view:stringForToolTip:point:userData:") = NSString, NSView, CLong, NSPoint, RawPointer;
override selector("viewAnimations") = NSArray;
override selector("viewBoundsChanged:") = Void, NSNotification;
override selector("viewDidEndLiveResize") = Void;
override selector("viewDidHide") = Void;
override selector("viewDidMoveToHostWindow") = Void;
override selector("viewDidMoveToSuperview") = Void;
override selector("viewDidMoveToWindow") = Void;
override selector("viewDidUnhide") = Void;
override selector("viewFrameChanged:") = Void, NSNotification;
override selector("viewSizeChanged:") = Void, Id;
override selector("viewWillDraw") = Void;
override selector("viewWillMoveToHostWindow:") = Void, NSWindow;
override selector("viewWillMoveToSuperview:") = Void, NSView;
override selector("viewWillMoveToWindow:") = Void, NSWindow;
override selector("viewWillStartLiveResize") = Void;
override selector("viewWithTag:") = Id, CLong;
override selector("viewsNeedDisplay") = Bool;
override selector("visibility") = NSString;
override selector("visibilityPriority") = CLong;
override selector("visibleFrame") = NSRect;
override selector("visibleItems") = NSArray;
override selector("visibleRect") = NSRect;
override selector("vlinkColor") = NSString;
override selector("voice") = NSString;
override selector("voiceFamily") = NSString;
override selector("volatileDomainForName:") = NSDictionary, NSString;
override selector("volatileDomainNames") = NSArray;
override selector("volume") = NSString;
override selector("vspace") = Int;
override selector("wait") = Void;
override selector("waitForDataInBackgroundAndNotify") = Void;
override selector("waitForDataInBackgroundAndNotifyForModes:") = Void, NSArray;
override selector("waitUntilAllOperationsAreFinished") = Void;
override selector("waitUntilDate:") = Bool, NSDate;
override selector("waitUntilExit") = Void;
override selector("waitUntilFinished") = Void;
override selector("wantsDefaultClipping") = Bool;
override selector("wantsLayer") = Bool;
override selector("wantsNotificationForMarkedText") = Bool;
override selector("wantsPeriodicDraggingUpdates") = Bool;
override selector("wantsRestingTouches") = Bool;
override selector("wantsToDelayTextChangeNotifications") = Bool;
override selector("wantsToHandleMouseEvents") = Bool;
override selector("wantsToInterpretAllKeystrokes") = Bool;
override selector("wantsToTrackMouse") = Bool;
override selector("wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:") = Bool, NSEvent, NSRect, NSView, CULong;
override selector("warningValue") = Double;
override selector("webArchive") = WebArchive;
override selector("webFrame") = WebFrame;
override selector("webPlugInContainerLoadRequest:inFrame:") = Void, NSURLRequest, NSString;
override selector("webPlugInContainerSelectionColor") = NSColor;
override selector("webPlugInContainerShowStatus:") = Void, NSString;
override selector("webPlugInDestroy") = Void;
override selector("webPlugInInitialize") = Void;
override selector("webPlugInMainResourceDidFailWithError:") = Void, NSError;
override selector("webPlugInMainResourceDidFinishLoading") = Void;
override selector("webPlugInMainResourceDidReceiveData:") = Void, NSData;
override selector("webPlugInMainResourceDidReceiveResponse:") = Void, NSURLResponse;
override selector("webPlugInSetIsSelected:") = Void, Bool;
override selector("webPlugInStart") = Void;
override selector("webPlugInStop") = Void;
override selector("webScriptNameForKey:") = NSString, Pointer[CChar];
override selector("webScriptNameForSelector:") = NSString, SelectorHandle;
override selector("webScriptValueAtIndex:") = Id, UInt;
override selector("webView") = WebView;
override selector("webView:contextMenuItemsForElement:defaultMenuItems:") = NSArray, WebView, NSDictionary, NSArray;
override selector("webView:createWebViewModalDialogWithRequest:") = WebView, WebView, NSURLRequest;
override selector("webView:createWebViewWithRequest:") = WebView, WebView, NSURLRequest;
override selector("webView:decidePolicyForMIMEType:request:frame:decisionListener:") = Void, WebView, NSString, NSURLRequest, WebFrame, Id;
override selector("webView:decidePolicyForNavigationAction:request:frame:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, WebFrame, Id;
override selector("webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, NSString, Id;
override selector("webView:didCancelClientRedirectForFrame:") = Void, WebView, WebFrame;
override selector("webView:didChangeLocationWithinPageForFrame:") = Void, WebView, WebFrame;
override selector("webView:didClearWindowObject:forFrame:") = Void, WebView, WebScriptObject, WebFrame;
override selector("webView:didCommitLoadForFrame:") = Void, WebView, WebFrame;
override selector("webView:didFailLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
override selector("webView:didFailProvisionalLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
override selector("webView:didFinishLoadForFrame:") = Void, WebView, WebFrame;
override selector("webView:didReceiveIcon:forFrame:") = Void, WebView, NSImage, WebFrame;
override selector("webView:didReceiveServerRedirectForProvisionalLoadForFrame:") = Void, WebView, WebFrame;
override selector("webView:didReceiveTitle:forFrame:") = Void, WebView, NSString, WebFrame;
override selector("webView:didStartProvisionalLoadForFrame:") = Void, WebView, WebFrame;
override selector("webView:doCommandBySelector:") = Bool, WebView, SelectorHandle;
override selector("webView:dragDestinationActionMaskForDraggingInfo:") = CULong, WebView, Id;
override selector("webView:dragSourceActionMaskForPoint:") = CULong, WebView, NSPoint;
override selector("webView:drawFooterInRect:") = Void, WebView, NSRect;
override selector("webView:drawHeaderInRect:") = Void, WebView, NSRect;
override selector("webView:identifierForInitialRequest:fromDataSource:") = Id, WebView, NSURLRequest, WebDataSource;
override selector("webView:makeFirstResponder:") = Void, WebView, NSResponder;
override selector("webView:mouseDidMoveOverElement:modifierFlags:") = Void, WebView, NSDictionary, CULong;
override selector("webView:plugInFailedWithError:dataSource:") = Void, WebView, NSError, WebDataSource;
override selector("webView:printFrameView:") = Void, WebView, WebFrameView;
override selector("webView:resource:didCancelAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
override selector("webView:resource:didFailLoadingWithError:fromDataSource:") = Void, WebView, Id, NSError, WebDataSource;
override selector("webView:resource:didFinishLoadingFromDataSource:") = Void, WebView, Id, WebDataSource;
override selector("webView:resource:didReceiveAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
override selector("webView:resource:didReceiveContentLength:fromDataSource:") = Void, WebView, Id, CLong, WebDataSource;
override selector("webView:resource:didReceiveResponse:fromDataSource:") = Void, WebView, Id, NSURLResponse, WebDataSource;
override selector("webView:resource:willSendRequest:redirectResponse:fromDataSource:") = NSURLRequest, WebView, Id, NSURLRequest, NSURLResponse, WebDataSource;
override selector("webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
override selector("webView:runJavaScriptAlertPanelWithMessage:") = Void, WebView, NSString;
override selector("webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:") = Void, WebView, NSString, WebFrame;
override selector("webView:runJavaScriptConfirmPanelWithMessage:") = Bool, WebView, NSString;
override selector("webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
override selector("webView:runJavaScriptTextInputPanelWithPrompt:defaultText:") = NSString, WebView, NSString, NSString;
override selector("webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:") = NSString, WebView, NSString, NSString, WebFrame;
override selector("webView:runOpenPanelForFileButtonWithResultListener:") = Void, WebView, Id;
override selector("webView:runOpenPanelForFileButtonWithResultListener:allowMultipleFiles:") = Void, WebView, Id, Bool;
override selector("webView:setContentRect:") = Void, WebView, NSRect;
override selector("webView:setFrame:") = Void, WebView, NSRect;
override selector("webView:setResizable:") = Void, WebView, Bool;
override selector("webView:setStatusBarVisible:") = Void, WebView, Bool;
override selector("webView:setStatusText:") = Void, WebView, NSString;
override selector("webView:setToolbarsVisible:") = Void, WebView, Bool;
override selector("webView:shouldApplyStyle:toElementsInDOMRange:") = Bool, WebView, DOMCSSStyleDeclaration, DOMRange;
override selector("webView:shouldBeginEditingInDOMRange:") = Bool, WebView, DOMRange;
override selector("webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:") = Bool, WebView, DOMRange, DOMRange, CULong, Bool;
override selector("webView:shouldChangeTypingStyle:toStyle:") = Bool, WebView, DOMCSSStyleDeclaration, DOMCSSStyleDeclaration;
override selector("webView:shouldDeleteDOMRange:") = Bool, WebView, DOMRange;
override selector("webView:shouldEndEditingInDOMRange:") = Bool, WebView, DOMRange;
override selector("webView:shouldInsertNode:replacingDOMRange:givenAction:") = Bool, WebView, DOMNode, DOMRange, WebViewInsertAction;
override selector("webView:shouldInsertText:replacingDOMRange:givenAction:") = Bool, WebView, NSString, DOMRange, WebViewInsertAction;
override selector("webView:shouldPerformAction:fromSender:") = Bool, WebView, SelectorHandle, Id;
override selector("webView:unableToImplementPolicyWithError:frame:") = Void, WebView, NSError, WebFrame;
override selector("webView:validateUserInterfaceItem:defaultValidation:") = Bool, WebView, Id, Bool;
override selector("webView:willCloseFrame:") = Void, WebView, WebFrame;
override selector("webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:") = Void, WebView, NSURL, Double, NSDate, WebFrame;
override selector("webView:willPerformDragDestinationAction:forDraggingInfo:") = Void, WebView, WebDragDestinationAction, Id;
override selector("webView:willPerformDragSourceAction:fromPoint:withPasteboard:") = Void, WebView, WebDragSourceAction, NSPoint, NSPasteboard;
override selector("webView:windowScriptObjectAvailable:") = Void, WebView, WebScriptObject;
override selector("webViewAreToolbarsVisible:") = Bool, WebView;
override selector("webViewClose:") = Void, WebView;
override selector("webViewContentRect:") = NSRect, WebView;
override selector("webViewDidBeginEditing:") = Void, NSNotification;
override selector("webViewDidChange:") = Void, NSNotification;
override selector("webViewDidChangeSelection:") = Void, NSNotification;
override selector("webViewDidChangeTypingStyle:") = Void, NSNotification;
override selector("webViewDidEndEditing:") = Void, NSNotification;
override selector("webViewFirstResponder:") = NSResponder, WebView;
override selector("webViewFocus:") = Void, WebView;
override selector("webViewFooterHeight:") = Float, WebView;
override selector("webViewFrame:") = NSRect, WebView;
override selector("webViewHeaderHeight:") = Float, WebView;
override selector("webViewIsResizable:") = Bool, WebView;
override selector("webViewIsStatusBarVisible:") = Bool, WebView;
override selector("webViewRunModal:") = Void, WebView;
override selector("webViewShow:") = Void, WebView;
override selector("webViewStatusText:") = NSString, WebView;
override selector("webViewUnfocus:") = Void, WebView;
override selector("week") = CLong;
override selector("weekday") = CLong;
override selector("weekdayOrdinal") = CLong;
override selector("weekdaySymbols") = NSArray;
override selector("weightOfFont:") = CLong, NSFont;
override selector("whatToShow") = UInt;
override selector("wheelDelta") = Int;
override selector("wheelDeltaX") = Int;
override selector("wheelDeltaY") = Int;
override selector("which") = Int;
override selector("whiteColor") = NSColor;
override selector("whiteComponent") = Double;
override selector("whiteSpace") = NSString;
override selector("whitespaceAndNewlineCharacterSet") = Id;
override selector("whitespaceCharacterSet") = Id;
override selector("wholeText") = NSString;
override selector("widows") = NSString;
override selector("width") = NSString;
override selector("widthAdjustLimit") = Double;
override selector("widthForLayer:edge:") = Double, CLong, CULong;
override selector("widthForSegment:") = Double, CLong;
override selector("widthOfColumn:") = Double, CLong;
override selector("widthTracksTextView") = Bool;
override selector("widthValueTypeForLayer:edge:") = CULong, CLong, CULong;
override selector("willAccessValueForKey:") = Void, NSString;
override selector("willChange:valuesAtIndexes:forKey:") = Void, CULong, NSIndexSet, NSString;
override selector("willChangeValueForKey:") = Void, NSString;
override selector("willChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, CULong, NSSet;
override selector("willPresentError:") = NSError, NSError;
override selector("willRemoveCacheNodes:") = Void, NSSet;
override selector("willRemoveFromPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
override selector("willRemoveSubview:") = Void, NSView;
override selector("willSave") = Void;
override selector("willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRectPointer, NSRange, NSRectPointer, Pointer[Double];
override selector("willTurnIntoFault") = Void;
override selector("willValidate") = Bool;
override selector("windingRule") = CULong;
override selector("window") = Id;
override selector("window:shouldDragDocumentWithEvent:from:withPasteboard:") = Bool, NSWindow, NSEvent, NSPoint, NSPasteboard;
override selector("window:shouldPopUpDocumentPathMenu:") = Bool, NSWindow, NSMenu;
override selector("window:willPositionSheet:usingRect:") = NSRect, NSWindow, NSWindow, NSRect;
override selector("windowBackgroundColor") = NSColor;
override selector("windowController") = Id;
override selector("windowControllerDidLoadNib:") = Void, NSWindowController;
override selector("windowControllerWillLoadNib:") = Void, NSWindowController;
override selector("windowControllers") = NSArray;
override selector("windowDidBecomeKey:") = Void, NSNotification;
override selector("windowDidBecomeMain:") = Void, NSNotification;
override selector("windowDidChangeScreen:") = Void, NSNotification;
override selector("windowDidChangeScreenProfile:") = Void, NSNotification;
override selector("windowDidDeminiaturize:") = Void, NSNotification;
override selector("windowDidEndLiveResize:") = Void, NSNotification;
override selector("windowDidEndSheet:") = Void, NSNotification;
override selector("windowDidExpose:") = Void, NSNotification;
override selector("windowDidLoad") = Void;
override selector("windowDidMiniaturize:") = Void, NSNotification;
override selector("windowDidMove:") = Void, NSNotification;
override selector("windowDidResignKey:") = Void, NSNotification;
override selector("windowDidResignMain:") = Void, NSNotification;
override selector("windowDidResize:") = Void, NSNotification;
override selector("windowDidUpdate:") = Void, NSNotification;
override selector("windowForSheet") = NSWindow;
override selector("windowFrameAutosaveName") = NSString;
override selector("windowFrameColor") = NSColor;
override selector("windowFrameTextColor") = NSColor;
override selector("windowLevel") = CLong;
override selector("windowNibName") = NSString;
override selector("windowNibPath") = NSString;
override selector("windowNumber") = CLong;
override selector("windowNumberAtPoint:belowWindowWithWindowNumber:") = CLong, NSPoint, CLong;
override selector("windowNumbersWithOptions:") = NSArray, CULong;
override selector("windowObject") = WebScriptObject;
override selector("windowRef") = RawPointer;
override selector("windowScriptObject") = WebScriptObject;
override selector("windowShouldClose:") = Bool, Id;
override selector("windowShouldZoom:toFrame:") = Bool, NSWindow, NSRect;
override selector("windowTitleForDocumentDisplayName:") = NSString, NSString;
override selector("windowWillBeginSheet:") = Void, NSNotification;
override selector("windowWillClose:") = Void, NSNotification;
override selector("windowWillLoad") = Void;
override selector("windowWillMiniaturize:") = Void, NSNotification;
override selector("windowWillMove:") = Void, NSNotification;
override selector("windowWillResize:toSize:") = NSSize, NSWindow, NSSize;
override selector("windowWillReturnFieldEditor:toObject:") = Id, NSWindow, Id;
override selector("windowWillReturnUndoManager:") = NSUndoManager, NSWindow;
override selector("windowWillStartLiveResize:") = Void, NSNotification;
override selector("windowWillUseStandardFrame:defaultFrame:") = NSRect, NSWindow, NSRect;
override selector("windowWithWindowNumber:") = NSWindow, CLong;
override selector("windows") = NSArray;
override selector("windowsLocaleCodeFromLocaleIdentifier:") = UInt, NSString;
override selector("windowsMenu") = NSMenu;
override selector("wordSpacing") = NSString;
override selector("words") = NSArray;
override selector("worksWhenModal") = Bool;
override selector("wrap") = Bool;
override selector("wraps") = Bool;
override selector("writablePasteboardTypes") = NSArray;
override selector("writableTypes") = NSArray;
override selector("writableTypesForPasteboard:") = NSArray, NSPasteboard;
override selector("writableTypesForSaveOperation:") = NSArray, CULong;
override selector("write:") = Void, NSString;
override selector("write:maxLength:") = CLong, Pointer[CUChar], CULong;
override selector("writeBookmarkData:toURL:options:error:") = Bool, NSData, NSURL, CULong, Pointer[NSError];
override selector("writeData:") = Bool, NSData;
override selector("writeEPSInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
override selector("writeElement:withPasteboardTypes:toPasteboard:") = Void, NSDictionary, NSArray, NSPasteboard;
override selector("writeFileContents:") = Bool, NSString;
override selector("writeFileWrapper:") = Bool, NSFileWrapper;
override selector("writeObjects:") = Bool, NSArray;
override selector("writePDFInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
override selector("writePrintInfo") = Void;
override selector("writeProperty:forKey:") = Bool, Id, NSString;
override selector("writePropertyList:toStream:format:options:error:") = CLong, Id, NSOutputStream, CULong, CULong, Pointer[NSError];
override selector("writeRTFDToFile:atomically:") = Bool, NSString, Bool;
override selector("writeSafelyToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
override selector("writeSelectionToPasteboard:type:") = Bool, NSPasteboard, NSString;
override selector("writeSelectionToPasteboard:types:") = Bool, NSPasteboard, NSArray;
override selector("writeSelectionWithPasteboardTypes:toPasteboard:") = Void, NSArray, NSPasteboard;
override selector("writeToFile:") = Bool, NSString;
override selector("writeToFile:atomically:") = Bool, NSString, Bool;
override selector("writeToFile:atomically:encoding:error:") = Bool, NSString, Bool, CULong, Pointer[NSError];
override selector("writeToFile:atomically:updateFilenames:") = Bool, NSString, Bool, Bool;
override selector("writeToFile:ofType:") = Bool, NSString, NSString;
override selector("writeToFile:ofType:originalFile:saveOperation:") = Bool, NSString, NSString, NSString, CULong;
override selector("writeToFile:options:error:") = Bool, NSString, CULong, Pointer[NSError];
override selector("writeToPasteboard:") = Void, NSPasteboard;
override selector("writeToURL:atomically:") = Bool, NSURL, Bool;
override selector("writeToURL:atomically:encoding:error:") = Bool, NSURL, Bool, CULong, Pointer[NSError];
override selector("writeToURL:ofType:") = Bool, NSURL, NSString;
override selector("writeToURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
override selector("writeToURL:ofType:forSaveOperation:originalContentsURL:error:") = Bool, NSURL, NSString, CULong, NSURL, Pointer[NSError];
override selector("writeToURL:options:error:") = Bool, NSURL, CULong, Pointer[NSError];
override selector("writeToURL:options:originalContentsURL:error:") = Bool, NSURL, CULong, NSURL, Pointer[NSError];
override selector("writeWithBackupToFile:ofType:saveOperation:") = Bool, NSString, NSString, CULong;
override selector("writeln:") = Void, NSString;
override selector("writingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
override selector("x") = Int;
override selector("xHeight") = Double;
override selector("xmlEncoding") = NSString;
override selector("xmlStandalone") = Bool;
override selector("xmlVersion") = NSString;
override selector("y") = Int;
override selector("yank:") = Void, Id;
override selector("year") = CLong;
override selector("yearOfCommonEra") = CLong;
override selector("years:months:days:hours:minutes:seconds:sinceDate:") = Void, Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], NSCalendarDate;
override selector("yellowColor") = NSColor;
override selector("yellowComponent") = Double;
override selector("zIndex") = NSString;
override selector("zPosition") = Double;
override selector("zero") = NSDecimalNumber;
override selector("zeroSymbol") = NSString;
override selector("zone") = Pointer[NSZone];
override selector("zoom:") = Void, Id;

record DOMAbstractView = externalClass(DOMObject);
override externalInstanceMethod(#DOMAbstractView, "document") = DOMDocument;

record DOMAttr = externalClass(DOMNode);
override externalInstanceMethod(#DOMAttr, "name") = NSString;
override externalInstanceMethod(#DOMAttr, "specified") = Bool;
override externalInstanceMethod(#DOMAttr, "value") = NSString;
override externalInstanceMethod(#DOMAttr, "setValue:") = Void, NSString;
override externalInstanceMethod(#DOMAttr, "ownerElement") = DOMElement;
override externalInstanceMethod(#DOMAttr, "style") = DOMCSSStyleDeclaration;

record DOMBlob = externalClass(DOMObject);
override externalInstanceMethod(#DOMBlob, "size") = UInt64;

record DOMCDATASection = externalClass(DOMText);

record DOMCSSCharsetRule = externalClass(DOMCSSRule);
override externalInstanceMethod(#DOMCSSCharsetRule, "encoding") = NSString;

record DOMCSSFontFaceRule = externalClass(DOMCSSRule);
override externalInstanceMethod(#DOMCSSFontFaceRule, "style") = DOMCSSStyleDeclaration;

record DOMCSSImportRule = externalClass(DOMCSSRule);
override externalInstanceMethod(#DOMCSSImportRule, "href") = NSString;
override externalInstanceMethod(#DOMCSSImportRule, "media") = DOMMediaList;
override externalInstanceMethod(#DOMCSSImportRule, "styleSheet") = DOMCSSStyleSheet;

record DOMCSSMediaRule = externalClass(DOMCSSRule);
override externalInstanceMethod(#DOMCSSMediaRule, "insertRule:index:") = UInt, NSString, UInt;
override externalInstanceMethod(#DOMCSSMediaRule, "deleteRule:") = Void, UInt;
override externalInstanceMethod(#DOMCSSMediaRule, "media") = DOMMediaList;
override externalInstanceMethod(#DOMCSSMediaRule, "cssRules") = DOMCSSRuleList;
override externalInstanceMethod(#DOMCSSMediaRule, "insertRule::") = UInt, NSString, UInt;

record DOMCSSPageRule = externalClass(DOMCSSRule);
override externalInstanceMethod(#DOMCSSPageRule, "selectorText") = NSString;
override externalInstanceMethod(#DOMCSSPageRule, "setSelectorText:") = Void, NSString;
override externalInstanceMethod(#DOMCSSPageRule, "style") = DOMCSSStyleDeclaration;

record DOMCSSPrimitiveValue = externalClass(DOMCSSValue);
override externalInstanceMethod(#DOMCSSPrimitiveValue, "setFloatValue:floatValue:") = Void, UShort, Float;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "getFloatValue:") = Float, UShort;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "setStringValue:stringValue:") = Void, UShort, NSString;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "getStringValue") = NSString;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "getCounterValue") = DOMCounter;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "getRectValue") = DOMRect;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "getRGBColorValue") = DOMRGBColor;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "primitiveType") = UShort;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "setFloatValue::") = Void, UShort, Float;
override externalInstanceMethod(#DOMCSSPrimitiveValue, "setStringValue::") = Void, UShort, NSString;

record DOMCSSRule = externalClass(DOMObject);
override externalInstanceMethod(#DOMCSSRule, "type") = UShort;
override externalInstanceMethod(#DOMCSSRule, "cssText") = NSString;
override externalInstanceMethod(#DOMCSSRule, "setCssText:") = Void, NSString;
override externalInstanceMethod(#DOMCSSRule, "parentStyleSheet") = DOMCSSStyleSheet;
override externalInstanceMethod(#DOMCSSRule, "parentRule") = DOMCSSRule;

record DOMCSSRuleList = externalClass(DOMObject);
override externalInstanceMethod(#DOMCSSRuleList, "item:") = DOMCSSRule, UInt;
override externalInstanceMethod(#DOMCSSRuleList, "length") = UInt;

record DOMCSSStyleDeclaration = externalClass(DOMObject);
override externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyValue:") = NSString, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyCSSValue:") = DOMCSSValue, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "removeProperty:") = NSString, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyPriority:") = NSString, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setProperty:value:priority:") = Void, NSString, NSString, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "item:") = NSString, UInt;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyShorthand:") = NSString, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "isPropertyImplicit:") = Bool, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "cssText") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCssText:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "length") = UInt;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "parentRule") = DOMCSSRule;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setProperty:::") = Void, NSString, NSString, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "azimuth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setAzimuth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "background") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackground:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundAttachment") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundAttachment:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundColor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundImage") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundImage:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundPosition") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundPosition:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundRepeat") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundRepeat:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "border") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorder:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderCollapse") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderCollapse:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderColor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderSpacing") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderSpacing:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTop") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTop:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRight") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottom") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottom:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeft") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeft:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTopColor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTopColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRightColor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRightColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottomColor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottomColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeftColor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeftColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTopStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTopStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRightStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRightStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottomStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottomStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeftStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeftStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTopWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTopWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRightWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRightWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottomWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottomWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeftWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeftWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "borderWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "bottom") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setBottom:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "captionSide") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCaptionSide:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "clear") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setClear:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "clip") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setClip:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "color") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "content") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setContent:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "counterIncrement") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCounterIncrement:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "counterReset") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCounterReset:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "cue") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCue:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "cueAfter") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCueAfter:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "cueBefore") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCueBefore:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "cursor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCursor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "direction") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setDirection:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "display") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setDisplay:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "elevation") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setElevation:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "emptyCells") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setEmptyCells:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "cssFloat") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setCssFloat:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "font") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFont:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "fontFamily") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontFamily:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "fontSize") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontSize:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "fontSizeAdjust") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontSizeAdjust:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "fontStretch") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontStretch:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "fontStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "fontVariant") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontVariant:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "fontWeight") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontWeight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "height") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setHeight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "left") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setLeft:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "letterSpacing") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setLetterSpacing:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "lineHeight") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setLineHeight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "listStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "listStyleImage") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStyleImage:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "listStylePosition") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStylePosition:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "listStyleType") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStyleType:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "margin") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMargin:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "marginTop") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginTop:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "marginRight") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginRight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "marginBottom") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginBottom:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "marginLeft") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginLeft:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "markerOffset") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarkerOffset:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "marks") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarks:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "maxHeight") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMaxHeight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "maxWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMaxWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "minHeight") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMinHeight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "minWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setMinWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "orphans") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setOrphans:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "outline") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutline:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "outlineColor") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutlineColor:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "outlineStyle") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutlineStyle:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "outlineWidth") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutlineWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "overflow") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setOverflow:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "padding") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPadding:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingTop") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingTop:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingRight") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingRight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingBottom") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingBottom:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingLeft") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingLeft:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "page") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPage:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pageBreakAfter") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPageBreakAfter:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pageBreakBefore") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPageBreakBefore:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pageBreakInside") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPageBreakInside:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pause") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPause:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pauseAfter") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPauseAfter:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pauseBefore") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPauseBefore:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pitch") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPitch:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "pitchRange") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPitchRange:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "playDuring") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPlayDuring:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "position") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setPosition:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "quotes") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setQuotes:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "richness") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setRichness:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "right") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setRight:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "size") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setSize:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "speak") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeak:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "speakHeader") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeakHeader:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "speakNumeral") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeakNumeral:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "speakPunctuation") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeakPunctuation:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "speechRate") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeechRate:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "stress") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setStress:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "tableLayout") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setTableLayout:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "textAlign") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextAlign:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "textDecoration") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextDecoration:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "textIndent") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextIndent:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "textShadow") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextShadow:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "textTransform") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextTransform:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "top") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setTop:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "unicodeBidi") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setUnicodeBidi:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "verticalAlign") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setVerticalAlign:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "visibility") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setVisibility:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "voiceFamily") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setVoiceFamily:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "volume") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setVolume:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "whiteSpace") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setWhiteSpace:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "widows") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setWidows:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "width") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setWidth:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "wordSpacing") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setWordSpacing:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "zIndex") = NSString;
override externalInstanceMethod(#DOMCSSStyleDeclaration, "setZIndex:") = Void, NSString;

record DOMCSSStyleRule = externalClass(DOMCSSRule);
override externalInstanceMethod(#DOMCSSStyleRule, "selectorText") = NSString;
override externalInstanceMethod(#DOMCSSStyleRule, "setSelectorText:") = Void, NSString;
override externalInstanceMethod(#DOMCSSStyleRule, "style") = DOMCSSStyleDeclaration;

record DOMCSSStyleSheet = externalClass(DOMStyleSheet);
override externalInstanceMethod(#DOMCSSStyleSheet, "insertRule:index:") = UInt, NSString, UInt;
override externalInstanceMethod(#DOMCSSStyleSheet, "deleteRule:") = Void, UInt;
override externalInstanceMethod(#DOMCSSStyleSheet, "addRule:style:index:") = Int, NSString, NSString, UInt;
override externalInstanceMethod(#DOMCSSStyleSheet, "removeRule:") = Void, UInt;
override externalInstanceMethod(#DOMCSSStyleSheet, "ownerRule") = DOMCSSRule;
override externalInstanceMethod(#DOMCSSStyleSheet, "cssRules") = DOMCSSRuleList;
override externalInstanceMethod(#DOMCSSStyleSheet, "rules") = DOMCSSRuleList;
override externalInstanceMethod(#DOMCSSStyleSheet, "insertRule::") = UInt, NSString, UInt;

record DOMCSSUnknownRule = externalClass(DOMCSSRule);

record DOMCSSValue = externalClass(DOMObject);
override externalInstanceMethod(#DOMCSSValue, "cssText") = NSString;
override externalInstanceMethod(#DOMCSSValue, "setCssText:") = Void, NSString;
override externalInstanceMethod(#DOMCSSValue, "cssValueType") = UShort;

record DOMCSSValueList = externalClass(DOMCSSValue);
override externalInstanceMethod(#DOMCSSValueList, "item:") = DOMCSSValue, UInt;
override externalInstanceMethod(#DOMCSSValueList, "length") = UInt;

record DOMCharacterData = externalClass(DOMNode);
override externalInstanceMethod(#DOMCharacterData, "substringData:length:") = NSString, UInt, UInt;
override externalInstanceMethod(#DOMCharacterData, "appendData:") = Void, NSString;
override externalInstanceMethod(#DOMCharacterData, "insertData:data:") = Void, UInt, NSString;
override externalInstanceMethod(#DOMCharacterData, "deleteData:length:") = Void, UInt, UInt;
override externalInstanceMethod(#DOMCharacterData, "replaceData:length:data:") = Void, UInt, UInt, NSString;
override externalInstanceMethod(#DOMCharacterData, "data") = NSString;
override externalInstanceMethod(#DOMCharacterData, "setData:") = Void, NSString;
override externalInstanceMethod(#DOMCharacterData, "length") = UInt;
override externalInstanceMethod(#DOMCharacterData, "substringData::") = NSString, UInt, UInt;
override externalInstanceMethod(#DOMCharacterData, "insertData::") = Void, UInt, NSString;
override externalInstanceMethod(#DOMCharacterData, "deleteData::") = Void, UInt, UInt;
override externalInstanceMethod(#DOMCharacterData, "replaceData:::") = Void, UInt, UInt, NSString;

record DOMComment = externalClass(DOMCharacterData);

record DOMCounter = externalClass(DOMObject);
override externalInstanceMethod(#DOMCounter, "identifier") = NSString;
override externalInstanceMethod(#DOMCounter, "listStyle") = NSString;
override externalInstanceMethod(#DOMCounter, "separator") = NSString;

record DOMDocument = externalClass(DOMNode);
override externalInstanceMethod(#DOMDocument, "createElement:") = DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "createDocumentFragment") = DOMDocumentFragment;
override externalInstanceMethod(#DOMDocument, "createTextNode:") = DOMText, NSString;
override externalInstanceMethod(#DOMDocument, "createComment:") = DOMComment, NSString;
override externalInstanceMethod(#DOMDocument, "createCDATASection:") = DOMCDATASection, NSString;
override externalInstanceMethod(#DOMDocument, "createProcessingInstruction:data:") = DOMProcessingInstruction, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "createAttribute:") = DOMAttr, NSString;
override externalInstanceMethod(#DOMDocument, "createEntityReference:") = DOMEntityReference, NSString;
override externalInstanceMethod(#DOMDocument, "getElementsByTagName:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMDocument, "importNode:deep:") = DOMNode, DOMNode, Bool;
override externalInstanceMethod(#DOMDocument, "createElementNS:qualifiedName:") = DOMElement, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "createAttributeNS:qualifiedName:") = DOMAttr, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "getElementsByTagNameNS:localName:") = DOMNodeList, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "getElementById:") = DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "adoptNode:") = DOMNode, DOMNode;
override externalInstanceMethod(#DOMDocument, "createEvent:") = DOMEvent, NSString;
override externalInstanceMethod(#DOMDocument, "createRange") = DOMRange;
override externalInstanceMethod(#DOMDocument, "createNodeIterator:whatToShow:filter:expandEntityReferences:") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
override externalInstanceMethod(#DOMDocument, "createTreeWalker:whatToShow:filter:expandEntityReferences:") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
override externalInstanceMethod(#DOMDocument, "getOverrideStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "createExpression:resolver:") = DOMXPathExpression, NSString, Id;
override externalInstanceMethod(#DOMDocument, "createNSResolver:") = Id, DOMNode;
override externalInstanceMethod(#DOMDocument, "evaluate:contextNode:resolver:type:inResult:") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
override externalInstanceMethod(#DOMDocument, "execCommand:userInterface:value:") = Bool, NSString, Bool, NSString;
override externalInstanceMethod(#DOMDocument, "execCommand:userInterface:") = Bool, NSString, Bool;
override externalInstanceMethod(#DOMDocument, "execCommand:") = Bool, NSString;
override externalInstanceMethod(#DOMDocument, "queryCommandEnabled:") = Bool, NSString;
override externalInstanceMethod(#DOMDocument, "queryCommandIndeterm:") = Bool, NSString;
override externalInstanceMethod(#DOMDocument, "queryCommandState:") = Bool, NSString;
override externalInstanceMethod(#DOMDocument, "queryCommandSupported:") = Bool, NSString;
override externalInstanceMethod(#DOMDocument, "queryCommandValue:") = NSString, NSString;
override externalInstanceMethod(#DOMDocument, "getElementsByName:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMDocument, "elementFromPoint:y:") = DOMElement, Int, Int;
override externalInstanceMethod(#DOMDocument, "createCSSStyleDeclaration") = DOMCSSStyleDeclaration;
override externalInstanceMethod(#DOMDocument, "getComputedStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "getMatchedCSSRules:pseudoElement:") = DOMCSSRuleList, DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "getMatchedCSSRules:pseudoElement:authorOnly:") = DOMCSSRuleList, DOMElement, NSString, Bool;
override externalInstanceMethod(#DOMDocument, "getElementsByClassName:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMDocument, "querySelector:") = DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "querySelectorAll:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMDocument, "doctype") = DOMDocumentType;
override externalInstanceMethod(#DOMDocument, "implementation") = DOMImplementation;
override externalInstanceMethod(#DOMDocument, "documentElement") = DOMElement;
override externalInstanceMethod(#DOMDocument, "inputEncoding") = NSString;
override externalInstanceMethod(#DOMDocument, "xmlEncoding") = NSString;
override externalInstanceMethod(#DOMDocument, "xmlVersion") = NSString;
override externalInstanceMethod(#DOMDocument, "setXmlVersion:") = Void, NSString;
override externalInstanceMethod(#DOMDocument, "xmlStandalone") = Bool;
override externalInstanceMethod(#DOMDocument, "setXmlStandalone:") = Void, Bool;
override externalInstanceMethod(#DOMDocument, "documentURI") = NSString;
override externalInstanceMethod(#DOMDocument, "setDocumentURI:") = Void, NSString;
override externalInstanceMethod(#DOMDocument, "defaultView") = DOMAbstractView;
override externalInstanceMethod(#DOMDocument, "styleSheets") = DOMStyleSheetList;
override externalInstanceMethod(#DOMDocument, "title") = NSString;
override externalInstanceMethod(#DOMDocument, "setTitle:") = Void, NSString;
override externalInstanceMethod(#DOMDocument, "referrer") = NSString;
override externalInstanceMethod(#DOMDocument, "domain") = NSString;
override externalInstanceMethod(#DOMDocument, "URL") = NSString;
override externalInstanceMethod(#DOMDocument, "cookie") = NSString;
override externalInstanceMethod(#DOMDocument, "setCookie:") = Void, NSString;
override externalInstanceMethod(#DOMDocument, "body") = DOMHTMLElement;
override externalInstanceMethod(#DOMDocument, "setBody:") = Void, DOMHTMLElement;
override externalInstanceMethod(#DOMDocument, "images") = DOMHTMLCollection;
override externalInstanceMethod(#DOMDocument, "applets") = DOMHTMLCollection;
override externalInstanceMethod(#DOMDocument, "links") = DOMHTMLCollection;
override externalInstanceMethod(#DOMDocument, "forms") = DOMHTMLCollection;
override externalInstanceMethod(#DOMDocument, "anchors") = DOMHTMLCollection;
override externalInstanceMethod(#DOMDocument, "lastModified") = NSString;
override externalInstanceMethod(#DOMDocument, "charset") = NSString;
override externalInstanceMethod(#DOMDocument, "setCharset:") = Void, NSString;
override externalInstanceMethod(#DOMDocument, "defaultCharset") = NSString;
override externalInstanceMethod(#DOMDocument, "readyState") = NSString;
override externalInstanceMethod(#DOMDocument, "characterSet") = NSString;
override externalInstanceMethod(#DOMDocument, "preferredStylesheetSet") = NSString;
override externalInstanceMethod(#DOMDocument, "selectedStylesheetSet") = NSString;
override externalInstanceMethod(#DOMDocument, "setSelectedStylesheetSet:") = Void, NSString;
override externalInstanceMethod(#DOMDocument, "createProcessingInstruction::") = DOMProcessingInstruction, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "importNode::") = DOMNode, DOMNode, Bool;
override externalInstanceMethod(#DOMDocument, "createElementNS::") = DOMElement, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "createAttributeNS::") = DOMAttr, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "getElementsByTagNameNS::") = DOMNodeList, NSString, NSString;
override externalInstanceMethod(#DOMDocument, "createNodeIterator::::") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
override externalInstanceMethod(#DOMDocument, "createTreeWalker::::") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
override externalInstanceMethod(#DOMDocument, "getOverrideStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "createExpression::") = DOMXPathExpression, NSString, Id;
override externalInstanceMethod(#DOMDocument, "evaluate:::::") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
override externalInstanceMethod(#DOMDocument, "getComputedStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
override externalInstanceMethod(#DOMDocument, "webFrame") = WebFrame;
override externalInstanceMethod(#DOMDocument, "URLWithAttributeString:") = NSURL, NSString;

record DOMDocumentFragment = externalClass(DOMNode);

record DOMDocumentType = externalClass(DOMNode);
override externalInstanceMethod(#DOMDocumentType, "name") = NSString;
override externalInstanceMethod(#DOMDocumentType, "entities") = DOMNamedNodeMap;
override externalInstanceMethod(#DOMDocumentType, "notations") = DOMNamedNodeMap;
override externalInstanceMethod(#DOMDocumentType, "publicId") = NSString;
override externalInstanceMethod(#DOMDocumentType, "systemId") = NSString;
override externalInstanceMethod(#DOMDocumentType, "internalSubset") = NSString;

record DOMElement = externalClass(DOMNode);
override externalInstanceMethod(#DOMElement, "getAttribute:") = NSString, NSString;
override externalInstanceMethod(#DOMElement, "setAttribute:value:") = Void, NSString, NSString;
override externalInstanceMethod(#DOMElement, "removeAttribute:") = Void, NSString;
override externalInstanceMethod(#DOMElement, "getAttributeNode:") = DOMAttr, NSString;
override externalInstanceMethod(#DOMElement, "setAttributeNode:") = DOMAttr, DOMAttr;
override externalInstanceMethod(#DOMElement, "removeAttributeNode:") = DOMAttr, DOMAttr;
override externalInstanceMethod(#DOMElement, "getElementsByTagName:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMElement, "getAttributeNS:localName:") = NSString, NSString, NSString;
override externalInstanceMethod(#DOMElement, "setAttributeNS:qualifiedName:value:") = Void, NSString, NSString, NSString;
override externalInstanceMethod(#DOMElement, "removeAttributeNS:localName:") = Void, NSString, NSString;
override externalInstanceMethod(#DOMElement, "getElementsByTagNameNS:localName:") = DOMNodeList, NSString, NSString;
override externalInstanceMethod(#DOMElement, "getAttributeNodeNS:localName:") = DOMAttr, NSString, NSString;
override externalInstanceMethod(#DOMElement, "setAttributeNodeNS:") = DOMAttr, DOMAttr;
override externalInstanceMethod(#DOMElement, "hasAttribute:") = Bool, NSString;
override externalInstanceMethod(#DOMElement, "hasAttributeNS:localName:") = Bool, NSString, NSString;
override externalInstanceMethod(#DOMElement, "focus") = Void;
override externalInstanceMethod(#DOMElement, "blur") = Void;
override externalInstanceMethod(#DOMElement, "scrollIntoView:") = Void, Bool;
override externalInstanceMethod(#DOMElement, "contains:") = Bool, DOMElement;
override externalInstanceMethod(#DOMElement, "scrollIntoViewIfNeeded:") = Void, Bool;
override externalInstanceMethod(#DOMElement, "scrollByLines:") = Void, Int;
override externalInstanceMethod(#DOMElement, "scrollByPages:") = Void, Int;
override externalInstanceMethod(#DOMElement, "getElementsByClassName:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMElement, "querySelector:") = DOMElement, NSString;
override externalInstanceMethod(#DOMElement, "querySelectorAll:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMElement, "tagName") = NSString;
override externalInstanceMethod(#DOMElement, "style") = DOMCSSStyleDeclaration;
override externalInstanceMethod(#DOMElement, "offsetLeft") = Int;
override externalInstanceMethod(#DOMElement, "offsetTop") = Int;
override externalInstanceMethod(#DOMElement, "offsetWidth") = Int;
override externalInstanceMethod(#DOMElement, "offsetHeight") = Int;
override externalInstanceMethod(#DOMElement, "offsetParent") = DOMElement;
override externalInstanceMethod(#DOMElement, "clientLeft") = Int;
override externalInstanceMethod(#DOMElement, "clientTop") = Int;
override externalInstanceMethod(#DOMElement, "clientWidth") = Int;
override externalInstanceMethod(#DOMElement, "clientHeight") = Int;
override externalInstanceMethod(#DOMElement, "scrollLeft") = Int;
override externalInstanceMethod(#DOMElement, "setScrollLeft:") = Void, Int;
override externalInstanceMethod(#DOMElement, "scrollTop") = Int;
override externalInstanceMethod(#DOMElement, "setScrollTop:") = Void, Int;
override externalInstanceMethod(#DOMElement, "scrollWidth") = Int;
override externalInstanceMethod(#DOMElement, "scrollHeight") = Int;
override externalInstanceMethod(#DOMElement, "firstElementChild") = DOMElement;
override externalInstanceMethod(#DOMElement, "lastElementChild") = DOMElement;
override externalInstanceMethod(#DOMElement, "previousElementSibling") = DOMElement;
override externalInstanceMethod(#DOMElement, "nextElementSibling") = DOMElement;
override externalInstanceMethod(#DOMElement, "childElementCount") = UInt;
override externalInstanceMethod(#DOMElement, "innerText") = NSString;
override externalInstanceMethod(#DOMElement, "setAttribute::") = Void, NSString, NSString;
override externalInstanceMethod(#DOMElement, "getAttributeNS::") = NSString, NSString, NSString;
override externalInstanceMethod(#DOMElement, "setAttributeNS:::") = Void, NSString, NSString, NSString;
override externalInstanceMethod(#DOMElement, "removeAttributeNS::") = Void, NSString, NSString;
override externalInstanceMethod(#DOMElement, "getElementsByTagNameNS::") = DOMNodeList, NSString, NSString;
override externalInstanceMethod(#DOMElement, "getAttributeNodeNS::") = DOMAttr, NSString, NSString;
override externalInstanceMethod(#DOMElement, "hasAttributeNS::") = Bool, NSString, NSString;
override externalInstanceMethod(#DOMElement, "image") = NSImage;

record DOMEntity = externalClass(DOMNode);
override externalInstanceMethod(#DOMEntity, "publicId") = NSString;
override externalInstanceMethod(#DOMEntity, "systemId") = NSString;
override externalInstanceMethod(#DOMEntity, "notationName") = NSString;

record DOMEntityReference = externalClass(DOMNode);

record DOMEvent = externalClass(DOMObject);
override externalInstanceMethod(#DOMEvent, "stopPropagation") = Void;
override externalInstanceMethod(#DOMEvent, "preventDefault") = Void;
override externalInstanceMethod(#DOMEvent, "initEvent:canBubbleArg:cancelableArg:") = Void, NSString, Bool, Bool;
override externalInstanceMethod(#DOMEvent, "type") = NSString;
override externalInstanceMethod(#DOMEvent, "target") = Id;
override externalInstanceMethod(#DOMEvent, "currentTarget") = Id;
override externalInstanceMethod(#DOMEvent, "eventPhase") = UShort;
override externalInstanceMethod(#DOMEvent, "bubbles") = Bool;
override externalInstanceMethod(#DOMEvent, "cancelable") = Bool;
override externalInstanceMethod(#DOMEvent, "timeStamp") = UInt64;
override externalInstanceMethod(#DOMEvent, "srcElement") = Id;
override externalInstanceMethod(#DOMEvent, "returnValue") = Bool;
override externalInstanceMethod(#DOMEvent, "setReturnValue:") = Void, Bool;
override externalInstanceMethod(#DOMEvent, "cancelBubble") = Bool;
override externalInstanceMethod(#DOMEvent, "setCancelBubble:") = Void, Bool;
override externalInstanceMethod(#DOMEvent, "initEvent:::") = Void, NSString, Bool, Bool;

record DOMFile = externalClass(DOMBlob);
override externalInstanceMethod(#DOMFile, "name") = NSString;
override externalInstanceMethod(#DOMFile, "fileName") = NSString;
override externalInstanceMethod(#DOMFile, "fileSize") = UInt64;

record DOMFileList = externalClass(DOMObject);
override externalInstanceMethod(#DOMFileList, "item:") = DOMFile, UInt;
override externalInstanceMethod(#DOMFileList, "length") = UInt;

record DOMHTMLAnchorElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLAnchorElement, "accessKey") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setAccessKey:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "charset") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setCharset:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "coords") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setCoords:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "href") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setHref:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "hreflang") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setHreflang:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "rel") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setRel:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "rev") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setRev:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "shape") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setShape:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "target") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setTarget:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "hashName") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "host") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "hostname") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "pathname") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "port") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "protocol") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "search") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "text") = NSString;
override externalInstanceMethod(#DOMHTMLAnchorElement, "absoluteLinkURL") = NSURL;

record DOMHTMLAppletElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLAppletElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "alt") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setAlt:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "archive") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setArchive:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "code") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setCode:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "codeBase") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setCodeBase:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "height") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setHeight:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "hspace") = Int;
override externalInstanceMethod(#DOMHTMLAppletElement, "setHspace:") = Void, Int;
override externalInstanceMethod(#DOMHTMLAppletElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "object") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setObject:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "vspace") = Int;
override externalInstanceMethod(#DOMHTMLAppletElement, "setVspace:") = Void, Int;
override externalInstanceMethod(#DOMHTMLAppletElement, "width") = NSString;
override externalInstanceMethod(#DOMHTMLAppletElement, "setWidth:") = Void, NSString;

record DOMHTMLAreaElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLAreaElement, "accessKey") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "setAccessKey:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "alt") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "setAlt:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "coords") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "setCoords:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "href") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "setHref:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "noHref") = Bool;
override externalInstanceMethod(#DOMHTMLAreaElement, "setNoHref:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLAreaElement, "shape") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "setShape:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "target") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "setTarget:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "hashName") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "host") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "hostname") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "pathname") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "port") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "protocol") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "search") = NSString;
override externalInstanceMethod(#DOMHTMLAreaElement, "absoluteLinkURL") = NSURL;

record DOMHTMLBRElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLBRElement, "clear") = NSString;
override externalInstanceMethod(#DOMHTMLBRElement, "setClear:") = Void, NSString;

record DOMHTMLBaseElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLBaseElement, "href") = NSString;
override externalInstanceMethod(#DOMHTMLBaseElement, "setHref:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBaseElement, "target") = NSString;
override externalInstanceMethod(#DOMHTMLBaseElement, "setTarget:") = Void, NSString;

record DOMHTMLBaseFontElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLBaseFontElement, "color") = NSString;
override externalInstanceMethod(#DOMHTMLBaseFontElement, "setColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBaseFontElement, "face") = NSString;
override externalInstanceMethod(#DOMHTMLBaseFontElement, "setFace:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBaseFontElement, "size") = NSString;
override externalInstanceMethod(#DOMHTMLBaseFontElement, "setSize:") = Void, NSString;

record DOMHTMLBodyElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLBodyElement, "aLink") = NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "setALink:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "background") = NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "setBackground:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "bgColor") = NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "setBgColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "link") = NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "setLink:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "text") = NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "setText:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "vLink") = NSString;
override externalInstanceMethod(#DOMHTMLBodyElement, "setVLink:") = Void, NSString;

record DOMHTMLButtonElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLButtonElement, "click") = Void;
override externalInstanceMethod(#DOMHTMLButtonElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLButtonElement, "accessKey") = NSString;
override externalInstanceMethod(#DOMHTMLButtonElement, "setAccessKey:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLButtonElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLButtonElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLButtonElement, "autofocus") = Bool;
override externalInstanceMethod(#DOMHTMLButtonElement, "setAutofocus:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLButtonElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLButtonElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLButtonElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLButtonElement, "value") = NSString;
override externalInstanceMethod(#DOMHTMLButtonElement, "setValue:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLButtonElement, "willValidate") = Bool;

record DOMHTMLCollection = externalClass(DOMObject);
override externalInstanceMethod(#DOMHTMLCollection, "item:") = DOMNode, UInt;
override externalInstanceMethod(#DOMHTMLCollection, "namedItem:") = DOMNode, NSString;
override externalInstanceMethod(#DOMHTMLCollection, "tags:") = DOMNodeList, NSString;
override externalInstanceMethod(#DOMHTMLCollection, "length") = UInt;

record DOMHTMLDListElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLDListElement, "compact") = Bool;
override externalInstanceMethod(#DOMHTMLDListElement, "setCompact:") = Void, Bool;

record DOMHTMLDirectoryElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLDirectoryElement, "compact") = Bool;
override externalInstanceMethod(#DOMHTMLDirectoryElement, "setCompact:") = Void, Bool;

record DOMHTMLDivElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLDivElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLDivElement, "setAlign:") = Void, NSString;

record DOMHTMLDocument = externalClass(DOMDocument);
override externalInstanceMethod(#DOMHTMLDocument, "open") = Void;
override externalInstanceMethod(#DOMHTMLDocument, "close") = Void;
override externalInstanceMethod(#DOMHTMLDocument, "write:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "writeln:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "clear") = Void;
override externalInstanceMethod(#DOMHTMLDocument, "captureEvents") = Void;
override externalInstanceMethod(#DOMHTMLDocument, "releaseEvents") = Void;
override externalInstanceMethod(#DOMHTMLDocument, "hasFocus") = Bool;
override externalInstanceMethod(#DOMHTMLDocument, "embeds") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLDocument, "plugins") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLDocument, "scripts") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLDocument, "width") = Int;
override externalInstanceMethod(#DOMHTMLDocument, "height") = Int;
override externalInstanceMethod(#DOMHTMLDocument, "dir") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "setDir:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "designMode") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "setDesignMode:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "compatMode") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "activeElement") = DOMElement;
override externalInstanceMethod(#DOMHTMLDocument, "bgColor") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "setBgColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "fgColor") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "setFgColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "alinkColor") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "setAlinkColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "linkColor") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "setLinkColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "vlinkColor") = NSString;
override externalInstanceMethod(#DOMHTMLDocument, "setVlinkColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLDocument, "createDocumentFragmentWithMarkupString:baseURL:") = DOMDocumentFragment, NSString, NSURL;
override externalInstanceMethod(#DOMHTMLDocument, "createDocumentFragmentWithText:") = DOMDocumentFragment, NSString;

record DOMHTMLElement = externalClass(DOMElement);
override externalInstanceMethod(#DOMHTMLElement, "idName") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setIdName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "title") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setTitle:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "lang") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setLang:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "dir") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setDir:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "className") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setClassName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "tabIndex") = Int;
override externalInstanceMethod(#DOMHTMLElement, "setTabIndex:") = Void, Int;
override externalInstanceMethod(#DOMHTMLElement, "innerHTML") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setInnerHTML:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "innerText") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setInnerText:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "outerHTML") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setOuterHTML:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "outerText") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setOuterText:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "children") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLElement, "contentEditable") = NSString;
override externalInstanceMethod(#DOMHTMLElement, "setContentEditable:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLElement, "isContentEditable") = Bool;
override externalInstanceMethod(#DOMHTMLElement, "titleDisplayString") = NSString;

record DOMHTMLEmbedElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLEmbedElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "height") = Int;
override externalInstanceMethod(#DOMHTMLEmbedElement, "setHeight:") = Void, Int;
override externalInstanceMethod(#DOMHTMLEmbedElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "src") = NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "setSrc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLEmbedElement, "width") = Int;
override externalInstanceMethod(#DOMHTMLEmbedElement, "setWidth:") = Void, Int;

record DOMHTMLFieldSetElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLFieldSetElement, "form") = DOMHTMLFormElement;

record DOMHTMLFontElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLFontElement, "color") = NSString;
override externalInstanceMethod(#DOMHTMLFontElement, "setColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFontElement, "face") = NSString;
override externalInstanceMethod(#DOMHTMLFontElement, "setFace:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFontElement, "size") = NSString;
override externalInstanceMethod(#DOMHTMLFontElement, "setSize:") = Void, NSString;

record DOMHTMLFormElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLFormElement, "submit") = Void;
override externalInstanceMethod(#DOMHTMLFormElement, "reset") = Void;
override externalInstanceMethod(#DOMHTMLFormElement, "elements") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLFormElement, "length") = Int;
override externalInstanceMethod(#DOMHTMLFormElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "acceptCharset") = NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "setAcceptCharset:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "action") = NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "setAction:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "encoding") = NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "setEncoding:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "enctype") = NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "setEnctype:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "method") = NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "setMethod:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "target") = NSString;
override externalInstanceMethod(#DOMHTMLFormElement, "setTarget:") = Void, NSString;

record DOMHTMLFrameElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLFrameElement, "frameBorder") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setFrameBorder:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "longDesc") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setLongDesc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "marginHeight") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setMarginHeight:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "marginWidth") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setMarginWidth:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "noResize") = Bool;
override externalInstanceMethod(#DOMHTMLFrameElement, "setNoResize:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLFrameElement, "scrolling") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setScrolling:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "src") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setSrc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "contentDocument") = DOMDocument;
override externalInstanceMethod(#DOMHTMLFrameElement, "contentWindow") = DOMAbstractView;
override externalInstanceMethod(#DOMHTMLFrameElement, "location") = NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "setLocation:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameElement, "width") = Int;
override externalInstanceMethod(#DOMHTMLFrameElement, "height") = Int;
override externalInstanceMethod(#DOMHTMLFrameElement, "contentFrame") = WebFrame;

record DOMHTMLFrameSetElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLFrameSetElement, "cols") = NSString;
override externalInstanceMethod(#DOMHTMLFrameSetElement, "setCols:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLFrameSetElement, "rows") = NSString;
override externalInstanceMethod(#DOMHTMLFrameSetElement, "setRows:") = Void, NSString;

record DOMHTMLHRElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLHRElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLHRElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLHRElement, "noShade") = Bool;
override externalInstanceMethod(#DOMHTMLHRElement, "setNoShade:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLHRElement, "size") = NSString;
override externalInstanceMethod(#DOMHTMLHRElement, "setSize:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLHRElement, "width") = NSString;
override externalInstanceMethod(#DOMHTMLHRElement, "setWidth:") = Void, NSString;

record DOMHTMLHeadElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLHeadElement, "profile") = NSString;
override externalInstanceMethod(#DOMHTMLHeadElement, "setProfile:") = Void, NSString;

record DOMHTMLHeadingElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLHeadingElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLHeadingElement, "setAlign:") = Void, NSString;

record DOMHTMLHtmlElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLHtmlElement, "version") = NSString;
override externalInstanceMethod(#DOMHTMLHtmlElement, "setVersion:") = Void, NSString;

record DOMHTMLIFrameElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLIFrameElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "frameBorder") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setFrameBorder:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "height") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setHeight:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "longDesc") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setLongDesc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "marginHeight") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setMarginHeight:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "marginWidth") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setMarginWidth:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "scrolling") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setScrolling:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "src") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setSrc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "width") = NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "setWidth:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLIFrameElement, "contentDocument") = DOMDocument;
override externalInstanceMethod(#DOMHTMLIFrameElement, "contentWindow") = DOMAbstractView;
override externalInstanceMethod(#DOMHTMLIFrameElement, "contentFrame") = WebFrame;

record DOMHTMLImageElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLImageElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "alt") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setAlt:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "border") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setBorder:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "height") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "setHeight:") = Void, Int;
override externalInstanceMethod(#DOMHTMLImageElement, "hspace") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "setHspace:") = Void, Int;
override externalInstanceMethod(#DOMHTMLImageElement, "isMap") = Bool;
override externalInstanceMethod(#DOMHTMLImageElement, "setIsMap:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLImageElement, "longDesc") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setLongDesc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "src") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setSrc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "useMap") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setUseMap:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "vspace") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "setVspace:") = Void, Int;
override externalInstanceMethod(#DOMHTMLImageElement, "width") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "setWidth:") = Void, Int;
override externalInstanceMethod(#DOMHTMLImageElement, "complete") = Bool;
override externalInstanceMethod(#DOMHTMLImageElement, "lowsrc") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "setLowsrc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "naturalHeight") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "naturalWidth") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "x") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "y") = Int;
override externalInstanceMethod(#DOMHTMLImageElement, "altDisplayString") = NSString;
override externalInstanceMethod(#DOMHTMLImageElement, "absoluteImageURL") = NSURL;

record DOMHTMLInputElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLInputElement, "select") = Void;
override externalInstanceMethod(#DOMHTMLInputElement, "click") = Void;
override externalInstanceMethod(#DOMHTMLInputElement, "setSelectionRange:end:") = Void, Int, Int;
override externalInstanceMethod(#DOMHTMLInputElement, "defaultValue") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setDefaultValue:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "defaultChecked") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "setDefaultChecked:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLInputElement, "accept") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setAccept:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "accessKey") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setAccessKey:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "alt") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setAlt:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "checked") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "setChecked:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "autofocus") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "setAutofocus:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "maxLength") = Int;
override externalInstanceMethod(#DOMHTMLInputElement, "setMaxLength:") = Void, Int;
override externalInstanceMethod(#DOMHTMLInputElement, "multiple") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "setMultiple:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "readOnly") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "setReadOnly:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "size") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setSize:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "src") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setSrc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "useMap") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setUseMap:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "value") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "setValue:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "willValidate") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "indeterminate") = Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "setIndeterminate:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLInputElement, "selectionStart") = Int;
override externalInstanceMethod(#DOMHTMLInputElement, "setSelectionStart:") = Void, Int;
override externalInstanceMethod(#DOMHTMLInputElement, "selectionEnd") = Int;
override externalInstanceMethod(#DOMHTMLInputElement, "setSelectionEnd:") = Void, Int;
override externalInstanceMethod(#DOMHTMLInputElement, "altDisplayString") = NSString;
override externalInstanceMethod(#DOMHTMLInputElement, "absoluteImageURL") = NSURL;
override externalInstanceMethod(#DOMHTMLInputElement, "files") = DOMFileList;

record DOMHTMLIsIndexElement = externalClass(DOMHTMLInputElement);
override externalInstanceMethod(#DOMHTMLIsIndexElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLIsIndexElement, "prompt") = NSString;
override externalInstanceMethod(#DOMHTMLIsIndexElement, "setPrompt:") = Void, NSString;

record DOMHTMLLIElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLLIElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLLIElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLIElement, "value") = Int;
override externalInstanceMethod(#DOMHTMLLIElement, "setValue:") = Void, Int;

record DOMHTMLLabelElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLLabelElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLLabelElement, "accessKey") = NSString;
override externalInstanceMethod(#DOMHTMLLabelElement, "setAccessKey:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLabelElement, "htmlFor") = NSString;
override externalInstanceMethod(#DOMHTMLLabelElement, "setHtmlFor:") = Void, NSString;

record DOMHTMLLegendElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLLegendElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLLegendElement, "accessKey") = NSString;
override externalInstanceMethod(#DOMHTMLLegendElement, "setAccessKey:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLegendElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLLegendElement, "setAlign:") = Void, NSString;

record DOMHTMLLinkElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLLinkElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLLinkElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLLinkElement, "charset") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setCharset:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "href") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setHref:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "hreflang") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setHreflang:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "media") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setMedia:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "rel") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setRel:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "rev") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setRev:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "target") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setTarget:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLLinkElement, "sheet") = DOMStyleSheet;
override externalInstanceMethod(#DOMHTMLLinkElement, "absoluteLinkURL") = NSURL;

record DOMHTMLMapElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLMapElement, "areas") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLMapElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLMapElement, "setName:") = Void, NSString;

record DOMHTMLMarqueeElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLMarqueeElement, "start") = Void;
override externalInstanceMethod(#DOMHTMLMarqueeElement, "stop") = Void;

record DOMHTMLMenuElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLMenuElement, "compact") = Bool;
override externalInstanceMethod(#DOMHTMLMenuElement, "setCompact:") = Void, Bool;

record DOMHTMLMetaElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLMetaElement, "content") = NSString;
override externalInstanceMethod(#DOMHTMLMetaElement, "setContent:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLMetaElement, "httpEquiv") = NSString;
override externalInstanceMethod(#DOMHTMLMetaElement, "setHttpEquiv:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLMetaElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLMetaElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLMetaElement, "scheme") = NSString;
override externalInstanceMethod(#DOMHTMLMetaElement, "setScheme:") = Void, NSString;

record DOMHTMLModElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLModElement, "cite") = NSString;
override externalInstanceMethod(#DOMHTMLModElement, "setCite:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLModElement, "dateTime") = NSString;
override externalInstanceMethod(#DOMHTMLModElement, "setDateTime:") = Void, NSString;

record DOMHTMLOListElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLOListElement, "compact") = Bool;
override externalInstanceMethod(#DOMHTMLOListElement, "setCompact:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLOListElement, "start") = Int;
override externalInstanceMethod(#DOMHTMLOListElement, "setStart:") = Void, Int;
override externalInstanceMethod(#DOMHTMLOListElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLOListElement, "setType:") = Void, NSString;

record DOMHTMLObjectElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLObjectElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLObjectElement, "code") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setCode:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "archive") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setArchive:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "border") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setBorder:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "codeBase") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setCodeBase:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "codeType") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setCodeType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "data") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setData:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "declare") = Bool;
override externalInstanceMethod(#DOMHTMLObjectElement, "setDeclare:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLObjectElement, "height") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setHeight:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "hspace") = Int;
override externalInstanceMethod(#DOMHTMLObjectElement, "setHspace:") = Void, Int;
override externalInstanceMethod(#DOMHTMLObjectElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "standby") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setStandby:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "useMap") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setUseMap:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "vspace") = Int;
override externalInstanceMethod(#DOMHTMLObjectElement, "setVspace:") = Void, Int;
override externalInstanceMethod(#DOMHTMLObjectElement, "width") = NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "setWidth:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLObjectElement, "contentDocument") = DOMDocument;
override externalInstanceMethod(#DOMHTMLObjectElement, "absoluteImageURL") = NSURL;
override externalInstanceMethod(#DOMHTMLObjectElement, "contentFrame") = WebFrame;

record DOMHTMLOptGroupElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLOptGroupElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLOptGroupElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLOptGroupElement, "label") = NSString;
override externalInstanceMethod(#DOMHTMLOptGroupElement, "setLabel:") = Void, NSString;

record DOMHTMLOptionElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLOptionElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLOptionElement, "defaultSelected") = Bool;
override externalInstanceMethod(#DOMHTMLOptionElement, "setDefaultSelected:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLOptionElement, "text") = NSString;
override externalInstanceMethod(#DOMHTMLOptionElement, "index") = Int;
override externalInstanceMethod(#DOMHTMLOptionElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLOptionElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLOptionElement, "label") = NSString;
override externalInstanceMethod(#DOMHTMLOptionElement, "setLabel:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLOptionElement, "selected") = Bool;
override externalInstanceMethod(#DOMHTMLOptionElement, "setSelected:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLOptionElement, "value") = NSString;
override externalInstanceMethod(#DOMHTMLOptionElement, "setValue:") = Void, NSString;

record DOMHTMLOptionsCollection = externalClass(DOMObject);
override externalInstanceMethod(#DOMHTMLOptionsCollection, "add:index:") = Void, DOMHTMLOptionElement, UInt;
override externalInstanceMethod(#DOMHTMLOptionsCollection, "remove:") = Void, UInt;
override externalInstanceMethod(#DOMHTMLOptionsCollection, "item:") = DOMNode, UInt;
override externalInstanceMethod(#DOMHTMLOptionsCollection, "namedItem:") = DOMNode, NSString;
override externalInstanceMethod(#DOMHTMLOptionsCollection, "selectedIndex") = Int;
override externalInstanceMethod(#DOMHTMLOptionsCollection, "setSelectedIndex:") = Void, Int;
override externalInstanceMethod(#DOMHTMLOptionsCollection, "length") = UInt;
override externalInstanceMethod(#DOMHTMLOptionsCollection, "setLength:") = Void, UInt;

record DOMHTMLParagraphElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLParagraphElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLParagraphElement, "setAlign:") = Void, NSString;

record DOMHTMLParamElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLParamElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLParamElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLParamElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLParamElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLParamElement, "value") = NSString;
override externalInstanceMethod(#DOMHTMLParamElement, "setValue:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLParamElement, "valueType") = NSString;
override externalInstanceMethod(#DOMHTMLParamElement, "setValueType:") = Void, NSString;

record DOMHTMLPreElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLPreElement, "width") = Int;
override externalInstanceMethod(#DOMHTMLPreElement, "setWidth:") = Void, Int;
override externalInstanceMethod(#DOMHTMLPreElement, "wrap") = Bool;
override externalInstanceMethod(#DOMHTMLPreElement, "setWrap:") = Void, Bool;

record DOMHTMLQuoteElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLQuoteElement, "cite") = NSString;
override externalInstanceMethod(#DOMHTMLQuoteElement, "setCite:") = Void, NSString;

record DOMHTMLScriptElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLScriptElement, "text") = NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "setText:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "htmlFor") = NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "setHtmlFor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "event") = NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "setEvent:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "charset") = NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "setCharset:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "defer") = Bool;
override externalInstanceMethod(#DOMHTMLScriptElement, "setDefer:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLScriptElement, "src") = NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "setSrc:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLScriptElement, "setType:") = Void, NSString;

record DOMHTMLSelectElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLSelectElement, "add:before:") = Void, DOMHTMLElement, DOMHTMLElement;
override externalInstanceMethod(#DOMHTMLSelectElement, "remove:") = Void, Int;
override externalInstanceMethod(#DOMHTMLSelectElement, "item:") = DOMNode, UInt;
override externalInstanceMethod(#DOMHTMLSelectElement, "namedItem:") = DOMNode, NSString;
override externalInstanceMethod(#DOMHTMLSelectElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLSelectElement, "selectedIndex") = Int;
override externalInstanceMethod(#DOMHTMLSelectElement, "setSelectedIndex:") = Void, Int;
override externalInstanceMethod(#DOMHTMLSelectElement, "value") = NSString;
override externalInstanceMethod(#DOMHTMLSelectElement, "setValue:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLSelectElement, "length") = Int;
override externalInstanceMethod(#DOMHTMLSelectElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLSelectElement, "willValidate") = Bool;
override externalInstanceMethod(#DOMHTMLSelectElement, "options") = DOMHTMLOptionsCollection;
override externalInstanceMethod(#DOMHTMLSelectElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLSelectElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLSelectElement, "autofocus") = Bool;
override externalInstanceMethod(#DOMHTMLSelectElement, "setAutofocus:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLSelectElement, "multiple") = Bool;
override externalInstanceMethod(#DOMHTMLSelectElement, "setMultiple:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLSelectElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLSelectElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLSelectElement, "size") = Int;
override externalInstanceMethod(#DOMHTMLSelectElement, "setSize:") = Void, Int;
override externalInstanceMethod(#DOMHTMLSelectElement, "add::") = Void, DOMHTMLElement, DOMHTMLElement;

record DOMHTMLStyleElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLStyleElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLStyleElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLStyleElement, "media") = NSString;
override externalInstanceMethod(#DOMHTMLStyleElement, "setMedia:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLStyleElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLStyleElement, "setType:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLStyleElement, "sheet") = DOMStyleSheet;

record DOMHTMLTableCaptionElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTableCaptionElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLTableCaptionElement, "setAlign:") = Void, NSString;

record DOMHTMLTableCellElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTableCellElement, "cellIndex") = Int;
override externalInstanceMethod(#DOMHTMLTableCellElement, "abbr") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setAbbr:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "axis") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setAxis:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "bgColor") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setBgColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "ch") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setCh:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "chOff") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setChOff:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "colSpan") = Int;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setColSpan:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTableCellElement, "headers") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setHeaders:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "height") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setHeight:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "noWrap") = Bool;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setNoWrap:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLTableCellElement, "rowSpan") = Int;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setRowSpan:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTableCellElement, "scope") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setScope:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "vAlign") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setVAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "width") = NSString;
override externalInstanceMethod(#DOMHTMLTableCellElement, "setWidth:") = Void, NSString;

record DOMHTMLTableColElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTableColElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "ch") = NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "setCh:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "chOff") = NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "setChOff:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "span") = Int;
override externalInstanceMethod(#DOMHTMLTableColElement, "setSpan:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTableColElement, "vAlign") = NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "setVAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "width") = NSString;
override externalInstanceMethod(#DOMHTMLTableColElement, "setWidth:") = Void, NSString;

record DOMHTMLTableElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTableElement, "createTHead") = DOMHTMLElement;
override externalInstanceMethod(#DOMHTMLTableElement, "deleteTHead") = Void;
override externalInstanceMethod(#DOMHTMLTableElement, "createTFoot") = DOMHTMLElement;
override externalInstanceMethod(#DOMHTMLTableElement, "deleteTFoot") = Void;
override externalInstanceMethod(#DOMHTMLTableElement, "createCaption") = DOMHTMLElement;
override externalInstanceMethod(#DOMHTMLTableElement, "deleteCaption") = Void;
override externalInstanceMethod(#DOMHTMLTableElement, "insertRow:") = DOMHTMLElement, Int;
override externalInstanceMethod(#DOMHTMLTableElement, "deleteRow:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTableElement, "caption") = DOMHTMLTableCaptionElement;
override externalInstanceMethod(#DOMHTMLTableElement, "setCaption:") = Void, DOMHTMLTableCaptionElement;
override externalInstanceMethod(#DOMHTMLTableElement, "tHead") = DOMHTMLTableSectionElement;
override externalInstanceMethod(#DOMHTMLTableElement, "setTHead:") = Void, DOMHTMLTableSectionElement;
override externalInstanceMethod(#DOMHTMLTableElement, "tFoot") = DOMHTMLTableSectionElement;
override externalInstanceMethod(#DOMHTMLTableElement, "setTFoot:") = Void, DOMHTMLTableSectionElement;
override externalInstanceMethod(#DOMHTMLTableElement, "rows") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLTableElement, "tBodies") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLTableElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "bgColor") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setBgColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "border") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setBorder:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "cellPadding") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setCellPadding:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "cellSpacing") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setCellSpacing:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "frameBorders") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setFrameBorders:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "rules") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setRules:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "summary") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setSummary:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "width") = NSString;
override externalInstanceMethod(#DOMHTMLTableElement, "setWidth:") = Void, NSString;

record DOMHTMLTableRowElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTableRowElement, "insertCell:") = DOMHTMLElement, Int;
override externalInstanceMethod(#DOMHTMLTableRowElement, "deleteCell:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTableRowElement, "rowIndex") = Int;
override externalInstanceMethod(#DOMHTMLTableRowElement, "sectionRowIndex") = Int;
override externalInstanceMethod(#DOMHTMLTableRowElement, "cells") = DOMHTMLCollection;
override externalInstanceMethod(#DOMHTMLTableRowElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "bgColor") = NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "setBgColor:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "ch") = NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "setCh:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "chOff") = NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "setChOff:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "vAlign") = NSString;
override externalInstanceMethod(#DOMHTMLTableRowElement, "setVAlign:") = Void, NSString;

record DOMHTMLTableSectionElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTableSectionElement, "insertRow:") = DOMHTMLElement, Int;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "deleteRow:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "align") = NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "setAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "ch") = NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "setCh:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "chOff") = NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "setChOff:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "vAlign") = NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "setVAlign:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTableSectionElement, "rows") = DOMHTMLCollection;

record DOMHTMLTextAreaElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTextAreaElement, "select") = Void;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setSelectionRange:end:") = Void, Int, Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "defaultValue") = NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setDefaultValue:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "form") = DOMHTMLFormElement;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "accessKey") = NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setAccessKey:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "cols") = Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setCols:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "disabled") = Bool;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "autofocus") = Bool;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setAutofocus:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "name") = NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setName:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "readOnly") = Bool;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setReadOnly:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "rows") = Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setRows:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "value") = NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setValue:") = Void, NSString;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "willValidate") = Bool;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "selectionStart") = Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setSelectionStart:") = Void, Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "selectionEnd") = Int;
override externalInstanceMethod(#DOMHTMLTextAreaElement, "setSelectionEnd:") = Void, Int;

record DOMHTMLTitleElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLTitleElement, "text") = NSString;
override externalInstanceMethod(#DOMHTMLTitleElement, "setText:") = Void, NSString;

record DOMHTMLUListElement = externalClass(DOMHTMLElement);
override externalInstanceMethod(#DOMHTMLUListElement, "compact") = Bool;
override externalInstanceMethod(#DOMHTMLUListElement, "setCompact:") = Void, Bool;
override externalInstanceMethod(#DOMHTMLUListElement, "type") = NSString;
override externalInstanceMethod(#DOMHTMLUListElement, "setType:") = Void, NSString;

record DOMImplementation = externalClass(DOMObject);
override externalInstanceMethod(#DOMImplementation, "hasFeature:version:") = Bool, NSString, NSString;
override externalInstanceMethod(#DOMImplementation, "createDocumentType:publicId:systemId:") = DOMDocumentType, NSString, NSString, NSString;
override externalInstanceMethod(#DOMImplementation, "createDocument:qualifiedName:doctype:") = DOMDocument, NSString, NSString, DOMDocumentType;
override externalInstanceMethod(#DOMImplementation, "createCSSStyleSheet:media:") = DOMCSSStyleSheet, NSString, NSString;
override externalInstanceMethod(#DOMImplementation, "createHTMLDocument:") = DOMHTMLDocument, NSString;
override externalInstanceMethod(#DOMImplementation, "hasFeature::") = Bool, NSString, NSString;
override externalInstanceMethod(#DOMImplementation, "createDocumentType:::") = DOMDocumentType, NSString, NSString, NSString;
override externalInstanceMethod(#DOMImplementation, "createDocument:::") = DOMDocument, NSString, NSString, DOMDocumentType;
override externalInstanceMethod(#DOMImplementation, "createCSSStyleSheet::") = DOMCSSStyleSheet, NSString, NSString;

record DOMKeyboardEvent = externalClass(DOMUIEvent);
override externalInstanceMethod(#DOMKeyboardEvent, "getModifierState:") = Bool, NSString;
override externalInstanceMethod(#DOMKeyboardEvent, "initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:altGraphKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool, Bool;
override externalInstanceMethod(#DOMKeyboardEvent, "initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool;
override externalInstanceMethod(#DOMKeyboardEvent, "keyIdentifier") = NSString;
override externalInstanceMethod(#DOMKeyboardEvent, "keyLocation") = UInt;
override externalInstanceMethod(#DOMKeyboardEvent, "ctrlKey") = Bool;
override externalInstanceMethod(#DOMKeyboardEvent, "shiftKey") = Bool;
override externalInstanceMethod(#DOMKeyboardEvent, "altKey") = Bool;
override externalInstanceMethod(#DOMKeyboardEvent, "metaKey") = Bool;
override externalInstanceMethod(#DOMKeyboardEvent, "altGraphKey") = Bool;
override externalInstanceMethod(#DOMKeyboardEvent, "keyCode") = Int;
override externalInstanceMethod(#DOMKeyboardEvent, "charCode") = Int;

record DOMMediaList = externalClass(DOMObject);
override externalInstanceMethod(#DOMMediaList, "item:") = NSString, UInt;
override externalInstanceMethod(#DOMMediaList, "deleteMedium:") = Void, NSString;
override externalInstanceMethod(#DOMMediaList, "appendMedium:") = Void, NSString;
override externalInstanceMethod(#DOMMediaList, "mediaText") = NSString;
override externalInstanceMethod(#DOMMediaList, "setMediaText:") = Void, NSString;
override externalInstanceMethod(#DOMMediaList, "length") = UInt;

record DOMMouseEvent = externalClass(DOMUIEvent);
override externalInstanceMethod(#DOMMouseEvent, "initMouseEvent:canBubble:cancelable:view:detail:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:button:relatedTarget:") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;
override externalInstanceMethod(#DOMMouseEvent, "screenX") = Int;
override externalInstanceMethod(#DOMMouseEvent, "screenY") = Int;
override externalInstanceMethod(#DOMMouseEvent, "clientX") = Int;
override externalInstanceMethod(#DOMMouseEvent, "clientY") = Int;
override externalInstanceMethod(#DOMMouseEvent, "ctrlKey") = Bool;
override externalInstanceMethod(#DOMMouseEvent, "shiftKey") = Bool;
override externalInstanceMethod(#DOMMouseEvent, "altKey") = Bool;
override externalInstanceMethod(#DOMMouseEvent, "metaKey") = Bool;
override externalInstanceMethod(#DOMMouseEvent, "button") = UShort;
override externalInstanceMethod(#DOMMouseEvent, "relatedTarget") = Id;
override externalInstanceMethod(#DOMMouseEvent, "offsetX") = Int;
override externalInstanceMethod(#DOMMouseEvent, "offsetY") = Int;
override externalInstanceMethod(#DOMMouseEvent, "x") = Int;
override externalInstanceMethod(#DOMMouseEvent, "y") = Int;
override externalInstanceMethod(#DOMMouseEvent, "fromElement") = DOMNode;
override externalInstanceMethod(#DOMMouseEvent, "toElement") = DOMNode;
override externalInstanceMethod(#DOMMouseEvent, "initMouseEvent:::::::::::::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;

record DOMMutationEvent = externalClass(DOMEvent);
override externalInstanceMethod(#DOMMutationEvent, "initMutationEvent:canBubble:cancelable:relatedNode:prevValue:newValue:attrName:attrChange:") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;
override externalInstanceMethod(#DOMMutationEvent, "relatedNode") = DOMNode;
override externalInstanceMethod(#DOMMutationEvent, "prevValue") = NSString;
override externalInstanceMethod(#DOMMutationEvent, "newValue") = NSString;
override externalInstanceMethod(#DOMMutationEvent, "attrName") = NSString;
override externalInstanceMethod(#DOMMutationEvent, "attrChange") = UShort;
override externalInstanceMethod(#DOMMutationEvent, "initMutationEvent::::::::") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;

record DOMNamedNodeMap = externalClass(DOMObject);
override externalInstanceMethod(#DOMNamedNodeMap, "getNamedItem:") = DOMNode, NSString;
override externalInstanceMethod(#DOMNamedNodeMap, "setNamedItem:") = DOMNode, DOMNode;
override externalInstanceMethod(#DOMNamedNodeMap, "removeNamedItem:") = DOMNode, NSString;
override externalInstanceMethod(#DOMNamedNodeMap, "item:") = DOMNode, UInt;
override externalInstanceMethod(#DOMNamedNodeMap, "getNamedItemNS:localName:") = DOMNode, NSString, NSString;
override externalInstanceMethod(#DOMNamedNodeMap, "setNamedItemNS:") = DOMNode, DOMNode;
override externalInstanceMethod(#DOMNamedNodeMap, "removeNamedItemNS:localName:") = DOMNode, NSString, NSString;
override externalInstanceMethod(#DOMNamedNodeMap, "length") = UInt;
override externalInstanceMethod(#DOMNamedNodeMap, "getNamedItemNS::") = DOMNode, NSString, NSString;
override externalInstanceMethod(#DOMNamedNodeMap, "removeNamedItemNS::") = DOMNode, NSString, NSString;

record DOMNode = externalClass(DOMObject);
override externalInstanceMethod(#DOMNode, "addEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
override externalInstanceMethod(#DOMNode, "removeEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
override externalInstanceMethod(#DOMNode, "dispatchEvent:") = Bool, DOMEvent;
override externalInstanceMethod(#DOMNode, "addEventListener:::") = Void, NSString, Id, Bool;
override externalInstanceMethod(#DOMNode, "removeEventListener:::") = Void, NSString, Id, Bool;
override externalInstanceMethod(#DOMNode, "insertBefore:refChild:") = DOMNode, DOMNode, DOMNode;
override externalInstanceMethod(#DOMNode, "replaceChild:oldChild:") = DOMNode, DOMNode, DOMNode;
override externalInstanceMethod(#DOMNode, "removeChild:") = DOMNode, DOMNode;
override externalInstanceMethod(#DOMNode, "appendChild:") = DOMNode, DOMNode;
override externalInstanceMethod(#DOMNode, "hasChildNodes") = Bool;
override externalInstanceMethod(#DOMNode, "cloneNode:") = DOMNode, Bool;
override externalInstanceMethod(#DOMNode, "normalize") = Void;
override externalInstanceMethod(#DOMNode, "isSupported:version:") = Bool, NSString, NSString;
override externalInstanceMethod(#DOMNode, "hasAttributes") = Bool;
override externalInstanceMethod(#DOMNode, "isSameNode:") = Bool, DOMNode;
override externalInstanceMethod(#DOMNode, "isEqualNode:") = Bool, DOMNode;
override externalInstanceMethod(#DOMNode, "lookupPrefix:") = NSString, NSString;
override externalInstanceMethod(#DOMNode, "isDefaultNamespace:") = Bool, NSString;
override externalInstanceMethod(#DOMNode, "lookupNamespaceURI:") = NSString, NSString;
override externalInstanceMethod(#DOMNode, "compareDocumentPosition:") = UShort, DOMNode;
override externalInstanceMethod(#DOMNode, "nodeName") = NSString;
override externalInstanceMethod(#DOMNode, "nodeValue") = NSString;
override externalInstanceMethod(#DOMNode, "setNodeValue:") = Void, NSString;
override externalInstanceMethod(#DOMNode, "nodeType") = UShort;
override externalInstanceMethod(#DOMNode, "parentNode") = DOMNode;
override externalInstanceMethod(#DOMNode, "childNodes") = DOMNodeList;
override externalInstanceMethod(#DOMNode, "firstChild") = DOMNode;
override externalInstanceMethod(#DOMNode, "lastChild") = DOMNode;
override externalInstanceMethod(#DOMNode, "previousSibling") = DOMNode;
override externalInstanceMethod(#DOMNode, "nextSibling") = DOMNode;
override externalInstanceMethod(#DOMNode, "attributes") = DOMNamedNodeMap;
override externalInstanceMethod(#DOMNode, "ownerDocument") = DOMDocument;
override externalInstanceMethod(#DOMNode, "namespaceURI") = NSString;
override externalInstanceMethod(#DOMNode, "prefix") = NSString;
override externalInstanceMethod(#DOMNode, "setPrefix:") = Void, NSString;
override externalInstanceMethod(#DOMNode, "localName") = NSString;
override externalInstanceMethod(#DOMNode, "baseURI") = NSString;
override externalInstanceMethod(#DOMNode, "textContent") = NSString;
override externalInstanceMethod(#DOMNode, "setTextContent:") = Void, NSString;
override externalInstanceMethod(#DOMNode, "parentElement") = DOMElement;
override externalInstanceMethod(#DOMNode, "isContentEditable") = Bool;
override externalInstanceMethod(#DOMNode, "insertBefore::") = DOMNode, DOMNode, DOMNode;
override externalInstanceMethod(#DOMNode, "replaceChild::") = DOMNode, DOMNode, DOMNode;
override externalInstanceMethod(#DOMNode, "isSupported::") = Bool, NSString, NSString;
override externalInstanceMethod(#DOMNode, "boundingBox") = NSRect;
override externalInstanceMethod(#DOMNode, "lineBoxRects") = NSArray;
override externalInstanceMethod(#DOMNode, "webArchive") = WebArchive;

record DOMNodeIterator = externalClass(DOMObject);
override externalInstanceMethod(#DOMNodeIterator, "nextNode") = DOMNode;
override externalInstanceMethod(#DOMNodeIterator, "previousNode") = DOMNode;
override externalInstanceMethod(#DOMNodeIterator, "detach") = Void;
override externalInstanceMethod(#DOMNodeIterator, "root") = DOMNode;
override externalInstanceMethod(#DOMNodeIterator, "whatToShow") = UInt;
override externalInstanceMethod(#DOMNodeIterator, "filter") = Id;
override externalInstanceMethod(#DOMNodeIterator, "expandEntityReferences") = Bool;
override externalInstanceMethod(#DOMNodeIterator, "referenceNode") = DOMNode;
override externalInstanceMethod(#DOMNodeIterator, "pointerBeforeReferenceNode") = Bool;

record DOMNodeList = externalClass(DOMObject);
override externalInstanceMethod(#DOMNodeList, "item:") = DOMNode, UInt;
override externalInstanceMethod(#DOMNodeList, "length") = UInt;

record DOMNotation = externalClass(DOMNode);
override externalInstanceMethod(#DOMNotation, "publicId") = NSString;
override externalInstanceMethod(#DOMNotation, "systemId") = NSString;

record DOMObject = externalClass(WebScriptObject);
override externalInstanceMethod(#DOMObject, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#DOMObject, "sheet") = DOMStyleSheet;

record DOMOverflowEvent = externalClass(DOMEvent);
override externalInstanceMethod(#DOMOverflowEvent, "initOverflowEvent:horizontalOverflow:verticalOverflow:") = Void, UShort, Bool, Bool;
override externalInstanceMethod(#DOMOverflowEvent, "orient") = UShort;
override externalInstanceMethod(#DOMOverflowEvent, "horizontalOverflow") = Bool;
override externalInstanceMethod(#DOMOverflowEvent, "verticalOverflow") = Bool;

record DOMProcessingInstruction = externalClass(DOMNode);
override externalInstanceMethod(#DOMProcessingInstruction, "target") = NSString;
override externalInstanceMethod(#DOMProcessingInstruction, "data") = NSString;
override externalInstanceMethod(#DOMProcessingInstruction, "setData:") = Void, NSString;
override externalInstanceMethod(#DOMProcessingInstruction, "sheet") = DOMStyleSheet;

record DOMRGBColor = externalClass(DOMObject);
override externalInstanceMethod(#DOMRGBColor, "red") = DOMCSSPrimitiveValue;
override externalInstanceMethod(#DOMRGBColor, "green") = DOMCSSPrimitiveValue;
override externalInstanceMethod(#DOMRGBColor, "blue") = DOMCSSPrimitiveValue;
override externalInstanceMethod(#DOMRGBColor, "alpha") = DOMCSSPrimitiveValue;
override externalInstanceMethod(#DOMRGBColor, "color") = NSColor;

record DOMRange = externalClass(DOMObject);
override externalInstanceMethod(#DOMRange, "setStart:offset:") = Void, DOMNode, Int;
override externalInstanceMethod(#DOMRange, "setEnd:offset:") = Void, DOMNode, Int;
override externalInstanceMethod(#DOMRange, "setStartBefore:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "setStartAfter:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "setEndBefore:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "setEndAfter:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "collapse:") = Void, Bool;
override externalInstanceMethod(#DOMRange, "selectNode:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "selectNodeContents:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "compareBoundaryPoints:sourceRange:") = Short, UShort, DOMRange;
override externalInstanceMethod(#DOMRange, "deleteContents") = Void;
override externalInstanceMethod(#DOMRange, "extractContents") = DOMDocumentFragment;
override externalInstanceMethod(#DOMRange, "cloneContents") = DOMDocumentFragment;
override externalInstanceMethod(#DOMRange, "insertNode:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "surroundContents:") = Void, DOMNode;
override externalInstanceMethod(#DOMRange, "cloneRange") = DOMRange;
override externalInstanceMethod(#DOMRange, "toString") = NSString;
override externalInstanceMethod(#DOMRange, "detach") = Void;
override externalInstanceMethod(#DOMRange, "createContextualFragment:") = DOMDocumentFragment, NSString;
override externalInstanceMethod(#DOMRange, "intersectsNode:") = Bool, DOMNode;
override externalInstanceMethod(#DOMRange, "compareNode:") = Short, DOMNode;
override externalInstanceMethod(#DOMRange, "comparePoint:offset:") = Short, DOMNode, Int;
override externalInstanceMethod(#DOMRange, "isPointInRange:offset:") = Bool, DOMNode, Int;
override externalInstanceMethod(#DOMRange, "startContainer") = DOMNode;
override externalInstanceMethod(#DOMRange, "startOffset") = Int;
override externalInstanceMethod(#DOMRange, "endContainer") = DOMNode;
override externalInstanceMethod(#DOMRange, "endOffset") = Int;
override externalInstanceMethod(#DOMRange, "collapsed") = Bool;
override externalInstanceMethod(#DOMRange, "commonAncestorContainer") = DOMNode;
override externalInstanceMethod(#DOMRange, "text") = NSString;
override externalInstanceMethod(#DOMRange, "setStart::") = Void, DOMNode, Int;
override externalInstanceMethod(#DOMRange, "setEnd::") = Void, DOMNode, Int;
override externalInstanceMethod(#DOMRange, "compareBoundaryPoints::") = Short, UShort, DOMRange;
override externalInstanceMethod(#DOMRange, "webArchive") = WebArchive;
override externalInstanceMethod(#DOMRange, "markupString") = NSString;

record DOMRect = externalClass(DOMObject);
override externalInstanceMethod(#DOMRect, "top") = DOMCSSPrimitiveValue;
override externalInstanceMethod(#DOMRect, "right") = DOMCSSPrimitiveValue;
override externalInstanceMethod(#DOMRect, "bottom") = DOMCSSPrimitiveValue;
override externalInstanceMethod(#DOMRect, "left") = DOMCSSPrimitiveValue;

record DOMStyleSheet = externalClass(DOMObject);
override externalInstanceMethod(#DOMStyleSheet, "type") = NSString;
override externalInstanceMethod(#DOMStyleSheet, "disabled") = Bool;
override externalInstanceMethod(#DOMStyleSheet, "setDisabled:") = Void, Bool;
override externalInstanceMethod(#DOMStyleSheet, "ownerNode") = DOMNode;
override externalInstanceMethod(#DOMStyleSheet, "parentStyleSheet") = DOMStyleSheet;
override externalInstanceMethod(#DOMStyleSheet, "href") = NSString;
override externalInstanceMethod(#DOMStyleSheet, "title") = NSString;
override externalInstanceMethod(#DOMStyleSheet, "media") = DOMMediaList;

record DOMStyleSheetList = externalClass(DOMObject);
override externalInstanceMethod(#DOMStyleSheetList, "item:") = DOMStyleSheet, UInt;
override externalInstanceMethod(#DOMStyleSheetList, "length") = UInt;

record DOMText = externalClass(DOMCharacterData);
override externalInstanceMethod(#DOMText, "splitText:") = DOMText, UInt;
override externalInstanceMethod(#DOMText, "replaceWholeText:") = DOMText, NSString;
override externalInstanceMethod(#DOMText, "wholeText") = NSString;

record DOMTreeWalker = externalClass(DOMObject);
override externalInstanceMethod(#DOMTreeWalker, "parentNode") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "firstChild") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "lastChild") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "previousSibling") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "nextSibling") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "previousNode") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "nextNode") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "root") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "whatToShow") = UInt;
override externalInstanceMethod(#DOMTreeWalker, "filter") = Id;
override externalInstanceMethod(#DOMTreeWalker, "expandEntityReferences") = Bool;
override externalInstanceMethod(#DOMTreeWalker, "currentNode") = DOMNode;
override externalInstanceMethod(#DOMTreeWalker, "setCurrentNode:") = Void, DOMNode;

record DOMUIEvent = externalClass(DOMEvent);
override externalInstanceMethod(#DOMUIEvent, "initUIEvent:canBubble:cancelable:view:detail:") = Void, NSString, Bool, Bool, DOMAbstractView, Int;
override externalInstanceMethod(#DOMUIEvent, "view") = DOMAbstractView;
override externalInstanceMethod(#DOMUIEvent, "detail") = Int;
override externalInstanceMethod(#DOMUIEvent, "keyCode") = Int;
override externalInstanceMethod(#DOMUIEvent, "charCode") = Int;
override externalInstanceMethod(#DOMUIEvent, "layerX") = Int;
override externalInstanceMethod(#DOMUIEvent, "layerY") = Int;
override externalInstanceMethod(#DOMUIEvent, "pageX") = Int;
override externalInstanceMethod(#DOMUIEvent, "pageY") = Int;
override externalInstanceMethod(#DOMUIEvent, "which") = Int;
override externalInstanceMethod(#DOMUIEvent, "initUIEvent:::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int;

record DOMWheelEvent = externalClass(DOMUIEvent);
override externalInstanceMethod(#DOMWheelEvent, "initWheelEvent:wheelDeltaY:view:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:") = Void, Int, Int, DOMAbstractView, Int, Int, Int, Int, Bool, Bool, Bool, Bool;
override externalInstanceMethod(#DOMWheelEvent, "screenX") = Int;
override externalInstanceMethod(#DOMWheelEvent, "screenY") = Int;
override externalInstanceMethod(#DOMWheelEvent, "clientX") = Int;
override externalInstanceMethod(#DOMWheelEvent, "clientY") = Int;
override externalInstanceMethod(#DOMWheelEvent, "ctrlKey") = Bool;
override externalInstanceMethod(#DOMWheelEvent, "shiftKey") = Bool;
override externalInstanceMethod(#DOMWheelEvent, "altKey") = Bool;
override externalInstanceMethod(#DOMWheelEvent, "metaKey") = Bool;
override externalInstanceMethod(#DOMWheelEvent, "wheelDelta") = Int;
override externalInstanceMethod(#DOMWheelEvent, "wheelDeltaX") = Int;
override externalInstanceMethod(#DOMWheelEvent, "wheelDeltaY") = Int;
override externalInstanceMethod(#DOMWheelEvent, "offsetX") = Int;
override externalInstanceMethod(#DOMWheelEvent, "offsetY") = Int;
override externalInstanceMethod(#DOMWheelEvent, "x") = Int;
override externalInstanceMethod(#DOMWheelEvent, "y") = Int;
override externalInstanceMethod(#DOMWheelEvent, "isHorizontal") = Bool;

record DOMXPathExpression = externalClass(DOMObject);
override externalInstanceMethod(#DOMXPathExpression, "evaluate:type:inResult:") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;
override externalInstanceMethod(#DOMXPathExpression, "evaluate:::") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;

record DOMXPathResult = externalClass(DOMObject);
override externalInstanceMethod(#DOMXPathResult, "iterateNext") = DOMNode;
override externalInstanceMethod(#DOMXPathResult, "snapshotItem:") = DOMNode, UInt;
override externalInstanceMethod(#DOMXPathResult, "resultType") = UShort;
override externalInstanceMethod(#DOMXPathResult, "numberValue") = Double;
override externalInstanceMethod(#DOMXPathResult, "stringValue") = NSString;
override externalInstanceMethod(#DOMXPathResult, "booleanValue") = Bool;
override externalInstanceMethod(#DOMXPathResult, "singleNodeValue") = DOMNode;
override externalInstanceMethod(#DOMXPathResult, "invalidIteratorState") = Bool;
override externalInstanceMethod(#DOMXPathResult, "snapshotLength") = UInt;

override externalClassMethod(#NSObject, "webScriptNameForSelector:") = NSString, SelectorHandle;
override externalClassMethod(#NSObject, "isSelectorExcludedFromWebScript:") = Bool, SelectorHandle;
override externalClassMethod(#NSObject, "webScriptNameForKey:") = NSString, Pointer[CChar];
override externalClassMethod(#NSObject, "isKeyExcludedFromWebScript:") = Bool, Pointer[CChar];
override externalInstanceMethod(#NSObject, "invokeUndefinedMethodFromWebScript:withArguments:") = Id, NSString, NSArray;
override externalInstanceMethod(#NSObject, "invokeDefaultMethodWithArguments:") = Id, NSArray;
override externalInstanceMethod(#NSObject, "finalizeForWebScript") = Void;
override externalInstanceMethod(#NSObject, "downloadWindowForAuthenticationSheet:") = NSWindow, WebDownload;
override externalInstanceMethod(#NSObject, "webView:shouldBeginEditingInDOMRange:") = Bool, WebView, DOMRange;
override externalInstanceMethod(#NSObject, "webView:shouldEndEditingInDOMRange:") = Bool, WebView, DOMRange;
override externalInstanceMethod(#NSObject, "webView:shouldInsertNode:replacingDOMRange:givenAction:") = Bool, WebView, DOMNode, DOMRange, WebViewInsertAction;
override externalInstanceMethod(#NSObject, "webView:shouldInsertText:replacingDOMRange:givenAction:") = Bool, WebView, NSString, DOMRange, WebViewInsertAction;
override externalInstanceMethod(#NSObject, "webView:shouldDeleteDOMRange:") = Bool, WebView, DOMRange;
override externalInstanceMethod(#NSObject, "webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:") = Bool, WebView, DOMRange, DOMRange, CULong, Bool;
override externalInstanceMethod(#NSObject, "webView:shouldApplyStyle:toElementsInDOMRange:") = Bool, WebView, DOMCSSStyleDeclaration, DOMRange;
override externalInstanceMethod(#NSObject, "webView:shouldChangeTypingStyle:toStyle:") = Bool, WebView, DOMCSSStyleDeclaration, DOMCSSStyleDeclaration;
override externalInstanceMethod(#NSObject, "webView:doCommandBySelector:") = Bool, WebView, SelectorHandle;
override externalInstanceMethod(#NSObject, "webViewDidBeginEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "webViewDidChange:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "webViewDidEndEditing:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "webViewDidChangeTypingStyle:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "webViewDidChangeSelection:") = Void, NSNotification;
override externalInstanceMethod(#NSObject, "undoManagerForWebView:") = NSUndoManager, WebView;
override externalInstanceMethod(#NSObject, "webView:didStartProvisionalLoadForFrame:") = Void, WebView, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didReceiveServerRedirectForProvisionalLoadForFrame:") = Void, WebView, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didFailProvisionalLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didCommitLoadForFrame:") = Void, WebView, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didReceiveTitle:forFrame:") = Void, WebView, NSString, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didReceiveIcon:forFrame:") = Void, WebView, NSImage, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didFinishLoadForFrame:") = Void, WebView, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didFailLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didChangeLocationWithinPageForFrame:") = Void, WebView, WebFrame;
override externalInstanceMethod(#NSObject, "webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:") = Void, WebView, NSURL, Double, NSDate, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didCancelClientRedirectForFrame:") = Void, WebView, WebFrame;
override externalInstanceMethod(#NSObject, "webView:willCloseFrame:") = Void, WebView, WebFrame;
override externalInstanceMethod(#NSObject, "webView:didClearWindowObject:forFrame:") = Void, WebView, WebScriptObject, WebFrame;
override externalInstanceMethod(#NSObject, "webView:windowScriptObjectAvailable:") = Void, WebView, WebScriptObject;
override externalInstanceMethod(#NSObject, "webPlugInInitialize") = Void;
override externalInstanceMethod(#NSObject, "webPlugInStart") = Void;
override externalInstanceMethod(#NSObject, "webPlugInStop") = Void;
override externalInstanceMethod(#NSObject, "webPlugInDestroy") = Void;
override externalInstanceMethod(#NSObject, "webPlugInSetIsSelected:") = Void, Bool;
override externalInstanceMethod(#NSObject, "objectForWebScript") = Id;
override externalInstanceMethod(#NSObject, "webPlugInMainResourceDidReceiveResponse:") = Void, NSURLResponse;
override externalInstanceMethod(#NSObject, "webPlugInMainResourceDidReceiveData:") = Void, NSData;
override externalInstanceMethod(#NSObject, "webPlugInMainResourceDidFailWithError:") = Void, NSError;
override externalInstanceMethod(#NSObject, "webPlugInMainResourceDidFinishLoading") = Void;
override externalInstanceMethod(#NSObject, "webPlugInContainerLoadRequest:inFrame:") = Void, NSURLRequest, NSString;
override externalInstanceMethod(#NSObject, "webPlugInContainerShowStatus:") = Void, NSString;
override externalInstanceMethod(#NSObject, "webPlugInContainerSelectionColor") = NSColor;
override externalInstanceMethod(#NSObject, "webFrame") = WebFrame;
override externalInstanceMethod(#NSObject, "webView:decidePolicyForNavigationAction:request:frame:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, WebFrame, Id;
override externalInstanceMethod(#NSObject, "webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, NSString, Id;
override externalInstanceMethod(#NSObject, "webView:decidePolicyForMIMEType:request:frame:decisionListener:") = Void, WebView, NSString, NSURLRequest, WebFrame, Id;
override externalInstanceMethod(#NSObject, "webView:unableToImplementPolicyWithError:frame:") = Void, WebView, NSError, WebFrame;
override externalInstanceMethod(#NSObject, "webView:identifierForInitialRequest:fromDataSource:") = Id, WebView, NSURLRequest, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:resource:willSendRequest:redirectResponse:fromDataSource:") = NSURLRequest, WebView, Id, NSURLRequest, NSURLResponse, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:resource:didReceiveAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:resource:didCancelAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:resource:didReceiveResponse:fromDataSource:") = Void, WebView, Id, NSURLResponse, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:resource:didReceiveContentLength:fromDataSource:") = Void, WebView, Id, CLong, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:resource:didFinishLoadingFromDataSource:") = Void, WebView, Id, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:resource:didFailLoadingWithError:fromDataSource:") = Void, WebView, Id, NSError, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:plugInFailedWithError:dataSource:") = Void, WebView, NSError, WebDataSource;
override externalInstanceMethod(#NSObject, "webView:createWebViewWithRequest:") = WebView, WebView, NSURLRequest;
override externalInstanceMethod(#NSObject, "webViewShow:") = Void, WebView;
override externalInstanceMethod(#NSObject, "webView:createWebViewModalDialogWithRequest:") = WebView, WebView, NSURLRequest;
override externalInstanceMethod(#NSObject, "webViewRunModal:") = Void, WebView;
override externalInstanceMethod(#NSObject, "webViewClose:") = Void, WebView;
override externalInstanceMethod(#NSObject, "webViewFocus:") = Void, WebView;
override externalInstanceMethod(#NSObject, "webViewUnfocus:") = Void, WebView;
override externalInstanceMethod(#NSObject, "webViewFirstResponder:") = NSResponder, WebView;
override externalInstanceMethod(#NSObject, "webView:makeFirstResponder:") = Void, WebView, NSResponder;
override externalInstanceMethod(#NSObject, "webView:setStatusText:") = Void, WebView, NSString;
override externalInstanceMethod(#NSObject, "webViewStatusText:") = NSString, WebView;
override externalInstanceMethod(#NSObject, "webViewAreToolbarsVisible:") = Bool, WebView;
override externalInstanceMethod(#NSObject, "webView:setToolbarsVisible:") = Void, WebView, Bool;
override externalInstanceMethod(#NSObject, "webViewIsStatusBarVisible:") = Bool, WebView;
override externalInstanceMethod(#NSObject, "webView:setStatusBarVisible:") = Void, WebView, Bool;
override externalInstanceMethod(#NSObject, "webViewIsResizable:") = Bool, WebView;
override externalInstanceMethod(#NSObject, "webView:setResizable:") = Void, WebView, Bool;
override externalInstanceMethod(#NSObject, "webView:setFrame:") = Void, WebView, NSRect;
override externalInstanceMethod(#NSObject, "webViewFrame:") = NSRect, WebView;
override externalInstanceMethod(#NSObject, "webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:") = Void, WebView, NSString, WebFrame;
override externalInstanceMethod(#NSObject, "webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
override externalInstanceMethod(#NSObject, "webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:") = NSString, WebView, NSString, NSString, WebFrame;
override externalInstanceMethod(#NSObject, "webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
override externalInstanceMethod(#NSObject, "webView:runOpenPanelForFileButtonWithResultListener:") = Void, WebView, Id;
override externalInstanceMethod(#NSObject, "webView:runOpenPanelForFileButtonWithResultListener:allowMultipleFiles:") = Void, WebView, Id, Bool;
override externalInstanceMethod(#NSObject, "webView:mouseDidMoveOverElement:modifierFlags:") = Void, WebView, NSDictionary, CULong;
override externalInstanceMethod(#NSObject, "webView:contextMenuItemsForElement:defaultMenuItems:") = NSArray, WebView, NSDictionary, NSArray;
override externalInstanceMethod(#NSObject, "webView:validateUserInterfaceItem:defaultValidation:") = Bool, WebView, Id, Bool;
override externalInstanceMethod(#NSObject, "webView:shouldPerformAction:fromSender:") = Bool, WebView, SelectorHandle, Id;
override externalInstanceMethod(#NSObject, "webView:dragDestinationActionMaskForDraggingInfo:") = CULong, WebView, Id;
override externalInstanceMethod(#NSObject, "webView:willPerformDragDestinationAction:forDraggingInfo:") = Void, WebView, WebDragDestinationAction, Id;
override externalInstanceMethod(#NSObject, "webView:dragSourceActionMaskForPoint:") = CULong, WebView, NSPoint;
override externalInstanceMethod(#NSObject, "webView:willPerformDragSourceAction:fromPoint:withPasteboard:") = Void, WebView, WebDragSourceAction, NSPoint, NSPasteboard;
override externalInstanceMethod(#NSObject, "webView:printFrameView:") = Void, WebView, WebFrameView;
override externalInstanceMethod(#NSObject, "webViewHeaderHeight:") = Float, WebView;
override externalInstanceMethod(#NSObject, "webViewFooterHeight:") = Float, WebView;
override externalInstanceMethod(#NSObject, "webView:drawHeaderInRect:") = Void, WebView, NSRect;
override externalInstanceMethod(#NSObject, "webView:drawFooterInRect:") = Void, WebView, NSRect;
override externalInstanceMethod(#NSObject, "webView:runJavaScriptAlertPanelWithMessage:") = Void, WebView, NSString;
override externalInstanceMethod(#NSObject, "webView:runJavaScriptConfirmPanelWithMessage:") = Bool, WebView, NSString;
override externalInstanceMethod(#NSObject, "webView:runJavaScriptTextInputPanelWithPrompt:defaultText:") = NSString, WebView, NSString, NSString;
override externalInstanceMethod(#NSObject, "webView:setContentRect:") = Void, WebView, NSRect;
override externalInstanceMethod(#NSObject, "webViewContentRect:") = NSRect, WebView;

record WebArchive = externalClass(NSObject);
override externalInstanceMethod(#WebArchive, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#WebArchive, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#WebArchive, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#WebArchive, "initWithMainResource:subresources:subframeArchives:") = Id, WebResource, NSArray, NSArray;
override externalInstanceMethod(#WebArchive, "initWithData:") = Id, NSData;
override externalInstanceMethod(#WebArchive, "mainResource") = WebResource;
override externalInstanceMethod(#WebArchive, "subresources") = NSArray;
override externalInstanceMethod(#WebArchive, "subframeArchives") = NSArray;
override externalInstanceMethod(#WebArchive, "data") = NSData;

record WebBackForwardList = externalClass(NSObject);
override externalInstanceMethod(#WebBackForwardList, "addItem:") = Void, WebHistoryItem;
override externalInstanceMethod(#WebBackForwardList, "goBack") = Void;
override externalInstanceMethod(#WebBackForwardList, "goForward") = Void;
override externalInstanceMethod(#WebBackForwardList, "goToItem:") = Void, WebHistoryItem;
override externalInstanceMethod(#WebBackForwardList, "backItem") = WebHistoryItem;
override externalInstanceMethod(#WebBackForwardList, "currentItem") = WebHistoryItem;
override externalInstanceMethod(#WebBackForwardList, "forwardItem") = WebHistoryItem;
override externalInstanceMethod(#WebBackForwardList, "backListWithLimit:") = NSArray, Int;
override externalInstanceMethod(#WebBackForwardList, "forwardListWithLimit:") = NSArray, Int;
override externalInstanceMethod(#WebBackForwardList, "capacity") = Int;
override externalInstanceMethod(#WebBackForwardList, "setCapacity:") = Void, Int;
override externalInstanceMethod(#WebBackForwardList, "backListCount") = Int;
override externalInstanceMethod(#WebBackForwardList, "forwardListCount") = Int;
override externalInstanceMethod(#WebBackForwardList, "containsItem:") = Bool, WebHistoryItem;
override externalInstanceMethod(#WebBackForwardList, "itemAtIndex:") = WebHistoryItem, Int;
override externalInstanceMethod(#WebBackForwardList, "setPageCacheSize:") = Void, CULong;
override externalInstanceMethod(#WebBackForwardList, "pageCacheSize") = CULong;

record WebDataSource = externalClass(NSObject);
override externalInstanceMethod(#WebDataSource, "initWithRequest:") = Id, NSURLRequest;
override externalInstanceMethod(#WebDataSource, "data") = NSData;
override externalInstanceMethod(#WebDataSource, "representation") = Id;
override externalInstanceMethod(#WebDataSource, "webFrame") = WebFrame;
override externalInstanceMethod(#WebDataSource, "initialRequest") = NSURLRequest;
override externalInstanceMethod(#WebDataSource, "request") = NSMutableURLRequest;
override externalInstanceMethod(#WebDataSource, "response") = NSURLResponse;
override externalInstanceMethod(#WebDataSource, "textEncodingName") = NSString;
override externalInstanceMethod(#WebDataSource, "isLoading") = Bool;
override externalInstanceMethod(#WebDataSource, "pageTitle") = NSString;
override externalInstanceMethod(#WebDataSource, "unreachableURL") = NSURL;
override externalInstanceMethod(#WebDataSource, "webArchive") = WebArchive;
override externalInstanceMethod(#WebDataSource, "mainResource") = WebResource;
override externalInstanceMethod(#WebDataSource, "subresources") = NSArray;
override externalInstanceMethod(#WebDataSource, "subresourceForURL:") = WebResource, NSURL;
override externalInstanceMethod(#WebDataSource, "addSubresource:") = Void, WebResource;

record WebDownload = externalClass(NSURLDownload);

record WebFrame = externalClass(NSObject);
override externalInstanceMethod(#WebFrame, "initWithName:webFrameView:webView:") = Id, NSString, WebFrameView, WebView;
override externalInstanceMethod(#WebFrame, "name") = NSString;
override externalInstanceMethod(#WebFrame, "webView") = WebView;
override externalInstanceMethod(#WebFrame, "frameView") = WebFrameView;
override externalInstanceMethod(#WebFrame, "DOMDocument") = DOMDocument;
override externalInstanceMethod(#WebFrame, "frameElement") = DOMHTMLElement;
override externalInstanceMethod(#WebFrame, "loadRequest:") = Void, NSURLRequest;
override externalInstanceMethod(#WebFrame, "loadData:MIMEType:textEncodingName:baseURL:") = Void, NSData, NSString, NSString, NSURL;
override externalInstanceMethod(#WebFrame, "loadHTMLString:baseURL:") = Void, NSString, NSURL;
override externalInstanceMethod(#WebFrame, "loadAlternateHTMLString:baseURL:forUnreachableURL:") = Void, NSString, NSURL, NSURL;
override externalInstanceMethod(#WebFrame, "loadArchive:") = Void, WebArchive;
override externalInstanceMethod(#WebFrame, "dataSource") = WebDataSource;
override externalInstanceMethod(#WebFrame, "provisionalDataSource") = WebDataSource;
override externalInstanceMethod(#WebFrame, "stopLoading") = Void;
override externalInstanceMethod(#WebFrame, "reload") = Void;
override externalInstanceMethod(#WebFrame, "reloadFromOrigin") = Void;
override externalInstanceMethod(#WebFrame, "findFrameNamed:") = WebFrame, NSString;
override externalInstanceMethod(#WebFrame, "parentFrame") = WebFrame;
override externalInstanceMethod(#WebFrame, "childFrames") = NSArray;
override externalInstanceMethod(#WebFrame, "windowObject") = WebScriptObject;
override externalInstanceMethod(#WebFrame, "globalContext") = JSGlobalContextRef;

record WebFrameView = externalClass(NSView);
override externalInstanceMethod(#WebFrameView, "webFrame") = WebFrame;
override externalInstanceMethod(#WebFrameView, "documentView") = NSView;
override externalInstanceMethod(#WebFrameView, "setAllowsScrolling:") = Void, Bool;
override externalInstanceMethod(#WebFrameView, "allowsScrolling") = Bool;
override externalInstanceMethod(#WebFrameView, "canPrintHeadersAndFooters") = Bool;
override externalInstanceMethod(#WebFrameView, "printOperationWithPrintInfo:") = NSPrintOperation, NSPrintInfo;
override externalInstanceMethod(#WebFrameView, "documentViewShouldHandlePrint") = Bool;
override externalInstanceMethod(#WebFrameView, "printDocumentView") = Void;

record WebHistory = externalClass(NSObject);
override externalClassMethod(#WebHistory, "optionalSharedHistory") = WebHistory;
override externalClassMethod(#WebHistory, "setOptionalSharedHistory:") = Void, WebHistory;
override externalInstanceMethod(#WebHistory, "loadFromURL:error:") = Bool, NSURL, Pointer[NSError];
override externalInstanceMethod(#WebHistory, "saveToURL:error:") = Bool, NSURL, Pointer[NSError];
override externalInstanceMethod(#WebHistory, "addItems:") = Void, NSArray;
override externalInstanceMethod(#WebHistory, "removeItems:") = Void, NSArray;
override externalInstanceMethod(#WebHistory, "removeAllItems") = Void;
override externalInstanceMethod(#WebHistory, "orderedLastVisitedDays") = NSArray;
override externalInstanceMethod(#WebHistory, "orderedItemsLastVisitedOnDay:") = NSArray, NSCalendarDate;
override externalInstanceMethod(#WebHistory, "itemForURL:") = WebHistoryItem, NSURL;
override externalInstanceMethod(#WebHistory, "setHistoryItemLimit:") = Void, Int;
override externalInstanceMethod(#WebHistory, "historyItemLimit") = Int;
override externalInstanceMethod(#WebHistory, "setHistoryAgeInDaysLimit:") = Void, Int;
override externalInstanceMethod(#WebHistory, "historyAgeInDaysLimit") = Int;

record WebHistoryItem = externalClass(NSObject);
override externalInstanceMethod(#WebHistoryItem, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#WebHistoryItem, "initWithURLString:title:lastVisitedTimeInterval:") = Id, NSString, NSString, Double;
override externalInstanceMethod(#WebHistoryItem, "originalURLString") = NSString;
override externalInstanceMethod(#WebHistoryItem, "URLString") = NSString;
override externalInstanceMethod(#WebHistoryItem, "title") = NSString;
override externalInstanceMethod(#WebHistoryItem, "lastVisitedTimeInterval") = Double;
override externalInstanceMethod(#WebHistoryItem, "setAlternateTitle:") = Void, NSString;
override externalInstanceMethod(#WebHistoryItem, "alternateTitle") = NSString;
override externalInstanceMethod(#WebHistoryItem, "icon") = NSImage;

record WebPreferences = externalClass(NSObject);
override externalInstanceMethod(#WebPreferences, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#WebPreferences, "initWithCoder:") = Id, NSCoder;
override externalClassMethod(#WebPreferences, "standardPreferences") = WebPreferences;
override externalInstanceMethod(#WebPreferences, "initWithIdentifier:") = Id, NSString;
override externalInstanceMethod(#WebPreferences, "identifier") = NSString;
override externalInstanceMethod(#WebPreferences, "standardFontFamily") = NSString;
override externalInstanceMethod(#WebPreferences, "setStandardFontFamily:") = Void, NSString;
override externalInstanceMethod(#WebPreferences, "fixedFontFamily") = NSString;
override externalInstanceMethod(#WebPreferences, "setFixedFontFamily:") = Void, NSString;
override externalInstanceMethod(#WebPreferences, "serifFontFamily") = NSString;
override externalInstanceMethod(#WebPreferences, "setSerifFontFamily:") = Void, NSString;
override externalInstanceMethod(#WebPreferences, "sansSerifFontFamily") = NSString;
override externalInstanceMethod(#WebPreferences, "setSansSerifFontFamily:") = Void, NSString;
override externalInstanceMethod(#WebPreferences, "cursiveFontFamily") = NSString;
override externalInstanceMethod(#WebPreferences, "setCursiveFontFamily:") = Void, NSString;
override externalInstanceMethod(#WebPreferences, "fantasyFontFamily") = NSString;
override externalInstanceMethod(#WebPreferences, "setFantasyFontFamily:") = Void, NSString;
override externalInstanceMethod(#WebPreferences, "defaultFontSize") = Int;
override externalInstanceMethod(#WebPreferences, "setDefaultFontSize:") = Void, Int;
override externalInstanceMethod(#WebPreferences, "defaultFixedFontSize") = Int;
override externalInstanceMethod(#WebPreferences, "setDefaultFixedFontSize:") = Void, Int;
override externalInstanceMethod(#WebPreferences, "minimumFontSize") = Int;
override externalInstanceMethod(#WebPreferences, "setMinimumFontSize:") = Void, Int;
override externalInstanceMethod(#WebPreferences, "minimumLogicalFontSize") = Int;
override externalInstanceMethod(#WebPreferences, "setMinimumLogicalFontSize:") = Void, Int;
override externalInstanceMethod(#WebPreferences, "defaultTextEncodingName") = NSString;
override externalInstanceMethod(#WebPreferences, "setDefaultTextEncodingName:") = Void, NSString;
override externalInstanceMethod(#WebPreferences, "userStyleSheetEnabled") = Bool;
override externalInstanceMethod(#WebPreferences, "setUserStyleSheetEnabled:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "userStyleSheetLocation") = NSURL;
override externalInstanceMethod(#WebPreferences, "setUserStyleSheetLocation:") = Void, NSURL;
override externalInstanceMethod(#WebPreferences, "isJavaEnabled") = Bool;
override externalInstanceMethod(#WebPreferences, "setJavaEnabled:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "isJavaScriptEnabled") = Bool;
override externalInstanceMethod(#WebPreferences, "setJavaScriptEnabled:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "javaScriptCanOpenWindowsAutomatically") = Bool;
override externalInstanceMethod(#WebPreferences, "setJavaScriptCanOpenWindowsAutomatically:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "arePlugInsEnabled") = Bool;
override externalInstanceMethod(#WebPreferences, "setPlugInsEnabled:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "allowsAnimatedImages") = Bool;
override externalInstanceMethod(#WebPreferences, "setAllowsAnimatedImages:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "allowsAnimatedImageLooping") = Bool;
override externalInstanceMethod(#WebPreferences, "setAllowsAnimatedImageLooping:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "setLoadsImagesAutomatically:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "loadsImagesAutomatically") = Bool;
override externalInstanceMethod(#WebPreferences, "setAutosaves:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "autosaves") = Bool;
override externalInstanceMethod(#WebPreferences, "setShouldPrintBackgrounds:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "shouldPrintBackgrounds") = Bool;
override externalInstanceMethod(#WebPreferences, "setPrivateBrowsingEnabled:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "privateBrowsingEnabled") = Bool;
override externalInstanceMethod(#WebPreferences, "setTabsToLinks:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "tabsToLinks") = Bool;
override externalInstanceMethod(#WebPreferences, "setUsesPageCache:") = Void, Bool;
override externalInstanceMethod(#WebPreferences, "usesPageCache") = Bool;
override externalInstanceMethod(#WebPreferences, "setCacheModel:") = Void, CULong;
override externalInstanceMethod(#WebPreferences, "cacheModel") = CULong;

record WebResource = externalClass(NSObject);
override externalInstanceMethod(#WebResource, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#WebResource, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#WebResource, "copyWithZone:") = Id, Pointer[NSZone];
override externalInstanceMethod(#WebResource, "initWithData:URL:MIMEType:textEncodingName:frameName:") = Id, NSData, NSURL, NSString, NSString, NSString;
override externalInstanceMethod(#WebResource, "data") = NSData;
override externalInstanceMethod(#WebResource, "URL") = NSURL;
override externalInstanceMethod(#WebResource, "MIMEType") = NSString;
override externalInstanceMethod(#WebResource, "textEncodingName") = NSString;
override externalInstanceMethod(#WebResource, "frameName") = NSString;

record WebScriptObject = externalClass(NSObject);
override externalClassMethod(#WebScriptObject, "throwException:") = Bool, NSString;
override externalInstanceMethod(#WebScriptObject, "JSObject") = JSObjectRef;
override externalInstanceMethod(#WebScriptObject, "callWebScriptMethod:withArguments:") = Id, NSString, NSArray;
override externalInstanceMethod(#WebScriptObject, "evaluateWebScript:") = Id, NSString;
override externalInstanceMethod(#WebScriptObject, "removeWebScriptKey:") = Void, NSString;
override externalInstanceMethod(#WebScriptObject, "stringRepresentation") = NSString;
override externalInstanceMethod(#WebScriptObject, "webScriptValueAtIndex:") = Id, UInt;
override externalInstanceMethod(#WebScriptObject, "setWebScriptValueAtIndex:value:") = Void, UInt, Id;
override externalInstanceMethod(#WebScriptObject, "setException:") = Void, NSString;

record WebUndefined = externalClass(NSObject);
override externalInstanceMethod(#WebUndefined, "encodeWithCoder:") = Void, NSCoder;
override externalInstanceMethod(#WebUndefined, "initWithCoder:") = Id, NSCoder;
override externalInstanceMethod(#WebUndefined, "copyWithZone:") = Id, Pointer[NSZone];
override externalClassMethod(#WebUndefined, "undefined") = WebUndefined;

record WebView = externalClass(NSView);
override externalClassMethod(#WebView, "canShowMIMEType:") = Bool, NSString;
override externalClassMethod(#WebView, "canShowMIMETypeAsHTML:") = Bool, NSString;
override externalClassMethod(#WebView, "MIMETypesShownAsHTML") = NSArray;
override externalClassMethod(#WebView, "setMIMETypesShownAsHTML:") = Void, NSArray;
override externalClassMethod(#WebView, "URLFromPasteboard:") = NSURL, NSPasteboard;
override externalClassMethod(#WebView, "URLTitleFromPasteboard:") = NSString, NSPasteboard;
override externalClassMethod(#WebView, "registerURLSchemeAsLocal:") = Void, NSString;
override externalInstanceMethod(#WebView, "initWithFrame:frameName:groupName:") = Id, NSRect, NSString, NSString;
override externalInstanceMethod(#WebView, "close") = Void;
override externalInstanceMethod(#WebView, "setShouldCloseWithWindow:") = Void, Bool;
override externalInstanceMethod(#WebView, "shouldCloseWithWindow") = Bool;
override externalInstanceMethod(#WebView, "setUIDelegate:") = Void, Id;
override externalInstanceMethod(#WebView, "UIDelegate") = Id;
override externalInstanceMethod(#WebView, "setResourceLoadDelegate:") = Void, Id;
override externalInstanceMethod(#WebView, "resourceLoadDelegate") = Id;
override externalInstanceMethod(#WebView, "setDownloadDelegate:") = Void, Id;
override externalInstanceMethod(#WebView, "downloadDelegate") = Id;
override externalInstanceMethod(#WebView, "setFrameLoadDelegate:") = Void, Id;
override externalInstanceMethod(#WebView, "frameLoadDelegate") = Id;
override externalInstanceMethod(#WebView, "setPolicyDelegate:") = Void, Id;
override externalInstanceMethod(#WebView, "policyDelegate") = Id;
override externalInstanceMethod(#WebView, "mainFrame") = WebFrame;
override externalInstanceMethod(#WebView, "selectedFrame") = WebFrame;
override externalInstanceMethod(#WebView, "backForwardList") = WebBackForwardList;
override externalInstanceMethod(#WebView, "setMaintainsBackForwardList:") = Void, Bool;
override externalInstanceMethod(#WebView, "goBack") = Bool;
override externalInstanceMethod(#WebView, "goForward") = Bool;
override externalInstanceMethod(#WebView, "goToBackForwardItem:") = Bool, WebHistoryItem;
override externalInstanceMethod(#WebView, "setTextSizeMultiplier:") = Void, Float;
override externalInstanceMethod(#WebView, "textSizeMultiplier") = Float;
override externalInstanceMethod(#WebView, "setApplicationNameForUserAgent:") = Void, NSString;
override externalInstanceMethod(#WebView, "applicationNameForUserAgent") = NSString;
override externalInstanceMethod(#WebView, "setCustomUserAgent:") = Void, NSString;
override externalInstanceMethod(#WebView, "customUserAgent") = NSString;
override externalInstanceMethod(#WebView, "userAgentForURL:") = NSString, NSURL;
override externalInstanceMethod(#WebView, "supportsTextEncoding") = Bool;
override externalInstanceMethod(#WebView, "setCustomTextEncodingName:") = Void, NSString;
override externalInstanceMethod(#WebView, "customTextEncodingName") = NSString;
override externalInstanceMethod(#WebView, "setMediaStyle:") = Void, NSString;
override externalInstanceMethod(#WebView, "mediaStyle") = NSString;
override externalInstanceMethod(#WebView, "stringByEvaluatingJavaScriptFromString:") = NSString, NSString;
override externalInstanceMethod(#WebView, "windowScriptObject") = WebScriptObject;
override externalInstanceMethod(#WebView, "setPreferences:") = Void, WebPreferences;
override externalInstanceMethod(#WebView, "preferences") = WebPreferences;
override externalInstanceMethod(#WebView, "setPreferencesIdentifier:") = Void, NSString;
override externalInstanceMethod(#WebView, "preferencesIdentifier") = NSString;
override externalInstanceMethod(#WebView, "setHostWindow:") = Void, NSWindow;
override externalInstanceMethod(#WebView, "hostWindow") = NSWindow;
override externalInstanceMethod(#WebView, "searchFor:direction:caseSensitive:wrap:") = Bool, NSString, Bool, Bool, Bool;
override externalClassMethod(#WebView, "registerViewClass:representationClass:forMIMEType:") = Void, Id, Id, NSString;
override externalInstanceMethod(#WebView, "setGroupName:") = Void, NSString;
override externalInstanceMethod(#WebView, "groupName") = NSString;
override externalInstanceMethod(#WebView, "estimatedProgress") = Double;
override externalInstanceMethod(#WebView, "isLoading") = Bool;
override externalInstanceMethod(#WebView, "elementAtPoint:") = NSDictionary, NSPoint;
override externalInstanceMethod(#WebView, "pasteboardTypesForSelection") = NSArray;
override externalInstanceMethod(#WebView, "writeSelectionWithPasteboardTypes:toPasteboard:") = Void, NSArray, NSPasteboard;
override externalInstanceMethod(#WebView, "pasteboardTypesForElement:") = NSArray, NSDictionary;
override externalInstanceMethod(#WebView, "writeElement:withPasteboardTypes:toPasteboard:") = Void, NSDictionary, NSArray, NSPasteboard;
override externalInstanceMethod(#WebView, "moveDragCaretToPoint:") = Void, NSPoint;
override externalInstanceMethod(#WebView, "removeDragCaret") = Void;
override externalInstanceMethod(#WebView, "setDrawsBackground:") = Void, Bool;
override externalInstanceMethod(#WebView, "drawsBackground") = Bool;
override externalInstanceMethod(#WebView, "setShouldUpdateWhileOffscreen:") = Void, Bool;
override externalInstanceMethod(#WebView, "shouldUpdateWhileOffscreen") = Bool;
override externalInstanceMethod(#WebView, "setMainFrameURL:") = Void, NSString;
override externalInstanceMethod(#WebView, "mainFrameURL") = NSString;
override externalInstanceMethod(#WebView, "mainFrameDocument") = DOMDocument;
override externalInstanceMethod(#WebView, "mainFrameTitle") = NSString;
override externalInstanceMethod(#WebView, "mainFrameIcon") = NSImage;
override externalInstanceMethod(#WebView, "takeStringURLFrom:") = Void, Id;
override externalInstanceMethod(#WebView, "stopLoading:") = Void, Id;
override externalInstanceMethod(#WebView, "reload:") = Void, Id;
override externalInstanceMethod(#WebView, "reloadFromOrigin:") = Void, Id;
override externalInstanceMethod(#WebView, "canGoBack") = Bool;
override externalInstanceMethod(#WebView, "goBack:") = Void, Id;
override externalInstanceMethod(#WebView, "canGoForward") = Bool;
override externalInstanceMethod(#WebView, "goForward:") = Void, Id;
override externalInstanceMethod(#WebView, "canMakeTextLarger") = Bool;
override externalInstanceMethod(#WebView, "makeTextLarger:") = Void, Id;
override externalInstanceMethod(#WebView, "canMakeTextSmaller") = Bool;
override externalInstanceMethod(#WebView, "makeTextSmaller:") = Void, Id;
override externalInstanceMethod(#WebView, "canMakeTextStandardSize") = Bool;
override externalInstanceMethod(#WebView, "makeTextStandardSize:") = Void, Id;
override externalInstanceMethod(#WebView, "toggleContinuousSpellChecking:") = Void, Id;
override externalInstanceMethod(#WebView, "toggleSmartInsertDelete:") = Void, Id;
override externalInstanceMethod(#WebView, "computedStyleForElement:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
override externalInstanceMethod(#WebView, "editableDOMRangeForPoint:") = DOMRange, NSPoint;
override externalInstanceMethod(#WebView, "setSelectedDOMRange:affinity:") = Void, DOMRange, CULong;
override externalInstanceMethod(#WebView, "selectedDOMRange") = DOMRange;
override externalInstanceMethod(#WebView, "selectionAffinity") = CULong;
override externalInstanceMethod(#WebView, "maintainsInactiveSelection") = Bool;
override externalInstanceMethod(#WebView, "setEditable:") = Void, Bool;
override externalInstanceMethod(#WebView, "isEditable") = Bool;
override externalInstanceMethod(#WebView, "setTypingStyle:") = Void, DOMCSSStyleDeclaration;
override externalInstanceMethod(#WebView, "typingStyle") = DOMCSSStyleDeclaration;
override externalInstanceMethod(#WebView, "setSmartInsertDeleteEnabled:") = Void, Bool;
override externalInstanceMethod(#WebView, "smartInsertDeleteEnabled") = Bool;
override externalInstanceMethod(#WebView, "setContinuousSpellCheckingEnabled:") = Void, Bool;
override externalInstanceMethod(#WebView, "isContinuousSpellCheckingEnabled") = Bool;
override externalInstanceMethod(#WebView, "spellCheckerDocumentTag") = CLong;
override externalInstanceMethod(#WebView, "undoManager") = NSUndoManager;
override externalInstanceMethod(#WebView, "setEditingDelegate:") = Void, Id;
override externalInstanceMethod(#WebView, "editingDelegate") = Id;
override externalInstanceMethod(#WebView, "styleDeclarationWithText:") = DOMCSSStyleDeclaration, NSString;
override externalInstanceMethod(#WebView, "replaceSelectionWithNode:") = Void, DOMNode;
override externalInstanceMethod(#WebView, "replaceSelectionWithText:") = Void, NSString;
override externalInstanceMethod(#WebView, "replaceSelectionWithMarkupString:") = Void, NSString;
override externalInstanceMethod(#WebView, "replaceSelectionWithArchive:") = Void, WebArchive;
override externalInstanceMethod(#WebView, "deleteSelection") = Void;
override externalInstanceMethod(#WebView, "applyStyle:") = Void, DOMCSSStyleDeclaration;
override externalInstanceMethod(#WebView, "copy:") = Void, Id;
override externalInstanceMethod(#WebView, "cut:") = Void, Id;
override externalInstanceMethod(#WebView, "paste:") = Void, Id;
override externalInstanceMethod(#WebView, "copyFont:") = Void, Id;
override externalInstanceMethod(#WebView, "pasteFont:") = Void, Id;
override externalInstanceMethod(#WebView, "delete:") = Void, Id;
override externalInstanceMethod(#WebView, "pasteAsPlainText:") = Void, Id;
override externalInstanceMethod(#WebView, "pasteAsRichText:") = Void, Id;
override externalInstanceMethod(#WebView, "changeFont:") = Void, Id;
override externalInstanceMethod(#WebView, "changeAttributes:") = Void, Id;
override externalInstanceMethod(#WebView, "changeDocumentBackgroundColor:") = Void, Id;
override externalInstanceMethod(#WebView, "changeColor:") = Void, Id;
override externalInstanceMethod(#WebView, "alignCenter:") = Void, Id;
override externalInstanceMethod(#WebView, "alignJustified:") = Void, Id;
override externalInstanceMethod(#WebView, "alignLeft:") = Void, Id;
override externalInstanceMethod(#WebView, "alignRight:") = Void, Id;
override externalInstanceMethod(#WebView, "checkSpelling:") = Void, Id;
override externalInstanceMethod(#WebView, "showGuessPanel:") = Void, Id;
override externalInstanceMethod(#WebView, "performFindPanelAction:") = Void, Id;
override externalInstanceMethod(#WebView, "startSpeaking:") = Void, Id;
override externalInstanceMethod(#WebView, "stopSpeaking:") = Void, Id;
override externalInstanceMethod(#WebView, "moveToBeginningOfSentence:") = Void, Id;
override externalInstanceMethod(#WebView, "moveToBeginningOfSentenceAndModifySelection:") = Void, Id;
override externalInstanceMethod(#WebView, "moveToEndOfSentence:") = Void, Id;
override externalInstanceMethod(#WebView, "moveToEndOfSentenceAndModifySelection:") = Void, Id;
override externalInstanceMethod(#WebView, "selectSentence:") = Void, Id;


external DOMException : NSString;

alias DOM_INDEX_SIZE_ERR = 1;
alias DOM_DOMSTRING_SIZE_ERR = 2;
alias DOM_HIERARCHY_REQUEST_ERR = 3;
alias DOM_WRONG_DOCUMENT_ERR = 4;
alias DOM_INVALID_CHARACTER_ERR = 5;
alias DOM_NO_DATA_ALLOWED_ERR = 6;
alias DOM_NO_MODIFICATION_ALLOWED_ERR = 7;
alias DOM_NOT_FOUND_ERR = 8;
alias DOM_NOT_SUPPORTED_ERR = 9;
alias DOM_INUSE_ATTRIBUTE_ERR = 10;
alias DOM_INVALID_STATE_ERR = 11;
alias DOM_SYNTAX_ERR = 12;
alias DOM_INVALID_MODIFICATION_ERR = 13;
alias DOM_NAMESPACE_ERR = 14;
alias DOM_INVALID_ACCESS_ERR = 15;

alias DOMTimeStamp = UInt64;

alias DOMObjectInternal = Opaque;

alias DOM_ELEMENT_NODE = 1;
alias DOM_ATTRIBUTE_NODE = 2;
alias DOM_TEXT_NODE = 3;
alias DOM_CDATA_SECTION_NODE = 4;
alias DOM_ENTITY_REFERENCE_NODE = 5;
alias DOM_ENTITY_NODE = 6;
alias DOM_PROCESSING_INSTRUCTION_NODE = 7;
alias DOM_COMMENT_NODE = 8;
alias DOM_DOCUMENT_NODE = 9;
alias DOM_DOCUMENT_TYPE_NODE = 10;
alias DOM_DOCUMENT_FRAGMENT_NODE = 11;
alias DOM_NOTATION_NODE = 12;
alias DOM_DOCUMENT_POSITION_DISCONNECTED = 1;
alias DOM_DOCUMENT_POSITION_PRECEDING = 2;
alias DOM_DOCUMENT_POSITION_FOLLOWING = 4;
alias DOM_DOCUMENT_POSITION_CONTAINS = 8;
alias DOM_DOCUMENT_POSITION_CONTAINED_BY = 16;
alias DOM_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;

alias DOM_UNKNOWN_RULE = 0;
alias DOM_STYLE_RULE = 1;
alias DOM_CHARSET_RULE = 2;
alias DOM_IMPORT_RULE = 3;
alias DOM_MEDIA_RULE = 4;
alias DOM_FONT_FACE_RULE = 5;
alias DOM_PAGE_RULE = 6;
alias DOM_VARIABLES_RULE = 7;
alias DOM_WEBKIT_KEYFRAMES_RULE = 8;
alias DOM_WEBKIT_KEYFRAME_RULE = 9;

alias DOM_CSS_INHERIT = 0;
alias DOM_CSS_PRIMITIVE_VALUE = 1;
alias DOM_CSS_VALUE_LIST = 2;
alias DOM_CSS_CUSTOM = 3;

alias DOM_CSS_UNKNOWN = 0;
alias DOM_CSS_NUMBER = 1;
alias DOM_CSS_PERCENTAGE = 2;
alias DOM_CSS_EMS = 3;
alias DOM_CSS_EXS = 4;
alias DOM_CSS_PX = 5;
alias DOM_CSS_CM = 6;
alias DOM_CSS_MM = 7;
alias DOM_CSS_IN = 8;
alias DOM_CSS_PT = 9;
alias DOM_CSS_PC = 10;
alias DOM_CSS_DEG = 11;
alias DOM_CSS_RAD = 12;
alias DOM_CSS_GRAD = 13;
alias DOM_CSS_MS = 14;
alias DOM_CSS_S = 15;
alias DOM_CSS_HZ = 16;
alias DOM_CSS_KHZ = 17;
alias DOM_CSS_DIMENSION = 18;
alias DOM_CSS_STRING = 19;
alias DOM_CSS_URI = 20;
alias DOM_CSS_IDENT = 21;
alias DOM_CSS_ATTR = 22;
alias DOM_CSS_COUNTER = 23;
alias DOM_CSS_RECT = 24;
alias DOM_CSS_RGBCOLOR = 25;

external DOMRangeException : NSString;

alias DOM_BAD_BOUNDARYPOINTS_ERR = 1;
alias DOM_INVALID_NODE_TYPE_ERR = 2;

alias DOM_START_TO_START = 0;
alias DOM_START_TO_END = 1;
alias DOM_END_TO_END = 2;
alias DOM_END_TO_START = 3;
alias DOM_NODE_BEFORE = 0;
alias DOM_NODE_AFTER = 1;
alias DOM_NODE_BEFORE_AND_AFTER = 2;
alias DOM_NODE_INSIDE = 3;

alias DOM_CAPTURING_PHASE = 1;
alias DOM_AT_TARGET = 2;
alias DOM_BUBBLING_PHASE = 3;

external DOMEventException : NSString;

alias DOM_UNSPECIFIED_EVENT_TYPE_ERR = 0;

alias DOM_KEY_LOCATION_STANDARD = 0;
alias DOM_KEY_LOCATION_LEFT = 1;
alias DOM_KEY_LOCATION_RIGHT = 2;
alias DOM_KEY_LOCATION_NUMPAD = 3;

alias DOM_MODIFICATION = 1;
alias DOM_ADDITION = 2;
alias DOM_REMOVAL = 3;

alias DOM_HORIZONTAL = 0;
alias DOM_VERTICAL = 1;
alias DOM_BOTH = 2;

alias DOM_FILTER_ACCEPT = 1;
alias DOM_FILTER_REJECT = 2;
alias DOM_FILTER_SKIP = 3;
alias DOM_SHOW_ALL = 4294967295;
alias DOM_SHOW_ELEMENT = 1;
alias DOM_SHOW_ATTRIBUTE = 2;
alias DOM_SHOW_TEXT = 4;
alias DOM_SHOW_CDATA_SECTION = 8;
alias DOM_SHOW_ENTITY_REFERENCE = 16;
alias DOM_SHOW_ENTITY = 32;
alias DOM_SHOW_PROCESSING_INSTRUCTION = 64;
alias DOM_SHOW_COMMENT = 128;
alias DOM_SHOW_DOCUMENT = 256;
alias DOM_SHOW_DOCUMENT_TYPE = 512;
alias DOM_SHOW_DOCUMENT_FRAGMENT = 1024;
alias DOM_SHOW_NOTATION = 2048;

external DOMXPathException : NSString;

alias DOM_INVALID_EXPRESSION_ERR = 51;
alias DOM_TYPE_ERR = 52;

alias DOM_ANY_TYPE = 0;
alias DOM_NUMBER_TYPE = 1;
alias DOM_STRING_TYPE = 2;
alias DOM_BOOLEAN_TYPE = 3;
alias DOM_UNORDERED_NODE_ITERATOR_TYPE = 4;
alias DOM_ORDERED_NODE_ITERATOR_TYPE = 5;
alias DOM_UNORDERED_NODE_SNAPSHOT_TYPE = 6;
alias DOM_ORDERED_NODE_SNAPSHOT_TYPE = 7;
alias DOM_ANY_UNORDERED_NODE_TYPE = 8;
alias DOM_FIRST_ORDERED_NODE_TYPE = 9;

external WebArchivePboardType : NSString;

alias WebViewInsertActionTyped = 0;
alias WebViewInsertActionPasted = 1;
alias WebViewInsertActionDropped = 2;

alias WebViewInsertAction = Int;

external WebHistoryItemsAddedNotification : NSString;

external WebHistoryItemsRemovedNotification : NSString;

external WebHistoryAllItemsRemovedNotification : NSString;

external WebHistoryLoadedNotification : NSString;

external WebHistorySavedNotification : NSString;

external WebHistoryItemsKey : NSString;

external WebHistoryItemChangedNotification : NSString;

external WebKitErrorDomain : NSString;

external WebKitErrorMIMETypeKey : NSString;

external WebKitErrorPlugInNameKey : NSString;

external WebKitErrorPlugInPageURLStringKey : NSString;

alias WebKitErrorCannotShowMIMEType = 100;
alias WebKitErrorCannotShowURL = 101;
alias WebKitErrorFrameLoadInterruptedByPolicyChange = 102;

alias WebKitErrorCannotFindPlugIn = 200;
alias WebKitErrorCannotLoadPlugIn = 201;
alias WebKitErrorJavaUnavailable = 202;

external WebPlugInBaseURLKey : NSString;

external WebPlugInAttributesKey : NSString;

external WebPlugInContainerKey : NSString;

external WebPlugInContainingElementKey : NSString;

external WebPlugInShouldLoadMainResourceKey : NSString;

alias WebNavigationTypeLinkClicked = 0;
alias WebNavigationTypeFormSubmitted = 1;
alias WebNavigationTypeBackForward = 2;
alias WebNavigationTypeReload = 3;
alias WebNavigationTypeFormResubmitted = 4;
alias WebNavigationTypeOther = 5;

alias WebNavigationType = Int;

external WebActionNavigationTypeKey : NSString;

external WebActionElementKey : NSString;

external WebActionButtonKey : NSString;

external WebActionModifierFlagsKey : NSString;

external WebActionOriginalURLKey : NSString;

alias WebCacheModelDocumentViewer = 0;
alias WebCacheModelDocumentBrowser = 1;
alias WebCacheModelPrimaryWebBrowser = 2;

alias WebCacheModel = CULong;

external WebPreferencesChangedNotification : NSString;

alias WebMenuItemTagOpenLinkInNewWindow = 1;
alias WebMenuItemTagDownloadLinkToDisk = 2;
alias WebMenuItemTagCopyLinkToClipboard = 3;
alias WebMenuItemTagOpenImageInNewWindow = 4;
alias WebMenuItemTagDownloadImageToDisk = 5;
alias WebMenuItemTagCopyImageToClipboard = 6;
alias WebMenuItemTagOpenFrameInNewWindow = 7;
alias WebMenuItemTagCopy = 8;
alias WebMenuItemTagGoBack = 9;
alias WebMenuItemTagGoForward = 10;
alias WebMenuItemTagStop = 11;
alias WebMenuItemTagReload = 12;
alias WebMenuItemTagCut = 13;
alias WebMenuItemTagPaste = 14;
alias WebMenuItemTagSpellingGuess = 15;
alias WebMenuItemTagNoGuessesFound = 16;
alias WebMenuItemTagIgnoreSpelling = 17;
alias WebMenuItemTagLearnSpelling = 18;
alias WebMenuItemTagOther = 19;
alias WebMenuItemTagSearchInSpotlight = 20;
alias WebMenuItemTagSearchWeb = 21;
alias WebMenuItemTagLookUpInDictionary = 22;
alias WebMenuItemTagOpenWithDefaultApplication = 23;
alias WebMenuItemPDFActualSize = 24;
alias WebMenuItemPDFZoomIn = 25;
alias WebMenuItemPDFZoomOut = 26;
alias WebMenuItemPDFAutoSize = 27;
alias WebMenuItemPDFSinglePage = 28;
alias WebMenuItemPDFFacingPages = 29;
alias WebMenuItemPDFContinuous = 30;
alias WebMenuItemPDFNextPage = 31;
alias WebMenuItemPDFPreviousPage = 32;

alias WebDragDestinationActionNone = 0;
alias WebDragDestinationActionDHTML = 1;
alias WebDragDestinationActionEdit = 2;
alias WebDragDestinationActionLoad = 4;
alias WebDragDestinationActionAny = 4294967295;

alias WebDragDestinationAction = Int;

alias WebDragSourceActionNone = 0;
alias WebDragSourceActionDHTML = 1;
alias WebDragSourceActionImage = 2;
alias WebDragSourceActionLink = 4;
alias WebDragSourceActionSelection = 8;
alias WebDragSourceActionAny = 4294967295;

alias WebDragSourceAction = Int;

external WebElementDOMNodeKey : NSString;

external WebElementFrameKey : NSString;

external WebElementImageAltStringKey : NSString;

external WebElementImageKey : NSString;

external WebElementImageRectKey : NSString;

external WebElementImageURLKey : NSString;

external WebElementIsSelectedKey : NSString;

external WebElementLinkURLKey : NSString;

external WebElementLinkTargetFrameKey : NSString;

external WebElementLinkTitleKey : NSString;

external WebElementLinkLabelKey : NSString;

external WebViewProgressStartedNotification : NSString;

external WebViewProgressEstimateChangedNotification : NSString;

external WebViewProgressFinishedNotification : NSString;

external WebViewDidBeginEditingNotification : NSString;

external WebViewDidChangeNotification : NSString;

external WebViewDidEndEditingNotification : NSString;

external WebViewDidChangeTypingStyleNotification : NSString;

external WebViewDidChangeSelectionNotification : NSString;
