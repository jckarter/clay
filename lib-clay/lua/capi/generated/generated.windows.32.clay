// Automatically generated by clay-bindgen
// language: c

import win32.*;
import libc.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


alias lua_State = Opaque;

alias lua_CFunction = CCodePointer[(OpaquePointer),(Int)];

alias lua_Reader = CCodePointer[(OpaquePointer,RawPointer,Pointer[UInt]),(Pointer[CChar])];

alias lua_Writer = CCodePointer[(OpaquePointer,RawPointer,UInt,RawPointer),(Int)];

alias lua_Alloc = CCodePointer[(RawPointer,RawPointer,UInt,UInt),(RawPointer)];

alias lua_Number = Double;

alias lua_Integer = Int;

external lua_newstate(
    f : lua_Alloc,
    ud : RawPointer) Pointer[lua_State];

external lua_close(
    L : Pointer[lua_State]);

external lua_newthread(
    L : Pointer[lua_State]) Pointer[lua_State];

external lua_atpanic(
    L : Pointer[lua_State],
    panicf : lua_CFunction) lua_CFunction;

external lua_gettop(
    L : Pointer[lua_State]) Int;

external lua_settop(
    L : Pointer[lua_State],
    idx : Int);

external lua_pushvalue(
    L : Pointer[lua_State],
    idx : Int);

external lua_remove(
    L : Pointer[lua_State],
    idx : Int);

external lua_insert(
    L : Pointer[lua_State],
    idx : Int);

external lua_replace(
    L : Pointer[lua_State],
    idx : Int);

external lua_checkstack(
    L : Pointer[lua_State],
    sz : Int) Int;

external lua_xmove(
    from : Pointer[lua_State],
    to : Pointer[lua_State],
    n : Int);

external lua_isnumber(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_isstring(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_iscfunction(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_isuserdata(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_type(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_typename(
    L : Pointer[lua_State],
    tp : Int) Pointer[CChar];

external lua_equal(
    L : Pointer[lua_State],
    idx1 : Int,
    idx2 : Int) Int;

external lua_rawequal(
    L : Pointer[lua_State],
    idx1 : Int,
    idx2 : Int) Int;

external lua_lessthan(
    L : Pointer[lua_State],
    idx1 : Int,
    idx2 : Int) Int;

external lua_tonumber(
    L : Pointer[lua_State],
    idx : Int) Double;

external lua_tointeger(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_toboolean(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_tolstring(
    L : Pointer[lua_State],
    idx : Int,
    len : Pointer[UInt]) Pointer[CChar];

external lua_objlen(
    L : Pointer[lua_State],
    idx : Int) UInt;

external lua_tocfunction(
    L : Pointer[lua_State],
    idx : Int) lua_CFunction;

external lua_touserdata(
    L : Pointer[lua_State],
    idx : Int) RawPointer;

external lua_tothread(
    L : Pointer[lua_State],
    idx : Int) Pointer[lua_State];

external lua_topointer(
    L : Pointer[lua_State],
    idx : Int) RawPointer;

external lua_pushnil(
    L : Pointer[lua_State]);

external lua_pushnumber(
    L : Pointer[lua_State],
    n : Double);

external lua_pushinteger(
    L : Pointer[lua_State],
    n : Int);

external lua_pushlstring(
    L : Pointer[lua_State],
    s : Pointer[CChar],
    l : UInt);

external lua_pushstring(
    L : Pointer[lua_State],
    s : Pointer[CChar]);

external lua_pushvfstring(
    L : Pointer[lua_State],
    fmt : Pointer[CChar],
    argp : va_list) Pointer[CChar];

external lua_pushfstring(
    L : Pointer[lua_State],
    fmt : Pointer[CChar]) Pointer[CChar];

external lua_pushcclosure(
    L : Pointer[lua_State],
    fn : lua_CFunction,
    n : Int);

external lua_pushboolean(
    L : Pointer[lua_State],
    b : Int);

external lua_pushlightuserdata(
    L : Pointer[lua_State],
    p : RawPointer);

external lua_pushthread(
    L : Pointer[lua_State]) Int;

external lua_gettable(
    L : Pointer[lua_State],
    idx : Int);

external lua_getfield(
    L : Pointer[lua_State],
    idx : Int,
    k : Pointer[CChar]);

external lua_rawget(
    L : Pointer[lua_State],
    idx : Int);

external lua_rawgeti(
    L : Pointer[lua_State],
    idx : Int,
    n : Int);

external lua_createtable(
    L : Pointer[lua_State],
    narr : Int,
    nrec : Int);

external lua_newuserdata(
    L : Pointer[lua_State],
    sz : UInt) RawPointer;

external lua_getmetatable(
    L : Pointer[lua_State],
    objindex : Int) Int;

external lua_getfenv(
    L : Pointer[lua_State],
    idx : Int);

external lua_settable(
    L : Pointer[lua_State],
    idx : Int);

external lua_setfield(
    L : Pointer[lua_State],
    idx : Int,
    k : Pointer[CChar]);

external lua_rawset(
    L : Pointer[lua_State],
    idx : Int);

external lua_rawseti(
    L : Pointer[lua_State],
    idx : Int,
    n : Int);

external lua_setmetatable(
    L : Pointer[lua_State],
    objindex : Int) Int;

external lua_setfenv(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_call(
    L : Pointer[lua_State],
    nargs : Int,
    nresults : Int);

external lua_pcall(
    L : Pointer[lua_State],
    nargs : Int,
    nresults : Int,
    errfunc : Int) Int;

external lua_cpcall(
    L : Pointer[lua_State],
    func : lua_CFunction,
    ud : RawPointer) Int;

external lua_load(
    L : Pointer[lua_State],
    reader : lua_Reader,
    dt : RawPointer,
    chunkname : Pointer[CChar]) Int;

external lua_dump(
    L : Pointer[lua_State],
    writer : lua_Writer,
    data : RawPointer) Int;

external lua_yield(
    L : Pointer[lua_State],
    nresults : Int) Int;

external lua_resume(
    L : Pointer[lua_State],
    narg : Int) Int;

external lua_status(
    L : Pointer[lua_State]) Int;

external lua_gc(
    L : Pointer[lua_State],
    what : Int,
    data : Int) Int;

external lua_error(
    L : Pointer[lua_State]) Int;

external lua_next(
    L : Pointer[lua_State],
    idx : Int) Int;

external lua_concat(
    L : Pointer[lua_State],
    n : Int);

external lua_getallocf(
    L : Pointer[lua_State],
    ud : Pointer[RawPointer]) lua_Alloc;

external lua_setallocf(
    L : Pointer[lua_State],
    f : lua_Alloc,
    ud : RawPointer);

external lua_setlevel(
    from : Pointer[lua_State],
    to : Pointer[lua_State]);

alias lua_Debug = Struct_lua_Debug;

alias lua_Hook = CCodePointer[(OpaquePointer,Pointer[Struct_lua_Debug]),()];

external lua_getstack(
    L : Pointer[lua_State],
    level : Int,
    ar : Pointer[lua_Debug]) Int;

external lua_getinfo(
    L : Pointer[lua_State],
    what : Pointer[CChar],
    ar : Pointer[lua_Debug]) Int;

external lua_getlocal(
    L : Pointer[lua_State],
    ar : Pointer[lua_Debug],
    n : Int) Pointer[CChar];

external lua_setlocal(
    L : Pointer[lua_State],
    ar : Pointer[lua_Debug],
    n : Int) Pointer[CChar];

external lua_getupvalue(
    L : Pointer[lua_State],
    funcindex : Int,
    n : Int) Pointer[CChar];

external lua_setupvalue(
    L : Pointer[lua_State],
    funcindex : Int,
    n : Int) Pointer[CChar];

external lua_sethook(
    L : Pointer[lua_State],
    func : lua_Hook,
    mask : Int,
    count : Int) Int;

external lua_gethook(
    L : Pointer[lua_State]) lua_Hook;

external lua_gethookmask(
    L : Pointer[lua_State]) Int;

external lua_gethookcount(
    L : Pointer[lua_State]) Int;

record Struct_lua_Debug (
    event : Int,
    name : Pointer[CChar],
    namewhat : Pointer[CChar],
    what : Pointer[CChar],
    source : Pointer[CChar],
    currentline : Int,
    nups : Int,
    linedefined : Int,
    lastlinedefined : Int,
    short_src : Array[CChar,60],
    i_ci : Int,
);

record Struct_luaL_Reg (
    name : Pointer[CChar],
    func : lua_CFunction,
);

alias luaL_Reg = Struct_luaL_Reg;

external luaL_openlib(
    L : Pointer[lua_State],
    libname : Pointer[CChar],
    l : Pointer[luaL_Reg],
    nup : Int);

external luaL_register(
    L : Pointer[lua_State],
    libname : Pointer[CChar],
    l : Pointer[luaL_Reg]);

external luaL_getmetafield(
    L : Pointer[lua_State],
    obj : Int,
    e : Pointer[CChar]) Int;

external luaL_callmeta(
    L : Pointer[lua_State],
    obj : Int,
    e : Pointer[CChar]) Int;

external luaL_typerror(
    L : Pointer[lua_State],
    narg : Int,
    tname : Pointer[CChar]) Int;

external luaL_argerror(
    L : Pointer[lua_State],
    numarg : Int,
    extramsg : Pointer[CChar]) Int;

external luaL_checklstring(
    L : Pointer[lua_State],
    numArg : Int,
    l : Pointer[UInt]) Pointer[CChar];

external luaL_optlstring(
    L : Pointer[lua_State],
    numArg : Int,
    def : Pointer[CChar],
    l : Pointer[UInt]) Pointer[CChar];

external luaL_checknumber(
    L : Pointer[lua_State],
    numArg : Int) Double;

external luaL_optnumber(
    L : Pointer[lua_State],
    nArg : Int,
    def : Double) Double;

external luaL_checkinteger(
    L : Pointer[lua_State],
    numArg : Int) Int;

external luaL_optinteger(
    L : Pointer[lua_State],
    nArg : Int,
    def : Int) Int;

external luaL_checkstack(
    L : Pointer[lua_State],
    sz : Int,
    msg : Pointer[CChar]);

external luaL_checktype(
    L : Pointer[lua_State],
    narg : Int,
    t : Int);

external luaL_checkany(
    L : Pointer[lua_State],
    narg : Int);

external luaL_newmetatable(
    L : Pointer[lua_State],
    tname : Pointer[CChar]) Int;

external luaL_checkudata(
    L : Pointer[lua_State],
    ud : Int,
    tname : Pointer[CChar]) RawPointer;

external luaL_where(
    L : Pointer[lua_State],
    lvl : Int);

external luaL_error(
    L : Pointer[lua_State],
    fmt : Pointer[CChar]) Int;

external luaL_checkoption(
    L : Pointer[lua_State],
    narg : Int,
    def : Pointer[CChar],
    lst : Pointer[Pointer[CChar]]) Int;

external luaL_ref(
    L : Pointer[lua_State],
    t : Int) Int;

external luaL_unref(
    L : Pointer[lua_State],
    t : Int,
    ref_ : Int);

external luaL_loadfile(
    L : Pointer[lua_State],
    filename : Pointer[CChar]) Int;

external luaL_loadbuffer(
    L : Pointer[lua_State],
    buff : Pointer[CChar],
    sz : UInt,
    name : Pointer[CChar]) Int;

external luaL_loadstring(
    L : Pointer[lua_State],
    s : Pointer[CChar]) Int;

external luaL_newstate() Pointer[lua_State];

external luaL_gsub(
    L : Pointer[lua_State],
    s : Pointer[CChar],
    p : Pointer[CChar],
    r : Pointer[CChar]) Pointer[CChar];

external luaL_findtable(
    L : Pointer[lua_State],
    idx : Int,
    fname : Pointer[CChar],
    szhint : Int) Pointer[CChar];

record Struct_luaL_Buffer (
    p : Pointer[CChar],
    lvl : Int,
    L : Pointer[lua_State],
    buffer : Array[CChar,512],
);

alias luaL_Buffer = Struct_luaL_Buffer;

external luaL_buffinit(
    L : Pointer[lua_State],
    B : Pointer[luaL_Buffer]);

external luaL_prepbuffer(
    B : Pointer[luaL_Buffer]) Pointer[CChar];

external luaL_addlstring(
    B : Pointer[luaL_Buffer],
    s : Pointer[CChar],
    l : UInt);

external luaL_addstring(
    B : Pointer[luaL_Buffer],
    s : Pointer[CChar]);

external luaL_addvalue(
    B : Pointer[luaL_Buffer]);

external luaL_pushresult(
    B : Pointer[luaL_Buffer]);

external luaopen_base(
    L : Pointer[lua_State]) Int;

external luaopen_table(
    L : Pointer[lua_State]) Int;

external luaopen_io(
    L : Pointer[lua_State]) Int;

external luaopen_os(
    L : Pointer[lua_State]) Int;

external luaopen_string(
    L : Pointer[lua_State]) Int;

external luaopen_math(
    L : Pointer[lua_State]) Int;

external luaopen_debug(
    L : Pointer[lua_State]) Int;

external luaopen_package(
    L : Pointer[lua_State]) Int;

external luaL_openlibs(
    L : Pointer[lua_State]);
