// Automatically generated by clay-bindgen
// language: c

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


record Struct___va_list_tag (
    gp_offset : UInt,
    fp_offset : UInt,
    overflow_arg_area : RawPointer,
    reg_save_area : RawPointer,
);

alias __va_list_tag = Struct___va_list_tag;

alias __builtin_va_list = Array[__va_list_tag,1];

alias __int8_t = CChar;

alias __uint8_t = CUChar;

alias __int16_t = Short;

alias __uint16_t = UShort;

alias __int32_t = Int;

alias __uint32_t = UInt;

alias __int64_t = CLong;

alias __uint64_t = CULong;

alias __clock_t = Int;

alias __cpumask_t = UInt;

alias __critical_t = CLong;

alias __double_t = Double;

alias __float_t = Float;

alias __intfptr_t = CLong;

alias __intmax_t = CLong;

alias __intptr_t = CLong;

alias __int_fast8_t = Int;

alias __int_fast16_t = Int;

alias __int_fast32_t = Int;

alias __int_fast64_t = CLong;

alias __int_least8_t = CChar;

alias __int_least16_t = Short;

alias __int_least32_t = Int;

alias __int_least64_t = CLong;

alias __ptrdiff_t = CLong;

alias __register_t = CLong;

alias __segsz_t = CLong;

alias __size_t = CULong;

alias __ssize_t = CLong;

alias __time_t = CLong;

alias __uintfptr_t = CULong;

alias __uintmax_t = CULong;

alias __uintptr_t = CULong;

alias __uint_fast8_t = UInt;

alias __uint_fast16_t = UInt;

alias __uint_fast32_t = UInt;

alias __uint_fast64_t = CULong;

alias __uint_least8_t = CUChar;

alias __uint_least16_t = UShort;

alias __uint_least32_t = UInt;

alias __uint_least64_t = CULong;

alias __u_register_t = CULong;

alias __vm_offset_t = CULong;

alias __vm_ooffset_t = CLong;

alias __vm_paddr_t = CULong;

alias __vm_pindex_t = CULong;

alias __vm_size_t = CULong;

alias __va_list = __builtin_va_list;

alias __gnuc_va_list = __va_list;

alias __blksize_t = UInt;

alias __blkcnt_t = CLong;

alias __clockid_t = Int;

alias __fflags_t = UInt;

alias __fsblkcnt_t = CULong;

alias __fsfilcnt_t = CULong;

alias __gid_t = UInt;

alias __id_t = CLong;

alias __ino_t = UInt;

alias __key_t = CLong;

alias __lwpid_t = Int;

alias __mode_t = UShort;

alias __accmode_t = Int;

alias __nl_item = Int;

alias __nlink_t = UShort;

alias __off_t = CLong;

alias __pid_t = Int;

alias __rlim_t = CLong;

alias __sa_family_t = CUChar;

alias __socklen_t = UInt;

alias __suseconds_t = CLong;

alias __timer_t = OpaquePointer;

alias __mqd_t = OpaquePointer;

alias __uid_t = UInt;

alias __useconds_t = UInt;

alias __cpuwhich_t = Int;

alias __cpulevel_t = Int;

alias __cpusetid_t = Int;

alias __ct_rune_t = Int;

alias __rune_t = Int;

alias __wchar_t = Int;

alias __wint_t = Int;

alias __dev_t = UInt;

alias __fixpt_t = UInt;

alias __mbstate_t = AUnionType;

alias pthread_t = OpaquePointer;

alias pthread_attr_t = OpaquePointer;

alias pthread_mutex_t = OpaquePointer;

alias pthread_mutexattr_t = OpaquePointer;

alias pthread_cond_t = OpaquePointer;

alias pthread_condattr_t = OpaquePointer;

alias pthread_key_t = Int;

alias pthread_once_t = Struct_pthread_once;

alias pthread_rwlock_t = OpaquePointer;

alias pthread_rwlockattr_t = OpaquePointer;

alias pthread_barrier_t = OpaquePointer;

alias pthread_barrierattr_t = OpaquePointer;

alias pthread_spinlock_t = OpaquePointer;

alias pthread_addr_t = RawPointer;

alias pthread_startroutine_t = CCodePointer[(RawPointer),(RawPointer)];

record Struct_pthread_once (
    state : Int,
    mutex : pthread_mutex_t,
);

alias u_char = CUChar;

alias u_short = UShort;

alias u_int = UInt;

alias u_long = CULong;

alias ushort = UShort;

alias uint = UInt;

alias int8_t = CChar;

alias int16_t = Short;

alias int32_t = Int;

alias int64_t = CLong;

alias uint8_t = CUChar;

alias uint16_t = UShort;

alias uint32_t = UInt;

alias uint64_t = CULong;

alias intptr_t = CLong;

alias uintptr_t = CULong;

alias u_int8_t = CUChar;

alias u_int16_t = UShort;

alias u_int32_t = UInt;

alias u_int64_t = CULong;

alias u_quad_t = CULong;

alias quad_t = CLong;

alias qaddr_t = Pointer[CLong];

alias caddr_t = Pointer[CChar];

alias c_caddr_t = Pointer[CChar];

alias v_caddr_t = Pointer[CChar];

alias blksize_t = UInt;

alias cpuwhich_t = Int;

alias cpulevel_t = Int;

alias cpusetid_t = Int;

alias blkcnt_t = CLong;

alias clock_t = Int;

alias clockid_t = Int;

alias cpumask_t = UInt;

alias critical_t = CLong;

alias daddr_t = CLong;

alias dev_t = UInt;

alias fflags_t = UInt;

alias fixpt_t = UInt;

alias fsblkcnt_t = CULong;

alias fsfilcnt_t = CULong;

alias gid_t = UInt;

alias in_addr_t = UInt;

alias in_port_t = UShort;

alias id_t = CLong;

alias ino_t = UInt;

alias key_t = CLong;

alias lwpid_t = Int;

alias mode_t = UShort;

alias accmode_t = Int;

alias nlink_t = UShort;

alias off_t = CLong;

alias pid_t = Int;

alias register_t = CLong;

alias rlim_t = CLong;

alias segsz_t = CLong;

alias size_t = CULong;

alias ssize_t = CLong;

alias suseconds_t = CLong;

alias time_t = CLong;

alias timer_t = __timer_t;

alias mqd_t = __mqd_t;

alias u_register_t = CULong;

alias uid_t = UInt;

alias useconds_t = UInt;

alias vm_offset_t = CULong;

alias vm_ooffset_t = CLong;

alias vm_paddr_t = CULong;

alias vm_pindex_t = CULong;

alias vm_size_t = CULong;

record Struct___sigset (
    __bits : Array[UInt,4],
);

alias __sigset_t = Struct___sigset;

record Struct_timeval (
    tv_sec : CLong,
    tv_usec : CLong,
);

record Struct_timespec (
    tv_sec : CLong,
    tv_nsec : CLong,
);

record Struct_itimerspec (
    it_interval : Struct_timespec,
    it_value : Struct_timespec,
);

alias __fd_mask = CULong;

alias fd_mask = CULong;

alias sigset_t = __sigset_t;

record Struct_fd_set (
    __fds_bits : Array[CULong,16],
);

alias fd_set = Struct_fd_set;

external pselect(
    argument0 : Int,
    argument1 : Pointer[fd_set],
    argument2 : Pointer[fd_set],
    argument3 : Pointer[fd_set],
    argument4 : Pointer[Struct_timespec],
    argument5 : Pointer[sigset_t]) Int;

external select(
    argument0 : Int,
    argument1 : Pointer[fd_set],
    argument2 : Pointer[fd_set],
    argument3 : Pointer[fd_set],
    argument4 : Pointer[Struct_timeval]) Int;

external ftruncate(
    argument0 : Int,
    argument1 : CLong) Int;

external lseek(
    argument0 : Int,
    argument1 : CLong,
    argument2 : Int) CLong;

external mmap(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int,
    argument3 : Int,
    argument4 : Int,
    argument5 : CLong) RawPointer;

external truncate(
    argument0 : Pointer[CChar],
    argument1 : CLong) Int;

external _exit(
    argument0 : Int);

external access(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external alarm(
    argument0 : UInt) UInt;

external chdir(
    argument0 : Pointer[CChar]) Int;

external chown(
    argument0 : Pointer[CChar],
    argument1 : UInt,
    argument2 : UInt) Int;

external close(
    argument0 : Int) Int;

external closefrom(
    argument0 : Int);

external dup(
    argument0 : Int) Int;

external dup2(
    argument0 : Int,
    argument1 : Int) Int;

external execl(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) Int;

external execle(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) Int;

external execlp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) Int;

external execv(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]]) Int;

external execve(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[Pointer[CChar]]) Int;

external execvp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]]) Int;

external fork() Int;

external fpathconf(
    argument0 : Int,
    argument1 : Int) CLong;

external getcwd(
    argument0 : Pointer[CChar],
    argument1 : CULong) Pointer[CChar];

external getegid() UInt;

external geteuid() UInt;

external getgid() UInt;

external getgroups(
    argument0 : Int,
    argument1 : Pointer[UInt]) Int;

external getlogin() Pointer[CChar];

external getpgrp() Int;

external getpid() Int;

external getppid() Int;

external getuid() UInt;

external isatty(
    argument0 : Int) Int;

external link(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Int;

external pathconf(
    argument0 : Pointer[CChar],
    argument1 : Int) CLong;

external pause() Int;

external pipe(
    argument0 : Pointer[Int]) Int;

external read(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong) CLong;

external rmdir(
    argument0 : Pointer[CChar]) Int;

external setgid(
    argument0 : UInt) Int;

external setpgid(
    argument0 : Int,
    argument1 : Int) Int;

external setsid() Int;

external setuid(
    argument0 : UInt) Int;

external sleep(
    argument0 : UInt) UInt;

external sysconf(
    argument0 : Int) CLong;

external tcgetpgrp(
    argument0 : Int) Int;

external tcsetpgrp(
    argument0 : Int,
    argument1 : Int) Int;

external ttyname(
    argument0 : Int) Pointer[CChar];

external ttyname_r(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : CULong) Int;

external unlink(
    argument0 : Pointer[CChar]) Int;

external write(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong) CLong;

external confstr(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : CULong) CULong;

external getopt(
    argument0 : Int,
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[CChar]) Int;

external optarg : Pointer[CChar];

external optind : Int;

external opterr : Int;

external optopt : Int;

external fsync(
    argument0 : Int) Int;

external getlogin_r(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external fchown(
    argument0 : Int,
    argument1 : UInt,
    argument2 : UInt) Int;

external readlink(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) CLong;

external gethostname(
    argument0 : Pointer[CChar],
    argument1 : CULong) Int;

external setegid(
    argument0 : UInt) Int;

external seteuid(
    argument0 : UInt) Int;

external getsid(
    _pid : Int) Int;

external fchdir(
    argument0 : Int) Int;

external getpgid(
    _pid : Int) Int;

external lchown(
    argument0 : Pointer[CChar],
    argument1 : UInt,
    argument2 : UInt) Int;

external pread(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : CLong) CLong;

external pwrite(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : CLong) CLong;

external faccessat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Int,
    argument3 : Int) Int;

external fchownat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : UInt,
    argument3 : UInt,
    argument4 : Int) Int;

external fexecve(
    argument0 : Int,
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[Pointer[CChar]]) Int;

external linkat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Int,
    argument3 : Pointer[CChar],
    argument4 : Int) Int;

external readlinkat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Pointer[CChar],
    argument3 : CULong) CLong;

external symlinkat(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : Pointer[CChar]) Int;

external unlinkat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external symlink(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Int;

external crypt(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external encrypt(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external gethostid() CLong;

external lockf(
    argument0 : Int,
    argument1 : Int,
    argument2 : CLong) Int;

external nice(
    argument0 : Int) Int;

external setpgrp(
    _pid : Int,
    _pgrp : Int) Int;

external setregid(
    argument0 : UInt,
    argument1 : UInt) Int;

external setreuid(
    argument0 : UInt,
    argument1 : UInt) Int;

external swab(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CLong);

external sync();

external brk(
    argument0 : RawPointer) Int;

external chroot(
    argument0 : Pointer[CChar]) Int;

external getdtablesize() Int;

external getpagesize() Int;

external getpass(
    argument0 : Pointer[CChar]) Pointer[CChar];

external sbrk(
    argument0 : CLong) RawPointer;

external getwd(
    argument0 : Pointer[CChar]) Pointer[CChar];

external ualarm(
    argument0 : UInt,
    argument1 : UInt) UInt;

external usleep(
    argument0 : UInt) Int;

external vfork() Int;

external acct(
    argument0 : Pointer[CChar]) Int;

external async_daemon() Int;

external check_utility_compat(
    argument0 : Pointer[CChar]) Int;

external crypt_get_format() Pointer[CChar];

external crypt_set_format(
    argument0 : Pointer[CChar]) Int;

external des_cipher(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CLong,
    argument3 : Int) Int;

external des_setkey(
    key : Pointer[CChar]) Int;

external eaccess(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external endusershell();

external exect(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[Pointer[CChar]]) Int;

external execvP(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Pointer[CChar]]) Int;

external feature_present(
    argument0 : Pointer[CChar]) Int;

external fflagstostr(
    argument0 : CULong) Pointer[CChar];

external getdomainname(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external getgrouplist(
    argument0 : Pointer[CChar],
    argument1 : UInt,
    argument2 : Pointer[UInt],
    argument3 : Pointer[Int]) Int;

external getmode(
    argument0 : RawPointer,
    argument1 : UShort) UShort;

external getosreldate() Int;

external getpeereid(
    argument0 : Int,
    argument1 : Pointer[UInt],
    argument2 : Pointer[UInt]) Int;

external getresgid(
    argument0 : Pointer[UInt],
    argument1 : Pointer[UInt],
    argument2 : Pointer[UInt]) Int;

external getresuid(
    argument0 : Pointer[UInt],
    argument1 : Pointer[UInt],
    argument2 : Pointer[UInt]) Int;

external getusershell() Pointer[CChar];

external initgroups(
    argument0 : Pointer[CChar],
    argument1 : UInt) Int;

external iruserok(
    argument0 : CULong,
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar]) Int;

external iruserok_sa(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : Int,
    argument3 : Pointer[CChar],
    argument4 : Pointer[CChar]) Int;

external issetugid() Int;

external lpathconf(
    argument0 : Pointer[CChar],
    argument1 : Int) CLong;

external mkdtemp(
    argument0 : Pointer[CChar]) Pointer[CChar];

external mknod(
    argument0 : Pointer[CChar],
    argument1 : UShort,
    argument2 : UInt) Int;

external mkstemp(
    argument0 : Pointer[CChar]) Int;

external mkstemps(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external mktemp(
    argument0 : Pointer[CChar]) Pointer[CChar];

external nfssvc(
    argument0 : Int,
    argument1 : RawPointer) Int;

external profil(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : CULong,
    argument3 : Int) Int;

external rcmd(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar],
    argument4 : Pointer[CChar],
    argument5 : Pointer[Int]) Int;

external rcmd_af(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar],
    argument4 : Pointer[CChar],
    argument5 : Pointer[Int],
    argument6 : Int) Int;

external rcmdsh(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar],
    argument4 : Pointer[CChar],
    argument5 : Pointer[CChar]) Int;

external re_comp(
    argument0 : Pointer[CChar]) Pointer[CChar];

external re_exec(
    argument0 : Pointer[CChar]) Int;

external reboot(
    argument0 : Int) Int;

external revoke(
    argument0 : Pointer[CChar]) Int;

external rfork(
    argument0 : Int) Int;

external rfork_thread(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CCodePointer[(RawPointer),(Int)],
    argument3 : RawPointer) Int;

external rresvport(
    argument0 : Pointer[Int]) Int;

external rresvport_af(
    argument0 : Pointer[Int],
    argument1 : Int) Int;

external ruserok(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar]) Int;

external setdomainname(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external setgroups(
    argument0 : Int,
    argument1 : Pointer[UInt]) Int;

external sethostid(
    argument0 : CLong);

external sethostname(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external setkey(
    argument0 : Pointer[CChar]) Int;

external setlogin(
    argument0 : Pointer[CChar]) Int;

external setmode(
    argument0 : Pointer[CChar]) RawPointer;

external setproctitle(
    _fmt : Pointer[CChar],
    ...);

external setresgid(
    argument0 : UInt,
    argument1 : UInt,
    argument2 : UInt) Int;

external setresuid(
    argument0 : UInt,
    argument1 : UInt,
    argument2 : UInt) Int;

external setrgid(
    argument0 : UInt) Int;

external setruid(
    argument0 : UInt) Int;

external setusershell();

external strtofflags(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[CULong],
    argument2 : Pointer[CULong]) Int;

external swapon(
    argument0 : Pointer[CChar]) Int;

external swapoff(
    argument0 : Pointer[CChar]) Int;

external syscall(
    argument0 : Int,
    ...) Int;

external __syscall(
    argument0 : CLong,
    ...) CLong;

external ttyslot() Int;

external undelete(
    argument0 : Pointer[CChar]) Int;

external unwhiteout(
    argument0 : Pointer[CChar]) Int;

external valloc(
    argument0 : CULong) RawPointer;

external optreset : Int;

external __error() Pointer[Int];

record Struct_sched_param (
    sched_priority : Int,
);

external sched_get_priority_max(
    argument0 : Int) Int;

external sched_get_priority_min(
    argument0 : Int) Int;

external sched_getparam(
    argument0 : Int,
    argument1 : Pointer[Struct_sched_param]) Int;

external sched_getscheduler(
    argument0 : Int) Int;

external sched_rr_get_interval(
    argument0 : Int,
    argument1 : Pointer[Struct_timespec]) Int;

external sched_setparam(
    argument0 : Int,
    argument1 : Pointer[Struct_sched_param]) Int;

external sched_setscheduler(
    argument0 : Int,
    argument1 : Int,
    argument2 : Pointer[Struct_sched_param]) Int;

external sched_yield() Int;

record Struct_tm (
    tm_sec : Int,
    tm_min : Int,
    tm_hour : Int,
    tm_mday : Int,
    tm_mon : Int,
    tm_year : Int,
    tm_wday : Int,
    tm_yday : Int,
    tm_isdst : Int,
    tm_gmtoff : CLong,
    tm_zone : Pointer[CChar],
);

external tzname : Array[Pointer[CChar],0];

external asctime(
    argument0 : Pointer[Struct_tm]) Pointer[CChar];

external clock() Int;

external ctime(
    argument0 : Pointer[CLong]) Pointer[CChar];

external difftime(
    argument0 : CLong,
    argument1 : CLong) Double;

external gmtime(
    argument0 : Pointer[CLong]) Pointer[Struct_tm];

external localtime(
    argument0 : Pointer[CLong]) Pointer[Struct_tm];

external mktime(
    argument0 : Pointer[Struct_tm]) CLong;

external strftime(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : Pointer[CChar],
    argument3 : Pointer[Struct_tm]) CULong;

external time(
    argument0 : Pointer[CLong]) CLong;

external timer_create(
    argument0 : Int,
    argument1 : Pointer[Struct_sigevent],
    argument2 : Pointer[timer_t]) Int;

external timer_delete(
    argument0 : timer_t) Int;

external timer_gettime(
    argument0 : timer_t,
    argument1 : Pointer[Struct_itimerspec]) Int;

external timer_getoverrun(
    argument0 : timer_t) Int;

external timer_settime(
    argument0 : timer_t,
    argument1 : Int,
    argument2 : Pointer[Struct_itimerspec],
    argument3 : Pointer[Struct_itimerspec]) Int;

external tzset();

external clock_getres(
    argument0 : Int,
    argument1 : Pointer[Struct_timespec]) Int;

external clock_gettime(
    argument0 : Int,
    argument1 : Pointer[Struct_timespec]) Int;

external clock_settime(
    argument0 : Int,
    argument1 : Pointer[Struct_timespec]) Int;

external nanosleep(
    argument0 : Pointer[Struct_timespec],
    argument1 : Pointer[Struct_timespec]) Int;

external asctime_r(
    argument0 : Pointer[Struct_tm],
    argument1 : Pointer[CChar]) Pointer[CChar];

external ctime_r(
    argument0 : Pointer[CLong],
    argument1 : Pointer[CChar]) Pointer[CChar];

external gmtime_r(
    argument0 : Pointer[CLong],
    argument1 : Pointer[Struct_tm]) Pointer[Struct_tm];

external localtime_r(
    argument0 : Pointer[CLong],
    argument1 : Pointer[Struct_tm]) Pointer[Struct_tm];

external strptime(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Struct_tm]) Pointer[CChar];

external timezone(
    argument0 : Int,
    argument1 : Int) Pointer[CChar];

external tzsetwall();

external timelocal(
    argument0 : Pointer[Struct_tm]) CLong;

external timegm(
    argument0 : Pointer[Struct_tm]) CLong;

alias PTHREAD_MUTEX_ERRORCHECK = 1;
alias PTHREAD_MUTEX_RECURSIVE = 2;
alias PTHREAD_MUTEX_NORMAL = 3;
alias PTHREAD_MUTEX_ADAPTIVE_NP = 4;
alias PTHREAD_MUTEX_TYPE_MAX = 5;

record Struct__pthread_cleanup_info (
    pthread_cleanup_pad : Array[CULong,8],
);

external pthread_atfork(
    argument0 : CCodePointer[(),()],
    argument1 : CCodePointer[(),()],
    argument2 : CCodePointer[(),()]) Int;

external pthread_attr_destroy(
    argument0 : Pointer[pthread_attr_t]) Int;

external pthread_attr_getstack(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[RawPointer],
    argument2 : Pointer[CULong]) Int;

external pthread_attr_getstacksize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[CULong]) Int;

external pthread_attr_getguardsize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[CULong]) Int;

external pthread_attr_getstackaddr(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[RawPointer]) Int;

external pthread_attr_getdetachstate(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) Int;

external pthread_attr_init(
    argument0 : Pointer[pthread_attr_t]) Int;

external pthread_attr_setstacksize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : CULong) Int;

external pthread_attr_setguardsize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : CULong) Int;

external pthread_attr_setstack(
    argument0 : Pointer[pthread_attr_t],
    argument1 : RawPointer,
    argument2 : CULong) Int;

external pthread_attr_setstackaddr(
    argument0 : Pointer[pthread_attr_t],
    argument1 : RawPointer) Int;

external pthread_attr_setdetachstate(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) Int;

external pthread_barrier_destroy(
    argument0 : Pointer[pthread_barrier_t]) Int;

external pthread_barrier_init(
    argument0 : Pointer[pthread_barrier_t],
    argument1 : Pointer[pthread_barrierattr_t],
    argument2 : UInt) Int;

external pthread_barrier_wait(
    argument0 : Pointer[pthread_barrier_t]) Int;

external pthread_barrierattr_destroy(
    argument0 : Pointer[pthread_barrierattr_t]) Int;

external pthread_barrierattr_getpshared(
    argument0 : Pointer[pthread_barrierattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_barrierattr_init(
    argument0 : Pointer[pthread_barrierattr_t]) Int;

external pthread_barrierattr_setpshared(
    argument0 : Pointer[pthread_barrierattr_t],
    argument1 : Int) Int;

external pthread_condattr_destroy(
    argument0 : Pointer[pthread_condattr_t]) Int;

external pthread_condattr_getclock(
    argument0 : Pointer[pthread_condattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_condattr_getpshared(
    argument0 : Pointer[pthread_condattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_condattr_init(
    argument0 : Pointer[pthread_condattr_t]) Int;

external pthread_condattr_setclock(
    argument0 : Pointer[pthread_condattr_t],
    argument1 : Int) Int;

external pthread_condattr_setpshared(
    argument0 : Pointer[pthread_condattr_t],
    argument1 : Int) Int;

external pthread_cond_broadcast(
    argument0 : Pointer[pthread_cond_t]) Int;

external pthread_cond_destroy(
    argument0 : Pointer[pthread_cond_t]) Int;

external pthread_cond_init(
    argument0 : Pointer[pthread_cond_t],
    argument1 : Pointer[pthread_condattr_t]) Int;

external pthread_cond_signal(
    argument0 : Pointer[pthread_cond_t]) Int;

external pthread_cond_timedwait(
    argument0 : Pointer[pthread_cond_t],
    argument1 : Pointer[pthread_mutex_t],
    argument2 : Pointer[Struct_timespec]) Int;

external pthread_cond_wait(
    argument0 : Pointer[pthread_cond_t],
    argument1 : Pointer[pthread_mutex_t]) Int;

external pthread_create(
    argument0 : Pointer[pthread_t],
    argument1 : Pointer[pthread_attr_t],
    argument2 : CCodePointer[(RawPointer),(RawPointer)],
    argument3 : RawPointer) Int;

external pthread_detach(
    argument0 : pthread_t) Int;

external pthread_equal(
    argument0 : pthread_t,
    argument1 : pthread_t) Int;

external pthread_exit(
    argument0 : RawPointer);

external pthread_getspecific(
    argument0 : Int) RawPointer;

external pthread_getcpuclockid(
    argument0 : pthread_t,
    argument1 : Pointer[Int]) Int;

external pthread_join(
    argument0 : pthread_t,
    argument1 : Pointer[RawPointer]) Int;

external pthread_key_create(
    argument0 : Pointer[Int],
    argument1 : CCodePointer[(RawPointer),()]) Int;

external pthread_key_delete(
    argument0 : Int) Int;

external pthread_mutexattr_init(
    argument0 : Pointer[pthread_mutexattr_t]) Int;

external pthread_mutexattr_destroy(
    argument0 : Pointer[pthread_mutexattr_t]) Int;

external pthread_mutexattr_getpshared(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_mutexattr_gettype(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_mutexattr_settype(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) Int;

external pthread_mutexattr_setpshared(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) Int;

external pthread_mutex_destroy(
    argument0 : Pointer[pthread_mutex_t]) Int;

external pthread_mutex_init(
    argument0 : Pointer[pthread_mutex_t],
    argument1 : Pointer[pthread_mutexattr_t]) Int;

external pthread_mutex_lock(
    argument0 : Pointer[pthread_mutex_t]) Int;

external pthread_mutex_trylock(
    argument0 : Pointer[pthread_mutex_t]) Int;

external pthread_mutex_timedlock(
    argument0 : Pointer[pthread_mutex_t],
    argument1 : Pointer[Struct_timespec]) Int;

external pthread_mutex_unlock(
    argument0 : Pointer[pthread_mutex_t]) Int;

external pthread_once(
    argument0 : Pointer[pthread_once_t],
    argument1 : CCodePointer[(),()]) Int;

external pthread_rwlock_destroy(
    argument0 : Pointer[pthread_rwlock_t]) Int;

external pthread_rwlock_init(
    argument0 : Pointer[pthread_rwlock_t],
    argument1 : Pointer[pthread_rwlockattr_t]) Int;

external pthread_rwlock_rdlock(
    argument0 : Pointer[pthread_rwlock_t]) Int;

external pthread_rwlock_timedrdlock(
    argument0 : Pointer[pthread_rwlock_t],
    argument1 : Pointer[Struct_timespec]) Int;

external pthread_rwlock_timedwrlock(
    argument0 : Pointer[pthread_rwlock_t],
    argument1 : Pointer[Struct_timespec]) Int;

external pthread_rwlock_tryrdlock(
    argument0 : Pointer[pthread_rwlock_t]) Int;

external pthread_rwlock_trywrlock(
    argument0 : Pointer[pthread_rwlock_t]) Int;

external pthread_rwlock_unlock(
    argument0 : Pointer[pthread_rwlock_t]) Int;

external pthread_rwlock_wrlock(
    argument0 : Pointer[pthread_rwlock_t]) Int;

external pthread_rwlockattr_init(
    argument0 : Pointer[pthread_rwlockattr_t]) Int;

external pthread_rwlockattr_getpshared(
    argument0 : Pointer[pthread_rwlockattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_rwlockattr_setpshared(
    argument0 : Pointer[pthread_rwlockattr_t],
    argument1 : Int) Int;

external pthread_rwlockattr_destroy(
    argument0 : Pointer[pthread_rwlockattr_t]) Int;

external pthread_self() pthread_t;

external pthread_setspecific(
    argument0 : Int,
    argument1 : RawPointer) Int;

external pthread_spin_init(
    argument0 : Pointer[pthread_spinlock_t],
    argument1 : Int) Int;

external pthread_spin_destroy(
    argument0 : Pointer[pthread_spinlock_t]) Int;

external pthread_spin_lock(
    argument0 : Pointer[pthread_spinlock_t]) Int;

external pthread_spin_trylock(
    argument0 : Pointer[pthread_spinlock_t]) Int;

external pthread_spin_unlock(
    argument0 : Pointer[pthread_spinlock_t]) Int;

external pthread_cancel(
    argument0 : pthread_t) Int;

external pthread_setcancelstate(
    argument0 : Int,
    argument1 : Pointer[Int]) Int;

external pthread_setcanceltype(
    argument0 : Int,
    argument1 : Pointer[Int]) Int;

external pthread_testcancel();

external pthread_getprio(
    argument0 : pthread_t) Int;

external pthread_setprio(
    argument0 : pthread_t,
    argument1 : Int) Int;

external pthread_yield();

external pthread_mutexattr_getprioceiling(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_mutexattr_setprioceiling(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) Int;

external pthread_mutex_getprioceiling(
    argument0 : Pointer[pthread_mutex_t],
    argument1 : Pointer[Int]) Int;

external pthread_mutex_setprioceiling(
    argument0 : Pointer[pthread_mutex_t],
    argument1 : Int,
    argument2 : Pointer[Int]) Int;

external pthread_mutexattr_getprotocol(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) Int;

external pthread_mutexattr_setprotocol(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) Int;

external pthread_attr_getinheritsched(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) Int;

external pthread_attr_getschedparam(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Struct_sched_param]) Int;

external pthread_attr_getschedpolicy(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) Int;

external pthread_attr_getscope(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) Int;

external pthread_attr_setinheritsched(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) Int;

external pthread_attr_setschedparam(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Struct_sched_param]) Int;

external pthread_attr_setschedpolicy(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) Int;

external pthread_attr_setscope(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) Int;

external pthread_getschedparam(
    pthread : pthread_t,
    argument1 : Pointer[Int],
    argument2 : Pointer[Struct_sched_param]) Int;

external pthread_setschedparam(
    argument0 : pthread_t,
    argument1 : Int,
    argument2 : Pointer[Struct_sched_param]) Int;

external pthread_getconcurrency() Int;

external pthread_setconcurrency(
    argument0 : Int) Int;

external __pthread_cleanup_push_imp(
    argument0 : CCodePointer[(RawPointer),()],
    argument1 : RawPointer,
    argument2 : Pointer[Struct__pthread_cleanup_info]);

external __pthread_cleanup_pop_imp(
    argument0 : Int);

record Struct_flock (
    l_start : CLong,
    l_len : CLong,
    l_pid : Int,
    l_type : Short,
    l_whence : Short,
    l_sysid : Int,
);

record Struct_oflock (
    l_start : CLong,
    l_len : CLong,
    l_pid : Int,
    l_type : Short,
    l_whence : Short,
);

external open(
    argument0 : Pointer[CChar],
    argument1 : Int,
    ...) Int;

external creat(
    argument0 : Pointer[CChar],
    argument1 : UShort) Int;

external fcntl(
    argument0 : Int,
    argument1 : Int,
    ...) Int;

external openat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Int,
    ...) Int;

external flock(
    argument0 : Int,
    argument1 : Int) Int;

record Struct_timezone (
    tz_minuteswest : Int,
    tz_dsttime : Int,
);

record Struct_bintime (
    sec : CLong,
    frac : CULong,
);

record Struct_itimerval (
    it_interval : Struct_timeval,
    it_value : Struct_timeval,
);

record Struct_clockinfo (
    hz : Int,
    tick : Int,
    spare : Int,
    stathz : Int,
    profhz : Int,
);

external setitimer(
    argument0 : Int,
    argument1 : Pointer[Struct_itimerval],
    argument2 : Pointer[Struct_itimerval]) Int;

external utimes(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_timeval]) Int;

external adjtime(
    argument0 : Pointer[Struct_timeval],
    argument1 : Pointer[Struct_timeval]) Int;

external futimes(
    argument0 : Int,
    argument1 : Pointer[Struct_timeval]) Int;

external futimesat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Pointer[Struct_timeval]) Int;

external lutimes(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_timeval]) Int;

external settimeofday(
    argument0 : Pointer[Struct_timeval],
    argument1 : Pointer[Struct_timezone]) Int;

external getitimer(
    argument0 : Int,
    argument1 : Pointer[Struct_itimerval]) Int;

external gettimeofday(
    argument0 : Pointer[Struct_timeval],
    argument1 : Pointer[Struct_timezone]) Int;

record Struct_ostat (
    st_dev : UShort,
    st_ino : UInt,
    st_mode : UShort,
    st_nlink : UShort,
    st_uid : UShort,
    st_gid : UShort,
    st_rdev : UShort,
    st_size : Int,
    st_atimespec : Struct_timespec,
    st_mtimespec : Struct_timespec,
    st_ctimespec : Struct_timespec,
    st_blksize : Int,
    st_blocks : Int,
    st_flags : UInt,
    st_gen : UInt,
);

record Struct_stat (
    st_dev : UInt,
    st_ino : UInt,
    st_mode : UShort,
    st_nlink : UShort,
    st_uid : UInt,
    st_gid : UInt,
    st_rdev : UInt,
    st_atimespec : Struct_timespec,
    st_mtimespec : Struct_timespec,
    st_ctimespec : Struct_timespec,
    st_size : CLong,
    st_blocks : CLong,
    st_blksize : UInt,
    st_flags : UInt,
    st_gen : UInt,
    st_lspare : Int,
    st_birthtimespec : Struct_timespec,
    unnamed_field17 : UInt,
    unnamed_field18 : UInt,
);

record Struct_nstat (
    st_dev : UInt,
    st_ino : UInt,
    st_mode : UInt,
    st_nlink : UInt,
    st_uid : UInt,
    st_gid : UInt,
    st_rdev : UInt,
    st_atimespec : Struct_timespec,
    st_mtimespec : Struct_timespec,
    st_ctimespec : Struct_timespec,
    st_size : CLong,
    st_blocks : CLong,
    st_blksize : UInt,
    st_flags : UInt,
    st_gen : UInt,
    st_birthtimespec : Struct_timespec,
    unnamed_field16 : UInt,
    unnamed_field17 : UInt,
);

external chflags(
    argument0 : Pointer[CChar],
    argument1 : CULong) Int;

external chmod(
    argument0 : Pointer[CChar],
    argument1 : UShort) Int;

external fchflags(
    argument0 : Int,
    argument1 : CULong) Int;

external fchmod(
    argument0 : Int,
    argument1 : UShort) Int;

external fchmodat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : UShort,
    argument3 : Int) Int;

external fstat(
    argument0 : Int,
    argument1 : Pointer[Struct_stat]) Int;

external lchflags(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external lchmod(
    argument0 : Pointer[CChar],
    argument1 : UShort) Int;

external lstat(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat]) Int;

external mkdir(
    argument0 : Pointer[CChar],
    argument1 : UShort) Int;

external mkfifo(
    argument0 : Pointer[CChar],
    argument1 : UShort) Int;

external stat(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat]) Int;

external umask(
    argument0 : UShort) UShort;

external fstatat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Pointer[Struct_stat],
    argument3 : Int) Int;

external mkdirat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : UShort) Int;

external mkfifoat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : UShort) Int;

external mknodat(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : UShort,
    argument3 : UInt) Int;

external getpagesizes(
    argument0 : Pointer[CULong],
    argument1 : Int) Int;

external madvise(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) Int;

external mincore(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Pointer[CChar]) Int;

external minherit(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) Int;

external mlock(
    argument0 : RawPointer,
    argument1 : CULong) Int;

external mprotect(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) Int;

external msync(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) Int;

external munlock(
    argument0 : RawPointer,
    argument1 : CULong) Int;

external munmap(
    argument0 : RawPointer,
    argument1 : CULong) Int;

external posix_madvise(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) Int;

external mlockall(
    argument0 : Int) Int;

external munlockall() Int;

external shm_open(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : UShort) Int;

external shm_unlink(
    argument0 : Pointer[CChar]) Int;

record Struct_iovec (
    iov_base : RawPointer,
    iov_len : CULong,
);

alias sa_family_t = CUChar;

alias socklen_t = UInt;

record Struct_linger (
    l_onoff : Int,
    l_linger : Int,
);

record Struct_accept_filter_arg (
    af_name : Array[CChar,16],
    af_arg : Array[CChar,240],
);

record Struct_sockaddr (
    sa_len : CUChar,
    sa_family : CUChar,
    sa_data : Array[CChar,14],
);

record Struct_sockproto (
    sp_family : UShort,
    sp_protocol : UShort,
);

record Struct_sockaddr_storage (
    ss_len : CUChar,
    ss_family : CUChar,
    __ss_pad1 : Array[CChar,6],
    __ss_align : CLong,
    __ss_pad2 : Array[CChar,112],
);

record Struct_msghdr (
    msg_name : RawPointer,
    msg_namelen : UInt,
    msg_iov : Pointer[Struct_iovec],
    msg_iovlen : Int,
    msg_control : RawPointer,
    msg_controllen : UInt,
    msg_flags : Int,
);

record Struct_cmsghdr (
    cmsg_len : UInt,
    cmsg_level : Int,
    cmsg_type : Int,
);

record Struct_cmsgcred (
    cmcred_pid : Int,
    cmcred_uid : UInt,
    cmcred_euid : UInt,
    cmcred_gid : UInt,
    cmcred_ngroups : Short,
    cmcred_groups : Array[UInt,16],
);

record Struct_sockcred (
    sc_uid : UInt,
    sc_euid : UInt,
    sc_gid : UInt,
    sc_egid : UInt,
    sc_ngroups : Int,
    sc_groups : Array[UInt,1],
);

record Struct_osockaddr (
    sa_family : UShort,
    sa_data : Array[CChar,14],
);

record Struct_omsghdr (
    msg_name : Pointer[CChar],
    msg_namelen : Int,
    msg_iov : Pointer[Struct_iovec],
    msg_iovlen : Int,
    msg_accrights : Pointer[CChar],
    msg_accrightslen : Int,
);

record Struct_sf_hdtr (
    headers : Pointer[Struct_iovec],
    hdr_cnt : Int,
    trailers : Pointer[Struct_iovec],
    trl_cnt : Int,
);

external accept(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : Pointer[UInt]) Int;

external bind(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : UInt) Int;

external connect(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : UInt) Int;

external getpeername(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : Pointer[UInt]) Int;

external getsockname(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : Pointer[UInt]) Int;

external getsockopt(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int,
    argument3 : RawPointer,
    argument4 : Pointer[UInt]) Int;

external listen(
    argument0 : Int,
    argument1 : Int) Int;

external recv(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int) CLong;

external recvfrom(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int,
    argument4 : Pointer[Struct_sockaddr],
    argument5 : Pointer[UInt]) CLong;

external recvmsg(
    argument0 : Int,
    argument1 : Pointer[Struct_msghdr],
    argument2 : Int) CLong;

external send(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int) CLong;

external sendto(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int,
    argument4 : Pointer[Struct_sockaddr],
    argument5 : UInt) CLong;

external sendmsg(
    argument0 : Int,
    argument1 : Pointer[Struct_msghdr],
    argument2 : Int) CLong;

external sendfile(
    argument0 : Int,
    argument1 : Int,
    argument2 : CLong,
    argument3 : CULong,
    argument4 : Pointer[Struct_sf_hdtr],
    argument5 : Pointer[CLong],
    argument6 : Int) Int;

external setfib(
    argument0 : Int) Int;

external setsockopt(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int,
    argument3 : RawPointer,
    argument4 : UInt) Int;

external shutdown(
    argument0 : Int,
    argument1 : Int) Int;

external sockatmark(
    argument0 : Int) Int;

external socket(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int) Int;

external socketpair(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int,
    argument3 : Pointer[Int]) Int;

alias sig_atomic_t = CLong;

record Struct_sigcontext (
    sc_mask : Struct___sigset,
    sc_onstack : CLong,
    sc_rdi : CLong,
    sc_rsi : CLong,
    sc_rdx : CLong,
    sc_rcx : CLong,
    sc_r8 : CLong,
    sc_r9 : CLong,
    sc_rax : CLong,
    sc_rbx : CLong,
    sc_rbp : CLong,
    sc_r10 : CLong,
    sc_r11 : CLong,
    sc_r12 : CLong,
    sc_r13 : CLong,
    sc_r14 : CLong,
    sc_r15 : CLong,
    sc_trapno : Int,
    sc_fs : Short,
    sc_gs : Short,
    sc_addr : CLong,
    sc_flags : Int,
    sc_es : Short,
    sc_ds : Short,
    sc_err : CLong,
    sc_rip : CLong,
    sc_cs : CLong,
    sc_rflags : CLong,
    sc_rsp : CLong,
    sc_ss : CLong,
    sc_len : CLong,
    sc_fpformat : CLong,
    sc_ownedfp : CLong,
    sc_fpstate : Array[CLong,64],
    sc_fsbase : CLong,
    sc_gsbase : CLong,
    sc_spare : Array[CLong,6],
);

record Struct_sigevent (
    sigev_notify : Int,
    sigev_signo : Int,
    sigev_value : AUnionType,
    _sigev_un : AUnionType,
);

record Struct___siginfo (
    si_signo : Int,
    si_errno : Int,
    si_code : Int,
    si_pid : Int,
    si_uid : UInt,
    si_status : Int,
    si_addr : RawPointer,
    si_value : AUnionType,
    _reason : AUnionType,
);

alias siginfo_t = Struct___siginfo;

record Struct_sigaction (
    __sigaction_u : AUnionType,
    sa_flags : Int,
    sa_mask : sigset_t,
);

alias sig_t = CCodePointer[(Int),()];

record Struct_sigaltstack (
    ss_sp : Pointer[CChar],
    ss_size : CULong,
    ss_flags : Int,
);

alias stack_t = Struct_sigaltstack;

record Struct_sigvec (
    sv_handler : CCodePointer[(Int),()],
    sv_mask : Int,
    sv_flags : Int,
);

record Struct_sigstack (
    ss_sp : Pointer[CChar],
    ss_onstack : Int,
);

external signal(
    argument0 : Int,
    argument1 : CCodePointer[(Int),()]) CCodePointer[(Int),()];

external wait(
    argument0 : Pointer[Int]) Int;

external waitpid(
    argument0 : Int,
    argument1 : Pointer[Int],
    argument2 : Int) Int;

external wait3(
    argument0 : Pointer[Int],
    argument1 : Int,
    argument2 : OpaquePointer) Int;

external wait4(
    argument0 : Int,
    argument1 : Pointer[Int],
    argument2 : Int,
    argument3 : OpaquePointer) Int;

record Struct_kevent (
    ident : CULong,
    filter : Short,
    flags : UShort,
    fflags : UInt,
    data : CLong,
    udata : RawPointer,
);

record Struct_klist (
    slh_first : OpaquePointer,
);

record Struct_kqlist (
    slh_first : OpaquePointer,
);

record Struct_knlist (
    kl_list : Struct_klist,
    kl_lock : CCodePointer[(RawPointer),()],
    kl_unlock : CCodePointer[(RawPointer),()],
    kl_assert_locked : CCodePointer[(RawPointer),()],
    kl_assert_unlocked : CCodePointer[(RawPointer),()],
    kl_lockarg : RawPointer,
);

external kqueue() Int;

external kevent(
    kq : Int,
    changelist : Pointer[Struct_kevent],
    nchanges : Int,
    eventlist : Pointer[Struct_kevent],
    nevents : Int,
    timeout : Pointer[Struct_timespec]) Int;

external sys_signame : Array[Pointer[CChar],32];

external sys_siglist : Array[Pointer[CChar],32];

external sys_nsig : Int;

alias __pthread_t = OpaquePointer;

external raise(
    argument0 : Int) Int;

external kill(
    argument0 : Int,
    argument1 : Int) Int;

external pthread_kill(
    argument0 : __pthread_t,
    argument1 : Int) Int;

external pthread_sigmask(
    argument0 : Int,
    argument1 : Pointer[__sigset_t],
    argument2 : Pointer[__sigset_t]) Int;

external sigaction(
    argument0 : Int,
    argument1 : Pointer[Struct_sigaction],
    argument2 : Pointer[Struct_sigaction]) Int;

external sigaddset(
    argument0 : Pointer[sigset_t],
    argument1 : Int) Int;

external sigdelset(
    argument0 : Pointer[sigset_t],
    argument1 : Int) Int;

external sigemptyset(
    argument0 : Pointer[sigset_t]) Int;

external sigfillset(
    argument0 : Pointer[sigset_t]) Int;

external sigismember(
    argument0 : Pointer[sigset_t],
    argument1 : Int) Int;

external sigpending(
    argument0 : Pointer[sigset_t]) Int;

external sigprocmask(
    argument0 : Int,
    argument1 : Pointer[sigset_t],
    argument2 : Pointer[sigset_t]) Int;

external sigsuspend(
    argument0 : Pointer[sigset_t]) Int;

external sigwait(
    argument0 : Pointer[sigset_t],
    argument1 : Pointer[Int]) Int;

external sigqueue(
    argument0 : Int,
    argument1 : Int,
    argument2 : AUnionType) Int;

external sigtimedwait(
    argument0 : Pointer[sigset_t],
    argument1 : Pointer[siginfo_t],
    argument2 : Pointer[Struct_timespec]) Int;

external sigwaitinfo(
    argument0 : Pointer[sigset_t],
    argument1 : Pointer[siginfo_t]) Int;

external killpg(
    argument0 : Int,
    argument1 : Int) Int;

external sigaltstack(
    argument0 : Pointer[stack_t],
    argument1 : Pointer[stack_t]) Int;

external sighold(
    argument0 : Int) Int;

external sigignore(
    argument0 : Int) Int;

external sigpause(
    argument0 : Int) Int;

external sigrelse(
    argument0 : Int) Int;

external sigset(
    argument0 : Int,
    argument1 : CCodePointer[(Int),()]) CCodePointer[(Int),()];

external xsi_sigpause(
    argument0 : Int) Int;

external siginterrupt(
    argument0 : Int,
    argument1 : Int) Int;

external psignal(
    argument0 : UInt,
    argument1 : Pointer[CChar]);

external sigblock(
    argument0 : Int) Int;

external sigreturn(
    argument0 : OpaquePointer) Int;

external sigsetmask(
    argument0 : Int) Int;

external sigstack(
    argument0 : Pointer[Struct_sigstack],
    argument1 : Pointer[Struct_sigstack]) Int;

external sigvec(
    argument0 : Int,
    argument1 : Pointer[Struct_sigvec],
    argument2 : Pointer[Struct_sigvec]) Int;

record Struct_dirent (
    d_fileno : UInt,
    d_reclen : UShort,
    d_type : CUChar,
    d_namlen : CUChar,
    d_name : Array[CChar,256],
);

record Struct__dirdesc (
    dd_fd : Int,
    dd_loc : CLong,
    dd_size : CLong,
    dd_buf : Pointer[CChar],
    dd_len : Int,
    dd_seek : CLong,
    dd_rewind : CLong,
    dd_flags : Int,
    dd_lock : OpaquePointer,
    dd_td : OpaquePointer,
);

alias DIR = Struct__dirdesc;

external alphasort(
    argument0 : Pointer[Pointer[Struct_dirent]],
    argument1 : Pointer[Pointer[Struct_dirent]]) Int;

external __opendir2(
    argument0 : Pointer[CChar],
    argument1 : Int) Pointer[DIR];

external getdents(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external getdirentries(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Int,
    argument3 : Pointer[CLong]) Int;

external opendir(
    argument0 : Pointer[CChar]) Pointer[DIR];

external fdopendir(
    argument0 : Int) Pointer[DIR];

external readdir(
    argument0 : Pointer[DIR]) Pointer[Struct_dirent];

external readdir_r(
    argument0 : Pointer[DIR],
    argument1 : Pointer[Struct_dirent],
    argument2 : Pointer[Pointer[Struct_dirent]]) Int;

external rewinddir(
    argument0 : Pointer[DIR]);

external scandir(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[Pointer[Struct_dirent]]],
    argument2 : CCodePointer[(Pointer[Struct_dirent]),(Int)],
    argument3 : CCodePointer[(Pointer[Pointer[Struct_dirent]],Pointer[Pointer[Struct_dirent]]),(Int)]) Int;

external seekdir(
    argument0 : Pointer[DIR],
    argument1 : CLong);

external telldir(
    argument0 : Pointer[DIR]) CLong;

external closedir(
    argument0 : Pointer[DIR]) Int;

record Struct_dl_info (
    dli_fname : Pointer[CChar],
    dli_fbase : RawPointer,
    dli_sname : Pointer[CChar],
    dli_saddr : RawPointer,
);

alias Dl_info = Struct_dl_info;

record Struct___dlfunc_arg (
    __dlfunc_dummy : Int,
);

alias dlfunc_t = CCodePointer[(Struct___dlfunc_arg),()];

record Struct_dl_serpath (
    dls_name : Pointer[CChar],
    dls_flags : UInt,
);

alias Dl_serpath = Struct_dl_serpath;

record Struct_dl_serinfo (
    dls_size : CULong,
    dls_cnt : UInt,
    dls_serpath : Array[Dl_serpath,1],
);

alias Dl_serinfo = Struct_dl_serinfo;

external dlclose(
    argument0 : RawPointer) Int;

external dlerror() Pointer[CChar];

external dlopen(
    argument0 : Pointer[CChar],
    argument1 : Int) RawPointer;

external dlsym(
    argument0 : RawPointer,
    argument1 : Pointer[CChar]) RawPointer;

external dladdr(
    argument0 : RawPointer,
    argument1 : Pointer[Dl_info]) Int;

external dlfunc(
    argument0 : RawPointer,
    argument1 : Pointer[CChar]) dlfunc_t;

external dlinfo(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : RawPointer) Int;

external dllockinit(
    _context : RawPointer,
    _lock_create : CCodePointer[(RawPointer),(RawPointer)],
    _rlock_acquire : CCodePointer[(RawPointer),()],
    _wlock_acquire : CCodePointer[(RawPointer),()],
    _lock_release : CCodePointer[(RawPointer),()],
    _lock_destroy : CCodePointer[(RawPointer),()],
    _context_destroy : CCodePointer[(RawPointer),()]);

external dlvsym(
    argument0 : RawPointer,
    argument1 : Pointer[CChar],
    argument2 : Pointer[CChar]) RawPointer;

record Struct_hostent (
    h_name : Pointer[CChar],
    h_aliases : Pointer[Pointer[CChar]],
    h_addrtype : Int,
    h_length : Int,
    h_addr_list : Pointer[Pointer[CChar]],
);

record Struct_netent (
    n_name : Pointer[CChar],
    n_aliases : Pointer[Pointer[CChar]],
    n_addrtype : Int,
    n_net : UInt,
);

record Struct_servent (
    s_name : Pointer[CChar],
    s_aliases : Pointer[Pointer[CChar]],
    s_port : Int,
    s_proto : Pointer[CChar],
);

record Struct_protoent (
    p_name : Pointer[CChar],
    p_aliases : Pointer[Pointer[CChar]],
    p_proto : Int,
);

record Struct_addrinfo (
    ai_flags : Int,
    ai_family : Int,
    ai_socktype : Int,
    ai_protocol : Int,
    ai_addrlen : UInt,
    ai_canonname : Pointer[CChar],
    ai_addr : Pointer[Struct_sockaddr],
    ai_next : Pointer[Struct_addrinfo],
);

external endhostent();

external endnetent();

external endprotoent();

external endservent();

external gethostbyaddr(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : Int) Pointer[Struct_hostent];

external gethostbyname(
    argument0 : Pointer[CChar]) Pointer[Struct_hostent];

external gethostent() Pointer[Struct_hostent];

external getnetbyaddr(
    argument0 : UInt,
    argument1 : Int) Pointer[Struct_netent];

external getnetbyname(
    argument0 : Pointer[CChar]) Pointer[Struct_netent];

external getnetent() Pointer[Struct_netent];

external getprotobyname(
    argument0 : Pointer[CChar]) Pointer[Struct_protoent];

external getprotobynumber(
    argument0 : Int) Pointer[Struct_protoent];

external getprotoent() Pointer[Struct_protoent];

external getservbyname(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[Struct_servent];

external getservbyport(
    argument0 : Int,
    argument1 : Pointer[CChar]) Pointer[Struct_servent];

external getservent() Pointer[Struct_servent];

external sethostent(
    argument0 : Int);

external setnetent(
    argument0 : Int);

external setprotoent(
    argument0 : Int);

external getaddrinfo(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Struct_addrinfo],
    argument3 : Pointer[Pointer[Struct_addrinfo]]) Int;

external getnameinfo(
    argument0 : Pointer[Struct_sockaddr],
    argument1 : UInt,
    argument2 : Pointer[CChar],
    argument3 : CULong,
    argument4 : Pointer[CChar],
    argument5 : CULong,
    argument6 : Int) Int;

external freeaddrinfo(
    argument0 : Pointer[Struct_addrinfo]);

external gai_strerror(
    argument0 : Int) Pointer[CChar];

external setservent(
    argument0 : Int);

external endnetgrent();

external freehostent(
    argument0 : Pointer[Struct_hostent]);

external gethostbyaddr_r(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : Int,
    argument3 : Pointer[Struct_hostent],
    argument4 : Pointer[CChar],
    argument5 : CULong,
    argument6 : Pointer[Pointer[Struct_hostent]],
    argument7 : Pointer[Int]) Int;

external gethostbyname_r(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_hostent],
    argument2 : Pointer[CChar],
    argument3 : CULong,
    argument4 : Pointer[Pointer[Struct_hostent]],
    argument5 : Pointer[Int]) Int;

external gethostbyname2(
    argument0 : Pointer[CChar],
    argument1 : Int) Pointer[Struct_hostent];

external gethostbyname2_r(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : Pointer[Struct_hostent],
    argument3 : Pointer[CChar],
    argument4 : CULong,
    argument5 : Pointer[Pointer[Struct_hostent]],
    argument6 : Pointer[Int]) Int;

external gethostent_r(
    argument0 : Pointer[Struct_hostent],
    argument1 : Pointer[CChar],
    argument2 : CULong,
    argument3 : Pointer[Pointer[Struct_hostent]],
    argument4 : Pointer[Int]) Int;

external getipnodebyaddr(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int,
    argument3 : Pointer[Int]) Pointer[Struct_hostent];

external getipnodebyname(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : Int,
    argument3 : Pointer[Int]) Pointer[Struct_hostent];

external getnetbyaddr_r(
    argument0 : UInt,
    argument1 : Int,
    argument2 : Pointer[Struct_netent],
    argument3 : Pointer[CChar],
    argument4 : CULong,
    argument5 : Pointer[Pointer[Struct_netent]],
    argument6 : Pointer[Int]) Int;

external getnetbyname_r(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_netent],
    argument2 : Pointer[CChar],
    argument3 : CULong,
    argument4 : Pointer[Pointer[Struct_netent]],
    argument5 : Pointer[Int]) Int;

external getnetent_r(
    argument0 : Pointer[Struct_netent],
    argument1 : Pointer[CChar],
    argument2 : CULong,
    argument3 : Pointer[Pointer[Struct_netent]],
    argument4 : Pointer[Int]) Int;

external getnetgrent(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[Pointer[CChar]]) Int;

external getprotobyname_r(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_protoent],
    argument2 : Pointer[CChar],
    argument3 : CULong,
    argument4 : Pointer[Pointer[Struct_protoent]]) Int;

external getprotobynumber_r(
    argument0 : Int,
    argument1 : Pointer[Struct_protoent],
    argument2 : Pointer[CChar],
    argument3 : CULong,
    argument4 : Pointer[Pointer[Struct_protoent]]) Int;

external getprotoent_r(
    argument0 : Pointer[Struct_protoent],
    argument1 : Pointer[CChar],
    argument2 : CULong,
    argument3 : Pointer[Pointer[Struct_protoent]]) Int;

external getservbyname_r(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Struct_servent],
    argument3 : Pointer[CChar],
    argument4 : CULong,
    argument5 : Pointer[Pointer[Struct_servent]]) Int;

external getservbyport_r(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : Pointer[Struct_servent],
    argument3 : Pointer[CChar],
    argument4 : CULong,
    argument5 : Pointer[Pointer[Struct_servent]]) Int;

external getservent_r(
    argument0 : Pointer[Struct_servent],
    argument1 : Pointer[CChar],
    argument2 : CULong,
    argument3 : Pointer[Pointer[Struct_servent]]) Int;

external herror(
    argument0 : Pointer[CChar]);

external hstrerror(
    argument0 : Int) Pointer[CChar];

external innetgr(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar]) Int;

external setnetgrent(
    argument0 : Pointer[CChar]);

external __h_errno() Pointer[Int];

record Struct_in_addr (
    s_addr : UInt,
);

record Struct_sockaddr_in (
    sin_len : CUChar,
    sin_family : CUChar,
    sin_port : UShort,
    sin_addr : Struct_in_addr,
    sin_zero : Array[CChar,8],
);

external htonl(
    argument0 : UInt) UInt;

external htons(
    argument0 : UShort) UShort;

external ntohl(
    argument0 : UInt) UInt;

external ntohs(
    argument0 : UShort) UShort;

record Struct_ip_mreq (
    imr_multiaddr : Struct_in_addr,
    imr_interface : Struct_in_addr,
);

record Struct_ip_mreqn (
    imr_multiaddr : Struct_in_addr,
    imr_address : Struct_in_addr,
    imr_ifindex : Int,
);

record Struct_ip_mreq_source (
    imr_multiaddr : Struct_in_addr,
    imr_sourceaddr : Struct_in_addr,
    imr_interface : Struct_in_addr,
);

record Struct_group_req (
    gr_interface : UInt,
    gr_group : Struct_sockaddr_storage,
);

record Struct_group_source_req (
    gsr_interface : UInt,
    gsr_group : Struct_sockaddr_storage,
    gsr_source : Struct_sockaddr_storage,
);

record Struct___msfilterreq (
    msfr_ifindex : UInt,
    msfr_fmode : UInt,
    msfr_nsrcs : UInt,
    msfr_group : Struct_sockaddr_storage,
    msfr_srcs : Pointer[Struct_sockaddr_storage],
);

external setipv4sourcefilter(
    argument0 : Int,
    argument1 : Struct_in_addr,
    argument2 : Struct_in_addr,
    argument3 : UInt,
    argument4 : UInt,
    argument5 : Pointer[Struct_in_addr]) Int;

external getipv4sourcefilter(
    argument0 : Int,
    argument1 : Struct_in_addr,
    argument2 : Struct_in_addr,
    argument3 : Pointer[UInt],
    argument4 : Pointer[UInt],
    argument5 : Pointer[Struct_in_addr]) Int;

external setsourcefilter(
    argument0 : Int,
    argument1 : UInt,
    argument2 : Pointer[Struct_sockaddr],
    argument3 : UInt,
    argument4 : UInt,
    argument5 : UInt,
    argument6 : Pointer[Struct_sockaddr_storage]) Int;

external getsourcefilter(
    argument0 : Int,
    argument1 : UInt,
    argument2 : Pointer[Struct_sockaddr],
    argument3 : UInt,
    argument4 : Pointer[UInt],
    argument5 : Pointer[UInt],
    argument6 : Pointer[Struct_sockaddr_storage]) Int;

record Struct_in6_addr (
    __u6_addr : AUnionType,
);

record Struct_sockaddr_in6 (
    sin6_len : CUChar,
    sin6_family : CUChar,
    sin6_port : UShort,
    sin6_flowinfo : UInt,
    sin6_addr : Struct_in6_addr,
    sin6_scope_id : UInt,
);

external in6addr_any : Struct_in6_addr;

external in6addr_loopback : Struct_in6_addr;

external in6addr_nodelocal_allnodes : Struct_in6_addr;

external in6addr_linklocal_allnodes : Struct_in6_addr;

external in6addr_linklocal_allrouters : Struct_in6_addr;

external in6addr_linklocal_allv2routers : Struct_in6_addr;

record Struct_route_in6 (
    ro_rt : OpaquePointer,
    ro_lle : OpaquePointer,
    ro_dst : Struct_sockaddr_in6,
);

record Struct_ipv6_mreq (
    ipv6mr_multiaddr : Struct_in6_addr,
    ipv6mr_interface : UInt,
);

record Struct_in6_pktinfo (
    ipi6_addr : Struct_in6_addr,
    ipi6_ifindex : UInt,
);

record Struct_ip6_mtuinfo (
    ip6m_addr : Struct_sockaddr_in6,
    ip6m_mtu : UInt,
);

external inet6_option_space(
    argument0 : Int) Int;

external inet6_option_init(
    argument0 : RawPointer,
    argument1 : Pointer[Pointer[Struct_cmsghdr]],
    argument2 : Int) Int;

external inet6_option_append(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : Pointer[CUChar],
    argument2 : Int,
    argument3 : Int) Int;

external inet6_option_alloc(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : Int,
    argument2 : Int,
    argument3 : Int) Pointer[CUChar];

external inet6_option_next(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : Pointer[Pointer[CUChar]]) Int;

external inet6_option_find(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : Pointer[Pointer[CUChar]],
    argument2 : Int) Int;

external inet6_rthdr_space(
    argument0 : Int,
    argument1 : Int) CULong;

external inet6_rthdr_init(
    argument0 : RawPointer,
    argument1 : Int) Pointer[Struct_cmsghdr];

external inet6_rthdr_add(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : Pointer[Struct_in6_addr],
    argument2 : UInt) Int;

external inet6_rthdr_lasthop(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : UInt) Int;

external inet6_rthdr_segments(
    argument0 : Pointer[Struct_cmsghdr]) Int;

external inet6_rthdr_getaddr(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : Int) Pointer[Struct_in6_addr];

external inet6_rthdr_getflags(
    argument0 : Pointer[Struct_cmsghdr],
    argument1 : Int) Int;

external inet6_opt_init(
    argument0 : RawPointer,
    argument1 : UInt) Int;

external inet6_opt_append(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : Int,
    argument3 : CUChar,
    argument4 : UInt,
    argument5 : CUChar,
    argument6 : Pointer[RawPointer]) Int;

external inet6_opt_finish(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : Int) Int;

external inet6_opt_set_val(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : RawPointer,
    argument3 : UInt) Int;

external inet6_opt_next(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : Int,
    argument3 : Pointer[CUChar],
    argument4 : Pointer[UInt],
    argument5 : Pointer[RawPointer]) Int;

external inet6_opt_find(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : Int,
    argument3 : CUChar,
    argument4 : Pointer[UInt],
    argument5 : Pointer[RawPointer]) Int;

external inet6_opt_get_val(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : RawPointer,
    argument3 : UInt) Int;

external inet6_rth_space(
    argument0 : Int,
    argument1 : Int) UInt;

external inet6_rth_init(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : Int,
    argument3 : Int) RawPointer;

external inet6_rth_add(
    argument0 : RawPointer,
    argument1 : Pointer[Struct_in6_addr]) Int;

external inet6_rth_reverse(
    argument0 : RawPointer,
    argument1 : RawPointer) Int;

external inet6_rth_segments(
    argument0 : RawPointer) Int;

external inet6_rth_getaddr(
    argument0 : RawPointer,
    argument1 : Int) Pointer[Struct_in6_addr];
