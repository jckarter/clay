import algorithms.(reduce);
import printer.(println);

scaledAdded(seqA, seqB, factor) {
    return mapped(
        (..x) => add(..mapValues(y => y*factor, ..x)),
        seqA,
        seqB,
    );
}

main() {
    var a = array(1, 2, 3, 4);
    var b = mapped(x => x*2, a);
    var c = scaledAdded(a, b, 10);
    println(Vector(c));

    var z = reduce(add, 0, map((x, ..y) => {
        println(x, ":", ..y);
        return foldValues(add, ..y) - x;
    }, array(1, 2, 3), array(4, 5, 6), array(7, 8, 9)));
    println(z);
}
