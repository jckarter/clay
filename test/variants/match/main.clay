import printer.(println);
variant Foo (Int, Double, StringLiteralRef);

foo(x) {
    match(x): (i:Int) => { println("I saw an Int ", i); }
        :: (f:Double) => { println("I saw a Double ", f); }
        :: (s:StringLiteralRef) => { println("I saw a string ", s); }
}

bar(x) {
    match(x): (i:Int) => { println("I saw an Int ", i); }
        :: (x) => { println("I saw a non-Int ", x); }
}

main() {
    var x = Foo(2);
    var y = Foo(3.0);
    var z = Foo(StringLiteralRef("four"));

    foo(x);
    foo(y);
    foo(z);
    println();

    bar(x);
    bar(y);
    bar(z);
}
