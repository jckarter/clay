import printer.*;
import test.*;

main() = testMain(
    TestSuite("numbers", array(
        TestCase("*IntegerOfSize", test => {
            ..for (type in ..BuiltinIntegerTypes()) {
                if (SignedInteger?(type)) {
                    expectEqual(test, type, type, SignedIntegerOfSize(#Int(TypeSize(type))));
                } else {
                    expectEqual(test, type, type, UnsignedIntegerOfSize(#Int(TypeSize(type))));
                }
            }
        }),
        TestCase("SignedInteger, UnsignedInteger", test => {
            ..for (type in ..BuiltinIntegerTypes()) {
                if (SignedInteger?(type)) {
                    expectEqual(test, type,
                        type,
                        SignedInteger(type));
                    expectNotEqual(test, str("UnsignedInteger of ", type),
                        type,
                        UnsignedInteger(type));
                    expectEqual(test, str("SignedInteger of UnsignedInteger of ", type),
                        type,
                        SignedInteger(UnsignedInteger(type)));
                } else {
                    expectEqual(test, type,
                        type,
                        UnsignedInteger(type));
                    expectNotEqual(test, str("SignedInteger of ", type),
                        type,
                        SignedInteger(type));
                    expectEqual(test, str("UnsignedInteger of SignedInteger of ", type),
                        type,
                        UnsignedInteger(SignedInteger(type)));
                }

                expectEqual(test, str("size of UnsignedInteger of ", type),
                    TypeSize(type), TypeSize(UnsignedInteger(type)));
                expectEqual(test, str("size of SignedInteger of ", type),
                    TypeSize(type), TypeSize(SignedInteger(type)));
            }
        }),
    )));
