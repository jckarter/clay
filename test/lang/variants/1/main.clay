import printer.(println);
import vectors.*;

record Square (
    side : Double
);

record Circle (
    radius : Double
);

variant Shape (Square, Circle);

define show;
overload show(x:Square) { println("Square(", x.side, ")"); }
overload show(x:Circle) { println("Circle(", x.radius, ")"); }

overload show(x:Shape) {
    if (variantIs?(x, Square))
        show(variantAs(x, Square));
    else if (variantIs?(x, Circle))
        show(variantAs(x, Circle));
    else
        assert(false, "invalid shape");
}

main() {
    var v = Vector[Shape]();
    push(v, Shape(Circle, 10.1));
    push(v, Shape(Square, 20.2));
    for (x in v)
        show(x);
}
