import core.platform.*;

import io.errors.*;

import printer.*;

import data.algorithms.*;
import data.vectors.*;

import io.filesystem.*;
import io.temp.*;

import test.*;

define testListDirectory():;

[when OSFamily == Unix]
overload testListDirectory() {
    var l = listDirectory("/");
    expectTrue(in?(l, "bin"));
}

[when OSFamily == Windows]
overload testListDirectory() {
    var l = listDirectory("c:\\");
    expectTrue(in?(l, "System Volume Information"));
}

main() = testMain(
    TestSuite("io.directories", array(
        TestCase("listDirectory", testListDirectory),
        TestCase("makeDirectory, deleteDirectory", => {
            var tmpdir = tempDirectory();
            var testTmpdir = joinPath(tmpdir, "io.directories.makeDirectory-deleteDirectory");
            if (pathIsDirectory?(testTmpdir))
                deleteDirectory(testTmpdir);
            expectFalse(pathExists?(testTmpdir));
            makeDirectory(testTmpdir);
            expectTrue(pathExists?(testTmpdir));
            expectTrue(pathIsDirectory?(testTmpdir));
            expectFalse(pathIsRegularFile?(testTmpdir));
            deleteDirectory(testTmpdir);
        }),
    )));
