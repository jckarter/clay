even?(x) = x % 2 == 0;
main() {
    eachValue(println, 1, 2.0, "three");

    println(..weaveValues(
        ", ",
        ..mapValues(x => x++x, "three")
    ));

    println(..weaveValues(
        ", ",
        ..mapValues(x => x++x)
    ));

    println(foldValues(add, 1, 2, 3));

    println(..takeValues(static 3));
    println(..takeValues(static 3, "one", "two"));
    println(..takeValues(static 3, "one", "two", "three"));
    println(..takeValues(static 3, "one", "two", "three", "four"));

    println(..dropValues(static 3));
    println(..dropValues(static 3, "one", "two"));
    println(..dropValues(static 3, "one", "two", "three"));
    println(..dropValues(static 3, "one", "two", "three", "four"));

    println(countValues());
    println(countValues("one"));
    println(countValues("one", "two", "three", "four"));

    println(..weaveValues(", ", ..staticIntegers(static 8)));
    println(..weaveValues(", ", ..integers(static 8)));

    println("1, 1, 1 ", if (equalValues?(1, 1, 1)) "" else "not ", "equal");
    println("1, 1, 2 ", if (equalValues?(1, 1, 2)) "" else "not ", "equal");
    println("all of 1, 2, 3 ", if (allValues?(even?, 1, 2, 3)) "" else "not ", "even");
    println("any of 1, 2, 3 ", if (anyValues?(even?, 1, 2, 3)) "" else "not ", "even");
    println("all of 2, 4, 6 ", if (allValues?(even?, 2, 4, 6)) "" else "not ", "even");
    println("any of 2, 4, 6 ", if (anyValues?(even?, 2, 4, 6)) "" else "not ", "even");
    println("all of 1, 3, 5 ", if (allValues?(even?, 1, 2, 3)) "" else "not ", "even");
    println("any of 1, 3, 5 ", if (anyValues?(even?, 1, 2, 3)) "" else "not ", "even");

    println("0 ", if (inValues?(0, 1, 2)) "" else "not ", "in 1, 2");
    println("1 ", if (inValues?(1, 1, 2)) "" else "not ", "in 1, 2");
    println("2 ", if (inValues?(2, 1, 2)) "" else "not ", "in 1, 2");
    println("3 ", if (inValues?(3, 1, 2)) "" else "not ", "in 1, 2");

    println("array: ", ..weaveValues(", ",
        ..sequenceValues(array(3, 7, 15, 1, 292, 1, 1, 1), static 8)
    ));

    eachValue2(
        (x, y) => { println(x + y); }, static 3,
        1, 2, 3,
        7, 8, 9,
    );

    println(..weaveValues(
        ", ",
        ..mapValues2((x, y) => x+y, static 3,
            1, 2, 3,
            7, 8, 9,
        )
    ));

    println(assocValue?(#foo, [#foo, 1, 2, 3], [#bar, 4]));
    println(assocValue?(#bar, [#foo, 1, 2, 3], [#bar, 4]));
    println(assocValue?(#bas, [#foo, 1, 2, 3], [#bar, 4]));

    println(..weaveValues(", ", ..assocValue(#foo, [#foo, 1, 2, 3], [#bar, 4])));
    println(assocValue(#bar, [#foo, 1, 2, 3], [#bar, 4]));
}
