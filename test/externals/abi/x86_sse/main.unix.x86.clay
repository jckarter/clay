import libc;
import simd.*;
import printer.formatter.(repr);

record Struct_x86_2 (
    a : Vec[Int64,2],
);

record Struct_x86_3 (
    a : Vec[Int64,2],
    b : Vec[Int64,2],
);

record Struct_x86_4 (
    a : Vec[Float32,4],
);

record Struct_x86_5 (
    a : Vec[Float32,4],
    b : Vec[Float32,4],
);

record Struct_x86_6 (
    a : Vec[Float64,2],
);

record Struct_x86_7 (
    a : Vec[Float64,2],
    b : Vec[Float64,2],
);

alias Union_x86_10 = Union[
    /* a */ Int32,
    /* b */ Vec[Float64,2],
];

alias Union_x86_11 = Union[
    /* a */ Int64,
    /* b */ Vec[Float64,2],
];

external (cdecl) c_x86_vector(x:Vec[Int64,2], y:Vec[Float32,4], z:Vec[Float64,2]);
external (cdecl) c_x86_2(x:Struct_x86_2);
external (cdecl) c_x86_3(x:Struct_x86_3);
external (cdecl) c_x86_4(x:Struct_x86_4);
external (cdecl) c_x86_5(x:Struct_x86_5);
external (cdecl) c_x86_6(x:Struct_x86_6);
external (cdecl) c_x86_7(x:Struct_x86_7);
external (cdecl) c_x86_10(x:Union_x86_10, tag:Int);
external (cdecl) c_x86_11(x:Union_x86_11, tag:Int);

external (cdecl) c_x86_return_int_vector() : Vec[Int64,2];
external (cdecl) c_x86_return_float_vector() : Vec[Float,4];
external (cdecl) c_x86_return_double_vector() : Vec[Double,2];
external (cdecl) c_x86_return_2() : Struct_x86_2;
external (cdecl) c_x86_return_3() : Struct_x86_3;
external (cdecl) c_x86_return_4() : Struct_x86_4;
external (cdecl) c_x86_return_5() : Struct_x86_5;
external (cdecl) c_x86_return_6() : Struct_x86_6;
external (cdecl) c_x86_return_7() : Struct_x86_7;
external (cdecl) c_x86_return_10(tag:Int) : Union_x86_10;
external (cdecl) c_x86_return_11(tag:Int) : Union_x86_11;
external (cdecl) c_to_clay_x86();

//
// clay implementations
//

external (cdecl) clay_x86_vector(x:Vec[Int64,2], y:Vec[Float32,4], z:Vec[Float64,2]) : {
    println(repr(x, y, z));
    flush(stdout);
}
external (cdecl) clay_x86_long_double(x:Float80) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_complex_long_double(x:Complex80) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_2(x:Struct_x86_2) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_3(x:Struct_x86_3) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_4(x:Struct_x86_4) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_5(x:Struct_x86_5) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_6(x:Struct_x86_6) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_7(x:Struct_x86_7) : {
    println(repr(x));
    flush(stdout);
}
external (cdecl) clay_x86_10(x:Union_x86_10, tag:Int) : {
    switch (tag)
    case (0)
        println(repr(x.0));
    case (1)
        println(repr(x.1));
    else
        assert(false);
    flush(stdout);
}
external (cdecl) clay_x86_11(x:Union_x86_11, tag:Int) : {
    switch (tag)
    case (0)
        println(repr(x.0));
    case (1)
        println(repr(x.1));
    else
        assert(false);
    flush(stdout);
}

external (cdecl) clay_x86_return_int_vector() : Vec[Int64,2]
    = Vec[Int64,2](0x1122334455667788l, 0x33445566778899AAl);
external (cdecl) clay_x86_return_float_vector() : Vec[Float,4]
    = Vec[Float,4](0x1.112232p99f, 0x1.223344p88f, 0x1.334454p77f, 0x1.445566p66f);
external (cdecl) clay_x86_return_double_vector() : Vec[Double,2]
    = Vec[Double,2](0x1.1122334455667p99, 0x1.2233445566778p88);
external (cdecl) clay_x86_return_2() : Struct_x86_2
    = Struct_x86_2(Vec[Int64,2](0x1122334455667788l, 0x33445566778899AAl));
external (cdecl) clay_x86_return_3() : Struct_x86_3
    = Struct_x86_3(
        Vec[Int64,2](0x1122334455667788l, 0x33445566778899AAl),
        Vec[Int64,2](0x2233445566778899l, 0x445566778899AABBl),
    );
external (cdecl) clay_x86_return_4() : Struct_x86_4
    = Struct_x86_4(
        Vec[Float,4](0x1.112232p99f, 0x1.223344p88f, 0x1.334454p77f, 0x1.445566p66f),
    );
external (cdecl) clay_x86_return_5() : Struct_x86_5
    = Struct_x86_5(
        Vec[Float,4](0x1.112232p99f, 0x1.223344p88f, 0x1.334454p77f, 0x1.445566p66f),
        Vec[Float,4](0x1.556676p55f, 0x1.667788p44f, 0x1.778898p33f, 0x1.8899AAp22f),
    );
external (cdecl) clay_x86_return_6() : Struct_x86_6
    = Struct_x86_6(
        Vec[Double,2](0x1.1122334455667p99, 0x1.2233445566778p88)
    );
external (cdecl) clay_x86_return_7() : Struct_x86_7
    = Struct_x86_7(
        Vec[Double,2](0x1.1122334455667p99, 0x1.2233445566778p88),
        Vec[Double,2](0x1.3344556677889p77, 0x1.445566778899Ap66),
    );
external (cdecl) clay_x86_return_10(tag:Int) : Union_x86_10 {
    var ret = Union_x86_10();
    switch (tag)
    case (0)
        ret.0 <-- 0x11223344;
    case (1)
        ret.1 <-- Vec[Double,2](0x1.1122334455667p99, 0x1.2233445566778p88);
    else
        assert(false);
    return ret;
}
external (cdecl) clay_x86_return_11(tag:Int) : Union_x86_11 {
    var ret = Union_x86_11();
    switch (tag)
    case (0)
        ret.0 <-- 0x1122334455667788l;
    case (1)
        ret.1 <-- Vec[Double,2](0x1.1122334455667p99, 0x1.2233445566778p88);
    else
        assert(false);
    return ret;
}

clay_to_c_x86() {
    println("\nPassing Clay arguments to C:");
    flush(stdout);

    c_x86_vector(clay_x86_return_int_vector(),
        clay_x86_return_float_vector(), clay_x86_return_double_vector());

    c_x86_2(clay_x86_return_2());
    c_x86_3(clay_x86_return_3());
    c_x86_4(clay_x86_return_4());
    c_x86_5(clay_x86_return_5());
    c_x86_6(clay_x86_return_6());
    c_x86_7(clay_x86_return_7());

    c_x86_10(clay_x86_return_10(0), 0);
    c_x86_10(clay_x86_return_10(1), 1);

    c_x86_11(clay_x86_return_11(0), 0);
    c_x86_11(clay_x86_return_11(1), 1);

    libc.fflush(libc.stdout);

    println("\nPassing C return values to Clay:");
    flush(stdout);

    clay_x86_vector(c_x86_return_int_vector(),
        c_x86_return_float_vector(), c_x86_return_double_vector());

    clay_x86_2(c_x86_return_2());
    clay_x86_3(c_x86_return_3());
    clay_x86_4(c_x86_return_4());
    clay_x86_5(c_x86_return_5());
    clay_x86_6(c_x86_return_6());
    clay_x86_7(c_x86_return_7());

    clay_x86_10(c_x86_return_10(0), 0);
    clay_x86_10(c_x86_return_10(1), 1);

    clay_x86_11(c_x86_return_11(0), 0);
    clay_x86_11(c_x86_return_11(1), 1);

    flush(stdout);
}

main() {
    c_to_clay_x86();
    clay_to_c_x86();
}
