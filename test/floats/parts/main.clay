import numbers.floats.*;
import printer.formatter.*;
import printer.(println);

main() {
    ..for (f in 0.0, -1.0, 1.0, infinity(Double), negativeInfinity(Double))
        println("0x", hex(floatBits(f)));

    ..for (f in 0.0f, -1.0f, 1.0f, infinity(Float), negativeInfinity(Float))
        println("0x", hex(floatBits(f)));

    // 0, -0
    println(floatFromParts(Float,false, 0, 0u));
    println(floatFromParts(Float,true,  0, 0u));
    println(floatFromParts(Double,false, 0, 0ul));
    println(floatFromParts(Double,true,  0, 0ul));

    // 1, -1
    println(floatFromParts(Float,false,  127, 0u));
    println(floatFromParts(Float,true,   127, 0u));
    println(floatFromParts(Double,false, 1023, 0ul));
    println(floatFromParts(Double,true,  1023, 0ul));

    // 1.5, -1.5
    println(floatFromParts(Float,false,  127, 0x40_0000u));
    println(floatFromParts(Float,true,   127, 0x40_0000u));
    println(floatFromParts(Double,false, 1023, 0x8_0000_0000_0000ul));
    println(floatFromParts(Double,true,  1023, 0x8_0000_0000_0000ul));

    // 1.5 parts
    var neg?, exp, mant = ..floatParts(1.5);
    println(neg?, " ", exp, " 0x", hex(mant));
    neg?, exp, mant = ..floatParts(-1.5);
    println(neg?, " ", exp, " 0x", hex(mant));

    var negf?, expf, mantf = ..floatParts(1.5f);
    println(negf?, " ", expf, " 0x", hex(mantf));
    negf?, expf, mantf = ..floatParts(-1.5f);
    println(negf?, " ", expf, " 0x", hex(mantf));

    // nan
    println(ordered?(0.0, nan(Double)));
    println(ordered?(0.0f, nan(Float)));
}
