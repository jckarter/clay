import clay.common.(
    SourceFile,
    readSource,
    ClayError,
    displayError
);
import fix.v0_0.(
    fix as fix_0_0
);
import io.filesystem.(
    moveFile, deleteFile
);

record InvalidFixerVersion (version:String);
instance Exception (InvalidFixerVersion);
overload printTo(s, ex:InvalidFixerVersion) {
    printTo(s, "Invalid clay-fix version: ", ex.version);
}

usage(argv0) : {
    println("usage: ", argv0, " -v <oldversion> <source files>");
    println("Updates Clay source files to language version 0.1.");
    println("options:");
    println("  -v <oldversion>   Language version of old source files");
    println("    Supported versions:");
    println("      0.0");
    println();
    println("*** IMPORTANT ***");
    println("Source files are updated in-place; make sure you've checked in before");
    println("running clay-fix so you can review or revert its changes!");
}

alias Fixer = CodePointer[[SourceFile, File], []];

fixerForVersion(version:String) : Fixer {
    switch (version)
    case ("0.0")
        return Fixer(fix_0_0);
    else
        throw InvalidFixerVersion(version);
}

main(args) : Int {
    if (size(args) < 4 or args[1] != "-v") {
        usage(args[0]);
        return 2;
    }

    try {
        var fixer = fixerForVersion(args[2]);

        for (filename in slicedFrom(args, 3)) {
            println("Fixing ", filename, "...");
            var tempOutputFilename = filename + ".fixed";
            try {
                {
                    var source = readSource(filename);
                    var outputFile = File(tempOutputFilename, CREATE);
                    fixer(source, outputFile);
                }
                // XXX get fixed filename too! (e.g. define_.clay)
                deleteFile(filename);
                moveFile(tempOutputFilename, filename);
            } catch (ex) {
                println("Failed to fix ", filename, ":");
                displayError(ex);
                deleteFile(tempOutputFilename);
            }
        }
    } catch (ex) {
        println("Failed to update any files:");
        displayError(ex);
        return 1;
    }

    return 0;
}
